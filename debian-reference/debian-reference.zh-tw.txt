Debian 參考手冊

                         Osamu Aoki (青木修)

版权 © 2013-2021 青木修

    Debian 參考手冊（第2.77版）(2021-01-10 06:32:51 UTC) 旨在爲運行
    Debian 系統的用戶提供全面的指導。通過爲非開發者編寫的 shell 命令
    例子來涵蓋系統管理的方方面面。

摘要

這本書是免費的；你可以在與 Debian 自由軟體指導方針（DFSG）兼容的任意
版本的 GNU 通用公共許可證的條款下重新分發和/或修改本書。

Debian 參考手冊（第2.77版） (2021-01-10 06:32:51 UTC) 旨在爲運行
Debian 系統的用戶提供全面的指導。

本書的目標讀者：願意學習 shell 腳本，但是不準備爲了理解 GNU/Linux 系
統是如何運作的而閱讀其所有 C 語言源代碼的人。

安裝說明，見：

  * Debian GNU/Linux 當前穩定系統安裝指南

  * Debian GNU/Linux 當前測試系統安裝指南


1. 免責聲明

    所有擔保條款具有免責效力。所有商標均爲其各自商標所有者的財產。

    Debian 系統本身是一個變化的事物。這導致其文檔難於及時更新並且正確
    。雖然是以 Debian 系統當前的不穩定版本作爲寫作該文檔的基礎，但當
    你閱讀本文的時候，部分內容仍然可能已經過時。

    請把本文檔作爲第二參考。本文檔不能夠代替任何官方指導手冊。文檔作
    者和文檔貢獻者對在本文檔中的錯誤、遺漏或歧義，不承擔責任後果。

2. 什麼是 Debian

    Debian 計畫是由個人組成的團體，把創建自由的作業系統作爲共同目標。
    Debian 的發佈具有下列特徵。

      * 承諾軟體自由：Debian 社羣契約和 Debian 自由軟體指導方針（DFSG
        ）

      * 基於網際網路上無酬勞的志願者的貢獻：https://www.debian.org

      * 大量預編譯的高質量軟體套件

      * 專注於穩定性和安全性，同時易於獲取安全更新

      * 致力於使 unstable 和 testing 版的軟體套件能平滑升級至最新版本

      * 支持大量硬件架構

    Debian 系統中的自由軟體來自GNU, Linux, BSD, X, ISC, Apache,
    Ghostscript, Common Unix Printing System , Samba, GNOME, KDE,
    Mozilla, LibreOffice, Vim, TeX, LaTeX, DocBook, Perl, Python,
    Tcl, Java, Ruby, PHP, Berkeley DB, MariaDB, PostgreSQL, SQLite,
    Exim, Postfix, Mutt, FreeBSD, OpenBSD, Plan 9 以及許多更加獨立的
    自由軟體項目。 Debian 將上述各種各樣的自由軟體集成到一個系統裏面
    。

%

3. 關於本文檔

3.1. 指導原則

    寫作本文檔時，遵循下列指導原則。

      * 僅提供概覽，而忽略極端情況。（Big Picture 原則）

      * 保持文字簡短緊湊。（KISS 原則）

      * 不重複造輪子。（使用連結指向已有參考）

      * 專注於使用非圖形的工具和控制檯。（使用 shell 例子）

      * 保持客觀。（使用 popcon 等等。）

    提示
   
    我試圖闡明操作系統底層和體繫結構的各方面內容。

%

3.2. 預備知識

    警告
   
    閱讀本文檔，你需要通過自己的努力去查找本文檔未提及的問題答案。本
    文檔僅僅提供有效的起點。

    你必須自己從以下原始材料查找解決方案。

      * Debian 管理員手冊

      * Debian 網站（https://www.debian.org）上的通用信息

      * "/usr/share/doc/<package_name>" 目錄下的文檔

      * Unix 風格的 manpage: "dpkg -L <package_name> |grep '/man/
        man.*/'"

      * GNU 風格的 info page: "dpkg -L <package_name> |grep '/info/'"
   
      * 錯誤報告：http://bugs.debian.org/<package_name>

      * Debian Wiki （https://wiki.debian.org/）用於變化和特殊的話題

      * Linux 文檔項目（TLDP，http://tldp.org/）的 HOWTO

      * 國際開放標準組織的 UNIX 系統主頁（http://www.unix.org/）上的
        單一 UNIX 規範

      * 免費的百科全書：維基百科（https://www.wikipedia.org/）

    注意
   
    軟體包的詳細文檔，你需要安裝軟體包名用 "-doc" 作爲後綴名的相應文
    檔包來得到。

%

3.3. 排版約定

    本文通過如下使用 bash(1) shell 命令例子的簡要方式來提供信息。

    # <以 root 賬戶運行的命令>
    $ <以普通用戶賬戶運行的命令>

    這些 shell 提示符區分了所使用的帳戶。爲了可讀性，在本手冊中 shell
    提示符相關的環境變量被設置爲“PS1='\$'”和“PS2=' '。這與實際安裝的
    系統所使用的 shell 提示符很有可能會不同。

    注意
   
    見 "$PS1" 與 "$PS2" 環境變數於 bash(1) 內的解譯。

    要求系統管理員執行的操作，須用祈使句描述，如“在 shell 中輸入命令
    字符串後，鍵入 Enter 鍵。”

    這些描述列或類似信息在表格有一個名詞短語，後面會緊跟軟體包短描述
    ，這些短語會省略掉前面的"a"和"the"。它們也可以包含一個不定式短語
    作名詞短語，在聯機幫助的短命令描述約定後面不帶 "to"。有些人可能覺
    得這看起來有點可笑，這裏故意保留這種風格是爲了讓文檔看起來儘可能
    的簡單。這些名詞短語在短命令描述約定裏並不會採用首字母大寫的方式
    。

    注意
   
    無論專有名詞和命令名位於何處，保持其英文字母大小寫不變。

    在文本段落中引用的命令片斷由雙引號括起來的打印機字體進行標記，就
    像"aptitude safe-upgrade"。

    在文本段落中引用的來自配置文件的文本數據由雙引號括起來的打印機字
    體進行標記，就像"deb-src"。

    命令和置於其後的圓括號內的手冊頁章節數（可選），由打字機字體進行
    標記，就像bash(1)。我們鼓勵您這樣通過輸入以下命令來獲得信息。

    $ man 1 bash

    manpage 會在打字機字體後面括號中顯示 manpage 頁章節號，如 
    sources.list(5)。建議你通過鍵入以下命令來獲取幫助信息。

    $ man 5 sources.list

    info page 頁是由雙引號之間的打字機字體來標註，如 info make。建議
    你通過鍵入以下的命令來獲取幫助信息。

    $ info make

    文件名將由雙引號括起來的打印機字體進行標記，就像 "/etc/passwd"。
    對於配置文件，你可以輸入下列的命令來獲取它的信息。

    $ sensible-pager "/etc/passwd"

    目錄名將由雙引號括起來的打印機字體進行標記，如 "/etc/apt/"。你可
    以輸入下列的命令來瀏覽目錄的內容。

    $ mc "/etc/apt/"

    軟體包名稱將由打印機字體進行標記，就像 vim。你可以輸入下列的命令
    來獲取它的信息。

    $ dpkg -L vim
    $ apt-cache show vim
    $ aptitude show vim

    一個文檔可以通過文件名來表示它的位置，文件名將由雙引號括起來的打
    印機字體進行標記，例如 "/usr/share/doc/base-passwd/
    users-and-groups.txt.gz" 和 " /usr/share/doc/base-passwd/
    users-and-groups.html "，或通過它的 URL 表示，如 https://
    www.debian.org。你可以通過輸入下列命令來閱讀文檔。

    $ zcat "/usr/share/doc/base-passwd/users-and-groups.txt.gz" | sensible-pager
    $ sensible-browser "/usr/share/doc/base-passwd/users-and-groups.html"
    $ sensible-browser "https://www.debian.org"

    環境變量將由雙引號括起來的打印機字體進行標記，並帶有 "$" 前綴，就
    像 "$TERM"。你可以輸入下列命令來獲取它的當前值。

    $ echo "$TERM"

%

3.4. popcon 流行度

    popcon數據被用來客觀地衡量每個包的流行度。它的下載時間爲
    2021-01-10 06:32:17 UTC，包含了超過178828個二進制軟體包和26個架構
    的全部197967份提交。

    注意
   
    請注意amd64不穩定的歸檔只包含所有包和當前包。popcon 數據包含許多
    舊系統安裝報告。

    以“V:”開頭表示“votes”的popcon數值計算方式爲“1000 * （當前運行在PC
    上的包的popcon提交）/ （總的popcon提交）”。

    以“I:”開頭表示“安裝數”的popcon數值計算方式爲“1000 * （當前安裝在
    PC上的包的popcon提交）/ （總的popcon提交）”。

    注意

    流行度評比popcon數據不應視爲對包的重要性的絕對度量。有許多因素可
    以影響統計數據。例如，參與流行度評比的某些系統可能有像“/bin”的目
    錄，掛載的時候帶“noatime”選項以提升系統性能，這樣的系統有效的禁用
    了“投票（vote）”功能。

%

3.5. 包大小

    包的尺寸數據同樣表明瞭對每個包的客觀衡量。它基於“apt-cache show”
    或“aptitude show”命令（當前在amd64的不穩定釋出的架構）報告的“安裝
    大小”。報告的尺寸的單位是KiB（Kibibyte=表示1024 Bytes的單位）。

    注意

    包大小是一個小數值的包可能顯示了這個在“不穩定”釋出的包是一個虛擬
    包，它包含關於依賴關係的重要內容，會安裝其他的包。虛擬包使能平穩
    過度或分割一個包。

    注意
   
    包大小後面跟着 "(*)" 表明這個軟體包在不穩定版本中是缺失的同時使用
    了實驗性版本中的軟體包大小來替代。

%

3.6. 給本文檔報告 Bug

    發現此文件的任何疑義，請報告 debian-reference 套件的錯誤，使用 
    reportbug(1)。請以 "diff -u" 提出純文字或原碼的更正後報告。

%

4. 一些對新使用者的提醒

    這是一些對新使用者的提醒：

      * 備份你的資料

      * 妥善儲存你的密碼和安全資訊

      * KISS（保持簡單而傻瓜式）

          + 不要在系統中過度設計（overengineering）

      * 閱讀你的日誌檔案

          + 第一條錯誤資訊才是最重要的

      * RTFM（閱讀手冊與指導）
   
      * 在問問題前，先在網際網路上搜索

      * 當不是必須要使用 root 的時候，就不要使用 root

      * 不要胡亂折騰軟體包管理系統

      * 不要輸入任何你不理解的命令

      * （在完全地檢查過安全問題之前）不要隨意修改檔案許可權

      * 在測試過你所做的修改之前不要關閉 root shell

      * 總是準備好備用啟動介質（USB 啟動盤、啟動光碟等）

%

5. 一些對新使用者的引導

    從 Debian 郵件列表來的一些有趣引文，說不定可以幫助新使用者啓蒙。

      * “這是Unix。它給你足夠的繩索來吊死你自己。”--- Miquel van
        Smoorenburg <miquels at cistron.nl>
   
      * “Unix 是用戶友好的……它僅僅選擇誰是它的朋友。”--- Tollef Fog
        Heen <tollef at add.no>

    維基百科文章"Unix 哲學"列出了一些有趣的指導。

第 1 章 GNU/Linux 教程

    我認爲學習一個計算機系統，就像學習一門新的外語。雖然教程和文檔是
    有幫助的，但你必須自己練習。爲了幫助你平滑起步，我詳細說明一些基
    本要點。

    DebianGNULinux中最強大的設計來自Unix操作系統，一個多用戶多任務的
    操作系統。你必須學會利用這些特性以及Unix和GNU/Linux的相似性。

    別迴避面向Unix的文檔，不要只是依賴於GNU/Linux文檔，這樣做會剝奪你
    瞭解許多有用的信息。

    注意
   
    如果你在任何類Unix系統中使用過一端時間的命令行工具，你可能已經掌
    握了這份文檔中的內容。那請把它當做一個實戰檢驗和進修。

1.1. 控制臺基礎

%

1.1.1. shell 提示符

    啓動系統之後，如果你沒有安裝X 窗口系統和顯示管理器（例如gdm3），
    那麼你就會看對字符登錄界面。假設你的主機名爲foo，那麼登錄提示符將
    如下所示。

    foo login:

    如果你安裝了一個 GUI 環境，例如 GNOME 或 KDE，那麼你能夠用
    Ctrl-Alt-F1進入登錄提示符，同時你可以通過Alt-F7回到GUI環境（更多
    詳情請參閱下文第 1.1.6 节 “虛擬控制檯”）。

    在登錄提示符下，你輸入你的用戶名，例如penguin，然後按回車鍵，接下
    來輸入你的密碼並再次按回車鍵。

    注意

    遵循Unix傳統，Debian系統下的用戶名和密碼是大小寫敏感的。用戶名通
    常由小寫字母組成。第一個用戶賬號通常在安裝期間進行創建。額外的用
    戶賬號由root用戶用 adduser(8)創建。

    系統以保存在 "/etc/motd" 中的歡迎信息（Message Of The Day）來開始
    ，同時顯示一個命令提示符。

    Debian GNU/Linux jessie/sid foo tty1
    foo login: penguin
    Password:
    Last login: Mon Sep 23 19:36:44 JST 2013 on tty3
    Linux snoopy 3.11-1-amd64 #1 SMP Debian 3.11.6-2 (2013-11-01) x86_64

    The programs included with the Debian GNU/Linux system are free software;
    the exact distribution terms for each program are described in the
    individual files in /usr/share/doc/*/copyright.

    Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
    permitted by applicable law.
    foo:~$

    現在，你就在 shell 下。shell 解析你的命令。

%

1.1.2. X 系統下的 shell 提示符

    如果你安裝了帶有顯示管理器的X Window System，例如通過在安裝Debian
    時選擇“桌面環境”所安裝GNOME的gdm3，那麼你在啓動系統後將使用圖形登
    陸界面。輸入你的用戶名和密碼可以登陸到非特權用戶賬號。使用tab可以
    在用戶名和密碼之間移動，也可以使用鼠標左擊。

    要在X窗口下獲得shell提示符，你必須啓動一個x終端模擬器程序，例如
    gnome-terminal(1)、rxvt(1)或xterm(1)。在GNOME桌面環境下，你可以點
    擊“應用程序”→“附件”→“終端”來打開終端。

    你還可以看下下面的第 1.1.6 节 “虛擬控制檯” 章節。

    在其它一些桌面系統（如 fluxbox）下面，可能沒有明顯的開始菜單入口
    。如果是這種情況，試下右擊桌面屏幕並希望能有彈出菜單。

%

1.1.3. root 賬戶

    root 賬戶也被稱作超級用戶或特權用戶。用這個賬戶，你能夠履行下面的
    系統管理任務。

      * 讀、寫和刪除系統上的任何文件，不顧它們的文件權限

      * 設置系統上任何文件的所有者和權限
   
      * 設置系統上任何非特權用戶的密碼

      * 免用戶密碼登錄任何用戶

    無限權力的 root 賬戶，要求你慎重和負責任的使用。

    警告
   
    從來不和其他人共享 root 密碼。

    注意

    一個文件（包括硬件設備，如CD-ROM等，這些對Debian系統來說都只是一
    個文件）的權限可能會導致非root用戶無法使用或訪問它。雖然在這種情
    況下，使用root帳戶是一個快速的方法，但正確的解決方法應該是對文件
    權限和用戶組的成員進行合適的設置（參見第 1.2.3 节 “文件系統權限”
    ）。

%

1.1.4. root shell 提示符

    這裏有一些基本的方法可以讓你在輸入root密碼後獲得root的shell提示符
    。

      * 在字符登陸界面使用root作爲用戶名登陸。

      * 在GNOME桌面環境下點擊“應用程序”→“附件”→“Root Terminal"。

      * 在任意用戶的shell提示符下輸入“su -l”。
   
          + 這不會保存當前用戶的環境設定。

      * 在任意用戶的shell提示符下輸入“su”。

          + 這會保存當前用戶的一些環境設定。

%

1.1.5. GUI系統管理工具

    如果你的桌面菜單沒有適當的權限啓動系統管理工具，你可以在X終端模擬
    器（例如gnome-terminal(1)、rxvt(1)或xterm(1)）中root的shell提示符
    下啓動它。參見第 1.1.4 节 “root shell 提示符”和第 7.8.5 节 “以
    root 執行 X 客戶端”。

    警告
   
    永遠不要以根帳號鍵入 root 在 gdm3(1) 的提示符號下啟動 X 顯示器。

    警告
   
    永遠不要在顯示關鍵信息的X Window下運行不受信任的遠程GUI程序，因爲
    它可能會監聽你的X屏幕。

%

1.1.6. 虛擬控制檯

    在默認的Debian系統中，有6個可切換的類VT100字符控制檯，可以直接在
    Linux主機上啓動shell。除非你處於GUI環境下，否則你可以同時按下左
    Alt鍵和F1—F6之一的鍵在虛擬控制檯間切換。每一個字符控制檯都允許獨
    立登陸賬戶並提供多用戶環境。這個多用戶環境是偉大的Unix的特性，很
    容易上癮。

    如果你處於X Window System中，你可以通過Ctrl-Alt-F1鍵前往字符控制
    檯1，也就是同時按下左Ctrl鍵、左Alt鍵和F1鍵。你可以按下Alt-F7回到X
    Window System，它一般運行在虛擬控制檯7。

    你也可以使用命令行切換到另一個虛擬控制檯，例如切換到控制檯1。

    # chvt 1

%

1.1.7. 怎樣退出命令行提示符

    在命令行輸入Ctrl-D，即同時按下左側-Ctrl-鍵和d-鍵，即可關閉 shell
    活動。如果你正處於字符控制檯，你將會返回到登錄提示行。儘管這些控
    制字符 “control D" 使用了大寫字母，你並不需要按住 Shift-鍵。
    Ctrl-D 也可以簡寫爲 ^D。或者，你也可以鍵入 ”exit" 退出命令行。

    如果你位於x終端模擬器(1)中，你可以使用這個關閉x終端模擬器窗口。

%

1.1.8. 怎樣關閉系統

    就像任何其他的現代操作系統一樣，Debian會通過內存中的緩存數據進行
    文件操作以提高性能，因此在電源被安全地關閉前需要適當的關機過程，
    通過將內存中的數據強制寫入硬盤來維持文件的完整性。如果軟體的電源
    控制可用，那麼關機過程中會自動關閉系統電源。（否則，你可能需要在
    關機過程之後按電源鍵幾秒鐘。）

    在普通多用戶模式模式下，可以使用命令行關閉系統。

    # shutdown -h now

    在單用戶模式下，可以使用命令行關閉系統。

    # poweroff -i -f

    另外，如果在“/etc/inittab”中含有“ca:12345:ctrlaltdel:/sbin/
    shutdown -t1 -a -h now”，那麼你可以按下Ctrl-Alt-Delete（同時按下
    左Ctrl鍵、左Alt鍵和Delete）來關機。參見inittab(5)獲取更多細節。

    參見第 6.9.6 节 “怎樣通過 SSH 關閉遠端系統”。

%

1.1.9. 恢復一個正常的控制檯

    當做了一些滑稽的事（例如“cat<二進制文件>”）後，屏幕會發狂，你可以
    在命令行輸入“reset”。你可能無法在屏幕上看到你輸入的命令。你也可以
    輸入“clear”來清屏。

%

1.1.10. 建議新手的額外軟體包

    不需任何桌面環境，就能執行Debian的最小安裝方式，但若能使用 mc 和
    vim 併用 apt-get(8)，對初學者而言，仍是有用的。

    # apt-get update
     ...
    # apt-get install mc vim sudo
     ...

    如果你已經安裝了這些軟體包，那麼不會有新的軟體包被安裝。

    表 1.1. 有趣的文本模式程序包列表

    +---------------------------------------------------------------+
    | 軟體包  | 流行度 |大小 |                 說明                 |
    |---------+--------+-----+--------------------------------------|
    |mc       |V:59,   |1482 |文本模式的全屏文件管理器              |
    |         |I:236   |     |                                      |
    |---------+--------+-----+--------------------------------------|
    |sudo     |V:563,  |4555 |給普通用戶授予部分 root 權限的程序    |
    |         |I:806   |     |                                      |
    |---------+--------+-----+--------------------------------------|
    |vim      |V:106,  |3231 |Unix 文本編輯器 Vi 的改進版，一個程序 |
    |         |I:398   |     |員的文本編輯器（標準版）              |
    |---------+--------+-----+--------------------------------------|
    |vim-tiny |V:62,   |1553 |Unix 文本編輯器 Vi 的改進版，一個程序 |
    |         |I:970   |     |員的文本編輯器（精簡版）              |
    |---------+--------+-----+--------------------------------------|
    |emacs-nox|V:4,    |18364|GNU 項目的 Emacs，基於 Lisp 的擴展文本|
    |         |I:17    |     |編輯器                                |
    |---------+--------+-----+--------------------------------------|
    |w3m      |V:31,   |2289 |文本模式的萬維網瀏覽器                |
    |         |I:284   |     |                                      |
    |---------+--------+-----+--------------------------------------|
    |gpm      |V:11,   |530  |文本控制檯 Unix 式樣的粘貼拷貝（守護）|
    |         |I:17    |     |                                      |
    +---------------------------------------------------------------+


    閱讀一些信息文檔，也是一個好的主意。

    表 1.2. 軟體包信息文檔列表

    +---------------------------------------------------------------+
    |       軟體包       |流行 |大小|             說明              |
    |                    | 度  |    |                               |
    |--------------------+-----+----+-------------------------------|
    |doc-debian          |I:854|166 |Debian 項目文檔，（Debian 常見 |
    |                    |     |    |問題）和其它文檔               |
    |--------------------+-----+----+-------------------------------|
    |debian-policy       |I:36 |4306|Debian 策略手冊和相關文檔      |
    |--------------------+-----+----+-------------------------------|
    |developers-reference|I:6  |1917|Debian 開發者指導方針和信息    |
    |--------------------+-----+----+-------------------------------|
    |maint-guide         |I:4  |987 |Debian 新維護者手冊            |
    |--------------------+-----+----+-------------------------------|
    |debian-history      |I:1  |4285|Debian 項目歷史                |
    |--------------------+-----+----+-------------------------------|
    |debian-faq          |I:849|817 |Debian 常見問題                |
    +---------------------------------------------------------------+


    你可以用下面的命令安裝這些包。

    # apt-get install package_name

%

1.1.11. 額外用戶賬號

    如果你不想用你自己的主用戶賬戶來進行下面的練習操作，你可以使用下
    面的方式創建一個練習用戶賬戶，比如說，創建一個用戶名爲 fish 的賬
    號。

    # adduser fish

    回答所有問題。

    這將創建一個名爲 fish 的新賬號。在你練習完成後，你可以使用下面的
    命令刪除這個用戶賬號和它的用戶主目錄。

    # deluser --remove-home fish

%

1.1.12. sudo 配置

    對於典型的單用戶工作站，例如運行在筆記本電腦上的桌面Debian系統，
    通常簡單地配置sudo(8)來使爲非特權用戶（例如用戶penguin）只需輸入
    用戶密碼而非root密碼就能獲得管理員權限。

    # echo "penguin  ALL=(ALL) ALL" >> /etc/sudoers

    另外，可以使用下列命令使非特權用戶（例如用戶penguin）無需密碼就獲
    得管理員權限。

    # echo "penguin  ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

    這些技巧只對你管理的單用戶工作站中那個唯一的用戶有用。

    警告
   
    在多用戶工作站中不要建立這樣的普通用戶賬戶，因爲它會導致非常嚴重
    的系統安全問題。

    小心
   
    在上述例子中，用戶penguin的密碼及賬號要有和root賬號密碼同樣多的保
    護。

    小心

    在這種情況下，管理員權限被賦予那些有權對工作站進行系統管理任務的
    人。永遠不要讓你的公司行政管理部門或你的老闆進行管理（例如給予他
    們權限），除非他們獲得了授權並有這樣的能力。

    注意
   
    爲了對受限的設備和文件提供訪問權限，你應該考慮使用羣組提供的近用
    限制而不是使用 root 權限，來自 sudo(8)。

    注意

    隨着越來越細緻周密的配置，sudo(8)可以授予一個共享系統上的其它用戶
    有限的管理權限而不共享root密碼。這可以幫助對有多個管理員的主機進
    行責任追究，你可以瞭解到是誰做什麼。另一方面，你可能不想任何人有
    這樣的權限。

%

1.1.13. 玩的時間

    現在你已經準備好玩 Debian 系統了，只要你使用非特權用戶賬號就不會
    有風險。

    這是因爲 Debian 系統（即使是默認安裝）會設置適當的文件權限來防止
    非特權用戶對系統造成破壞。當然，可能仍然有一些漏洞可以利用，但關
    心這些問題的人不應該閱讀這一節，而應該去閱讀 Debian 安全手冊。

    我們使用下面的方式，把 Debian 系統當作一個類 Unix 系統來學習。

      * 第 1.2 节 “類 Unix 文件系統” (基本概念)

      * 第 1.3 节 “Midnight Commander (MC)” (生存方式)

      * 第 1.4 节 “類 Unix 工作環境基礎” (基本方式)

      * 第 1.5 节 “簡單 shell 命令” (shell 機制)

      * 第 1.6 节 “類 Unix 的文本處理” (文本處理方式)

%

1.2. 類 Unix 文件系統

    在GNU/Linux和其他類Unix操作系統中，文件被組織到目錄中。所有的文件
    和目錄排放在以“/”爲根的巨大的樹裏。叫它樹是因爲如果你畫出文件系統
    ，它看起來就像一棵樹，但是它是顛倒過來的。

    這些文件和目錄可以分散在多個設備中。mount(8)用於把某個設備上找到
    的文件系統附着到巨大的文件樹上。相反的，umount(8)把它再次分離。在
    當前的Linux內核裏mount(8)帶某些參數，可以把文件樹的一部分綁定到另
    外的地方，或者可以把文件系統掛載爲共享的、私有的、從設備、或不可
    綁定的。對每個文件系統支持的掛載選項可以在/usr/share/doc/
    linux-doc-*/Documentation/filesystems/找到。

    Unix系統上叫做目錄，某些其他系統上叫做文件夾。請同樣留意，在任何
    Unix系統上，沒有的驅動器的概念，例如“A:”。這只有一個文件系統，並
    且所有東西都包含在內。這相對於Windows來說是一個巨大的優點。

%

1.2.1. Unix 文件基礎

    下面是一些 Unix 文件基礎。

      * 文件名是區分大小寫的。也就是說， "MYFILE" 和 "MyFile" 是不同
        的文件。

      * 根目錄意味着文件系統的根，簡單的稱爲“/”，不要把它跟root用戶的
        家目錄“/root”混淆了。

      * 每個目錄都有一個名字，它可以包含任意字母或除了/”以外的符號。
        根目錄是個特例。它的名字是“/”（稱作“斜線”或“根目錄”），並且它
        不能被重命名。

      * 每個文件或目錄都被指定一個全限定文件名，絕對文件名，或路徑，
        按順序給出必須經過的目錄從而到達相應目錄。這三個術語是同義的
        。

      * 所有的全限定文件名以“/”目錄開始，並且在每個目錄或文件名之間有
        一個“/”。第一個“/”是最頂層目錄，其他的“/”用於分隔跟着的子目錄
        。直到到達最後的入口，即實際文件的名稱。這些話可能會令人困惑
        。用下面這個全限定文件名作爲例子：“/usr/share/keytables/
        us.map.gz”。不過，人們也把它的基名“us.map.gz”單獨作爲文件名。

      * 根目錄有很多分支，例如“/etc/”和“/usr/”。這些子目錄依次分出更
        多的子目錄，例如“/etc/init.d/”和“/usr/local/”。這整體叫做“目
        錄樹”。你可以把一個絕對文件名想象成從“/”這棵樹的基到某個分支
        （一個文件）的結尾的一條路徑。你也聽到人們談論目錄樹，就好像
        它是一個包含所有直系後代的“家庭”樹的一個圖，這個圖叫做根目錄
        （“/”）：因此子目錄有父目錄，並且一條路徑顯示了一個文件完整的
        祖先。也有相對路徑從其他地方開始，而不是從根目錄。你應該還記
        得目錄“../”指向父目錄。這個術語也適用於其他類似目錄的結構，如
        分層數據結構。

      * 對於一個物理設備, 是沒有一個特定的目錄路徑名來對應的組成部分.
        這不同於RT-11, CP/M,OpenVMS,MS-DOS,AmigaOS, 以及微軟的Windows
        ，這些系統存在一個路徑包含了一個設備名字，比如"C:\"。(儘管如
        此, 路徑條目確實存在引用了物理設備作爲正常的文件系統的一部分.
        參考第 1.2.2 节 “文件系統深入解析”。)

    注意

    雖然你可以在文件名中使用任意的字幕或者符號, 但是在實際情況下這樣
    做是一個壞主意. 最好避免使用一些在命令行裏面含有特殊意義的字符,
    比如空格, 製表符, 換行符, 和其它的特殊字符: { } ( ) [ ] ' ` " \ /
    >< | ; ! #&^ * % @ $. 如果你想有一個區分度良好的命名, 比較好的選
    擇是利用時期, 連字符和下劃線. 你也可以每個單詞的首字母大寫, 這叫
    大駝峯命名法, 比如這樣 "LikeThis". 經驗豐富的Linux用戶會趨向於在
    文件名中不使用空格.

    注意
   
    這個 "root" 可能既表示 "超級用戶root" 又表示 " 根目錄"(/root) .
    應該根據上下文確定它的用法.

    注意
   
    單詞path不僅表示包含全限定文件名, 也可能表示命令搜索的路徑. 通常
    路徑真實的意思是需要通過上下文來明確.

    關於文件層次的最佳詳細實踐在文件系統層次標準("/usr/share/doc/
    debian-policy/fhs/fhs-2.3.txt.gz" 和 hier (7)). 你應該記住以下的
    一些標準作爲開始學習的步驟.

    表 1.3. 重要目錄的用途列表

    +----------------------------------+
    |  目錄   |        目錄用途        |
    |---------+------------------------|
    |/        |根目錄                  |
    |---------+------------------------|
    |/etc/    |系統範圍的配置文件      |
    |---------+------------------------|
    |/var/log/|系統日志文件            |
    |---------+------------------------|
    |/home/   |所有非特權用戶的用戶目錄|
    +----------------------------------+


%

1.2.2. 文件系統深入解析

    按照UNIX系统的傳統，Debian GNU / Linux 的文件系统是在物理數據儲存
    設備諸如硬碟或其他的儲存設備上，與硬體的交互，如控制台和遠端序列
    終端都是以統一的方式呈現在 “/ dev /” 下面。

    每個檔案、目錄、命名管道（一種兩個程式間共享資料的方法）或 Debian
    GNU/Linux 系統上的物理裝置都有一個叫做 inode的資料結構，描述了其
    相關屬性，例如擁有它的使用者（所有者），它屬於的組，最後一次訪問
    時間，等等。把所有東西都表示在檔案系統中的想法是來源於 Unix，現代
    的 Linux 核心則將這個思路進行了擴充套件。現在，甚至有關計算機上正
    在執行的程序的資訊都可以在檔案系統中找到。

    這個對物理實體和內部進程的統一和抽象是非常強大的，因爲這允許我們
    用同樣的命令對許多完全不同的設備進行同樣的操作。甚至可以通過向鏈
    接到運行進程的特殊文件寫入數據來改變內核的運行方式。

    提示
   
    如果你需要識別文件樹和物理實體之間的對應關係，不帶參數運行mount
    (8)。

%

1.2.3. 文件系統權限

    類Unix系統的文件系統權限被定義給三類受影響的用戶。

      * 擁有這個文件的用戶（u）

      * 這個文件所屬組的其他用戶（g）

      * 所有其餘的用戶（o），同樣稱爲“世界”和“所有人”

    對文件來說，每個對應權限允許下列動作。

      * 可讀（r）權限允許所有者檢查文件的內容。

      * 可寫（w）權限允許所有者修改文件內容。

      * 可執行（x）權限允許所有者把文件當做一個命令運行。

    對於目錄來說，每個對應權限允許下列動作。

      * 可讀（r）權限允許所有者列出目錄內的內容。

      * 可寫（w）權限允許所有者添加或刪除目錄裏面的文件。

      * 可執行（x）權限允許所有者訪問目錄裏的文件。

    在這裏，一個目錄的可執行權限意味着不僅允許讀目錄裏的文件，還允許
    顯示他們的屬性，例如大小和修改時間。

    ls(1)用於顯示文件和目錄的權限信息（更多）。當運行時帶有“-l”選項，
    它將按給定順序顯示下列信息。

      * 文件類型（第一個字母）

      * 文件的訪問權限（9個字符，三個字符組成一組按照用戶、組、其他的
        順序表示）

      * 連結到文件的硬連結數

      * 文件所有者的用戶名

      * 這個文件所屬的組名

      * 以字符（字節）爲單位的文件大小

      * 文件的日期和時間（mtime）

      * 文件的名字

    表 1.4. “ls -l”輸出的第一個字符列表

    +-----------------+
    |字符|    說明    |
    |----+------------|
    |-   |普通文件    |
    |----+------------|
    |d   |目錄        |
    |----+------------|
    |l   |符號連結    |
    |----+------------|
    |c   |字符設備節點|
    |----+------------|
    |b   |塊設備節點  |
    |----+------------|
    |p   |命名管道    |
    |----+------------|
    |s   |套接字      |
    +-----------------+


    chown(1)用於 root 賬戶修改文件的所有者。chgrp(1)用於文件的所有者
    或 root 賬戶修改文件所屬的組。chmod(1)用於文件的所有者或root賬戶
    修改文件和文件夾的訪問權限。操作一個foo文件的基本語法如下。

    # chown <newowner> foo
    # chgrp <newgroup> foo
    # chmod  [ugoa][+-=][rwxXst][,...] foo

    例如，你可以按照下面使一個目錄樹被用戶foo所有，並共享給組bar。

    # cd /some/location/
    # chown -R foo:bar .
    # chmod -R ug+rwX,o=rX .

    有三個更加特殊的權限位。

      * Set_User_ID位（s或S替換用戶的x）

      * Set_Group_ID位（s或S替換組的x）

      * 粘置位（t或T替代其他用戶的x）

    這裏“ls -l”對這些位的輸出是大寫的，如果這些輸出裏隱藏了可執行位，
    則它未設置。

    給一個可執行文件設置Set-User-ID位將允許一個用戶以他自己的ID運行這
    個可執行文件（例如root）。類似的，給一個可執行文件設置了
    Set-Group-ID位將允許一個用戶以文件的組ID運行該文件。（例如root組
    ）。由於這些設置可能引起安全風險，使能它們的時候需要格外留意。

    在一個目錄上設置“Set-Group-ID”將打開類 BSD 的文件創建計劃，所有在
    目錄裏面創建的文件將屬於目錄所屬的組。

    給一個目錄設定“粘滯位”將保護該目錄內的檔案不被其所有者之外的一個
    使用者刪除。為了保護一個在像“/tmp”這樣所有人可寫或同組可寫的目錄
    下檔案內容的安全，不僅要去除可寫許可權，還要給其所在目錄設定粘滯
    位。否則，該檔案可以被任意對其所在目錄有寫許可權的使用者刪除並建
    立一個同名的新檔案。

    這裏有少量有趣的文件權限例子。

    $ ls -l /etc/passwd /etc/shadow /dev/ppp /usr/sbin/exim4
    crw------T 1 root root   108, 0 Oct 16 20:57 /dev/ppp
    -rw-r--r-- 1 root root     2761 Aug 30 10:38 /etc/passwd
    -rw-r----- 1 root shadow   1695 Aug 30 10:38 /etc/shadow
    -rwsr-xr-x 1 root root   973824 Sep 23 20:04 /usr/sbin/exim4
    $ ls -ld /tmp /var/tmp /usr/local /var/mail /usr/src
    drwxrwxrwt 14 root root  20480 Oct 16 21:25 /tmp
    drwxrwsr-x 10 root staff  4096 Sep 29 22:50 /usr/local
    drwxr-xr-x 10 root root   4096 Oct 11 00:28 /usr/src
    drwxrwsr-x  2 root mail   4096 Oct 15 21:40 /var/mail
    drwxrwxrwt  3 root root   4096 Oct 16 21:20 /var/tmp

    chmod(1)有另一種數值模式來描述檔案許可權。這種數字模式使用3到4位
    八進位制（底為8）數。

    表 1.5. chmod(1) 命令文件權限的數字模式

    +---------------------------------------------------------------+
    |    數字    |                       說明                       |
    |------------+--------------------------------------------------|
    |第一個可選數|set user ID (=4), set group ID (=2) 和 sticky bit |
    |字          |(=1) 之和                                         |
    |------------+--------------------------------------------------|
    |第二個數字  |read (=4), write (=2), 和 execute (=1) 權限之和， |
    |            |user 用戶                                         |
    |------------+--------------------------------------------------|
    |第三個數字  |同上， group                                      |
    |------------+--------------------------------------------------|
    |第四個數字位|同上， other                                      |
    +---------------------------------------------------------------+


    這聽起來很複雜實際上相當簡單。如果你把“ls -l”命令輸出的前幾列（
    2-10），看成以二進位制（底為2）表示檔案的許可權（“-”看成0，“rwx”
    看成1），你應該可以理解用數字模式值的最後3位數字對檔案許可權的八
    進位制表示。

    嘗試下列例子

    $ touch foo bar
    $ chmod u=rw,go=r foo
    $ chmod 644 bar
    $ ls -l foo bar
    -rw-r--r-- 1 penguin penguin 0 Oct 16 21:39 bar
    -rw-r--r-- 1 penguin penguin 0 Oct 16 21:35 foo

    提示

    如果你需要在 shell 指令碼中訪問“ls -l”顯示的資訊，你需要使用相關
    命令，如test(1)，stat(1)和readlink(1)。shell 內建命令，如“[”或
    “test”，可能也會用到。

%

1.2.4. 控制新建檔案的許可權：umask

    什麼許可權將應用到新建檔案受 shell 內建命令 umask 的限制。參見
    dash(1)，bash(1)，和內建命令(7)。

     (檔案許可權) = (請求的檔案許可權) & ~(umask 值)

    表 1.6. umask值舉例

    +----------------------------------------------------------+
    |umask值|建立的檔案許可權|建立的目錄許可權|      用法      |
    |-------+----------------+----------------+----------------|
    |0022   |-rw-r--r--      |-rwxr-xr-x      |僅所屬使用者可寫|
    |-------+----------------+----------------+----------------|
    |0002   |-rw-rw-r--      |-rwxrwxr-x      |僅所屬組可寫    |
    +----------------------------------------------------------+


    Debian 預設使用使用者私人組（UPG）。每當一個新使用者新增到系統的
    時候都會建立一個UPG。UPG 的名字和建立它的使用者相同，這個使用者是
    這個UPG的唯一成員。自從每個使用者都有自己的私人組之後，把umask設
    定成0002變得更安全了。（在某些 Unix 變體中，把所有普通使用者設定
    到一個叫users的組是非常常見的做法，在這種情況下，出於安全考慮把
    umask設為0022是一個好主意）

    提示
   
    通過把 “umask 002” 寫入 ~/.bashrc 檔案開啟UPG。

%

1.2.5. 一組使用者的許可權（組）

    為了使組許可權應用到一個特定使用者，這個使用者需要通過使用 “sudo
    vigr” 編輯 /etc/group 以及使用 “sudo vigr -s” 編輯 /etc/gshadow
    成為該組的成員。你需要登出之後重新登入（或執行 “exec newgrp”）以
    啟用新的組配置。

    注意

    或者，你可以通過新增一行 “auth optional pam_group.so”到 “/etc/
    pam.d/common-auth” 以及配置 “/etc/security/group.conf” ，使得在身
    份驗證過程動態新增使用者到組。（參見第 4 章認證。）

    在 Debian 系統中，硬體裝置是另一種檔案。如果你從一個使用者賬戶訪
    問某些裝置出現問題，例如CD-ROM和USB記憶棒，你需要使這個使用者成為
    相關組的成員。

    一些著名的由系統提供的組允許其成員不需要 root 許可權訪問某些特定
    的檔案和裝置。

    表 1.7. 關於檔案訪問的由系統提供的著名組列表

    +---------------------------------------------------------+
    |  組   |             可訪問檔案和裝置的描述              |
    |-------+-------------------------------------------------|
    |dialout|完全及直接的訪問串列埠埠（“/dev/ttyS[0-3]”）     |
    |-------+-------------------------------------------------|
    |dip    |有限的訪問串列埠，建立到信任點的撥號 IP 連線     |
    |-------+-------------------------------------------------|
    |cdrom  |CD-ROM, DVD+/-RW 驅動器                          |
    |-------+-------------------------------------------------|
    |audio  |音訊裝置                                         |
    |-------+-------------------------------------------------|
    |video  |視訊裝置                                         |
    |-------+-------------------------------------------------|
    |scanner|掃描器                                           |
    |-------+-------------------------------------------------|
    |adm    |系統監控日誌                                     |
    |-------+-------------------------------------------------|
    |staff  |一些用於初級管理工作的目錄：“/usr/local”，“/home”|
    +---------------------------------------------------------+


    提示

    你需要屬於 dialout 組使得可以重配置調變解調器，撥號到任意地方，等
    等。但如果root 使用者在 “/etc/ppp/peers/” 為受信任點建立了預定義
    配置檔案的話，你只需要屬於dip 組，就可以通過使用pppd(8)、pon(1)，
    以及poff(1)命令建立撥號 IP 連結到這些受信任的點。

    某些著名的由系統提供的組允許它們的成員不帶 root 許可權執行特定的
    命令。

    表 1.8. 著名的由系統提供用於特定命令執行的組列表

    +------------------------------------------------------+
    |  組   |                  可訪問命令                  |
    |-------+----------------------------------------------|
    |sudo   |不帶它們的密碼執行 sudo                       |
    |-------+----------------------------------------------|
    |lpadmin|執行命令以從印表機資料庫新增、修改、移除印表機|
    +------------------------------------------------------+


    由系統提供的使用者和組的完整列表，參見由 base-passwd包提供的“/usr
    /share/doc/base-passwd/users-and-groups.html”中，當前版本的“使用
    者和組”。

    使用者和組系統的管理命令，參見passwd(5)，group(5)，shadow(5)，
    newgrp(1)，vipw(8)，vigr(8)，以及pam_group(8)。

%

1.2.6. 時間戳

    GNU/Linux 文件有三種類型的時間戳。

    表 1.9. 時間戳類型列表

    +-----------------------------------+
    |類型 | 含義（歷史上 Unix 的定義）  |
    |-----+-----------------------------|
    |mtime|文件修改時間(ls-1)           |
    |-----+-----------------------------|
    |ctime|文件狀態修改時間 (ls -lc)    |
    |-----+-----------------------------|
    |atime|文件最後被訪問的時間 (ls -lu)|
    +-----------------------------------+


    注意
   
    ctime 不是文件創建時間。

    注意
   
    atime在 GNU/Linux 系統上的真實值可能和歷史上 Unix 的定義有所不同
    。

      * 覆蓋一個文件，將會改變該文件所有的 mtime, ctime, 和 atime 屬
        性。

      * 改變文件的所有者或者權限，將改變文件的 ctime 和 atime 屬性。

      * 在歷史上的 Unix 系統中，讀取一個檔案將改變檔案的 atime 屬性。

      * 讀一個檔案，將改變檔案的 atime屬性；在 GNU/Linux 系統上，這僅
        發生在其檔案系統使用“strictatime”引數掛載的情況下。

      * 如果 GNU/Linux 系統的檔案系統使用 "relatime" 選項掛載，第一次
        讀檔案，或者隨後讀檔案，將改變該檔案的 atime 屬性. (從 Linux
        2.6.30 開始的預設行為)

      * 如果 GNU/Linux 系統的檔案系統使用 "noatime" 掛載，則讀一個檔
        案，不會改變這個檔案的 atime 屬性。

    注意

    為了在正常的使用場景中能夠提升檔案系統的讀取效率，新增了
    "noatime" 和 "relatime" 這兩個載入選項。如使用了 "strictatime" 選
    項，即使簡單的檔案讀操作都伴隨著更新 atime 屬性這個耗時的寫操作。
    但是 atime 屬性除了 mbox(5) 檔案以外卻很少用到。詳情請看 mount(8)
    。

    使用 touch(1) 命令修改已存在檔案的時間戳。

    對於時間戳，ls 命令輸出欄位在非英語區域（“fr_FR.UTF-8”）與舊的區
    域（“C”）不同。

    $ LANG=fr_FR.UTF-8  ls -l foo
    -rw-rw-r-- 1 penguin penguin 0 oct. 16 21:35 foo
    $ LANG=C  ls -l foo
    -rw-rw-r-- 1 penguin penguin 0 Oct 16 21:35 foo

    提示
   
    參考第 9.2.5 节 “定製時間和日期的顯示” 自定義 “ls -l” 輸出。

%

1.2.7. 連結

    有兩種方法把一個檔案 “foo” 連結到一個不同的檔名 “bar”。

      * 硬連結

          + 對現有檔案重複名稱

          + “ln foo bar”
   
      * 符號連結或 symlink

          + 通過名字指向另一個檔案的特殊檔案

          + “ln -s foo bar”

    請參閱下面的示例，rm 命令結果中連結數的變化和細微的差別。

    $ umask 002
    $ echo "Original Content" > 1 foo
    $ ls -li foo
    1449840 -rw-rw-r-- 1 penguin penguin 17 Oct 16 21:42 foo
    $ ln foo bar     # 硬連結
    $ ln -s foo baz  # 符號連結
    $ ls -li foo bar baz
    1449840 -rw-rw-r-- 2 penguin penguin 17 Oct 16 21:42 bar
    1450180 lrwxrwxrwx 1 penguin penguin  3 Oct 16 21:47 baz -> 2 foo
    1449840 -rw-rw-r-- 2 penguin penguin 17 Oct 16 21:42 foo
    $ rm foo
    $ echo "New Content" > 3 foo
    $ ls -li foo bar baz
    1449840 -rw-rw-r-- 1 penguin penguin 17 Oct 16 21:42 bar
    1450180 lrwxrwxrwx 1 penguin penguin  3 Oct 16 21:47 baz -> 4 foo
    1450183 -rw-rw-r-- 1 penguin penguin 12 Oct 16 21:48 foo
    $ cat bar
    Original Content
    $ cat baz
    New Content

    硬連結可以在同一個檔案系統內建立，並共用同一個inode號，由ls(1)帶
    “-i”選項顯示的。

    符號連結總是名義上具有“rwxrwxrwx”的檔案訪問許可權，如上面例子所示
    ，實際的有效訪問許可權由它所指向的檔案確定。

    小心
   
    除非你有非常好的理由，否則不要建立一個複雜的符號連結或硬連結通常
    是個好主意。符號連結的邏輯組合可能導致檔案系統噩夢般的無限迴圈。

    注意
   
    通常使用符號連結比使用硬連結更合適，除非你有一個好理由使用硬連結
    。

    “.”目錄連結到它所在的目錄，因此任何新建目錄的連結數從2開始。“..”
    目錄連結到父目錄，因此目錄的連結數隨著新的子目錄的建立而增加。

    如果你剛從Windows遷移到Linux，你很快將清楚 Unix 的檔名連結相較於
    Windows最相近的“快捷方式”是多麼精心設計的。由於它是在檔案系統中實
    現的，應用無法看到連結檔案跟原始檔案之間的區別。在硬連結這種情況
    ，這真的是毫無差別。

%

1.2.8. 命名管道（先進先出）

    命名管道是一個像管道一樣的檔案。你把內容放進了檔案，它從另一端出
    來。因此，它被稱為FIFO，即先進先出：你從管道這端先放進去的東西會
    從另一端先出來。

    如果對一個命名管道進行寫入操作，寫入的過程不會被終止，直到寫入的
    資訊從管道中被讀取出來。讀取過程將會持續到沒有資訊可以讀取為止。
    管道的大小始終是零，它不儲存資料，它只是連線兩個過程，像shell提供
    的 " 1| 2" 語法功能一樣。然而，一旦管道有了名稱，這兩個程序就可以
    不必在同一個命令列，甚至由同一個使用者執行。管道是 UNIX 的一個非
    常有影響力的創新。

    嘗試下列例子

    $ cd; mkfifo mypipe
    $ echo "hello" >mypipe & # 放到後臺執行
    [1] 8022
    $ ls -l mypipe
    prw-rw-r-- 1 penguin penguin 0 Oct 16 21:49 mypipe
    $ cat mypipe
    hello
    [1]+  Done                    echo "hello" >mypipe
    $ ls mypipe
    mypipe
    $ rm mypipe

%

1.2.9. 套接字

    套接字被廣泛應用於所有的網際網路通訊，資料庫和作業系統本身。它類
    似於命名管道（FIFO）並且允許程序之間甚至不同計算機之間進行資訊交
    換。對於套接字，這些程序不需要在同一時間執行，也不需要是同一個父
    程序的子程序。它是程序間通訊（IPC）的一個節點。資訊的交換可能會通
    過網路發生在不同主機之間。最常見的兩種是網際網路套接字和 UNIX域套
    接字。

    提示
   
    通過 "netstat -an" 命令可以很方便的檢視系統已經打開了那些套接字。

%

1.2.10. 設備文件

    設備文件包括系統的物理設備和虛擬設備，如硬盤、顯卡、顯示屏、鍵盤
    。虛擬設備的一個例子是控制檯，用“/dev/console”來描述。

    設備文件有兩種類型。

      * 字符設備

          + 每次訪問一個字符

          + 一個字符等於一個字節

          + 如鍵盤、串口…
   
      * 塊設備

          + 通過更大的單元–塊，進行訪問

          + 一個塊>一個字節

          + 如硬盤等…

    你可以讀寫塊設備文件，儘管該文件可能包含二進制數據，讀取後顯示出
    無法理解的亂碼。向文件寫入數據，有時可以幫助定位硬件連接故障。比
    如，你可以將文本文件導入打印機設備“/dev/lp0”，或者將調製解調命令
    發送到合適的串口“/dev/ttyS0”。但是，除非這些操作都小心完成，否則
    可能會導致一場大災難。所以要特別小心。

    注意
   
    常規訪問打印機，使用lp(1)。

    設備的節點數可以通過執行ls(1)得到，如下所示。

    $ ls -l /dev/sda /dev/sr0 /dev/ttyS0 /dev/zero
    brw-rw---T  1 root disk     8,  0 Oct 16 20:57 /dev/sda
    brw-rw---T+ 1 root cdrom   11,  0 Oct 16 21:53 /dev/sr0
    crw-rw---T  1 root dialout  4, 64 Oct 16 20:57 /dev/ttyS0
    crw-rw-rw-  1 root root     1,  5 Oct 16 20:57 /dev/zero

      * "/dev/sda"的主設備號是8，次設備號是0。它可以被disk羣組的用戶
        讀寫。

      * "/dev/sr0"的主設備號是11，次設備號是0。它可以被cdrom羣組的用
        戶讀寫。

      * "/dev/ttyS0"的主設備號是4，次設備號是64。它可以被dailout羣組
        的用戶讀寫。

      * "/dev/zero"的主設備號是1，次設備號是5。它可以被任意用戶讀寫。

    在現代Linux系統中，處在"/dev"之下的文件系統會自動被udev()機制填充
    。

%

1.2.11. 特別設備文件

    還有一些特別的設備文件。

    表 1.10. 特別設備文件列表

    +---------------------------------------------------------------+
    | 設備文件  |操作|                   響應描述                   |
    |-----------+----+----------------------------------------------|
    |/dev/null  |讀取|返回“文件結尾字符（EOF）“                     |
    |-----------+----+----------------------------------------------|
    |/dev/null  |寫入|無返回（一個無底的數據轉存深淵）              |
    |-----------+----+----------------------------------------------|
    |/dev/zero  |讀取|返回"\0空字符"（與ASCII中的數字0不同）        |
    |-----------+----+----------------------------------------------|
    |/dev/random|讀取|從真隨機數產生器返回一個隨機字符，供應真熵（緩|
    |           |    |慢）                                          |
    |-----------+----+----------------------------------------------|
    |/dev/      |讀取|從能夠安全加密的僞隨機數產生器返回一個隨機字符|
    |urandom    |    |                                              |
    |-----------+----+----------------------------------------------|
    |/dev/full  |寫入|返回磁盤已滿（ENOSPC）錯誤                    |
    +---------------------------------------------------------------+


    這些特別設備文件經常和shell數據重定向聯合使用（參考第 1.5.8 节 “
    典型的順序命令和 shell 重定向”）。

%

1.2.12. procfs 和 sysfs

    procfs和sysfs兩個僞文件系統，分別加載於"/proc"和"/sys"之上，將內
    核中的數據結構暴露給用戶空間。或者說，這些條目是虛擬的，他們打開
    了深入瞭解操作系統運行的方便之門。

    目錄"/proc"爲每個正在運行的進程提供了一個子目錄，目錄的名字就是進
    程標識符（PID）。需要讀取進程信息的系統工具，如ps()，可以從這個目
    錄結構獲得信息。

    "/proc/sys"之下的目錄，包含了可以更改某些內核運行參數的接口。（你
    也可以使用專門的sysctl()命令修改，或者使用其預加載/配置文件"/etc/
    sysctl.conf"。）

    當人們看到這個特別大的文件"/proc/kcore"時，常常會驚慌失措。這個文
    件於你的的電腦內存大小相差不多。它被用來調試內核。它是一個虛擬文
    件，指向系統內存，所以不必擔心它的大小。

    "/sys"以下的目錄包含了內核輸出的數據結構，它們的屬性，以及它們之
    間的連結。它同時也包含了改變某些內核運行時參數的接口。

    參考"proc.txt(.gz)"，"sysfs.txt(.gz)"，以及其他相關的Linux內核文
    檔（"/usr/share/doc/linux-doc-*/Documentation/filesystems/*"），
    這些文件由linux-doc-*軟體包提供。

%

1.2.13. tmpfs

    tmpfs是一個臨時文件系統，它的文件都保存在虛擬內存中。必要時，位於
    內存頁緩存的tmpfs數據可能被交換到硬盤中的交換分區。

    系統啓動早期階段，"/run"目錄掛載爲tmpfs。這樣即使"/"掛載爲只讀，
    它也是可以被寫入的。它爲過渡態文件提供了新的存儲空間，同時也替代
    了Filesystem Hierarchy Standar2.3版中說明的目錄位置：

      * "/var/run" → "/run"

      * "/var/lock" → "/run/lock"

      * "/dev/shm" → "/run/shm"

    參考"tmpfs.txt(.gz)", 文件位於Linux內核文檔（"/usr/share/doc/
    linux-doc-*/Documentation/filesystems/*"）目錄之下，由軟體包
    linux-doc-*提供。

%

1.3. Midnight Commander (MC)

    Midnight Commander (MC) 是一個Linux終端或其它終端環境下的 GNU 版
    "瑞士軍刀" 。它為新手們提供了一個選單式樣的終端使用體驗，這更易於
    學習運用標準的 Unix 命令。

    你可能需要按照下面的命令來安裝標題為 " mc " 的Midnight Commander
    包.

    $ sudo apt-get install mc

    使用 mc(1) 命令那個來瀏覽 Debian 系統。這是最好的學習方式。請使用
    游標鍵和回車鍵來翻看一些感興趣的內容。

      * "/etc" 及其子目錄

      * " /var/log " 及其子目錄
   
      * " /usr/share/doc " 及其子目錄

      * " /sbin " 和 " /bin "

%

1.3.1. 自定義 MC

    為了在退出 MC 的時候更改目錄並 cd 到其它目錄，我建議修改 "~
    /.bashrc" 包含一個由 mc 包提供的指令碼。

    . /usr/lib/mc/mc.sh

    檢視mc(1) (在 "-P" 選項裡) 的原因。 (如果你不能理解我這裡說所講的
    ，你可以稍後回頭再看)

%

1.3.2. 啟動 MC

    MC 可以這樣啟動起來。

    $ mc

    MC 通過選單覆蓋了所有的檔案操作，因此而讓使用者更省心省力。只需要
    按 F1 就可以跳轉到幫助介面。你只需要按游標鍵和功能鍵就可以使用 MC
    。

    注意

    某些終端比如 gnome-terminal(1)，功能鍵的按鍵觸發訊息可能會被終端
    程式擷取。在 gnome-terminal 裡可以通過 "Edit" → "Keyboard
    Shortcuts" 選項設定來禁止這類訊息。

    如果你遇到字元編碼問題，顯示出來都是亂碼，通過新增"-a"到 MC 命令
    列或許有助於避免此類問題。

    如果這樣不能解決 MC 中的顯示問題，可以參考第 9.4.6 节 “終端配置”.

%

1.3.3. MC 文件管理

    預設的兩個目錄面板裡包含了檔案列表。另一個有用的模式是設定右邊視
    窗為 "資訊" 來讀取檔案訪問許可權資訊。接下來是一些必要的快捷鍵。
    守護程序gpm(8)執行的時候，你也可以在字元命令列裡用滑鼠來操作。
    (在 MC 裡進行復制和貼上操作的時候一定要按住 shift 鍵。)

    表 1.11. MC 快捷鍵綁定

    +---------------------------------------------------------+
    |     快捷鍵     |               鍵綁定功能               |
    |----------------+----------------------------------------|
    |F1              |幫助菜單                                |
    |----------------+----------------------------------------|
    |F3              |內部檔案檢視器                          |
    |----------------+----------------------------------------|
    |F4              |內部編輯器                              |
    |----------------+----------------------------------------|
    |F9              |啟用下拉選單                            |
    |----------------+----------------------------------------|
    |F10             |退出 Midnight Commander                 |
    |----------------+----------------------------------------|
    |Tab             |在兩個窗口間移動                        |
    |----------------+----------------------------------------|
    |Insert 或 Ctrl-T|用於多檔案操作的標記檔案，如副本        |
    |----------------+----------------------------------------|
    |Del             |刪除檔案 (注意---設定 MC 為安全刪除模式)|
    |----------------+----------------------------------------|
    |游標鍵          |自我解釋                                |
    +---------------------------------------------------------+


%

1.3.4. MC 命令列技巧

      * cd 命令在選中的螢幕中改變目錄。

      * Ctrl-Enter or Alt-Enter 拷貝檔名到命令列。使用 cp(1) 和 mv(1)
        兩個命令來進行處理。

      * Alt-Tab 顯示檔名自動補全提示。
   
      * 通過新增 MC 命令引數可以指定開始目錄；例如，"mc /etc /root"。

      * Esc + n-key → Fn (i.e., Esc + 1 → F1, etc.; Esc + 0 → F10)

      * 先按 Esc 鍵和同時按 Alt 是一樣；例如, 輸入 Esc + c 和同時
        Alt-C是一樣的。Esc 被稱為 meta 鍵，有時候也稱之為 "M-"。

%

1.3.5. MC 內部編輯器

    這個內建編輯器有一個有意思的貼上方案。摁 F3 開始選擇起始點，再摁
    F3 選擇終點並高亮選擇區。此刻你可以移動你的游標，使用 F6 將選區移
    動到當前游標下，F5 則將選區複製到當前游標下。 F2 儲存檔案。 F10
    退出。多數游標鍵以直觀的方式工作。

    MC 編輯器可以直接以下面的命令方式啟動。

    $ mc -e filename_to_edit

    $ mcedit filename_to_edit

    這不是一個多視窗編輯器，但是能通過複用終端來達到同樣的效果。在兩
    個視窗間複製，需要用到 Alt-F < n > 來切換虛擬終端並使用
    "File→Insert file" 或者 "File→Copy to file" 來移動文字。

    內部編輯器可以被外部編輯器替代。

    同樣，許多程式使用環境變數$EDITOR或$VISUAL來決定編輯器的使用。如
    果你準備使用vim(1)或者nano(1)來開始，你或許需要將下面的程式碼加入
    "~/.bashrc"來對mcedit進行設定。

    export EDITOR=mcedit
    export VISUAL=mcedit

    如果可能的話我推薦用 "vim"。

    如果你使用vim(1)並不順手，你可以在大部分系統中繼續使用mcedit(1)來
    進行工作。

%

1.3.6. MC 內部檢視器

    MC是一個非常智慧的檢視器。這是一個在文件中搜索文字的好工具。我經
    常使用它在/usr/share/doc目錄中查詢檔案。這是瀏覽大量Linux資訊的最
    快方式。這個檢視器可以通過下列命令中的任何一個來直接啟動。

    $ mc -v path/to/filename_to_view

    $ mcview path/to/filename_to_view

%

1.3.7. 自動啟動 MC

    在檔案中輸入回車，用適當的程式來處理檔案的內容 (檢視第 9.3.11 节
    “自定義被啟動的程式”)。這是 MC 一個非常方便的用法。

    表 1.12. MC 中對回車鍵的響應

    +-------------------------------------------------------+
    |         檔案型別         |       對回車鍵的響應       |
    |--------------------------+----------------------------|
    |可執行檔案                |執行命令                    |
    |--------------------------+----------------------------|
    |幫助文件                  |管道內容檢視器軟體          |
    |--------------------------+----------------------------|
    |html 檔案                 |管道內容網頁瀏覽器          |
    |--------------------------+----------------------------|
    |"*.tar.gz" 和 "*.deb" 文件|瀏覽其內容就像檢視子目錄一樣|
    +-------------------------------------------------------+


    為讓這些檢視器和虛擬檔案特徵生效，可檢視的檔案不能夠被設定為可執
    行。使用 chmod(1) 或通過 MC 檔案選單改變他們的狀態。

%

1.3.8. MC 中的 FTP 虛擬檔案系統

    MC 能夠使用 FTP 跨因特網訪問檔案。在選單按 F9, 然後輸入 "p" 來啟
    用 FTP 虛擬檔案系統。按 "username:passwd@hostname.domainname" 的
    形式輸入 URL,就會像本地目錄一樣來檢索遠端目錄。

    試著開啟 "[deb.debian.org/debian]" 來瀏覽 Debian 的檔案組織結構。

%

1.4. 類 Unix 工作環境基礎

    雖然 MC 差不多可以讓你做任何事情，但學會從 shell 提示下使用命令列
    工具也是非常重要的，可以讓你變得熟悉類 Unix 工作環境。

%

1.4.1. 登入 shell

    你可以通過 chsh(1) 選擇你的登入 shell。

    表 1.13. shell 程式列表

    +---------------------------------------------------------------+
    |軟體|流行度 |大小|POSIX |                 說明                 |
    | 包 |       |    |shell |                                      |
    |----+-------+----+------+--------------------------------------|
    |bash|V:791, |6469|Yes   |Bash: GNU Bourne Again SHell (事實上的|
    |    |I:999  |    |      |標準)                                 |
    |----+-------+----+------+--------------------------------------|
    |tcsh|V:9,   |1316|No    |TENEX C Shell: 一個 Berkeley csh 的增 |
    |    |I:29   |    |      |強版本                                |
    |----+-------+----+------+--------------------------------------|
    |dash|V:907, |221 |Yes   |Debian Almquist Shell, 擅長 shell 指令|
    |    |I:992  |    |      |碼                                    |
    |----+-------+----+------+--------------------------------------|
    |zsh |V:37,  |2442|Yes   |Z shell:有許多增強的標準 shell        |
    |    |I:73   |    |      |                                      |
    |----+-------+----+------+--------------------------------------|
    |mksh|V:4,   |1469|Yes   |Korn shell 的一個版本                 |
    |    |I:12   |    |      |                                      |
    |----+-------+----+------+--------------------------------------|
    |csh |V:2,   |343 |No    |OpenBSD C Shell, Berkeley csh 的一個版|
    |    |I:8    |    |      |本                                    |
    |----+-------+----+------+--------------------------------------|
    |sash|V:0,   |1054|Yes   |有內建命令的 Stand-alone shell (並不意|
    |    |I:6    |    |      |味著標準的 "/bin/sh")                 |
    |----+-------+----+------+--------------------------------------|
    |ksh |V:3,   |3284|Yes   |Korn shell的真正的 AT&T 版本          |
    |    |I:16   |    |      |                                      |
    |----+-------+----+------+--------------------------------------|
    |rc  |V:0,   |169 |No    |AT&T Plan 9 rc shell 的一個實現       |
    |    |I:2    |    |      |                                      |
    |----+-------+----+------+--------------------------------------|
    |posh|V:0,   |190 |Yes   |Policy-compliant Ordinary SHell 策略相|
    |    |I:0    |    |      |容的普通 shell(pdksh 派生)            |
    +---------------------------------------------------------------+


    提示
   
    雖然類 POSIX 共享基本語法，但他們在 shell 變數和全域性擴充套件等
    基本事情上，行為可以不同。細節請查閱他們的文件。

    在本教程中，互動式的 shell 總是指 bash.

%

1.4.2. 定製bash

    您可客製化 bash(1) 行為，使用 "~/.bashrc"。

    嘗試下列例子。

    # enable bash-completion
    if ! shopt -oq posix; then
      if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
      elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
      fi
    fi

    # CD upon exiting MC
    . /usr/lib/mc/mc.sh

    # set CDPATH to a good one
    CDPATH=.:/usr/share/doc:~:~/Desktop:~
    export CDPATH

    PATH="${PATH+$PATH:}/usr/sbin:/sbin"
    # set PATH so it includes user's private bin if it exists
    if [ -d ~/bin ] ; then
      PATH="~/bin${PATH+:$PATH}"
    fi
    export PATH

    EDITOR=vim
    export EDITOR

    提示
   
    可以找到其他 bash 客製化技巧，諸如第 9.2.7 节 “有顏色輸出的命令”
    ，在第 9 章系統技巧之內。

    提示
   
    bash-completion 軟體包能夠讓 bash 進行命令補全.

%

1.4.3. 特殊按鍵

    在類Unix環境，有一些具有特殊含義的按鍵。請注意，普通的Linux字符控
    制檯，只有左手邊的Ctrl和Alt鍵可以正常工作。其中有幾個值得記住的按
    鍵。

    表 1.14. bash的按鍵綁定列表

    +---------------------------------------------------------------+
    |         快捷鍵          |                描述                 |
    |-------------------------+-------------------------------------|
    |Ctrl-U                   |刪除光標前到行首的字符               |
    |-------------------------+-------------------------------------|
    |Ctrl-H                   |刪除光標前的一個字符                 |
    |-------------------------+-------------------------------------|
    |Ctrl-D                   |終止輸入（如果你在使用shell，則退出  |
    |                         |shell）                              |
    |-------------------------+-------------------------------------|
    |Ctrl-C                   |終止一個正在運行的程序               |
    |-------------------------+-------------------------------------|
    |Ctrl-Z                   |通過將程序移動到後臺來暫停程序       |
    |-------------------------+-------------------------------------|
    |Ctrl-S                   |停止屏幕輸出                         |
    |-------------------------+-------------------------------------|
    |Ctrl-Q                   |激活屏幕輸出                         |
    |-------------------------+-------------------------------------|
    |Ctrl-Alt-Del             |重啓/關閉系統，參見inittab(5)        |
    |-------------------------+-------------------------------------|
    |Left-Alt-key（或         |Emacs和相似UI的元鍵（meta-key）      |
    |Windows-key）            |                                     |
    |-------------------------+-------------------------------------|
    |Up-arrow                 |開始在bash中的命令歷史搜索           |
    |-------------------------+-------------------------------------|
    |Ctrl-R                   |開始在bash中的增量命令歷史搜索       |
    |-------------------------+-------------------------------------|
    |Tab                      |在 bash 命令行中補全文件名           |
    |-------------------------+-------------------------------------|
    |Ctrl-V Tab               |在 bash 命令行中輸出 Tab 而不是進行補|
    |                         |全                                   |
    +---------------------------------------------------------------+


    提示
   
    Ctrl-S的終端功能可能被stty(1)禁用。

%

1.4.4. Unix類型的鼠標操作

    Unix類型的鼠標操作基於3鍵的鼠標系統。

    表 1.15. Unix樣式的鼠標操作列表

    +---------------------------------------+
    |     操作     |          響應          |
    |--------------+------------------------|
    |左擊並拖動鼠標|選擇並複製到剪貼板      |
    |--------------+------------------------|
    |單擊左鍵      |選擇開頭                |
    |--------------+------------------------|
    |單擊右鍵      |選擇末尾並拷貝到剪貼簿  |
    |--------------+------------------------|
    |單擊中鍵      |粘貼剪切板的內容到光標處|
    +---------------------------------------+


    在現代滾輪滑鼠上的中央滾輪，被認為是中間鍵，並可以被當做中間鍵使
    用。在 2 鍵滑鼠系統的情況下，同時按左鍵和右鍵就相當於按中間鍵。為
    了在 Linux 字元控制檯使用滑鼠，你需要把 gpm( 8) 作為後臺守護程序
    （daemon）執行。

%

1.4.5. 文件內容查看

    less(1) 命令是一個增強版的分頁程式（檔案內容檢視器）。它按照指定
    的命令引數或標準輸出來讀取檔案。在用 less 命令檢視的時候如果需要
    幫助可以按 “h”。它的功能比 more(1) 命令更豐富，透過在指令碼的開頭
    執行 "eval $(lesspipe)" 或 "eval $(lessfile)" 它的功能還能變得更
    加強大。詳細請參考 "/usr/share/doc/less/LESSOPEN"。 "-R" 選項可以
    實現原始的字元輸出還可以啟用 ANSI 顏色轉義序列。詳細請參考 less
    (1)。

%

1.4.6. 文本編輯器

    在使用類 Unix 系統過程中，各種類似於Vim 或 Emacs的工具，你應該精
    通其中的一個。

    我認為習慣於使用 Vim 命令是一個明智的選擇，因為Linux/Unix系統裡一
    般都附帶了 Vi 編輯器。 (實際上最初的vi 以及後來的 nvi 這類工具程
    式很常見。因為在 Vim 裡提供了F1幫助鍵，在同類工具中它的功能更強大
    ，所以我選擇 Vim 而不是其它新出的一些工具。)

    假設你不是用 Emacs 就是用XEmacs 作為你的編輯器，其實還有更好的選
    擇，尤其是在程式設計的時候。 Emacs 還有很多其他的特點，包括新手導
    讀，目錄編輯器，郵件客戶端等等。當編寫指令碼或程式的時候，它能自
    動識別當前工作模式所對應的格式，讓使用更加便利。一些人甚至堅持認
    為Linux系統裡最需要配備的就是 Emacs。花十分鐘來學習 Emacs 可以為
    後面的工作剩下更多時間。在此強烈推薦學習使用 Emacs 時候直接使用
    GNU Emacs 參考手冊。

    在實踐應用中所有這些程式都會有一個教程，輸入 "vim" 和F1鍵就可以啟
    動Vim。建議你最好閱讀一下前面的35行。移動游標到 "|tutor|" 並按
    Ctrl-] 就可以看到線上培訓教程。

    注意

    好的編輯器，像 Vim 和 Emacs，可以處理 UTF-8 及其它不常用編碼格式
    的文字。有個建議就是在 X 環境下使用UTF-8編碼，並安裝要求的程式和
    字型。編輯器裡可以選擇獨立於 X 環境的編碼格式。關於多位元組文字可
    以查閱參考文件。

%

1.4.7. 設置默認文本編輯器

    Debian有許多不同的編輯器。我們建議安裝上面提到的vim軟體包。

    Debian通過命令“/usr/bin/editor”提供了對系統默認編輯器的統一訪問，
    因此其它程序（例如reportbug(1)）可以調用它。你可以通過下列命令改
    變它。

    $ sudo update-alternatives --config editor

    對於新手，我建議使用“/usr/bin/vim.basic”代替“/usr/bin/vim.tiny”，
    因爲它支持格式高亮。

    提示

    許多程序使用環境變量“$EDITOR”或“$VISUAL”來決定使用那個編輯器（參
    見第 1.3.5 节 “MC 內部編輯器”和第 9.3.11 节 “自定義被啟動的程式”
    ）。出於Debian系統的一致性考慮，它們被設置到“/usr/bin/editor”。（
    在歷史上，“$EDITOR”是“ed”，“$VISUAL”是“vi”。）

%

1.4.8. 定製vim

    您可客製化 vim(1) 的行為，經由 "~/.vimrc" 達成。

    嘗試下列例子

    " -------------------------------
    " Local configuration
    "
    set nocompatible
    set nopaste
    set pastetoggle=<f2>
    syn on
    if $USER == "root"
     set nomodeline
     set noswapfile
    else
     set modeline
     set swapfile
    endif
    " filler to avoid the line above being recognized as a modeline
    " filler
    " filler

%

1.4.9. 記錄shell活動

    shell命令的輸出有可能滾動出了屏幕，並可能導致你無法再查看到它。將
    shell活動記錄到文件中再來回顧它是個不錯的主意。當你執行任何系統管
    理任務時，這種記錄是必不可少的。

    記錄shell活動的基本方法是在script(1)下運行shell。

    嘗試下列例子

    $ script
    Script started, file is typescript

    在script下使用任何shell命令。

    按Ctrl-D來退出script。

    $ vim typescript

    參見第 9.2.3 节 “清晰的記錄 shell 活動”。

%

1.4.10. 基本的Unix命令

    讓我們來學習基本的Unix命令。在這裏，我指的是一般意義上的“UNIX”。
    任何UNIX克隆系統通常都會提供等價的命令。Debian系統也不例外。如果
    有一些命令不像你想的那樣起作用，請不要擔心。如果shell中使用了別名
    ，其對應的命令輸出會不同。這些例子並不意味着要以這個順序來執行。

    嘗試使用非特權用戶賬號來使用下列的命令。

    表 1.16. 基本的Unix命令列表

    +---------------------------------------------------------------+
    |     命令      |                     說明                      |
    |---------------+-----------------------------------------------|
    |pwd            |顯示當前/工作目錄的名稱                        |
    |---------------+-----------------------------------------------|
    |whoami         |顯示當前的用戶名                               |
    |---------------+-----------------------------------------------|
    |id             |顯示當前用戶的身份（名稱、uid、gid和相關組）   |
    |---------------+-----------------------------------------------|
    |file <foo>     |顯示“<foo>”文件的文件類型                      |
    |---------------+-----------------------------------------------|
    |type -p        |顯示“<commandname>”命令的文件所處位置          |
    |<commandname>  |                                               |
    |---------------+-----------------------------------------------|
    |which          |同上                                           |
    |<commandname>  |                                               |
    |---------------+-----------------------------------------------|
    |type           |顯示“<commandname>”命令的相關信息              |
    |<commandname>  |                                               |
    |---------------+-----------------------------------------------|
    |apropos        |查找與“<key-word>”有關的命令                   |
    |<key-word>     |                                               |
    |---------------+-----------------------------------------------|
    |man -k         |同上                                           |
    |<key-word>     |                                               |
    |---------------+-----------------------------------------------|
    |whatis         |用一行解釋 “<commandname>” 命令                |
    |<commandname>  |                                               |
    |---------------+-----------------------------------------------|
    |man -a         |顯示“<commandname>”命令的解釋（Unix風格）      |
    |<commandname>  |                                               |
    |---------------+-----------------------------------------------|
    |info           |顯示“<commandname>”命令相當長的解釋（GNU風格） |
    |<commandname>  |                                               |
    |---------------+-----------------------------------------------|
    |ls             |顯示目錄內容（不包含以 . 點號開頭的文件和目錄）|
    |---------------+-----------------------------------------------|
    |ls -a          |顯示目錄內容（包含所有文件和目錄）             |
    |---------------+-----------------------------------------------|
    |ls -A          |顯示目錄內容（包含幾乎所有文件和目錄，除了“..” |
    |               |和“.”）                                        |
    |---------------+-----------------------------------------------|
    |ls -la         |顯示所有的目錄內容，幷包含詳細的信息           |
    |---------------+-----------------------------------------------|
    |ls -lai        |顯示所有的目錄內容，幷包含inode和詳細的信息    |
    |---------------+-----------------------------------------------|
    |ls -d          |顯示當前目錄下的所有目錄                       |
    |---------------+-----------------------------------------------|
    |tree           |使用樹狀圖顯示目錄內容                         |
    |---------------+-----------------------------------------------|
    |lsof <foo>     |列出處於開啟狀態的檔案 "<foo>"                 |
    |---------------+-----------------------------------------------|
    |lsof -p <pid>  |列出被某程序開啟的檔案: "<pid>"                |
    |---------------+-----------------------------------------------|
    |mkdir <foo>    |在當前目錄中建立新目錄“<foo>”                  |
    |---------------+-----------------------------------------------|
    |rmdir <foo>    |刪除當前目錄中的“<foo>”目錄                    |
    |---------------+-----------------------------------------------|
    |cd <foo>       |切換到當前目錄下或變量“$CDPATH”中的“<foo>”目錄 |
    |---------------+-----------------------------------------------|
    |cd /           |切換到根目錄                                   |
    |---------------+-----------------------------------------------|
    |cd             |切換到當前用戶的家目錄                         |
    |---------------+-----------------------------------------------|
    |cd /<foo>      |切換到絕對路徑爲“/<foo>”的目錄                 |
    |---------------+-----------------------------------------------|
    |cd ..          |切換到上一級目錄                               |
    |---------------+-----------------------------------------------|
    |cd ~<foo>      |切換到用戶“<foo>”的家目錄                      |
    |---------------+-----------------------------------------------|
    |cd -           |切換到之前的目錄                               |
    |---------------+-----------------------------------------------|
    |</etc/motd     |使用默認的分頁顯示程序來顯示“/etc/motd”的內容  |
    |pager          |                                               |
    |---------------+-----------------------------------------------|
    |touch          |建立一個空文件“<junkfile>”                     |
    |<junkfile>     |                                               |
    |---------------+-----------------------------------------------|
    |cp <foo> <bar> |將一個現有文件“<foo>”複製到一個新文件“<bar>”   |
    |---------------+-----------------------------------------------|
    |rm <junkfile>  |刪除文件“<junkfile>”                           |
    |---------------+-----------------------------------------------|
    |mv <foo> <bar> |將一個現有文件“<foo>”重命名成“<bar>”（“<bar>”必|
    |               |須不存在）                                     |
    |---------------+-----------------------------------------------|
    |mv <foo> <bar> |將一個現有文件“<foo>”移動到新的位置“<bar>/<foo>|
    |               |”（必須存在“<bar>”目錄）                       |
    |---------------+-----------------------------------------------|
    |mv <foo> <bar>/|移動一個現有文件“<foo>”到新位置並重命名爲“<bar>|
    |<baz>          |/<baz>”（必須存在“bar”目錄，且不存在“bar>/<baz>|
    |               |”目錄）                                        |
    |---------------+-----------------------------------------------|
    |chmod 600 <foo>|使其他人無法讀寫現有文件“<foo>”（並且所有人都無|
    |               |法執行該文件）                                 |
    |---------------+-----------------------------------------------|
    |chmod 644 <foo>|使其他人對現有文件“<foo>”可讀但不可寫（並且所有|
    |               |人都無法執行該文件）                           |
    |---------------+-----------------------------------------------|
    |chmod 755 <foo>|使其他人對“<foo>”可讀而不可寫（並且所有人都能執|
    |               |行該文件）                                     |
    |---------------+-----------------------------------------------|
    |find . -name   |使用 shell “<pattern>” 查找匹配的文件名（速度較|
    |<pattern>      |慢）                                           |
    |---------------+-----------------------------------------------|
    |locate -d .    |使用 shell “<pattern>” 查找匹配的文件名（速度較|
    |<pattern>      |快，使用定期生成的數據庫）                     |
    |---------------+-----------------------------------------------|
    |grep -e "      |在當前目錄下以“.html”結尾的所有文件中，查找匹配|
    |<pattern>"     |“<pattern>”的文件並顯示                        |
    |*.html         |                                               |
    |---------------+-----------------------------------------------|
    |top            |全屏顯示進程信息，輸入“q”退出                  |
    |---------------+-----------------------------------------------|
    |ps aux | pager |顯示所有正在運行的進程的信息（BSD風格）        |
    |---------------+-----------------------------------------------|
    |ps -ef | pager |顯示所有正在運行的進程的信息（Unix system-V風格|
    |               |）                                             |
    |---------------+-----------------------------------------------|
    |ps aux | grep  |顯示所有正在運行“exim”和“exim4”的進程          |
    |-e "[e]xim4*"  |                                               |
    |---------------+-----------------------------------------------|
    |ps axf | pager |顯示所有正在運行的進程的信息（ASCII風格）      |
    |---------------+-----------------------------------------------|
    |kill <1234>    |殺死ID爲“<1234>”的進程                         |
    |---------------+-----------------------------------------------|
    |gzip <foo>     |使用 Lempel-Ziv 編碼（LZ77）將“<foo>”壓縮爲“   |
    |               |<foo>.gz”                                      |
    |---------------+-----------------------------------------------|
    |gunzip <foo>.gz|將“<foo>.gz”解壓爲“<foo>”                      |
    |---------------+-----------------------------------------------|
    |               |使用 Burrows-Wheeter 塊排序壓縮算法和 Huffman  |
    |bzip2 <foo>    |編碼將“<foo>”壓縮爲“<foo>.bz2”（壓縮效果比gzip |
    |               |更好）                                         |
    |---------------+-----------------------------------------------|
    |bunzip2        |將“<foo>.bz2”解壓爲“<foo>”                     |
    |<foo>.bz2      |                                               |
    |---------------+-----------------------------------------------|
    |xz <foo>       |使用 Lempel-Ziv-Markov 鏈算法將“<foo>”壓縮爲“  |
    |               |<foo>.xz”（壓縮效果比bzip2更好）               |
    |---------------+-----------------------------------------------|
    |unxz <foo>.xz  |將“<foo>.xz”解壓爲“<foo>”                      |
    |---------------+-----------------------------------------------|
    |tar -xvf       |從“<foo>.tar”檔案中提取文件                    |
    |<foo>.tar      |                                               |
    |---------------+-----------------------------------------------|
    |tar -xvzf      |從被gzip壓縮過的“<foo>.tar.gz”檔案中提取文件   |
    |<foo>.tar.gz   |                                               |
    |---------------+-----------------------------------------------|
    |tar -xvjf      |從“<foo>.tar.bz2”檔案中提取文件                |
    |<foo>.tar.bz2  |                                               |
    |---------------+-----------------------------------------------|
    |tar -xvJf      |從“<foo>.tar.xz”檔案中提取文件                 |
    |<foo>.tar.xz   |                                               |
    |---------------+-----------------------------------------------|
    |tar -cvf       |                                               |
    |<foo>.tar <bar>|將目錄“<bar>/”中的內容打包到“<foo>.tar”檔案中  |
    |/              |                                               |
    |---------------+-----------------------------------------------|
    |tar -cvzf      |將目錄“<bar>/”中的內容打包到被壓縮的“          |
    |<foo>.tar.gz   |<foo>.tar.gz”檔案中                            |
    |<bar>/         |                                               |
    |---------------+-----------------------------------------------|
    |tar -cvjf      |將目錄“<bar>/”中的內容打包到“<foo>.tar.bz2”檔案|
    |<foo>.tar.bz2  |中                                             |
    |<bar>/         |                                               |
    |---------------+-----------------------------------------------|
    |tar -cvJf      |將目錄”<bar>/“中的內容打包到”<foo>.tar.xz“檔案 |
    |<foo>.tar.xz   |中                                             |
    |<bar>/         |                                               |
    |---------------+-----------------------------------------------|
    |zcat README.gz |使用默認的分頁顯示程序來顯示“README.gz”壓縮包中|
    || pager        |的內容                                         |
    |---------------+-----------------------------------------------|
    |zcat README.gz |將“README.gz”解壓後的內容輸出到文件“foo”中     |
    |> foo          |                                               |
    |---------------+-----------------------------------------------|
    |zcat README.gz |將“README.gz”解壓後的內容添加到文件“foo”的末尾 |
    |>> foo         |（如果文件不存在，則會先建立該文件）           |
    +---------------------------------------------------------------+


    注意
   
    Unix有一個慣例，以“.”開頭的文件將被隱藏。它們一般爲包含了配置信息
    和用戶首選項的文件。

    注意
   
    對於cd命令，參見builtins(7)。

    注意

    基本的 Debian 系統的默認分頁顯示程序是more(1)，它無法往回滾動。通
    過命令“apt-get install less"安裝less軟體包後，less(1)會成爲默認的
    分頁顯示程序，它可以通過方向鍵往回滾動。

    注意

    "[" 和"]" 在正則表示式 "ps aux | grep -e "[e]xim4*"" 命令中，可以
    避免grep在結果中排除它自己，正則表示式中的 "4*" 意思是空或字元"4"
    ，這樣可以讓 grep 既找到 "exim" 也找到 "exim4"。雖然 "*" 可以用於
    命令名稱匹配和正則表示式中，但是它們的含義是不一樣的。欲詳細瞭解
    正則表示式可以參考 grep(1)。

    作爲訓練，請使用上述的命令來遍歷目錄並探究系統。如果你有任何有關
    控制臺命令的問題，請務必閱讀手冊。

    嘗試下列例子

    $ man man
    $ man bash
    $ man builtins
    $ man grep
    $ man ls

    手冊的風格可能讓人有點難以習慣，因爲它們都相當簡潔，尤其是比較老
    舊、非常傳統的那些手冊。但是，一旦你習慣了它，你來欣賞它們的簡潔
    。

    請注意，許多類Unix命令（包含來自 GNU 和 BSD 的）都可以顯示簡短的
    幫助信息，你可以使用下列的其中一種方式來查看它（有時不帶任何參數
    也可以）。

    $ <commandname> --help
    $ <commandname> -h

%

1.5. 簡單 shell 命令

    現在，你對如何使用 Debian 系統已經有一些感覺了。讓我們更深入瞭解
    Debian 系統的命令執行機制。在這裏，我將爲新手做一般的講解。精確的
    解釋參見bash(1)。

    一般的命令由有序的組件構成。

     1. 設置變量值（可選）

     2. 命令名

     3. 參數（可選）

     4. 重定向（可選：> , >> , < , << 等等）

     5. 控制操作（可選：&& ， || ， <換行符> , ; , & , ( , )）

%

1.5.1. 命令執行和環境變量

    一些環境變量的值會改變部分Unix命令的行爲。

    環境變量的默認值由PAM系統初始化，其中一些會被某些應用程序重新設定
    。

      * 顯示管理器（例如gdm3）會重新設定環境變量。
   
      * Shell指令碼啟動的時候會重置 "~/.bash_profile" 和 "~/.bashrc"
        中的環境變數。

%

1.5.2. “$LANG”變量

    “$LANG” 變數的完整的語言環境值由3部分組成：“xx_YY.ZZZZ”。

    表 1.17. 語言環境值的 3 個部分

    +--------------------------------------------+
    |語言環境值|              說明               |
    |----------+---------------------------------|
    |xx        |ISO 639 語言代碼（小寫）例如“en” |
    |----------+---------------------------------|
    |YY        |ISO 3166 國家代碼（大寫）例如“US”|
    |----------+---------------------------------|
    |ZZZZ      |編碼，總是設置爲“UTF-8”          |
    +--------------------------------------------+


    對於語言代碼和國家代碼，參加“info gettext”中的相關描述。

    對於現代 Debian 系統中的編碼，你應該總是設定爲UTF-8，除非你有足夠
    的理由和背景知識並且特別想使用過時的編碼。

    對於語言環境配置的細節，參見第 8.4 节 “語言環境”。

    注意
   
    在 Debian 系統中，請確認安裝 locales-all 軟體包來使用所有的語言環
    境。

    注意
   
    “LANG=en_US”即不是“LANG=C”也不是“LANG=en_US.UTF-8”。它是“LANG=
    en_US.ISO-8859-1”（參見第 8.4.1 节 “編碼的基礎知識”）。

    表 1.18. locale 推薦的列表

    +----------------------------------+
    |locale 推薦|     語言（地區）     |
    |-----------+----------------------|
    |en_US.UTF-8|英語（美國）          |
    |-----------+----------------------|
    |en_GB.UTF-8|英語（大不列顛）      |
    |-----------+----------------------|
    |fr_FR.UTF-8|法語（法國）          |
    |-----------+----------------------|
    |de_DE.UTF-8|德語（德國）          |
    |-----------+----------------------|
    |it_IT.UTF-8|意大利語（意大利）    |
    |-----------+----------------------|
    |es_ES.UTF-8|西班牙語（西班牙）    |
    |-----------+----------------------|
    |ca_ES.UTF-8|加泰隆語（西班牙）    |
    |-----------+----------------------|
    |sv_SE.UTF-8|瑞典語（瑞典）        |
    |-----------+----------------------|
    |pt_BR.UTF-8|葡萄牙語（巴西）      |
    |-----------+----------------------|
    |ru_RU.UTF-8|俄語（俄國）          |
    |-----------+----------------------|
    |zh_CN.UTF-8|漢語（中華人民共和國）|
    |-----------+----------------------|
    |zh_TW.UTF-8|漢語（中國臺灣）      |
    |-----------+----------------------|
    |ja_JP.UTF-8|日語（日本）          |
    |-----------+----------------------|
    |ko_KR.UTF-8|韓語（韓國）          |
    |-----------+----------------------|
    |vi_VN.UTF-8|越南語（越南）        |
    +----------------------------------+


    使用 shell 命令行按順序執行下列典型的命令。

    $ date
    Sun Jun  3 10:27:39 JST 2007
    $ LANG=fr_FR.UTF-8 date
    dimanche 3 juin 2007, 10:27:33 (UTC+0900)

    這裏，date(1)程序執行時使用了與環境變量“$LANG”不同的值。

      * 第一個命令，“$LANG” 設定為系統的預設語言環境值 “en_US.UTF-8”
        。
   
      * 第二個命令，“$LANG”設置爲法語的 UTF-8 locale 值“fr_FR.UTF-8”
        。

    大多數的命令在執行時並沒有預先定義環境變量。對於上面的例子，你也
    可以選擇如下的方式。

    $ LANG=fr_FR.UTF-8
    $ date
    dimanche 3 juin 2007, 10:27:33 (UTC+0900)

    正如你所看到的，命令的輸出受環境變數的影響，上面產生的是法語輸出
    。如果你想這個環境變數能在子程序中被繼承的話(例如執行 shell 指令
    碼時)，你需要使用下面的命令匯出（export）它。

    $ export LANG

    注意

    在使用常規的控制檯終端的時候，環境變數 "$LANG" 通常會被桌面環境變
    數通過 exported 方式重置。如果要測試 export 帶來的影響，這個可能
    不是一個很好的例子。

    提示
   
    提交一個BUG報告的時候，如果使用的是非英語的環境，在 "LANG=
    en_US.UTF-8" 環境下對命令進行執行和檢查會更好一些。

    可以通過命令 locale(5) 和locale(7) 來檢視 "$LANG" 及相關的環境變
    數。

    注意
   
    建議最好用變數 "$LANG" 來配置系統環境變數，只有在逼不得已的情況下
    才用 $LC_*" 開頭的變數。

%

1.5.3. "$PATH" 變數

    當你在 Shell 裡輸入命令的時候，Shell 會在 "$PATH" 變數所包含的目
    錄列表裡進行搜尋，"$PATH" 變數的值也叫作 Shell 的搜尋路徑。

    在預設的 Debian 安裝過程中，所使用的使用者賬號的 "$PATH" 環境變數
    可能不包括 "/sbin" 和"/usr/sbin"目錄。例如，ifconfig 命令就需要指
    定完整的路徑 "/sbin/ifconfig"。(類似地， ip 命令是在 "/bin" 目錄
    下)

    可以在 Bash 指令碼檔案 "~/.bash_profile" 或 "~/.bashrc" 中改變
    "$PATH" 環境變數的值。

%

1.5.4. "$HOME" 變數

    很多命令在使用者目錄中都存放了使用者指定的配置，然後通過配置的內
    容來改變它的執行方式，使用者目錄通常用 "$HOME" 變數來指定。

    表 1.19. "$HOME" 變數值列表

    +---------------------------------------------------------------+
    | "$HOME" 變數的值 |                程式執行環境                |
    |------------------+--------------------------------------------|
    |/                 |初始程序執行的程式（守護程序）              |
    |------------------+--------------------------------------------|
    |/root             |root 使用者許可權 Shell 執行的程式          |
    |------------------+--------------------------------------------|
    |/home/            |普通使用者許可權Shell執行的程式             |
    |<normal_user>     |                                            |
    |------------------+--------------------------------------------|
    |/home/            |普通使用者 GUI 桌面選單執行的程式           |
    |<normal_user>     |                                            |
    |------------------+--------------------------------------------|
    |/home/            |用root使用者許可權來執行程式 "sudo program" |
    |<normal_user>     |                                            |
    |------------------+--------------------------------------------|
    |/root             |用 root 使用者許可權執行程式 "sudo -H       |
    |                  |program"                                    |
    +---------------------------------------------------------------+


    提示
   
    Shell 擴充套件 "~/" 為轉入當前使用者的主目錄，也就是"$HOME/"。
    Shell 擴充套件 "~foo/" 為foo 的目錄，也就是 "/home/foo/"。

%

1.5.5. 命令列選項

    一些命令附帶引數。這些引數以 "-" 或 "--" 開頭，通常稱之為選項，用
    來控制命令的執行方式。

    $ date
    Mon Oct 27 23:02:09 CET 2003
    $ date -R
    Mon, 27 Oct 2003 23:02:40 +0100

    這裡的命令引數 "-R" 改變 date(1) 命令輸出為 RFC2822 標準的日期字
    元格式。

%

1.5.6. Shell 萬用字元

    經常有這種情況你期望命令成串自動執行而不需要挨個輸入，將檔名擴充
    套件為 glob，(有時候被稱為萬用字元)，以此來滿足這方面的需求。

    表 1.20. Shell glob 模式

    +---------------------------------------------------------------+
    |shell glob |                   匹配規則描述                    |
    |   模式    |                                                   |
    |-----------+---------------------------------------------------|
    |*          |不以 "." 開頭的檔名(段)                            |
    |-----------+---------------------------------------------------|
    |.*         |以 "." 開頭的檔名(段)                              |
    |-----------+---------------------------------------------------|
    |?          |精確字元                                           |
    |-----------+---------------------------------------------------|
    |[…]        |包含在括號中的任意字元都可以作為精確字元           |
    |-----------+---------------------------------------------------|
    |[a-z]      |"a" 到 "z" 之間的任意一個字元都可以作為精確字元    |
    |-----------+---------------------------------------------------|
    |[^…]       |除了包含在括號中的任意字元 ( " 1^ 2"除外 )，其它字 |
    |           |元都可以作為精確字元                               |
    +---------------------------------------------------------------+


    嘗試下列例子

    $ mkdir junk; cd junk; touch 1.txt 2.txt 3.c 4.h .5.txt ..6.txt
    $ echo *.txt
    1.txt 2.txt
    $ echo *
    1.txt 2.txt 3.c 4.h
    $ echo *.[hc]
    3.c 4.h
    $ echo .*
    . .. .5.txt ..6.txt
    $ echo .*[^.]*
    .5.txt ..6.txt
    $ echo [^1-3]*
    4.h
    $ cd ..; rm -rf junk

    參見 glob(7)。

    注意
   
    與 shell 通用的檔名匹配方式不同，使用 " -name " 選項的 find (1)，
    其 shell 模式" * " ，匹配以" . "開始的檔名.（新 POSIX 的特性)

    注意

    BASH 可以使用內建的 shopt 選項如 " dotglob "，" noglob ","
    nocaseglob "," nullglob "," extglob "定製全域性行為,使用 bash ( 1
    )檢視詳細說明。

%

1.5.7. 命令的返回值

    每個命令都會返回它的退出狀態（變量：“$?”）作爲返回值。

    表 1.21. 命令的退出代碼

    +--------------------------------------+
    |命令的退出狀態| 數字返回值 |邏輯返回值|
    |--------------+------------+----------|
    |success       |zero, 0     |TRUE      |
    |--------------+------------+----------|
    |error         |non-zero, -1|FALSE     |
    +--------------------------------------+


    嘗試下列例子。

    $ [ 1 = 1 ] ; echo $?
    0
    $ [ 1 = 2 ] ; echo $?
    1

    注意
   
    請注意，success 是邏輯 TRUE ，0（zero）則是它的值。這有些不直觀，
    需要在這裡提一下。

%

1.5.8. 典型的順序命令和 shell 重定向

    讓我們試著記住下面 Shell 命令裡部分命令列所使用的命令習語。

    表 1.22. Shell 命令常見用法

    +---------------------------------------------------------------+
    |命令常見用法|                       說明                       |
    |------------+--------------------------------------------------|
    |command &   |在子 shell 的後臺中執行 command                   |
    |------------+--------------------------------------------------|
    |command1 |  |通過管道將 command1 的標準輸出作爲 command2 的標準|
    |command2    |輸入（並行執行）                                  |
    |------------+--------------------------------------------------|
    |command1 2>&|通過管道將 command1 的標準輸出和標準錯誤作爲      |
    |1 | command2|command2 的標準輸入（並行執行）                   |
    |------------+--------------------------------------------------|
    |command1 ;  |執行 command1 與 command2 循序地進行              |
    |command2    |                                                  |
    |------------+--------------------------------------------------|
    |command1 && |執行 command1；若成功，則續執行 command2 循序地進 |
    |command2    |行 (若 command1 與 command2 都成功，則送回成功的訊|
    |            |息)                                               |
    |------------+--------------------------------------------------|
    |command1 || |執行 command1；若不成功，接著執行 command2 循序地 |
    |command2    |(若 command1 或 command2 成功，則送回成功的訊息)  |
    |------------+--------------------------------------------------|
    |command >   |將 command 的標準輸出重定向到文件 foo（覆蓋）     |
    |foo         |                                                  |
    |------------+--------------------------------------------------|
    |command 2>  |將 command 的標準錯誤重定向到文件 foo（覆蓋）     |
    |foo         |                                                  |
    |------------+--------------------------------------------------|
    |command >>  |將 command 的標準輸出重定向到文件 foo（附加）     |
    |foo         |                                                  |
    |------------+--------------------------------------------------|
    |command 2>> |將 command 的標準錯誤重定向到文件 foo（附加）     |
    |foo         |                                                  |
    |------------+--------------------------------------------------|
    |command >   |將 command 的標準輸出和標準錯誤重定向到文件 foo   |
    |foo 2>&1    |                                                  |
    |------------+--------------------------------------------------|
    |command <   |將 command 的標準輸入重定向到文件 foo             |
    |foo         |                                                  |
    |------------+--------------------------------------------------|
    |command <<  |將 command 的標準輸入重定向到下面的命令行，直到遇 |
    |delimiter   |到“delimiter”（here document）                    |
    |------------+--------------------------------------------------|
    |command <<- |將 command 的標準輸入重定向到下面的命令行，直到遇 |
    |delimiter   |到“delimiter”（here document，命令行中開頭的製表符|
    |            |會被忽略）                                        |
    +---------------------------------------------------------------+


    Debian 系統是一個多任務的操作系統。後臺任務讓用戶能夠在一個 shell
    中執行多個程序。後臺進程的管理涉及 shell 的內建命令：jobs、fg、bg
    和 kill。請閱讀 bash(1) 中的章節：“SIGNALS”、“JOB CONTROL” 和 “
    builtins(1)”。

    嘗試下列例子

    $ </etc/motd pager

    $ pager </etc/motd

    $ pager /etc/motd

    $ cat /etc/motd | pager

    儘管4個 shell 重定向的例子都會顯示相同的結果，但最後一個例子毫無
    意義地運行了額外的 cat 命令浪費了資源。

    shell 允許你使用 exec 通過任意一個文件描述符來打開文件。

    $ echo Hello >foo
    $ exec 3<foo 4>bar  # open files
    $ cat <&3 >&4       # redirect stdin to 3, stdout to 4
    $ exec 3<&- 4>&-    # close files
    $ cat bar
    Hello

    預定義的文件描述符0-2。

    表 1.23. 預定義的文件描述符

    +--------------------------+
    | 設備 |  說明  |文件描述符|
    |------+--------+----------|
    |stdin |標準輸入|0         |
    |------+--------+----------|
    |stdout|標準輸出|1         |
    |------+--------+----------|
    |stderr|標準錯誤|2         |
    +--------------------------+


%

1.5.9. 命令別名

    你可以爲經常使用的命令設置一個別名。

    嘗試下列例子

    $ alias la='ls -la'

    現在，“la”是“ls -al”的簡寫形式，並同樣會以長列表形式列出所有的文
    件。

    你可以使用 alias 來列出所有的別名（參見 bash(1) 中的“SHELL
    BUILTIN COMMANDS”）。

    $ alias
    ...
    alias la='ls -la'

    你可以使用 type 來確認命令的準確路徑或類型（參見 bash(1) 中的
    “SHELL BUILTIN COMMANDS”）。

    嘗試下列例子

    $ type ls
    ls is hashed (/bin/ls)
    $ type la
    la is aliased to ls -la
    $ type echo
    echo is a shell builtin
    $ type file
    file is /usr/bin/file

    ls 在最近被使用過，而 “file” 沒有，因此 “ls” 標記為 “hashed”（被
    錄入雜湊表），即 shell 有一個內部的記錄用來快速訪問 “ls” 所處的位
    置。

    提示
   
    參見第 9.2.7 节 “有顏色輸出的命令”。

%

1.6. 類 Unix 的文本處理

    在類 Unix 的工作環境中，文本處理是通過使用管道組成的標準文本處理
    工具鏈完成的。這是另一個重要的 Unix 創新。

%

1.6.1. Unix 文本工具

    這裏有一些在類 Unix 系統中經常使用到的標準文本處理工具。

      * 沒有使用正則表達式：

          + cat(1) 連接文件並輸出全部的內容。

          + tac(1) 連接文件並反向輸出。

          + cut(1) 選擇行的一部分並輸出。

          + head(1) 輸出文件的開頭。

          + tail(1) 輸出文件的末尾。

          + sort(1) 對文本文件的行進行排序。

          + uniq(1) 從已排序的文件中移除相同的行。

          + tr(1) 轉換或刪除字符。

          + diff(1) 對文件的行進行對比。

      * 使用基礎的正則表達式（ BRE ）：

          + grep(1) 匹配滿足 pattern 的文字。
   
          + ed(1) 是一個原始行編輯器。

          + sed(1) 是一個流編輯器。

          + vim(1) 是一個屏幕編輯器。

          + emacs(1) 是一個屏幕編輯器。（有些擴展的 BRE ）

      * 使用擴展的正則表達式（ ERE ）：

          + egrep(1) 匹配滿足多個 pattern 的文字。

          + awk(1) 進行簡單的文本處理。

          + tcl(3tcl) 可以進行任何你想得到的文本處理：參見 re_syntax
            (3) 。經常與 tk(3tk) 一起使用。

          + perl(1) 可以進行任何你想得到的文本處理。參見 perlre(1) 。

          + pcregrep 軟體包中的 pcregrep(1) 可以匹配滿足 Perl 相容正
            則表示式（PCRE）模式的文字。

          + python(1) 帶有 re 模組可以處理每個預期的文件作業。見 "/
            usr/share/doc/python/html/index.html"。

    如果你不確定這些命令究竟做了什麼，請使用“man command” 來自己把它
    搞清楚吧。

    注意

    排序的順序和表示式的範圍取決於語言環境。如果你想要獲得一個命令的
    傳統行為，可以在命令之前使用 “LANG=C” 讓 C 語言環境代替 UTF-8（參
    見第 1.5.2 节 ““$LANG”變量” 和第 8.4 节 “語言環境”）。

    注意

    Perl 正則表達式（ perlre(1) ）、Perl 兼容正則表達式（PCRE）和
    Python 的re 模塊提供的正則表達式與一般的 ERE 相比多了許多通用的擴
    展。

%

1.6.2. 正則表達式

    正則表示式被使用在許多文字處理工具中。它們類似 shell 的萬用字元，
    但更加複雜和強大。

    正則表示式描述要匹配的模式，它是由文字字元和元字元構成的。

    元字符僅僅是帶有特殊含義的字符。它們有兩種主要的形式，BRE 和 ERE
    ，使用哪種取決於上述的文本工具。

    表 1.24. BRE 和 ERE 中的元字符

    +---------------------------------------------------------------+
    |      BRE      |   ERE   |          正則表達式的描述           |
    |---------------+---------+-------------------------------------|
    |\ . [ ] ^ $ *  |\ . [ ] ^|通用的元字符                         |
    |               |$ *      |                                     |
    |---------------+---------+-------------------------------------|
    |\+ \? \( \) \{ |         |BRE 獨有的“\”跳脫元字符              |
    |\} \|          |         |                                     |
    |---------------+---------+-------------------------------------|
    |               |+ ? ( ) {|ERE 獨有的不需要“\”轉義的元字元      |
    |               |} |      |                                     |
    |---------------+---------+-------------------------------------|
    |c              |c        |匹配非元字符 “c”                     |
    |---------------+---------+-------------------------------------|
    |\c             |\c       |匹配一個字面意義上的字符 “c”，即使   |
    |               |         |“c” 本身是元字符                     |
    |---------------+---------+-------------------------------------|
    |.              |.        |匹配任意字符，包括換行符             |
    |---------------+---------+-------------------------------------|
    |^              |^        |字符串的開始位置                     |
    |---------------+---------+-------------------------------------|
    |$              |$        |字符串的結束位置                     |
    |---------------+---------+-------------------------------------|
    |\<             |\<       |單詞的開始位置                       |
    |---------------+---------+-------------------------------------|
    |\>             |\>       |單詞的結束位置                       |
    |---------------+---------+-------------------------------------|
    |[abc…]         |[abc…]   |匹配在 “abc...” 中的任意字符         |
    |---------------+---------+-------------------------------------|
    |[^abc…]        |[^abc…]  |匹配除了 “abc...” 中的任意字符       |
    |---------------+---------+-------------------------------------|
    |r*             |r*       |匹配零個或多個 “r”                   |
    |---------------+---------+-------------------------------------|
    |r\+            |r+       |匹配一個或多個 “r”                   |
    |---------------+---------+-------------------------------------|
    |r\?            |r?       |匹配零個或一個 “r”                   |
    |---------------+---------+-------------------------------------|
    |r1\|r2         |r1|r2    |匹配一個 “r1” 或 “r2”                |
    |---------------+---------+-------------------------------------|
    |\(r1\|r2\)     |(r1|r2)  |匹配一個 “r1” 或 “r2“ ，並作爲括號內 |
    |               |         |的正則表達式                         |
    +---------------------------------------------------------------+


    常見的 emacs 表示為基本的 BRE 但擴充為 "+" 與 "?" 做為 
    metacharacters 當成 ERE。因此，不需要以 "\" 在正規的表示 emacs 表
    示中做為逸出字元。

    grep(1) 可以使用正則表達式來進行文本搜索。

    嘗試下列例子

    $ egrep 'GNU.*LICENSE|Yoyodyne' /usr/share/common-licenses/GPL
    GNU GENERAL PUBLIC LICENSE
    GNU GENERAL PUBLIC LICENSE
    Yoyodyne, Inc., hereby disclaims all copyright interest in the program

    提示
   
    參見第 9.2.7 节 “有顏色輸出的命令”。

%

1.6.3. 替換表達式

    對於替換表達式，一些字符有特殊的含義。

    表 1.25. 替換表達式

    +-----------------------------------------------------------+
    |替換表達式|              替換表達式替換的文本              |
    |----------+------------------------------------------------|
    |&         |正則表達式所匹配的內容（在 emacs 中使用 \& ）   |
    |----------+------------------------------------------------|
    |\n        |前 n 個括號的正則表達式匹配的內容（ “n” 是數字）|
    +-----------------------------------------------------------+


    對 Perl 替換字串來說，應使用“$&”而非“&”，應使用“$n”而非“\n”。

    嘗試下列例子

    $ echo zzz1abc2efg3hij4 | \
    sed -e 's/\(1[a-z]*\)[0-9]*\(.*\)$/=&=/'
    zzz=1abc2efg3hij4=
    $ echo zzz1abc2efg3hij4 | \
    sed -e 's/\(1[a-z]*\)[0-9]*\(.*\)$/\2===\1/'
    zzzefg3hij4===1abc
    $ echo zzz1abc2efg3hij4 | \
    perl -pe 's/(1[a-z]*)[0-9]*(.*)$/$2===$1/'
    zzzefg3hij4===1abc
    $ echo zzz1abc2efg3hij4 | \
    perl -pe 's/(1[a-z]*)[0-9]*(.*)$/=$&=/'
    zzz=1abc2efg3hij4=

    請特別注意這些括號正則表達式的格式，以及這些被匹配的文本如何被替
    換到不同的文本處理工具中的。

    這些正則表示式在一些編輯器中也可以用來移動游標和替換文字。

    在 shell 命令列行末的反斜槓 “\” 會跳脫一個換行符（作為空白符），
    並將游標移動到下一行的行首。

    請閱讀所有相關手冊來學習這些命令。

%

1.6.4. 正則表示式的全域性替換

    ed(1) 命令可以在 “file” 中將所有的 “FROM_REGEX” 替換成 “TO_TEXT”
    。

    $ ed file <<EOF
    ,s/FROM_REGEX/TO_TEXT/g
    w
    q
    EOF

    sed(1) 命令可以在 “file” 中將所有的 “FROM_REGEX” 替換成 “TO_TEXT”
    。

    $ sed -i -e 's/FROM_REGEX/TO_TEXT/g' file

    vim(1) 命令可以通過使用 ex(1) 命令在 “file” 中將所有的
    “FROM_REGEX” 替換成 “TO_TEXT” 。

    $ vim '+%s/FROM_REGEX/TO_TEXT/gc' '+w' '+q' file

    提示
   
    上面的 “c” 標誌可以確保在每次替換時都進行互動式的確認。

    多個檔案（ “file1”，“file2” 和 “file3” ）可以使用 vim(1) 或 perl
    (1) 通過正則表示式進行類似的處理。

    $ vim '+argdo %s/FROM_REGEX/TO_TEXT/ge|update' '+q' file1 file2 file3

    提示
   
    上面的 “e” 標誌是為了防止 “No match” 錯誤中斷替換。

    $ perl -i -p -e 's/FROM_REGEX/TO_TEXT/g;' file1 file2 file3

    在 perl(1)例子中 , "-i" 是在每一個目標檔案的原處編輯，"-p" 是表示
    迴圈所有給定的檔案。

    提示
   
    使用引數 “-i.bak” 代替 “-i” ，可以在檔名後新增 “.bak” 再儲存。對
    於複雜的替換，這使得從錯誤中恢復變得容易。

    注意
   
    ed(1) 和 vim(1) 使用 BRE ； perl(1) 使用 ERE 。

%

1.6.5. 從文字檔案的表格中提取資料

    下面有一個文字檔案 “DPL” ，裡面含有 2004 年以前 Debian 專案的領導
    者名字和起始日期，並以空格分隔。

    Ian     Murdock   August  1993
    Bruce   Perens    April   1996
    Ian     Jackson   January 1998
    Wichert Akkerman  January 1999
    Ben     Collins   April   2001
    Bdale   Garbee    April   2002
    Martin  Michlmayr March   2003

    提示
   
    參見 “Debian 簡史” 獲取最新的 Debian 領導階層歷史。

    Awk 經常被用來從這種型別的檔案中提取資料。

    嘗試下列例子

    $ awk '{ print $3 }' <DPL                   # month started
    August
    April
    January
    January
    April
    April
    March
    $ awk '($1=="Ian") { print }' <DPL          # DPL called Ian
    Ian     Murdock   August  1993
    Ian     Jackson   January 1998
    $ awk '($2=="Perens") { print $3,$4 }' <DPL # When Perens started
    April 1996

    Shell （例如 Bash ）也可以用來分析這種檔案。

    嘗試下列例子

    $ while read first last month year; do
        echo $month
      done <DPL
    ... 第一個 AWK 例子的一些輸出

    內建命令 read 使用 “$IFS” （內部域分隔符）中的字元來將行分隔成多
    個單詞。

    如果你將 “$IFS” 改變為 “:” ，你可以很好地使用 shell 來分析 “/etc/
    passwd”。

    $ oldIFS="$IFS"   # save old value
    $ IFS=':'
    $ while read user password uid gid rest_of_line; do
        if [ "$user" = "bozo" ]; then
          echo "$user's ID is $uid"
        fi
      done < /etc/passwd
    bozo's ID is 1000
    $ IFS="$oldIFS"   # restore old value

    （如果要用 Awk 做到相同的事，使用 “FS=':'” 來設定域分隔符。）

    IFS 也被 shell 用來分割引數擴充套件、命令替換和算術擴充套件的結果
    。這不會出現在雙引號或單引號中。 IFS 的預設值為 <空格>、<tab> 和
    <換行符>。

    請謹慎使用 shell 的 IFS 技巧。當 shell 將指令碼的一部分解釋為對它
    的輸入時，會發生一些奇怪的事。

    $ IFS=":,"                        # use ":" and "," as IFS
    $ echo IFS=$IFS,   IFS="$IFS"     # echo is a Bash builtin
    IFS=  , IFS=:,
    $ date -R                         # just a command output
    Sat, 23 Aug 2003 08:30:15 +0200
    $ echo $(date -R)                 # sub shell --> input to main shell
    Sat  23 Aug 2003 08 30 36 +0200
    $ unset IFS                       # reset IFS to the default
    $ echo $(date -R)
    Sat, 23 Aug 2003 08:30:50 +0200

%

1.6.6. 用於管道命令的小片段指令碼

    下面的指令碼作為管道的一部分，可以做一些細緻的事情。

    表 1.26. 管道命令的小片段指令碼列表

    +---------------------------------------------------------------+
    |指令碼片段（在一行內|                 命令效果                 |
    |       輸入）       |                                          |
    |--------------------+------------------------------------------|
    |find /usr -print    |找出"/usr"下的所有檔案                    |
    |--------------------+------------------------------------------|
    |seq 1 100           |顯示 1 到 100                             |
    |--------------------+------------------------------------------|
    || xargs -n 1        |把從管道過來的每一項作為引數，重複執行命令|
    |<command>           |                                          |
    |--------------------+------------------------------------------|
    || xargs -n 1 echo   |把從管道過來的，用空格隔開的項，分隔成多行|
    |--------------------+------------------------------------------|
    || xargs echo        |把從管道過來的所有行合併為一行            |
    |--------------------+------------------------------------------|
    || grep -e           |從管道過來，包含有 <regex_pattern>的行，提|
    |<regex_pattern>     |取出來                                    |
    |--------------------+------------------------------------------|
    || grep -v -e        |把從管道過來，不包含有 <regex_pattern>的行|
    |<regex_pattern>     |，提取出來                                |
    |--------------------+------------------------------------------|
    || cut -d: -f3 -     |把從管道過來，用 ":"分隔的第三列提取出來  |
    |                    |(passwd 檔案等。)                         |
    |--------------------+------------------------------------------|
    || awk '{ print $3 }'|把用空格隔開的第三列提取出來              |
    |--------------------+------------------------------------------|
    || awk -F'\t' '{     |把用 tab 鍵隔開的第三列提取出來           |
    |print $3 }'         |                                          |
    |--------------------+------------------------------------------|
    || col -bx           |刪除退格鍵，擴充套件 tab 鍵為空格鍵       |
    |--------------------+------------------------------------------|
    || expand -          |擴充套件 tab 鍵到空格鍵                   |
    |--------------------+------------------------------------------|
    || sort| uniq        |排序並刪除重複行                          |
    |--------------------+------------------------------------------|
    || tr 'A-Z' 'a-z'    |將大小字母轉換為小寫字母                  |
    |--------------------+------------------------------------------|
    || tr -d '\n'        |將多行連線為一行                          |
    |--------------------+------------------------------------------|
    || tr -d '\r'        |刪除換行回車符                            |
    |--------------------+------------------------------------------|
    || sed 's/^/# /'     |在每行行首增加一個"#"符                   |
    |--------------------+------------------------------------------|
    || sed 's/\.ext//g'  |刪除 ".ext"                               |
    |--------------------+------------------------------------------|
    || sed -n -e 2p      |顯示第二行                                |
    |--------------------+------------------------------------------|
    || head -n 2 -       |顯示最前面兩行                            |
    |--------------------+------------------------------------------|
    || tail -n 2 -       |顯示最後兩行                              |
    +---------------------------------------------------------------+


    使用 find(1) 和 xargs(1)，單行 shell 指令碼能夠在多個檔案上迴圈使
    用，可以執行相當複雜的任務。參見第 10.1.5 节 “查詢檔案的語法” 和
    第 9.3.9 节 “使用檔案迴圈來重複一個命令”.

    當使用 shell 互動模式變得太麻煩的時候，請考慮寫一個 shell 指令碼
    (參見第 12.1 节 “Shell 腳本”).

第 2 章 Debian 軟體包管理

    注意
   
    這一章假定最新的穩定版的代號為：bullseye 。

    Debian 是一個志願者組織，它建立一致的自由軟體的預編譯二進位制包並
    從檔案庫中分發它們。

    許多遠端映象站提供了 HTTP 和 FTP 的方式來訪問 Debian 檔案庫。也可
    以使用 CD-ROM/DVD 。

    Debian 軟體包管理系統，當使用適當時，可以讓使用者從檔案庫安裝統一
    設定的二進位制軟體包到系統中。現在，有 62716 個可用於 amd64 架構
    的軟體包。

    Debian 軟體包管理系統有豐富的歷史，有許多可供選擇的前端使用者程式
    和後端訪問方式。現在，我們推薦下列的這些。

      * apt(8) 用於所有的互動式命令列操作，包含軟體包的安裝、移除和升
        級。自 Debian Jessie（Debian 8）起可用。

      * apt-get(8) 用於從指令碼中呼叫 Debian 軟體包管理系統。它在 apt
        不可用時也可作為一個備選選項（常見於較舊的 Debian 系統）。

      * aptitude(8) 使用一個互動式的文字介面來管理已安裝的軟體包和搜
        尋可用的軟體包。

    表 2.1. Debian 軟體包管理工具列表

    +---------------------------------------------------------------+
    |      軟體包       |流行度|大小|             說明              |
    |-------------------+------+----+-------------------------------|
    |                   |      |    |高階軟體包工具(APT), dpkg 的前 |
    |                   |V:868,|    |端，提供了 “http” 、“ftp” 和   |
    |apt                |I:999 |4299|“file” 的檔案庫訪問方式（包含  |
    |                   |      |    |apt、apt-get 和 apt-cache 命令 |
    |                   |      |    |）                             |
    |-------------------+------+----+-------------------------------|
    |aptitude           |V:80, |4249|aptitude(8) ，基於終端的互動式 |
    |                   |I:431 |    |軟體包管理工具                 |
    |-------------------+------+----+-------------------------------|
    |tasksel            |V:36, |393 |Debian 系統上對安裝進行選擇的工|
    |                   |I:975 |    |具（APT 的前端）               |
    |-------------------+------+----+-------------------------------|
    |unattended-upgrades|V:324,|325 |用於 APT 的增強軟體包，會自動安|
    |                   |I:447 |    |裝安全更新                     |
    |-------------------+------+----+-------------------------------|
    |                   |V:3,  |    |基於終端的軟體包管理工具（之前 |
    |dselect            |I:32  |2591|的標準，APT 的前端和其它老的訪 |
    |                   |      |    |問方式）                       |
    |-------------------+------+----+-------------------------------|
    |dpkg               |V:925,|6856|用於 Debian 的軟體包管理系統   |
    |                   |I:999 |    |                               |
    |-------------------+------+----+-------------------------------|
    |synaptic           |V:47, |7873|圖形化的軟體包管理工具（GNOME  |
    |                   |I:320 |    |的 APT 前端）                  |
    |-------------------+------+----+-------------------------------|
    |                   |      |    |APT 實用程式：                 |
    |apt-utils          |V:339,|1162|apt-extracttemplates(1) 、     |
    |                   |I:996 |    |apt-ftparchive(1) 和           |
    |                   |      |    |apt-sortpkgs(1)                |
    |-------------------+------+----+-------------------------------|
    |apt-listchanges    |V:369,|421 |軟體包歷史更改提醒工具         |
    |                   |I:851 |    |                               |
    |-------------------+------+----+-------------------------------|
    |apt-listbugs       |V:7,  |465 |在每次 APT 安裝前列出嚴重的 bug|
    |                   |I:12  |    |                               |
    |-------------------+------+----+-------------------------------|
    |apt-file           |V:18, |90  |APT 軟體包搜尋工具 —— 命令列介 |
    |                   |I:78  |    |面                             |
    |-------------------+------+----+-------------------------------|
    |apt-rdepends       |V:0,  |40  |遞迴列出軟體包依賴             |
    |                   |I:6   |    |                               |
    +---------------------------------------------------------------+


2.1. Debian 軟體包管理的前提

%

2.1.1. 軟體包配置

    下面是 Debian 系統軟體包配置的一些要點。

      * Debian 尊重系統管理員的手動配置。換句話說，軟體包配置系統不會
        為了方便而去更改那些配置。

      * 每個軟體包都帶有自己的配置指令碼，它使用標準使用者介面 
        debconf(7) 來幫助軟體包初始化安裝過程。

      * Debian 開發者通過軟體包配置指令碼，盡力使你能有一個完美的升級
        體驗。

      * 系統管理員可以使用軟體包工具的全部功能。但在預設的安裝中會禁
        用那些具有安全風險的。

      * 如果你手動激活了一些具有安全隱患的服務，你有責任遏制風險。

      * 高深的配置可以由系統管理員手動啟用。這可能會對用於系統配置的
        通用流行幫助程式造成干擾。

%

2.1.2. 基本的注意事項

    警告

    不要從任何的混合套件中安裝軟體包。它可能會打破軟體包的一致性，這
    需要你要深厚的系統管理知識，例如 ABI 編譯器、庫版本和直譯器特性等
    等。

    Debian 系統管理員中的新手應該保持在只進行安全更新的 stable 版本。
    我的意思是，最好避免下列的一些行為作為一項預防措施，直到你十分了
    解 Debian 系統。下面有一些提醒。

      * 在 “/etc/apt/sources.list” 中不要包含 testing 或 unstable 。

      * 在 “/etc/apt/sources.list” 裡不要在標準的 Debian 中混合使用其
        它非 Debian 的檔案庫，例如 Ubuntu 。

      * 不要建立 “/etc/apt/preferences” 。

      * 不瞭解會造成的全部影響，就不要通過配置檔案改變軟體包管理工具
        的預設行為。
   
      * 不要使用 “dpkg -i <random_package>” 安裝任何軟體包。

      * 絕不使用 “dpkg --force-all -i <random_package>” 安裝任何軟體
        包。

      * 不要刪除或修改 “/var/lib/dpkg/” 中的檔案。

      * 不要讓從原始碼直接安裝的程式覆蓋系統檔案。

          + 如果需要的話，將它們安裝到 “/usr/local” 或 “/opt” 中。

    上述對 Debian 軟體包管理系統做的行為所導致的不相容影響可能會使你
    的系統無法使用。

    負責有關鍵任務的伺服器的嚴謹的 Debian 系統系統管理員，應該使用額
    外的預防措施。

      * 沒有在安全的條件下使用你特定的配置進行徹底地測試，就不要從
        Debian 安裝任何軟體包（包含安全更新）。
   
          + 你作為系統管理員要對你的系統負責到底。

          + Debian 系統長久的穩定史並無法保證什麼。

%

2.1.3. 持續升級的生活

    儘管我在上面進行了警告，我知道許多閱讀這份文件的人還是想要使用
    Debian 的 testing 或 unstable 套件來作為他們自行管理的桌面環境的
    主系統。這是因為這些套件執行得很好，更新頻繁，並提供了最新的特性
    。

    小心
   
    對於你的生產伺服器，建議使用帶有安全更行的 stable 套件。對於你只
    進行有限管理的桌面 PC 也是同樣如此。

    你只需要在 “/etc/apt/sources.list” 中簡單地將發行版字串設定為套件
    名：“testing” 或 “unstable”；或者代號：“bookworm” 或 “sid” 。這會
    使你享受持續升級的生活。

    使用 testing 或 unstable 是很有樂趣的，但會帶來一些風險。儘管
    Debian 系統的 unstable 套件在大多數時候看起來都非常穩定，但在
    Debian 系統的 testing 和 unstable 套件中存在一些軟體包問題，並且
    它們中的一部分是不容易解決的。這對你來說可能會很痛苦。有時候，你
    可能會有一個損壞的軟體包或缺少某些功能幾個星期。

    這裡有一些方法，可以使你簡單快速地從 Debian 軟體包的 bug 中恢復。

      * 通過將 Debian 系統的 stable 套件安裝到另一個分割槽，可以使系
        統能夠進行雙啟動

      * 製作安裝 CD 便於用於救援啟動

      * 考慮安裝 apt-listbugs ，這可以在升級之前檢查 Debian Bug 跟蹤
        系統（BTS）的資訊

      * 對軟體包系統的基礎設施有足夠的瞭解來解決問題

      * 建立一個 chroot 或類似的環境來提前執行最新的系統（參見第
         9.10 节 “虛擬化系統”）

    （如果你無法做到這些預防措施中的任何一個，那你可能還沒做好使用
    testing 和unstable 套件的準備。）

    菩薩使用下面的內容拯救一個人，使他從掙扎於持續升級地獄的因果報應
    中脫困，並讓他達到 Debian 的極樂世界。

%

2.1.4. Debian 檔案庫基礎

    讓我們從系統使用者的角度來看看 Debian 檔案庫。

    提示
   
    Debian 檔案庫官方政策的定義參見 Debian 政策文件，第2章 —— Debian
    檔案庫。

    對於典型的 HTTP 訪問，檔案庫在 “/etc/apt/sources.list” 檔案中像下
    面那樣指定，例如，現在 stable = bullseye 系統。

    deb http://deb.debian.org/debian/ bullseye main contrib non-free
    deb-src http://deb.debian.org/debian/ bullseye main contrib non-free
   
    deb http://security.debian.org/ bullseye/updates main contrib
    deb-src http://security.debian.org/ bullseye/updates main contrib

    這裡，我傾向於使用代號 “bullseye” 來代替套件名 “stable” ，以避免
    下一個 stable 版本釋出時出現意外。

    “/etc/apt/sources.list” 的含義在 sources.list(5) 中進行了描述，下
    面是一些要點。

      * “deb” 的那行定義了二進位制軟體包。

      * “deb-src” 的那行定義了原始碼軟體包。

      * 第一個引數是 Debian 檔案庫的根 URL 。

      * 第二個引數是發行版名稱：可以使用套件名或代號。

      * 第三個和之後的引數是 Debian 檔案庫的有效檔案庫範圍名稱。

    如果只是用 aptitude（它不訪問原始碼相關的元資料），“deb-src”那行
    可以安全地刪掉（或者在檔案開頭新增 “#” 來將它註釋掉）。這可以加速
    檔案庫元資料的更新。URL 可以是“http://” 、“ftp://” 、 “file://”
    ……

    提示

    如果在上述的例子中，使用了 “sid” 代替 “bullseye” ，那麼 “/etc/apt
    /sources.list” 中的 “deb: http://security.debian.org/ …” 這行就不
    需要了。因為沒有用於 “sid” （unstable）的安全更新的檔案庫。

    下面是配置檔案所使用的 Debian 檔案庫站點的 URL 和套件名或代號的列
    表。

    表 2.2. Debian 檔案庫站點列表

    +---------------------------------------------------------------+
    |    檔案庫 URL     |    套件名（代號）     |       目的        |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |stable (bullseye)  |
    |deb.debian.org/    |stable (bullseye)      |release 版本       |
    |debian/            |                       |                   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |testing (bookworm) |
    |deb.debian.org/    |testing (bookworm)     |release 版本       |
    |debian/            |                       |                   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |unstable (sid)     |
    |deb.debian.org/    |unstable (sid)         |release 版本       |
    |debian/            |                       |                   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |experimental       |
    |deb.debian.org/    |experimental           |pre-release 版本（ |
    |debian/            |                       |可選，只適用於開發 |
    |                   |                       |者）               |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |用於下一個穩定版本 |
    |deb.debian.org/    |stable-proposed-updates|的更新（可選）     |
    |debian/            |                       |                   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |用於 stable release|
    |security.debian.org|stable/updates         |版本的安全更新（重 |
    |/                  |                       |要）               |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |用於 testing       |
    |security.debian.org|testing/updates        |release 版本的安全 |
    |/                  |                       |更新（重要）       |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |用於 bullseye 的垃 |
    |deb.debian.org/    |bullseye-updates       |圾郵件過濾器、IM客 |
    |debian/            |                       |戶端等的相容更新   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |用於 bullseye 的較 |
    |deb.debian.org/    |bullseye-backports     |新的 backported 軟 |
    |debian/            |                       |體包（可選）       |
    +---------------------------------------------------------------+


    小心

    只有帶有安全更新的純淨的 stable release 版本可以提供最佳的穩定性
    。執行大多數 stable release 版本的軟體包之中混合一些來自 testing
    或 unstable release 版本的軟體包會比執行純淨的 unstable release
    版本冒更大的風險，這是因為庫版本的不匹配導致的。如果在 stable
    release 版本下你真的需要一些程式的最新版本，請使用來自
    bullseye-updates 和 http://backports.debian.org （參見第 2.7.4 节
    “更新和向後移植”）的軟體包。使用這些軟體包時必須額外小心。

    小心

    在 "deb" 行中，你只需列出 stable，testing 或者 unstable 套件中的
    一個即可，如果你在 "deb" 行中混合了 stable，testing 和 unstable
    套件，APT 程式的執行速度將會變慢並且只有最新的檔案庫是有用的。只
    有在 "/etc/apt/preferences" 檔案帶有明確目標的時候，混合的列表才
    是有意義的。（檢視第 2.7.3 节 “調整候選版本”）。

    提示

    對於使用 stable 和 testing 套件的 Debian 系統而言，在 “/etc/apt/
    sources.list” 中包含帶有 “http://security.debian.org/” 的一行是不
    錯的主意。它會啟用安全更新。

    注意

    Debian 安全團體將會修正 stable 檔案庫的安全缺陷。這些行為是十分嚴
    格可靠的。testing 檔案庫中的缺陷，不一定會被 Debian 測試安全團體
    修正。由於一些原因，這些行為相對 stable 檔案庫沒有那麼嚴格,您可能
    需要等待已修正的 unstable 軟體包移植到 testing。unstable 檔案庫的
    缺陷，交由各個維護者修改。經常維護的unstable 軟體包通常處於相當好
    的狀況，因為它利用了上流最新的安全修正。有關 Debian 怎樣處理安全
    缺陷，請參見 Debian安全常問問題。

    表 2.3. Debian 歸檔列表

    +---------------------------------------------------------------+
    |  區域  |軟體包數|               軟體包元件標準                |
    |        |   量   |                                             |
    |--------+--------+---------------------------------------------|
    |main    |61595   |遵從 Debian 自由軟體指導方針（DFSG），並且不 |
    |        |        |依賴於 non-free                              |
    |--------+--------+---------------------------------------------|
    |contrib |349     |遵從 Debian 自由軟體指導方針（DFSG），但依賴 |
    |        |        |於 non-free                                  |
    |--------+--------+---------------------------------------------|
    |non-free|772     |不遵從 Debian 自由軟體指導方針（DFSG）       |
    +---------------------------------------------------------------+


    上述軟體包的數量是 amd64 架構的。main 區域提供 Debian 系統（參見
    第 2.1.5 节 “Debian 是100% 的自由軟體”）。

    通過把你的瀏覽器指向檔案庫 URL，這些 URL 在 dists 或 pool 之後是
    各不相同的，Debian 檔案庫能夠被有規劃的組織。

    發行版可以用套件或代號來指定。發行版在許多文件中也被當做是套件的
    同義詞。套件和代號的關係總結如下。

    表 2.4. 套件和代號的關係

    +---------------------------------------------------------------+
    |     時間      | suite = stable |suite = testing |   suite =   |
    |               |                |                |  unstable   |
    |---------------+----------------+----------------+-------------|
    |在 bullseye 發 |codename =      |codename =      |codename =   |
    |佈後           |bullseye        |bookworm        |sid          |
    |---------------+----------------+----------------+-------------|
    |在 bookworm 發 |codename =      |codename =      |codename =   |
    |佈後           |bookworm        |trixie          |sid          |
    +---------------------------------------------------------------+


    代號的歷史參見 Debian FAQ: 6.2.1 Which other codenames have been
    used in the past?

    在較嚴格的 Debian 檔案術語，“部分 section”這一詞特指按應用領域來
    分類的軟體包類別。（但是，主要部分 ("main section") 這一詞有時會
    用來描述 Debian 檔案區中，名為”main 主要"的區域。）

    Debian 開發者（DD）每次上傳軟體包到 unstable 檔案庫（通過
    incoming 處理），都必須確保上傳的軟體包與最新的 unstable 檔案庫中
    的最新軟體包相容。

    如果 DD 故意打破重要的庫升級等的這種相容性，這通常會在 Debian 開
    發者郵件列表等進行公告。

    在 Debian 檔案庫維護指令碼將軟體包從 unstable 檔案庫移動到
    testing 檔案庫前，檔案庫維護指令碼不僅檢查時間（約10天）和軟體包
    的 RC bug 報告的狀態，還嘗試確保它們可以和最新的 testing 檔案庫中
    的軟體相容。這個過程使得testing 檔案庫非常正確可用。

    通過由釋出團隊領導的逐步凍結檔案庫的過程，並進行一些手動干預，使
    testing 檔案庫完全一致，無缺陷。然後，將舊的 testing 檔案庫的程式
    碼名稱分配給新的 stable 檔案庫，併為新的 testing 檔案庫建立新的程
    式碼名稱。新的 testing 檔案庫最初的內容和新發布的 stable 檔案庫的
    內容完全相同。

    unstable 和 testing 檔案庫都可能會遭受由以下幾個因素導致的臨時的
    小故障。

      * 損壞的軟體包被上傳到檔案庫（多見於 unstable ）

      * 延遲接受新的軟體包到檔案庫（多見於 unstable )
   
      * 檔案庫時間同步問題（ testing 和 unstable ）

      * 手動干預檔案庫，例如移除軟體包（多見於 testing ）等。

    因此，如果你決定使用這些檔案庫，你應該能夠修復或忍受這些型別的小
    故障。

    小心

    在新的 stable 版本釋出後的幾個月，大多數桌面使用者應該使用帶有安
    全更新的 stable 檔案庫，即使他們通常使用 unstable 或 testing 檔案
    庫。在這個過渡期中，unstable 和 testing 檔案庫不適合大多數人。你
    使用 unstable 檔案庫的系統是很難保持良好的工作狀態的，因為它會遭
    受核心軟體包的大量升級狂潮。 testing 檔案庫不大有用，因為它包含有
    和沒有安全支援的 stable 檔案庫相同的內容（Debian testing 安全公告
    2008-12）。一個月左右的時間後，如果你仔細點的話， unstable 檔案庫
    或許可以使用。

    提示
   
    跟蹤 testing 檔案庫時，由一個已移除的軟體包引起的問題通常可以安裝
    unstable 檔案庫中相同的軟體包（已修復 bug )來解決。

    檔案庫的定義參見 Debian 政策文件。

      * 部分

      * "優先順序"
   
      * "基本系統"

      * "極重要的軟體包"

%

2.1.5. Debian 是100% 的自由軟體

    Debian 是100%的自由軟體，因為：

      * Debian 預設只安裝自由軟體，這尊重了使用者的自由。

      * Debian 在 main 中只提供自由軟體。
   
      * Debian 建議只執行來自 main 的自由軟體。

      * 在 main 中的軟體包沒有依賴於在 non-free 或 contrib 中的軟體包
        。

    有人想知道下列的兩個事實是否互相矛盾。

      * “ Debian 將始終是 100% 的自由軟體”。（ Debian 社群契約中的第
        一條）

      * Debian 伺服器上有一些 non-free 和 contrib 軟體包。

    因為下列原因，這並不矛盾。

      * Debian 系統具有100%的自由，並且它的軟體包位於 Debian 伺服器的
        main 區域。
   
      * Debian 系統之外的軟體包位於 Debian 伺服器的 non-free 和
        contrib 區域。

    在 Debian 社群契約的第4條和第5條對這進行了明確的解釋：

      * 我們將優先考慮我們的使用者及自由軟體

          + 我們由我們的使用者及自由軟體社群的需要所導向。我們將優先
            考慮他們的利益。我們將在多種計算環境中支援我們的使用者的
            操作需要。我們不反對在 Debian 系統上使用非自由軟體，我們
            也不會嘗試向建立和使用這部分軟體的使用者索取費用。我們允
            許他人，在沒有我們的資金的參與下，製造包括 Debian 以及商
            業軟體的增值套件。為了達成這些目標，我們將提供整合的、高
            質量的、100%自由的軟體，而不附加任何可能阻止在這些方面使
            用的法律限制。
   
      * 哪些作品不符合我們的自由軟體規範

          + 我們明瞭，某些我們的使用者需要使用不符合 Debian 自由軟體
            指導方針的作品。我們為這些作品，在我們的檔案庫中留出了
            “contrib" 以及 “non-free" 目錄。在這些目錄下的軟體包，並
            不屬於 Debian 系統儘管它們已被配置成可以在 Debian 下使用
            。我們鼓勵光碟製造商閱讀這些目錄下的軟體的許可證，以判斷
            他們是否可以在光碟中發行這些軟體。所以，儘管非自由軟體並
            非 Debian 系統的一部分，我們仍支援它們的使用，並且我們為
            非自由軟體提供了公共資源 (諸如我們的缺陷跟蹤系統以及郵件
            列表)。

    使用者應該瞭解使用 non-free 和 contrib 中的軟體包所需要冒的風險：

      * 使用類似的軟體包會失去自由

      * 失去 Debian 對軟體包的支援（這些軟體包無法訪問原始碼，Debian
        不能進行完全的支援。）

      * 汙染你100%自由的 Debian 系統

    Debian 自由軟體指導方針為 Debian 設立了自由軟體標準。Debian 對軟
    體包中的軟體做了最廣泛的解釋，包含文件、韌體、圖示和圖形資料。這
    使得 Debian 的自由軟體標準非常嚴格。

    為了滿足 main 嚴格的自由軟體標準，Debian 曾經提供了去掉 Mozilla
    商標的軟體包（例如 Firefox 、Thunderbird 和 Seamonkey），它們移除
    了 logo 和一些圖形資料；並將它們分別用 Iceweasel 、Icedove 和
    Iceape 替代。在這些問題被解決後，這些軟體包隨著 Debian Stretch（
    Debian 9）的釋出恢復了其原本的名稱。

    典型的 non-free 和 contrib 軟體包包含了下列型別的自由分發的軟體包
    ：

      * 在GNU Free Documentation License下的文件包，包含不變的部分，
        比如GCC 和 Make的。（大多數都可以在non-free/doc找到 .)

      * 包含沒有原始碼的二進位制資料的韌體軟體包，例如在第 9.9.6 节 “
        硬體驅動和韌體” 中列出的 non-free 軟體包。（多見於 non-free/
        kernel 部分。）

      * 遊戲和字型軟體包，對商業使用和/或內容修改進行了限制。

    請注意，non-free 和 contrib 軟體包的數量少於 main 軟體包的2%。允
    許訪問 non-free 和 contrib 並不會模糊軟體包的來源。使用 aptitude
    (8) 的全屏互動式介面可以提供完全的可見性和完全的控制，可以讓你決
    定安裝來自某個部分的軟體包，來使你的系統保持自由。

%

2.1.6. 軟體包依賴關係

    Debian 系統通過其控制檔案欄位中的版本化二進位制依賴宣告機制來提供
    一致的二進位制軟體包集合。下面有一些它們的簡單定義。

      * “依賴”

          + 絕對的依賴，所有在這裡列出的軟體包都必須同時或提前安裝。

      * "預依賴"

          + 類似於 Depends，但列出的軟體包必須提前完成安裝。

      * "推薦"

          + 這裡表示一個強，但不是絕對的依賴關係。大多數使用者不會想
            要這個包，除非在這裡列出的所有包都已經安裝。

      * "建議"

          + 較弱的依賴。這個軟體包的大多數使用者可能會從安裝所列的軟
            體包中受益，但沒有它們也可以有適當的功能。

      * "增強"
   
          + 這裡表明一個像推薦的弱依賴關係，不裝也沒關係。

      * "破損"

          + 表明一個軟體包不相容一些版本規範。一般的解決方法就是升級
            列出的所有軟體包。

      * "衝突"

          + 這表明了絕對的不相容。為了安裝這個軟體包必須移除所有列出
            的軟體包。

      * "替代"

          + 這表明這個檔案安裝的檔案會替代所列的軟體包的檔案。

      * "提供"

          + 表明這個軟體包會提供所列的軟體包所有的檔案和功能。

    注意

    請注意，同時將 “Provides” 、“Conflicts” 和 “Replaces” 定義到一個
    虛擬的軟體包是一個明智的配置。這確保了在任何一個時間只能安裝一個
    提供該虛擬包的真正軟體包。

    包含原始碼依賴關係的官方定義位於 the Policy Manual: Chapter 7 -
    Declaring relationships between packages。

%

2.1.7. 包管理的事件流

    這是 APT 提供的軟體包管理的簡單事件流摘要。

      * 更新（“apt update”、“aptitude update” 或 “apt-get update”）：

         1. 從遠端檔案庫獲取檔案庫元資料

         2. 重建和更新 APT 使用的本地元資料

      * 升級（“apt upgrade” 和 “apt full-upgrade”，或 “aptitude
        safe-upgrade” 和 “aptitude full-upgrade”，或 “apt-get
        upgrade” 和 “apt-get dist-upgrade”）：

         1. 選擇候選版本，它所安裝的軟體包通常都是最新的可用版本（例
            外參見第 2.7.3 节 “調整候選版本” ）

         2. 解決軟體包依賴關係

         3. 如果候選版本與已安裝的版本不同，會從遠端檔案庫獲取所選擇
            的二進位制軟體包

         4. 解包所獲取的二進位制軟體包

         5. 執行 preinst 指令碼

         6. 安裝二進位制檔案

         7. 執行 postinst 指令碼

      * 安裝（“apt install ...”、“aptitude install ..." 或者 "apt-get
        install …” ）：

         1. 選擇命令列中列出的包

         2. 解決軟體包依賴關係

         3. 從遠端伺服器獲取已選二進位制包

         4. 解包所獲取的二進位制軟體包

         5. 執行 preinst 指令碼

         6. 安裝二進位制檔案

         7. 執行 postinst 指令碼

      * 移除（"apt remove …", “aptitude remove …” 或 “apt-get remove
        …”）：

         1. 選擇命令列中列出的包

         2. 解決軟體包依賴關係

         3. 執行 prerm 指令碼

         4. 移除已安裝的檔案，除了配置檔案

         5. 執行 postrm 指令碼

      * 清除（"apt purge",“aptitude purge …” 或 “apt-get purge …”）：

         1. 選擇命令列中列出的包

         2. 解決軟體包依賴關係

         3. 執行 prerm 指令碼

         4. 移除已安裝的檔案，包含配置檔案

         5. 執行 postrm 指令碼

    這裡，為了大局，我特意省略了技術細節。

%

2.1.8. 對包管理問題的第一個迴應

    你應該閱讀優良的官方文件。第一個閱讀的文件是 Debian 特定的 “/usr/
    share/doc/<package_name>/README.Debian”。同時也應該查詢 “/usr/
    share/doc/<package_name>/” 中的其它文件。如果你設定 shell 為第
     1.4.2 节 “定製bash”，輸入下列命令。

    $ cd <package_name>
    $ pager README.Debian
    $ mc

    你可能需要安裝以 “-doc” 字尾命名的對應文件軟體包來獲取詳細的資訊
    。

    如果你在使用一個特定的軟體包時出現了問題，一定要首先檢查 Debian
    bug 跟蹤系統（BTS）網站。

    表 2.5. 解決特定軟體包問題的主要網站

    +---------------------------------------------------------------+
    |          網站           |                命令                 |
    |-------------------------+-------------------------------------|
    |Debian bug tracking      |sensible-browser "http://            |
    |system (BTS) 主頁        |bugs.debian.org/"                    |
    |-------------------------+-------------------------------------|
    |已經知道軟體包名稱的 bug |sensible-browser "http://            |
    |報告                     |bugs.debian.org/<package_name>"      |
    |-------------------------+-------------------------------------|
    |知道 bug 編號的 bug 報告 |sensible-browser "http://            |
    |                         |bugs.debian.org/<bug_number>"        |
    +---------------------------------------------------------------+


    使用 Google 搜尋，在關鍵字中包含 “site:debian.org”，
    “site:wiki.debian.org”，“site:lists.debian.org” 等等。

    當你要傳送一份 bug 報告時，請使用 reportbug(1) 命令。

%

2.2. 基礎軟體包管理操作

    在 Debian 系統中有許多基於 APT 的軟體包管理工具可以在 Debian 系統
    上進行基於倉庫的軟體包管理操作。在這裡，我們將介紹兩種基本的軟體
    包管理工具：apt、apt-get / apt-cache 和 aptitude 。

    對於涉及軟體包安裝或更新軟體包元資料的軟體包管理操作，你必須有
    root 許可權。

%

2.2.1. apt vs. apt-get / apt-cache vs. aptitude

    儘管 aptitude 是作者主要使用的一個非常好的可互動工具，但你應該知
    道下列警示：

      * 不建議在新版本釋出後在 stable Debian 系統上使用 aptitude 命令
        來進行跨版本的系統升級。

          + 建議使用"apt full-upgrade"或“apt-get dist-upgrade” 來進行
            這個操作。參見 Bug #411280。

      * aptitude命令有時候會為了testing 或 unstable Debian 系統升級清
        除大量軟體包。

          + 這個情況嚇壞了許多的系統管理員。請不要驚慌。

          + 這似乎大多數是由元軟體包的依賴或推薦的軟體包版本偏差造成
            的，例如 gnome-core。

          + 要解決這個問題，可以在 aptitude 命令選單中選擇 “取消待執
            行的動作” ，退出 aptitude，並使用 “apt full-upgrade”。

    apt-get 和 apt-cache 是最基礎的基於 APT 的軟體包管理工具。

      * apt-get 和 apt-cache 只提供命令列使用者介面。

      * apt-get 是進行跨版本的主系統升級等操作的最合適工具。

      * apt-get 提供了一個強大的軟體包依賴解析器。

      * apt-get 對硬體資源的要求不高。它消耗更少的記憶體並且執行速度
        更快。

      * apt-cache 提供了一個標準的正則表示式來搜尋軟體包名稱和描述。

      * apt-get 和 apt-cache 可以使用 /etc/apt/preferences 來管理軟體
        包的多個版本，但這非常繁瑣。

    apt指令是一個高階的命令行介面用於套件管理。基本上，它是apt-get、
    apt-cache及其相似指令的封裝。本意為一個終端使用者介面，且預設開啟
    一些適合互動用途的選項。

      * apt 工具在使用者使用 apt install 安裝軟體包時提供了一個友好的
        進度條。

      * 在成功安裝下載的軟體包後，apt 將預設刪除快取的 .deb 軟體包。

    提示
   
    建議使用者使用新的 apt(8) 命令用於互動式的使用場景，而在 shell 指
    令碼中使用 apt-get(8) 和apt-cache(8) 命令。

    aptitude 命令是最通用的基於 APT 的軟體包管理工具。

      * aptitude 提供了一個全屏的互動式文字使用者介面。

      * aptitude 同樣也提供了一個命令使用者介面。

      * aptitude 是用於日常軟體包管理（例如檢查已安裝的軟體包和搜尋可
        用的軟體包）的最合適工具。
   
      * aptitude 對硬體資源的要求更高。它消耗更多的記憶體並且執行速度
        更慢。

      * aptitude 提供一個增強的正則表示式來搜尋所有的軟體包元資料。

      * aptitude 可以管理軟體包的多個版本，並且不使用 /etc/apt/
        preferences，這會十分直觀。

%

2.2.2. 命令列中的基礎軟體包管理操作

    下面是使用 apt(8), aptitude(8) 和 apt-get(8) / apt-cache(8) 的命
    令列基本軟體包管理操作。

    表 2.6. 使用 apt(8), aptitude(8) 和 apt-get(8) / apt-cache(8) 的
    命令列基本軟體包管理操作

    +---------------------------------------------------------------+
    |            |aptitude 語 | apt-get /  |                        |
    |  apt 語法  |     法     |apt-cache 語|          說明          |
    |            |            |     法     |                        |
    |------------+------------+------------+------------------------|
    |apt update  |aptitude    |apt-get     |更新軟體包檔案庫元資料  |
    |            |update      |update      |                        |
    |------------+------------+------------+------------------------|
    |apt install |aptitude    |apt-get     |安裝 “foo” 軟體包的候選 |
    |foo         |install foo |install foo |版本以及它的依賴        |
    |------------+------------+------------+------------------------|
    |            |aptitude    |apt-get     |安裝已安裝的軟體包的候選|
    |apt upgrade |safe-upgrade|upgrade     |版本並且不移除任何其它的|
    |            |            |            |軟體包                  |
    |------------+------------+------------+------------------------|
    |apt         |aptitude    |apt-get     |安裝已安裝的軟體包的候選|
    |full-upgrade|full-upgrade|dist-upgrade|版本，並且需要的話會移除|
    |            |            |            |其它的軟體包            |
    |------------+------------+------------+------------------------|
    |apt remove  |aptitude    |apt-get     |移除 “foo” 軟體包，但留 |
    |foo         |remove foo  |remove foo  |下配置檔案              |
    |------------+------------+------------+------------------------|
    |apt         |N/A         |apt-get     |移除不再需要的自動安裝的|
    |autoremove  |            |autoremove  |軟體包                  |
    |------------+------------+------------+------------------------|
    |apt purge   |aptitude    |apt-get     |清除 “foo” 軟體包的配置 |
    |foo         |purge foo   |purge foo   |檔案                    |
    |------------+------------+------------+------------------------|
    |apt clean   |aptitude    |apt-get     |完全清除本地倉庫的軟體包|
    |            |clean       |clean       |檢索檔案                |
    |------------+------------+------------+------------------------|
    |apt         |aptitude    |apt-get     |清除本地倉庫中過時軟體包|
    |autoclean   |autoclean   |autoclean   |的軟體包檢索檔案        |
    |------------+------------+------------+------------------------|
    |apt show foo|aptitude    |apt-cache   |顯示 “foo” 軟體包的詳細 |
    |            |show foo    |show foo    |資訊                    |
    |------------+------------+------------+------------------------|
    |apt search  |aptitude    |apt-cache   |搜尋匹配 <regex> 的軟體 |
    |<正則表示式>|search      |search      |包                      |
    |            |<regex>     |<regex>     |                        |
    |------------+------------+------------+------------------------|
    |N/A         |aptitude why|N/A         |解釋匹配 <regex> 的軟體 |
    |            |<regex>     |            |包必須被安裝的原因      |
    |------------+------------+------------+------------------------|
    |            |aptitude    |            |解釋匹配 <regex> 的軟體 |
    |N/A         |why-not     |N/A         |包不必安裝的原因        |
    |            |<regex>     |            |                        |
    |------------+------------+------------+------------------------|
    |            |aptitude    |apt-mark    |                        |
    |N/A         |search '~i! |showmanual  |列出手動安裝的軟體包    |
    |            |~M'         |            |                        |
    +---------------------------------------------------------------+


    注意

    雖然 aptitude 命令提供了豐富的功能，例如增強的軟體包解析器，但它
    的複雜程度導致了（或可能導致）一些退步，例如 Bug #411123、Bug #
    514930 及 Bug #570377。如有疑問，請使用 apt,apt-get 和 apt-cache
    命令來替代 aptitude 命令。

    注意

    因為在 lenny 版本之後的 Debian 系統中， apt、apt-get 和 aptitude
    會共享自動安裝的軟體包的狀態（參見第 2.5.5 节 “APT 的軟體包狀態”
    ），因此你可以混合使用這些工具而不會出現嚴重的麻煩（參見 Bug #
    594490）。

    “aptitude why <regex>” 可以透過 “aptitude -v why <regex>” 列出更
    多的資訊。類似的資訊可以透過"apt rdepends <package>" 或
    “apt-cache rdepends <package>” 獲取。

    當 aptitude 命令在命令列模式下啟動後遇到了一些問題（例如軟體包衝
    突），你可以在之後的提示中按下 “e” 鍵切換到全屏的互動模式。

    你可以在 “aptitude” 後面使用的命令選項。

    表 2.7. aptitude(8) 中重要的命令選項

    +-------------------------------------------+
    |命令選項|               說明               |
    |--------+----------------------------------|
    |-s      |模擬命令的結果                    |
    |--------+----------------------------------|
    |-d      |僅下載，不進行安裝/更新           |
    |--------+----------------------------------|
    |-D      |在自動安裝和刪除前，顯示簡要的說明|
    +-------------------------------------------+


    更多內容參見 aptitude(8) 和位於 “/usr/share/doc/aptitude/README”
    的 “aptitude 使用者手冊”。

    提示
   
    dselect 軟體包依舊可用，並且曾是之前釋出的版本中首選的全屏互動式
    軟體包管理工具。

%

2.2.3. aptitude 的互動式使用

    要使用互動式的軟體包管理，你可以像下面那樣以互動模式啟動 aptitude
    。

    $ sudo aptitude -u
    Password:

    這將更新檔案庫資訊的本地副本，並以選單的形式全屏顯示軟體包列表。
    aptitude 將它的配置放在 “~/.aptitude/config”。

    提示
   
    如果你想用 root 的配置而非使用者的，可以在上面的例子中使用 “sudo
    -H aptitude …” 代替 “sudo aptitude …” 。

    提示
   
    當 aptitude 以互動模式啟動時，會自動設定待執行的動作。如果您不喜
    歡，您可以通過選單：“動作” → “取消待執行的動作” 來取消它。

%

2.2.4. aptitude 的按鍵繫結

    在全屏模式下瀏覽軟體包狀態和設定動作的按鍵如下。

    表 2.8. aptitude 的按鍵繫結

    +---------------------------------------------------------------+
    |        快捷鍵        |               鍵綁定功能               |
    |----------------------+----------------------------------------|
    |F10 or Ctrl-t         |選單                                    |
    |----------------------+----------------------------------------|
    |?                     |顯示按鍵幫助（更加完整的清單）          |
    |----------------------+----------------------------------------|
    |F10 → 幫助 → 使用者手 |顯示使用者手冊                          |
    |冊                    |                                        |
    |----------------------+----------------------------------------|
    |u                     |更新軟體包檔案庫資訊                    |
    |----------------------+----------------------------------------|
    |+                     |標記該軟體包以便升級或安裝              |
    |----------------------+----------------------------------------|
    |-                     |標記該軟體包以便移除（保留配置檔案）    |
    |----------------------+----------------------------------------|
    |_                     |標記該軟體包以便清除（移除配置檔案）    |
    |----------------------+----------------------------------------|
    |=                     |將軟體包設為保持狀態                    |
    |----------------------+----------------------------------------|
    |U                     |標記所有可升級包（動作如同 full-upgrade |
    |                      |）                                      |
    |----------------------+----------------------------------------|
    |g                     |開始下載並安裝所選擇包                  |
    |----------------------+----------------------------------------|
    |q                     |退出該介面並儲存變更                    |
    |----------------------+----------------------------------------|
    |x                     |退出該介面並清除變更                    |
    |----------------------+----------------------------------------|
    |Enter                 |檢視軟體包的資訊                        |
    |----------------------+----------------------------------------|
    |C                     |檢視軟體包的變更記錄                    |
    |----------------------+----------------------------------------|
    |l                     |變更軟體包的顯示限制                    |
    |----------------------+----------------------------------------|
    |/                     |搜尋匹配的第一個軟體包                  |
    |----------------------+----------------------------------------|
    |\                     |重複上一個搜尋                          |
    +---------------------------------------------------------------+


    可以通過命令列指定檔名稱，也可以通過按 “l” 或 “/” 之後在選單提示
    下輸入下列所述的 aptitude 正則表示式。aptitude 正則表示式可以使用
    “~n” 開頭後接軟體包名稱的字串來精確匹配軟體包名稱。

    提示

    你需要在視覺化介面中按下 “U” 鍵讓所有的已安裝軟體包升級到可用版本
    。否則只有選中的軟體包和一些與之有依賴關係的軟體包才能被升級到可
    用版本。

%

2.2.5. aptitude 軟體包檢視

    aptitude(8) 全屏互動模式下，軟體包列表裡的軟體包會像下面的例子那
    樣顯示。

    idA   libsmbclient                             -2220kB 3.0.25a-1  3.0.25a-2

    該行的從左到右的含義如下。

      * “狀態”標籤（第一個字母）

      * “動作”標籤（第二個字母）

      * “自動”標籤（第三個字母）

      * 軟體包名稱

      * 該“動作”對磁碟空間的變化

      * 軟體包當前版本

      * 軟體包可用版本

    提示
   
    您可以在幫助選單中找到完整的標籤列表，按“?”即可在幫助選單底部顯示
    。

    可用版本的選擇是依據當前的本地首選項（參見 apt_preferences(5) 和
    第 2.7.3 节 “調整候選版本”）。

    軟體包檢視的幾種型別都可以在“ 檢視 ”選單下找到。

    表 2.9. aptitude 檢視

    +---------------------------------------------------------------+
    |      檢視       | 狀態 |               檢視描述               |
    |-----------------+------+--------------------------------------|
    |Package View     |良好  |參見表 2.10 “標準軟體包檢視的分類” (預|
    |                 |      |設)                                   |
    |-----------------+------+--------------------------------------|
    |Audit            |良好  |列出推薦安裝但還沒有安裝的軟體包      |
    |Recommendations  |      |                                      |
    |-----------------+------+--------------------------------------|
    |Flat Package List|良好  |不分類地列出軟體包 (用於正則表示式)   |
    |-----------------+------+--------------------------------------|
    |Debtags Browser  |非常有|列出由 debtags 進行分類的軟體包       |
    |                 |用    |                                      |
    |-----------------+------+--------------------------------------|
    |Categorical      |已棄用|列出按照類別分類的軟體包（用Debtags 瀏|
    |Browser          |      |覽器替代）                            |
    +---------------------------------------------------------------+


    注意
   
    請幫助我們改進用 debtags 標記的軟體包！

    標準“軟體包檢視”分類軟體包的方法與帶有一些額外功能的 dselect 有點
    像。

    表 2.10. 標準軟體包檢視的分類

    +---------------------------------------------------------------+
    |           分類            |             檢視描述              |
    |---------------------------+-----------------------------------|
    |Upgradable Packages        |按照 section → area → 軟體包的順序 |
    |                           |顯示列出軟體包                     |
    |---------------------------+-----------------------------------|
    |New Packages               |同上                               |
    |---------------------------+-----------------------------------|
    |Installed Packages         |同上                               |
    |---------------------------+-----------------------------------|
    |Not Installed Packages     |同上                               |
    |---------------------------+-----------------------------------|
    |Obsolete and Locally       |同上                               |
    |Created Packages           |                                   |
    |---------------------------+-----------------------------------|
    |Virtual Packages           |列出同樣功能的軟體包               |
    |---------------------------+-----------------------------------|
    |Tasks                      |列出一個特定任務所需的不同功能的軟 |
    |                           |體包                               |
    +---------------------------------------------------------------+


    提示
   
    軟體集檢視可以用來為你的任務選出最佳的軟體包。

%

2.2.6. aptitude 搜尋方式選項

    aptitude 提供了幾個可以使用正則表示式來搜尋軟體包的選項。

      * shell 命令列：

          + “aptitude search '<aptitude_regex>'” 列出安裝狀態、軟體包
            名稱和匹配軟體包的剪短描述

          + “aptitude show '<package_name>'” 列出軟體包的詳細描述

      * 全屏互動模式:
   
          + "l" 可以限制匹配軟體包的檢視

          + "/" 搜尋匹配的軟體包

          + "\" 向後搜尋匹配的軟體包

          + "n" 查詢下一個

          + "N" 查詢上一個

    提示
   
    字串 <package_name> 被看作軟體包名稱的精確字串匹配，除非它是以
    "~" 開頭的正則表示式。

%

2.2.7. aptitude 正則表示式

    aptitude 正則表示式是類 mutt 的拓展 ERE（參見第 1.6.2 节 “正則表
    達式”），aptitude 具體的特殊匹配規則擴充套件如下。

    表 2.11. aptitude 正則表示式

    +---------------------------------------------------------------+
    |擴充套件匹配|                    正則表示式                    |
    |  規則描述  |                                                  |
    |------------+--------------------------------------------------|
    |匹配軟體包名|~n<regex_name>                                    |
    |稱          |                                                  |
    |------------+--------------------------------------------------|
    |匹配描述    |~d<regex_description>                             |
    |------------+--------------------------------------------------|
    |匹配軟體集名|~t<regex_task>                                    |
    |稱          |                                                  |
    |------------+--------------------------------------------------|
    |匹配 debtag |~G<regex_debtag>                                  |
    |------------+--------------------------------------------------|
    |匹配維護者  |~m<regex_maintainer>                              |
    |------------+--------------------------------------------------|
    |匹配軟體包的|~s<regex_section>                                 |
    |section     |                                                  |
    |------------+--------------------------------------------------|
    |匹配軟體包版|~V<regex_version>                                 |
    |本          |                                                  |
    |------------+--------------------------------------------------|
    |匹配檔案庫  |~A{bullseye,bookworm,sid}                         |
    |------------+--------------------------------------------------|
    |匹配來源    |~O{debian,…}                                      |
    |------------+--------------------------------------------------|
    |匹配優先順序|~p{extra,important,optional,required,standard}    |
    |------------+--------------------------------------------------|
    |匹配必要的軟|~E                                                |
    |體包        |                                                  |
    |------------+--------------------------------------------------|
    |匹配虛擬軟體|~v                                                |
    |包          |                                                  |
    |------------+--------------------------------------------------|
    |匹配新的軟體|~N                                                |
    |包          |                                                  |
    |------------+--------------------------------------------------|
    |匹配待執行的|~a                                                |
    |動作        |{install,upgrade,downgrade,remove,purge,hold,keep}|
    |------------+--------------------------------------------------|
    |匹配已安裝軟|~i                                                |
    |體包        |                                                  |
    |------------+--------------------------------------------------|
    |匹配帶有 A  |                                                  |
    |標籤的已安裝|                                                  |
    |軟體包（自動|~M                                                |
    |安裝的軟體包|                                                  |
    |）          |                                                  |
    |------------+--------------------------------------------------|
    |匹配不帶有 A|                                                  |
    |標籤的已安裝|                                                  |
    |軟體包（管理|~i!~M                                             |
    |員選擇的軟體|                                                  |
    |包）        |                                                  |
    |------------+--------------------------------------------------|
    |匹配已安裝並|                                                  |
    |且是可升級的|~U                                                |
    |軟體包      |                                                  |
    |------------+--------------------------------------------------|
    |匹配已刪除但|                                                  |
    |未清除的軟體|~c                                                |
    |包          |                                                  |
    |------------+--------------------------------------------------|
    |匹配已移除，|                                                  |
    |已清除或可移|~g                                                |
    |除的軟體包  |                                                  |
    |------------+--------------------------------------------------|
    |匹配破壞依賴|~b                                                |
    |關係的軟體包|                                                  |
    |------------+--------------------------------------------------|
    |匹配破壞    |                                                  |
    |<type> 依賴 |~B<type>                                          |
    |關係的軟體包|                                                  |
    |------------+--------------------------------------------------|
    |匹配        |                                                  |
    |<pattern> 軟|                                                  |
    |體包的      |~D[<type>:]<pattern>                              |
    |<type> 依賴 |                                                  |
    |關係        |                                                  |
    |------------+--------------------------------------------------|
    |匹配        |                                                  |
    |<pattern> 軟|                                                  |
    |體包破壞的  |~DB[<type>:]<pattern>                             |
    |<type> 依賴 |                                                  |
    |關係        |                                                  |
    |------------+--------------------------------------------------|
    |匹配依賴於  |                                                  |
    |<pattern> 軟|                                                  |
    |體包的      |~R[<type>:]<pattern>                              |
    |<type> 依賴 |                                                  |
    |的軟體包    |                                                  |
    |------------+--------------------------------------------------|
    |匹配依賴於  |                                                  |
    |<pattern> 軟|                                                  |
    |體包破壞的  |~RB[<type>:]<pattern>                             |
    |<type> 依賴 |                                                  |
    |的軟體包    |                                                  |
    |------------+--------------------------------------------------|
    |匹配其它已安|                                                  |
    |裝軟體包所依|~R~i                                              |
    |賴的軟體包  |                                                  |
    |------------+--------------------------------------------------|
    |匹配沒有被其|                                                  |
    |它已安裝軟體|!~R~i                                             |
    |包所依賴的軟|                                                  |
    |體包        |                                                  |
    |------------+--------------------------------------------------|
    |匹配其它已安|                                                  |
    |裝軟體包所依|~R~i|~Rrecommends:~i                              |
    |賴或建議安裝|                                                  |
    |的軟體包    |                                                  |
    |------------+--------------------------------------------------|
    |匹配        |                                                  |
    |<pattern> 過|~S filter <pattern>                               |
    |濾版本之後的|                                                  |
    |軟體包      |                                                  |
    |------------+--------------------------------------------------|
    |匹配所有軟體|~T                                                |
    |包（真）    |                                                  |
    |------------+--------------------------------------------------|
    |不匹配軟體包|~F                                                |
    |（假）      |                                                  |
    +---------------------------------------------------------------+


      * 正則表示式使用的是 ERE，就跟 egrep(1)、awk(1) 和 perl(1) 這些
        典型的類 Unix 文字工具中所使用的 “^”、“.*”、“$” 等是相同的。

      * 依賴關係 <type> 是一種特定的軟體包相互關係（depends、
        predepends、recommends、suggests、conflicts、replaces、
        provides）。

      * 預設的 <type> 依賴關係是 “depends”。

    提示
   
    當 <regex_pattern> 為空字串時，請立即在命令後面新增 "~T"。

    下面是一些快捷方式。

      * "~P<term>" == "~Dprovides:<term>"

      * "~C<term>" == "~Dconflicts:<term>"

      * "…~W term" == "(…|term)"

    使用者熟悉 mutt 的快速選擇，因為 mutt 的靈感來源於表示式語法。參
    見 “使用者手冊” “/usr/share/doc/aptitude/README” 中的 “SEARCHING,
    LIMITING, AND EXPRESSIONS”。

    注意

    lenny 版本的 aptitude(8) 中，新的長格式語法，例如 “?broken”，在正
    則表示式中可以用來等效為它舊的短格式 “~b”。現在空格字元 “ ” 被認
    為是除了波浪字元 “~” 外的另一個正則表示式終止字元。新的長格式語法
    參見 “使用者手冊”。

%

2.2.8. aptitude 的依賴解決

    如果通過選單 “F10 → 選項 → 首選項 → 正在處理依賴關係” 進行相應的
    設定，則在 aptitude 中選擇一個軟體包時，不僅會將其 “Depends:” 列
    表中的軟體包選上，“Recommends:” 列表中的軟體包也會被選上。在
    aptitude 下，這些自動安裝的軟體包在不再需要時會自動移除。

    aptitude 命令中控制 “自動安裝” 行為的標籤也可以通過 apt 軟體包中
    的 apt-mark(8) 命令來設定。

%

2.2.9. 軟體包活動日誌

    你可以在日誌檔案裡查詢到軟體包活動歷史。

    表 2.12. 軟體包活動日誌檔案

    +---------------------------------------------+
    |        檔案         |         內容          |
    |---------------------+-----------------------|
    |/var/log/dpkg.log    |dpkg 級的軟體包活動日誌|
    |---------------------+-----------------------|
    |/var/log/apt/term.log|通用 APT 活動日誌      |
    |---------------------+-----------------------|
    |/var/log/aptitude    |aptitude 命令活動日誌  |
    +---------------------------------------------+


    事實上，很難從這些日誌上快速獲得有用的資訊。較簡便的方法參見第
     9.2.10 节 “記錄配置檔案的變更” 。

%

2.3. aptitude 操作範例

    下面是一些 aptitude(8) 的操作範例。

%

2.3.1. 通過正則表示式匹配軟體包名稱來列出軟體包

    下面的命令列出了通過正則表示式匹配軟體包名稱來列出軟體包。

    $ aptitude search '~n(pam|nss).*ldap'
    p libnss-ldap - 使用 LDAP 作為名稱服務的 NSS 模組
    p libpam-ldap - 允許 LDAP 介面的插入式驗證模組

    這種方式查詢精確的軟體包名稱很方便。

%

2.3.2. 使用正則表示式匹配瀏覽

    在"新扁平軟體包列表" 中使用 "l" 提示檢視，正則表示式 "~dipv6" 可
    以限制性地匹配軟體描述，並互動式地展示資訊。

%

2.3.3. 完整地清理已刪除軟體包

    您能清除所有已移除軟體包的剩餘配置檔案。

    檢查以下命令的結果。

    # aptitude search '~c'

    如果您確認所列出的軟體包應當被完整刪除，請執行以下命令。

    # aptitude purge '~c'

    您可能想要在互動模式中做類似的操作進行細粒度的控制。

    在 "新軟體包檢視" 使用 "l" 提示並輸入正則匹配式 "~c" ，這將僅匹配
    軟體包，比如， "移除但不清空配置" 。所有符合匹配的軟體包可以在頂
    層標題上使用 "[" 顯示。

    當您在頂層標題如 “未安裝的包” 中輸入 “_”，當前標題下的軟體包只有
    匹配正則式才會被清除。您還可以使用“=” 來互動式地排除軟體包以避免
    刪除它們。

    這種技術方便易用且適用於許多其他的命令鍵。

%

2.3.4. 調整自動/手動安裝狀態

    下面是調整軟體包的自動/手動安裝狀態的方法（在使用非 aptitude 軟體
    包管理器之後）。

     1. 用 root 以互動模式執行 aptitude。

     2. 用 "u" 命令更新可用的軟體包列表，"U" 命令標記所有可升級的軟體
        包以執行升級，"f" 命令清除新軟體包列表，"g" 命令執行所有可升
        級的軟體包以執行升級。

     3. 按下 “l”，並輸入 “~i(~R~i|~Rrecommends:~i)” 來限制軟體包的顯
        示，按下 “M” 將 “已安裝軟體包” 的狀態改為自動安裝。

     4. 按下 “l”，並輸入 “~prequired|~pimportant|~pstandard|~E” 來限
        制軟體包的顯示，按下 “m” 將 “已安裝軟體包” 的狀態改為手動安裝
        。

     5. 按下 “l”，並輸入 “~i!~M” 來限制軟體包的顯示，在 “已安裝軟體包
        ” 上按下 “[” 來陳列無用的軟體包，按下 “-” 將它們移除。
   
     6. 按下 “l”，並輸入 “~i” 來限制軟體包的顯示，之後在 “軟體集” 上
        按下 “m” 將那些軟體包標記為手動安裝。

     7. 退出 aptitude。

     8. 用 root 使用者執行 "apt-get -s autoremove|less" 命令，來檢視
        有那些軟體包是不再需要的。

     9. 在互動模式下重啟 aptitude 程式，用 “m” 命令標記所需要的軟體包
        。

    10. 用 root 使用者重新執行 "apt-get -s autoremove|less" 這個命令
        來複查移除的包中是不是隻含有自己所希望移除的軟體包。

    11. 用 root 使用者執行 "apt-get autoremove|less" 命令來自動移除不
        再需要的軟體包。

    在你所需要執行的 "Tasks" 上，執行 "m" 命令是一個可選的操作，目的
    就是為了防止大量軟體包被解除安裝的情況出現。

%

2.3.5. 全面的系統升級

    注意

    當你遷移到新的發行版的時候，雖然正如下面所描述的那樣，Debian 是可
    升級的，但是你還是應該考慮純淨的安裝新的系統。這給了你機會去移除
    廢棄的軟體包同時還可以接觸到最新軟體包的完美集合體。當然，在做遷
    移之前，你也應該對你的系統做完整的備份，並把它移到安全的地方去（
    檢視第 10.2 节 “備份和恢復”)。“我”也建議用不同的分割槽做另外一個
    啟動項，來實現平穩的升級。

    你可以透過改變 "/etc/apt/sources.list" 的內容使之指向新的發行版所
    在地址的方法來進行系統的全面升級，然後執行 "apt update; apt
    dist-upgrade" 命令。

    從 stable 升級到 testing 或者 unstable，你應該用 "bookworm" 或者
    "sid" 替換 "/etc/apt/sources.list" 檔案裡的 "bullseye"，參考第
     2.1.4 节 “Debian 檔案庫基礎”。

    事實上，由於一些軟體包版本變遷的問題，你可能會遇到一些困難，主要
    是由於軟體包的依賴問題。升級之後的差異越大，你越有可能遇到麻煩。
    在新版本發行後，系統從舊的 stable 過渡到新的 stable，你可以檢視
    Release Notes 然後按照裡面的步驟去做，來儘可能的減少麻煩。

    在它正式釋出之前，你決定要從先前的 stable 遷移到將要釋出的
    testing，這裡沒有 Release Notes 可以幫到你。在前一個 stable 釋出
    以後， stable 發行版跟將要釋出的 testing 發行版之間的差異可能變得
    相當大同時也使得升級系統變得更加的複雜。

    在全面升級系統的時候，你應該謹慎的操作，同時你也應該從郵件列表中
    獲取最新的資料然後根據你的常識作出正確的判斷。

     1. 檢視先前的“發行說明”。

     2. 備份整個系統(尤其是資料和配置資訊）。

     3. 當 bootloader 壞了的時候，手邊應該有可以引導電腦啟動的儲存介
        質。

     4. 事先通知系統上的使用者。

     5. 用 script(1) 記錄升級的過程。

     6. 用 “unmarkauto” 命令來保留你想要的軟體包，例如 "aptitude
        unmarkauto vim" 這個命令是用來防止移除vim這個軟體的。

     7. 為了減少軟體包之間可能會發生的衝突，應該儘量減少要安裝的軟體
        包的數目，例如，移除桌面環境這個軟體包。

     8. 移除 "/etc/apt/preferences" 檔案（禁用apt-pinning）。

     9. 試著一步步的升級： oldstable → stable → testing → unstable.

    10. 升級 "/etc/apt/sources.list" 檔案，使其指向新的檔案庫然後執行
        "aptitude update" 命令。

    11. 可選的安裝選項，首先是新的 core packages，例如 “aptitude
        install perl"。

    12. 執行 "apt-get -s dist-upgrade" 命令來評估升級造成的影響。

    13. 最後執行 "apt-get dist-upgrade" 命令。

    小心
   
    在 stable 版本升級的時候，跳過主要的 Debian 發行版是不明智的。

    小心
   
    在先前的“發行手冊”裡， GCC, Linux Kernel, initrd-tools, Glibc,
    Perl, APT tool chain 等等，有一些關於系統全面升級的重要注意事項。

    關於 unstable 版本的日常升級，檢視第 2.4.3 节 “預防軟體包故障”。

2.4. 高階軟體包管理操作

%

2.4.1. 命令列中的高階軟體包管理操作

    下面列出了一些其它的軟體包管理操作，這些操作對於 aptitude 過於高
    階或缺失所需的功能。

    表 2.13. 高階軟體包管理操作

    +---------------------------------------------------------------+
    |           命令           |                操作                |
    |--------------------------+------------------------------------|
    |COLUMNS=120 dpkg -l       |列出已安裝軟體包的列表用於錯誤報告  |
    |<package_name_pattern>    |                                    |
    |--------------------------+------------------------------------|
    |dpkg -L <package_name>    |顯示一個已安裝軟體包的內容          |
    |--------------------------+------------------------------------|
    |dpkg -L <package_name> |  |                                    |
    |egrep '/usr/share/man/    |列出一個已安裝軟體包的 man 手冊頁   |
    |man.*/.+'                 |                                    |
    |--------------------------+------------------------------------|
    |dpkg -S                   |列出匹配檔名的已安裝軟體包          |
    |<file_name_pattern>       |                                    |
    |--------------------------+------------------------------------|
    |apt-file search           |列出檔案庫中匹配檔名的軟體包        |
    |<file_name_pattern>       |                                    |
    |--------------------------+------------------------------------|
    |apt-file list             |列出檔案庫中匹配的軟體包的內容      |
    |<package_name_pattern>    |                                    |
    |--------------------------+------------------------------------|
    |dpkg-reconfigure          |重新配置軟體包                      |
    |<package_name>            |                                    |
    |--------------------------+------------------------------------|
    |dpkg-reconfigure -p=low   |通過最詳細的方式來重新配置軟體包    |
    |<package_name>            |                                    |
    |--------------------------+------------------------------------|
    |configure-debian          |以全屏選單的形式重新配置軟體包      |
    |--------------------------+------------------------------------|
    |dpkg --audit              |部分安裝軟體包的審計系統            |
    |--------------------------+------------------------------------|
    |dpkg --configure -a       |配置所有部分安裝的軟體包            |
    |--------------------------+------------------------------------|
    |apt-cache policy          |顯示一個二進位制軟體包的可用版本、優|
    |<binary_package_name>     |先順序和檔案庫資訊                  |
    |--------------------------+------------------------------------|
    |apt-cache madison         |顯示一個軟體包的可用版本和檔案庫資訊|
    |<package_name>            |                                    |
    |--------------------------+------------------------------------|
    |apt-cache showsrc         |顯示一個二進位制軟體包的原始碼軟體包|
    |<binary_package_name>     |資訊                                |
    |--------------------------+------------------------------------|
    |apt-get build-dep         |安裝構建軟體包所需要的軟體包        |
    |<package_name>            |                                    |
    |--------------------------+------------------------------------|
    |aptitude build-dep        |安裝構建軟體包所需要的軟體包        |
    |<package_name>            |                                    |
    |--------------------------+------------------------------------|
    |apt-get source            |（從標準檔案庫）下載原始碼          |
    |<package_name>            |                                    |
    |--------------------------+------------------------------------|
    |dget <URL for dsc file>   |（從其它檔案庫）下載原始碼軟體包    |
    |--------------------------+------------------------------------|
    |dpkg-source -x            |從原始碼軟體包集合（“*.orig.tar.gz” |
    |<package_name>_<version>- |和 “*.debian.tar.gz"/"*.diff.gz”）中|
    |<debian_version>.dsc      |構建程式碼樹                        |
    |--------------------------+------------------------------------|
    |debuild binary            |從本地的原始碼樹中構建軟體包        |
    |--------------------------+------------------------------------|
    |make-kpkg kernel_image    |從核心原始碼樹中構建一個核心軟體包  |
    |--------------------------+------------------------------------|
    |make-kpkg --initrd        |從啟用了 initramfs 的核心程式碼樹中 |
    |kernel_image              |構建一個核心軟體包                  |
    |--------------------------+------------------------------------|
    |dpkg -i <package_name>_   |                                    |
    |<version>-<debian_version>|安裝一個本地的軟體包到系統中        |
    |_<arch>.deb               |                                    |
    |--------------------------+------------------------------------|
    |apt install /path/to/     |安裝一個本地軟體包到系統中，同時，嘗|
    |<package_filename>.deb    |試自動地解析依賴性                  |
    |--------------------------+------------------------------------|
    |debi <package_name>_      |                                    |
    |<version>-<debian_version>|安裝本地軟體包到系統中              |
    |_<arch>.dsc               |                                    |
    |--------------------------+------------------------------------|
    |dpkg --get-selections '*' |儲存 dpkg 級別的軟體包選擇狀態資訊  |
    |>selection.txt            |                                    |
    |--------------------------+------------------------------------|
    |dpkg --set-selections     |使用 dpkg 設定軟體包選擇狀態        |
    |<selection.txt            |                                    |
    |--------------------------+------------------------------------|
    |echo <package_name> hold ||使用 dpkg 將一個軟體包的包選擇狀態設|
    |dpkg --set-selections     |定為 hold（相當於 "aptitude hold <  |
    |                          |包名> ")                            |
    +---------------------------------------------------------------+


    注意

    對於一個支援多架構的軟體包，你可能需要為一些命令指定架構名稱。例
    如，使用 “dpkg -L libglib2.0-0:amd64” 來列出 amd64 架構的
    libglib2.0-0 軟體包的內容。

    小心

    系統管理員應該小心使用低階的軟體包工具（例如 “dpkg -i …” 和 “debi
    …”），它們不會自動處理所需的軟體包依賴。 dpkg 的命令列選項
    “--force-all” 和類似的選項（參見 dpkg(1)）只適用於高手。沒有完全
    理解它們的效果卻使用它們會破壞你的整個系統。

    請注意以下幾點。

      * 所有的系統配置和安裝命令都需要以 root 執行。

      * 不同於使用正則表示式的 aptitude （參見第 1.6.2 节 “正則表達式
        ”），其它的軟體包管理命令使用類似於 shell glob 的萬用字元（參
        見第 1.5.6 节 “Shell 萬用字元”）。

      * apt-file(1) 由 apt-file 軟體包提供，並且需要先執行 “apt-file
        update”。

      * configure-debian(8) 由 configure-debian 軟體包提供，它執行 
        dpkg-reconfigure(8) 作為後端。

      * dpkg-reconfigure(8) 使用 debconf(1) 作為後端來執行軟體包指令
        碼。

      * "apt-get build-dep" 、"apt-get source" 和 "apt-cache showsrc"
        命令需要 "/etc/apt/sources.list" 中存在 "deb-src" 條目。

      * dget(1) 、debuild(1) 和 debi(1) 需要 devscripts 軟體包。

      * 參見第 2.7.13 节 “移植一個軟體包到 stable 系統” 裡使用
        "apt-get source" 的打包（重打包）過程。

      * make-kpkg 命令需要 kernel-package 軟體包（參見第 9.9 节 “核心
        ”）。

      * 通用打包參見第 12.11 节 “製作 Debian 包”.

%

2.4.2. 驗證安裝的軟體包檔案

    已經安裝 debsums 軟體包的，能使用 debsums(1) 命令通過 "/var/lib/
    dpkg/info/*.md5sums" 檔案中的 MD5sum 值，驗證已安裝的檔案。參見第
     10.3.5 节 “MD5 校驗和”來獲得 MD5sum 是怎樣工作的資訊。

    注意

    因為 MD5sum 資料庫可能被侵入者篡改，debsums(1) 作為安全工具使用有
    限。這種工具用於校驗管理者造成的本地修改或媒體錯誤造成的損壞是很
    不錯的。

%

2.4.3. 預防軟體包故障

    許多使用者更想使用 unstable，因為它有新的功能和軟體包。但這會使得
    系統更容易遇到嚴重的軟體包 bug 。

    安裝軟體包 apt-list bugs 可以避免您的系統遭遇嚴重 bugs，在通過
    APT 系統升級時，它會自動檢查 Debian BTS 裡的嚴重 bug。

    安裝 apt-listchanges 軟體包，在使用 APT 系統升級時它會在
    “NEWS.Debian” 中提供重要新聞。

%

2.4.4. 搜尋軟體包元資料

    儘管近來瀏覽 Debian 網站 https://packages.debian.org/ 是搜尋軟體
    包元資料更加簡單的方法，但我們依舊來看看更傳統的方法。

    grep-dctrl(1) 、grep-status(1) 和 grep-available(1) 命令被用來搜
    尋具有 Debian 軟體包控制檔案格式的任何檔案。

    “dpkg -S <file_name_pattern>” 被用來搜尋由 dpkg 安裝的軟體包中包
    含匹配檔案的。但它會忽略維護者的指令碼建立的檔案。

    如果你需要對 dpkg 元資料進行更復雜的搜尋，你需要在 “/var/lib/dpkg
    /info/” 目錄下執行 “grep -e regex_pattern *” 命令。這會使你在軟體
    包指令碼和安裝查詢文字中搜索提及的單詞。

    如果你想遞迴查詢軟體包依賴，你應該使用 apt-rdepends(8) 。

%

2.5. Debian 軟體包內部管理

    讓我們來學習 Debian 軟體包管理的內部工作原理。這應該能夠幫助你獨
    立解決一些軟體包問題。

%

2.5.1. 檔案庫元資料

    每個發行版的元資料檔案都儲存在 Debian 映象站的 “dist/<codename>”
    下面，例如 “http://deb.debian.org/debian/”。檔案庫的結構可以通過
    網路瀏覽器來瀏覽。其中有 6 種關鍵的元資料。

    表 2.14. Debian 檔案庫元資料的內容

    +---------------------------------------------------------------+
    |     檔案     |         位置         |          內容           |
    |--------------+----------------------+-------------------------|
    |Release       |發行版的頂層          |檔案庫描述和完整性資訊   |
    |--------------+----------------------+-------------------------|
    |Release.gpg   |發行版的頂層          |"Release" 檔案的簽名檔案 |
    |              |                      |，使用檔案庫金鑰簽名     |
    |--------------+----------------------+-------------------------|
    |Contents-     |發行版的頂層          |列出在相關架構中所有軟體 |
    |<architecture>|                      |包的全部檔案             |
    |--------------+----------------------+-------------------------|
    |              |每個發行版/區域/架構組|歸檔描述使用             |
    |Release       |合的頂部              |apt_preferences( 5 ) 的規|
    |              |                      |則                       |
    |--------------+----------------------+-------------------------|
    |Packages      |每個發行版/區域/二進位|連線 debian/control 獲得 |
    |              |制架構組合的頂部      |二進位制包               |
    |--------------+----------------------+-------------------------|
    |Sources       |每個發行版/區域/原始碼|連線 debian/control 獲取 |
    |              |組合的頂部            |原始碼包                 |
    +---------------------------------------------------------------+


    為了減少網路流量，在最近的檔案庫中，這些元資料儲存為壓縮了的差分
    檔案。

%

2.5.2. 頂層“Release”檔案及真實性

    提示
   
    頂層“Release”檔案用於簽署secure APT系統下的歸檔檔案。

    每個 Debian 檔案庫的網址都有一個這樣的 “Release” 檔案，例如
    “http://deb.debian.org/debian/dists/unstable/Release”，內容如下。

    Origin: Debian
    Label: Debian
    Suite: unstable
    Codename: sid
    Date: Sat, 14 May 2011 08:20:50 UTC
    Valid-Until: Sat, 21 May 2011 08:20:50 UTC
    Architectures: alpha amd64 armel hppa hurd-i386 i386 ia64 kfreebsd-amd64 kfreebsd-i386 mips mipsel powerpc s390 sparc
    Components: main contrib non-free
    Description: Debian x.y Unstable - Not Released
    MD5Sum:
     bdc8fa4b3f5e4a715dd0d56d176fc789 18876880 Contents-alpha.gz
     9469a03c94b85e010d116aeeab9614c0 19441880 Contents-amd64.gz
     3d68e206d7faa3aded660dc0996054fe 19203165 Contents-armel.gz
    ...

    注意

    在第 2.1.4 节 “Debian 檔案庫基礎” 裡，你能夠發現我使用"suite" 和
    "codename"的邏輯。“發行版”被用來同時談及"suite" 和 "codename".所
    有由檔案庫提供的歸檔 "area" 名，會被列在 "Components" 下.

    頂層檔案 "Release" 的完整性，是由叫 secure apt 的加密架構來驗證.

      * 加密簽名檔案 "Release.gpg" 是由頂層授權檔案 "Release" 和加密
        的 Debian 檔案庫公鑰建立。

      * 公開的 Debian 檔案庫公鑰能夠放入“/etc/apt/trusted.gpg”；

          + 這樣的操作可以由安裝最新的 base-files 軟體包的方式完成，
            或者

          + 手動使用 gpg 或者 apt-key 工具獲取釋出在
            ftp-master.debian.org 上最新的檔案庫公鑰。

      * secure APT 系統驗證下載的頂層檔案 "Release" 的完整性。加密驗
        證過程用到了"Release.gpg"檔案和在"/etc/apt/trusted.gpg"裡的
        Debian 檔案庫公鑰.

    所有 "Packages" 和 "Sources" 檔案的完整性是由在頂層 "Release" 檔
    案裡的 MD5sum 值來驗證。所有軟體包檔案的完整性由 "Packages" 和
    "Sources" 檔案裡的 MD5sum 值來驗證.參見 debsums(1) 和第 2.4.2 节
    “驗證安裝的軟體包檔案”.

    因加密簽名驗證比計算 MD5sum 值消耗更多的 CPU，使用 MD5sum 值來驗
    證每一個軟體包，使用加密簽名來驗證頂層的 "Release" 檔案，這種方式
    提供較好安全性的同時，也有比較好的效能 (參見第 10.3 节 “資料安全
    基礎”).

%

2.5.3. 檔案庫層的“Release”檔案

    提示
   
    檔案庫層的“Release”檔案將用作apt_preferences(5)的規則。

    歸檔層次的 "Release" 檔案，其全部歸檔位置在 "/etc/apt/
    sources.list"中的 "deb"行中指定，如以下的 "http://deb.debian.org/
    debian/dists/unstable/main/binary-amd64/Release" 或 "http://
    deb.debian.org/debian/dists/sid/main/binary-amd64/Release"。

    Archive: unstable
    Origin: Debian
    Label: Debian
    Component: main
    Architecture: amd64

    小心

    對於"Archive:" 章節，系列名稱("stable"，"testing"，"unstable", …)
    用於 Debian archive ，而代號("trusty", "xenial", "artful", …) 用
    於 Ubuntu archive。

    對於部分檔案庫,比如說 experimental 和 bullseye-backports, 它們包
    含的軟體包不會被自動安裝，這是因為有額外的行，例如在 "http://
    deb.debian.org/debian/dists/experimental/main/binary-amd64/
    Release" 裡面有如下額外的一行。

    Archive: experimental
    Origin: Debian
    Label: Debian
    NotAutomatic: yes
    Component: main
    Architecture: amd64

    請注意，普通的檔案庫沒有 "NotAutomatic: yes", 預設的 Pin-Priority
    值是 500, 而對於有 "NotAutomatic: yes"的特殊檔案庫, 預設的
    Pin-Priority 值是 1 (參見 apt_preferences(5) 和第 2.7.3 节 “調整
    候選版本”).

%

2.5.4. 獲取用於軟體包的元資料

    當使用 APT 工具時，如 aptitude, apt-get, synaptic, apt-file,
    auto-apt，我們需要更新包含 Debian 檔案庫資訊元資料的本地拷貝。這
    些本地拷貝的檔名稱，和在 "/etc/apt/sources.list" 檔案裡面的
    distribution, area, architecture 相應名稱一致。 (參見第 2.1.4 节
    “Debian 檔案庫基礎”).

      * "/var/lib/apt/lists/deb.debian.org_debian_dists_
        <distribution>_Release"

      * "/var/lib/apt/lists/deb.debian.org_debian_dists_
        <distribution>_Release.gpg"

      * "/var/lib/apt/lists/deb.debian.org_debian_dists_
        <distribution>_<area>_binary-<architecture>_Packages"

      * "/var/lib/apt/lists/deb.debian.org_debian_dists_
        <distribution>_<area>_source_Sources"

      * "/var/cache/apt/apt-file/deb.debian.org_debian_dists_
        <distribution>_Contents-<architecture>.gz" (apt-file)

    前 4 種類型的檔案是所有相關的 APT 命令共享的，並且可以通過
    “apt-get update” 或 “aptitude update” 在命令列中進行更新。如果在
    “/etc/apt/sources.list” 中有相應的 “deb” 行，則 “軟體包” 元資料會
    進行更新。如果在 “/etc/apt/sources.list” 中有相應的 “deb-src” 行
    ，則 “原始碼” 元資料會進行更新。

    "Packages" 和 "Sources" 的元資料檔案包含有“Filename:”欄位，指向二
    進位制和原始碼包檔案的位置。目前，這些軟體包都統一放在"pool/"目錄
    樹下，這樣可以改善跨版本釋出的傳輸。

    “軟體包”元資料的本地副本可以使用 aptitude 來進行互動式的搜尋。專
    門的搜尋命令 grep-dctrl(1) 可以搜尋“軟體包”和“原始碼”元資料的本地
    副本。

    "Contents-<architecture>"元資料的本地拷貝，能夠被"apt-file
    update"更新，它的位置和其它 4 個不同。參見 apt-file(1). (auto-apt
    的 "Contents-<architecture>.gz"檔案的本地拷貝預設也使用不同的位置
    。)

%

2.5.5. APT 的軟體包狀態

    除了遠端獲取元資料，lenny 之後的 APT 工具還會將它在本地產生的安裝
    狀態資訊儲存在 “/var/lib/apt/extended_states” 中，APT 會使用它們
    來追蹤自動安裝的所有軟體包。

%

2.5.6. aptitude 的軟體包狀態

    除了遠端獲取元資料，aptitude 命令還會將它在本地產生的安裝狀態資訊
    儲存在 “/var/lib/aptitude/pkgstates” 中，這些資訊只能被 aptitude
    使用。

%

2.5.7. 獲取的軟體包的本地副本

    所有通過 APT 機制遠端獲取的軟體包都被儲存在 “/var/cache/apt/
    archives” 中，直到它們被清除。

    aptitude 的這個快取檔案清理策略，能夠在"Options" → "Preferences"
    下設定，也可以通過它的選單，"Actions"下的"Clean package cache" 或
    "Clean obsolete files" 來執行強制清理。

%

2.5.8. Debian 軟體包檔名稱

    Debian 軟體包檔案有特定的名稱結構。

    表 2.15. Debian 軟體包的名稱結構

    +---------------------------------------------------------------+
    |        軟體包型別        |              名稱結構              |
    |--------------------------+------------------------------------|
    |二進位制軟體包（亦稱 deb）|<package-name>_<upstream-version>-  |
    |                          |<debian-version>_<architecture>.deb |
    |--------------------------+------------------------------------|
    |用於 debian-installer 的二|<package-name>_<upstream-version>-  |
    |進位制軟體包（亦稱 udeb） |<debian-version>_<architecture>.udeb|
    |--------------------------+------------------------------------|
    |原始碼軟體包（上游原始碼）|<package-name>_<upstream-version>-  |
    |                          |<debian-version>.orig.tar.gz        |
    |--------------------------+------------------------------------|
    |1.0 原始碼軟體包(Debian 改|<package-name>_<upstream-version>-  |
    |變)                       |<debian-version>.diff.gz            |
    |--------------------------+------------------------------------|
    |3.0 (quilt 補丁管理工具)  |<package-name>_<upstream-version>-  |
    |原始碼軟體包(Debian 改變) |<debian-version>.debian.tar.gz      |
    |--------------------------+------------------------------------|
    |原始碼軟體包（說明）      |<package-name>_<upstream-version>-  |
    |                          |<debian-version>.dsc                |
    +---------------------------------------------------------------+


    提示
   
    這裡僅敘述了基本的原始碼包格式。更多內容請參考 dpkg-source(1)。

    表 2.16. Debian 軟體包名稱中每一個元件可以使用的字元

    +----------------------------------------------------+
    |     名稱元件     |可用的字元（正則表示式）|存在狀態|
    |------------------+------------------------+--------|
    |<package-name>    |[a-z,A-Z,0-9,.,+,-]+    |必需    |
    |------------------+------------------------+--------|
    |<epoch>:          |[0-9]+:                 |可選    |
    |------------------+------------------------+--------|
    |<upstream-version>|[a-z,A-Z,0-9,.,+,-,:]+  |必需    |
    |------------------+------------------------+--------|
    |<debian.version>  |[a-z,A-Z,0-9,.,+,~]+    |可選    |
    +----------------------------------------------------+


    注意
   
    你可以用 dpkg(1)提供的命令檢查軟體包版本, 例如., "dpkg
    --compare-versions 7.0 gt 7.~pre1 ; echo $?" .

    注意

    debian-installer (d-i) 使用 udeb 作為它的二進位制軟體包的副檔名，
    而非普通的 deb。一個 udeb 軟體包是從 deb 軟體包中剝離了一些不必要
    的內容（例如文件），從而節省空間同時也放寬軟體包政策的要求。deb
    和 udeb 軟體包會共享相同的軟體包結構。“u” 表示微小。

%

2.5.9. dpkg 命令

    dpkg(1) 是 Debian 軟體包管理中最底層的工具。它非常強大，必須小心
    使用。

    當安裝名為 “<package_name>” 的軟體包時，dpkg 會按照下列的順序處理
    它。

     1. 解包 deb 檔案（等同於 “ar -x”）

     2. 使用 debconf(1) 執行 “<package_name>.preinst”
   
     3. 將軟體包安裝到系統中（等同於 “tar -x”）

     4. 使用 debconf(1) 執行 “<package_name>.postinst”

    debconf 系統提供帶有 I18N 和 L10N （第 8 章 I18N 和 L10N）支援的
    標準化使用者互動。

    表 2.17. dpkg 建立的重要檔案

    +---------------------------------------------------------------+
    |           檔案           |              內容說明              |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/info/       |列出配置檔案。（使用者可修改的）    |
    |<package_name>.conffiles  |                                    |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/info/       |列出軟體包安裝的所有檔案和目錄      |
    |<package_name>.list       |                                    |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/info/       |列出軟體包安裝的檔案的 MD5 雜湊值   |
    |<package_name>.md5sums    |                                    |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/info/       |軟體包安裝之前執行的軟體包指令碼    |
    |<package_name>.preinst    |                                    |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/info/       |軟體包安裝之後執行的軟體包指令碼    |
    |<package_name>.postinst   |                                    |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/info/       |軟體包移除之前執行的軟體包指令碼    |
    |<package_name>.prerm      |                                    |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/info/       |軟體包移除之後執行的軟體包指令碼    |
    |<package_name>.postrm     |                                    |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/info/       |用於 debconf 系統的軟體包指令碼     |
    |<package_name>.config     |                                    |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/alternatives|update-alternatives 命令使用的替代資|
    |/<package_name>           |訊                                  |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/available   |所有軟體包的可用性資訊              |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/diversions  |dpkg(1) 使用的檔案移動資訊，由      |
    |                          |dpkg-divert(8) 設定                 |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/statoverride|dpkg(1) 使用的檔案狀態改變資訊，由  |
    |                          |dpkg-statoverride(8) 設定           |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/status      |所有軟體包的狀態資訊                |
    |--------------------------+------------------------------------|
    |/var/lib/dpkg/status-old  |“var/lib/dpkg/status” 檔案的第一代備|
    |                          |份                                  |
    |--------------------------+------------------------------------|
    |/var/backups/dpkg.status* |第二代備份，以及“var/lib/dpkg/      |
    |                          |status”檔案更舊的備份               |
    +---------------------------------------------------------------+


    “status” 檔案也被例如 dpkg(1)、“dselect update” 和 “apt-get -u
    dselect-upgrade” 等工具使用。

    專門的搜尋命令 grep-dctrl(1) 可以搜尋 “status” 和 “available” 元
    資料的本地副本。

    提示
   
    在debian 安裝器環境下, udpkg 命令用於開啟udeb 軟體包，udpkg 命令
    是 dpkg 命令的一個精簡版本.

%

2.5.10. update-alternatives 命令

    Debian 系統使用 update-alternatives(1) 讓使用者可以不受干擾地安裝
    多種重疊的程式。例如，如果同時安裝了 vim 和 nvi 軟體包，你可以使
    vi 命令選擇執行 vim。

    $ ls -l $(type -p vi)
    lrwxrwxrwx 1 root root 20 2007-03-24 19:05 /usr/bin/vi -> /etc/alternatives/vi
    $ sudo update-alternatives --display vi
    ...
    $ sudo update-alternatives --config vi
      Selection    Command
     ----------------------------------------------
          1        /usr/bin/vim
    *+    2        /usr/bin/nvi

    Enter to keep the default[*], or type selection number: 1

    Debian 選擇系統在 "/etc/alternatives/" 目錄裡通過符號連結來維持它
    的選擇。選擇程序使用"/var/lib/dpkg/alternatives/"目錄裡面的相應檔
    案。

%

2.5.11. dpkg-statoverride 命令

    當安裝一個軟體包時，由 dpkg-statoverride(8) 命令提供的狀態修改，
    是告訴dpkg(1) 對檔案使用不同的屬主或許可權的一個方法。如果使用了
    "--update" 選項，並且檔案存在，則該檔案會被立即設定為新的屬主和模
    式。

    小心
   
    系統管理員使用 chmod 或 chown 命令直接修改某個軟體包檔案的屬主或
    許可權，將會在下次軟體包升級時，被重置。

    注意
   
    本人在此使用了檔案一詞，但事實上也可用於dpkg 所處理的任何檔案系統
    物件，包括目錄，裝置等。

%

2.5.12. dpkg-divert 命令

    dpkg-divert(8) 命令提供的檔案轉移，是迫使 dpkg(1) 將檔案不安裝到
    其預設位置，而是安裝到轉移的位置。dpkg-divert 是軟體包維護指令碼
    。不建議系統管理員使用這個命令。

%

2.6. 從損壞的系統中恢復

    當執行 unstable 系統，系統管理員會遇到從錯誤的軟體包管理進行恢復
    的情形。

    小心
   
    下面的一些方法具有很高的風險。在此先對你進行警告！

%

2.6.1. 不相容舊的使用者配置

    如果一個桌面 GUI 程式在重要的上游版本升級後變得不穩定，你應該懷疑
    這是舊的本地配置檔案（由它建立的）所導致的。如果它在新建的使用者
    賬號下執行穩定，那麼這個假設就得到了證實。（這是一個打包的 bug 並
    且打包者通常會避免它。）

    為了恢復穩定，你應該移除相應的本地配置檔案並重新啟動 GUI 程式。你
    可能需要閱讀舊的配置檔案內容以便之後恢復配置資訊。（別將它們刪得
    太快了。）

%

2.6.2. 具有相同檔案的不同軟體包

    文件級的軟體包管理系統，比如說 aptitude(8) 或 apt-get(1), 使用軟
    體包依賴，當出現相同檔案時，不會嘗試去安裝軟體包。(參見第 2.1.6 
    节 “軟體包依賴關係”).

    軟體包維護者的錯誤，或者系統管理員配置了不一致的檔案庫混合源，(參
    見第 2.7.2 节 “混合源檔案庫中的軟體包”)，都會出現不正確的軟體包依
    賴情況。如果在出現相同檔案的情況下，你通過 aptitude(8) 或 apt-get
    (1) 安裝軟體包，dpkg(1) 在對軟體包解包時，確定會給呼叫程式返回錯
    誤，並不會覆蓋已經存在的檔案。

    小心

    使用第三方軟體包會導致重大的系統風險，因為其通過使用 root 許可權
    執行維護者指令碼能夠對你的系統做任何事。dpkg(1) 命令只防止解包時
    的覆蓋行為。

    可以先通過刪除舊的令人討厭的軟體包，<old-package>，來解決這類錯誤
    的安裝問題。

    $ sudo dpkg -P <old-package>

%

2.6.3. 修復損壞的軟體包指令碼

    當軟體包指令碼中的一個命令由於某些原因返回錯誤，指令碼也將由於錯
    誤而退出，軟體包管理系統忽略它們的行為，並導致部分安裝的軟體包。
    當一個軟體包在它的刪除指令碼中有錯誤時，該軟體包將會成為不可能刪
    除的軟體包，處理這些問題，都會變得相當棘手。

    對於 “<package_name>” 的軟體包指令碼問題，你應該檢視下列的軟體包
    指令碼。

      * "/var/lib/dpkg/info/<package_name>.preinst"

      * "/var/lib/dpkg/info/<package_name>.postinst"
   
      * "/var/lib/dpkg/info/<package_name>.prerm"

      * "/var/lib/dpkg/info/<package_name>.postrm"

    使用下列的方法，以 root 編輯損壞的軟體包指令碼。

      * 在行首新增 “#” 可以禁用出錯的行
   
      * 在出錯行的行尾新增 “|| true” 可以強制返回成功

    使用下列命令來配置所有部分安裝的軟體包。

    # dpkg --configure -a

%

2.6.4. 使用 dpkg 命令進行救援

    因為 dpkg 是非常底層的軟體包工具，它可以在很糟糕的情況下進行工作
    ，例如無法啟動系統且沒有網路連線。讓我們假定 foo 軟體包損壞了，並
    且需要更換。

    你可以在軟體包快取目錄：“/var/cache/apt/archives/” 中找到舊的 foo
    軟體包的無 bug 版本。（如果找不到，你可以從檔案庫 https://
    snapshot.debian.org/ 中下載它，或從具有軟體包快取功能的機器中複製
    它。）

    如果你能夠啟動系統，你可以通過下列命令來安裝它。

    # dpkg -i /path/to/foo_<old_version>_<arch>.deb

    提示
   
    如果你係統損壞較小，你也可以使用更高層的 APT 系統來降級整個系統，
    就像第 2.7.10 节 “緊急降級” 中做的那樣。

    如果你的系統無法從硬碟啟動，你應該尋找其它方式來啟動它。

     1. 使用 Debian 安裝光碟以救援模式啟動系統。

     2. 將硬碟上無法啟動的系統掛載到 “/target”。

     3. 通過下列命令安裝舊版本的 foo 軟體包。

    # dpkg --root /target -i /path/to/foo_<old_version>_<arch>.deb

    即使位於硬碟上的 dpkg 命令已損壞，該命令依舊可以執行。

    提示
   
    任何由硬碟、live GNU/Linux CD、可啟動的 USB 驅動或網路啟動上的另
    一系統啟動的 GNU/Linux 系統到可以類似地用來救援損壞的系統。

    如果由於依賴問題，無法用這種方式安裝軟體包，並且你真的必須真麼做
    ，你可以使用 dpkg 的 “--ignore-depends”、“--force-depends” 和其它
    選項來無視依賴。如果你這麼做了，之後你必須認真努力地修復依賴關係
    。更多細節參見 dpkg(8)。

    注意

    如果你的系統嚴重損壞了，你應該將系統完整備份到一個安全的地方（參
    見第 10.2 节 “備份和恢復”）並進行一次全新的安裝。這是耗時較少且效
    果較好的辦法。

%

2.6.5. 恢復軟體包選擇資料

    如果 “/var/lib/dpkg/status” 因為某種原因出現錯誤，Debian 系統會丟
    失軟體包選擇資料並受到嚴重影響。尋找位於 “/var/lib/dpkg/
    status-old” 或 “/var/backups/dpkg.status.*” 中舊的 “/var/lib/dpkg
    /status” 檔案。

    給 “/var/backups/” 分配一個單獨的分割槽是一個好習慣，因為這個目錄
    包含了許多重要的系統資料。

    對於嚴重的損壞，我建議備份系統後重新安裝。即使失去 “/var/” 中的所
    有資料，你依舊可以從 “/usr/share/doc/” 目錄恢復一些資訊來引導你進
    行新的安裝。

    重新安裝最小（桌面）系統。

    # mkdir -p /path/to/old/system

    將舊系統掛載到 “/path/to/old/system/”。

    # cd /path/to/old/system/usr/share/doc
    # ls -1 >~/ls1.txt
    # cd /usr/share/doc
    # ls -1 >>~/ls1.txt
    # cd
    # sort ls1.txt | uniq | less

    然後你就可以根據軟體包名稱來進行安裝了。（可能會有一些非軟體包名
    稱，例如 “texmf”。）

2.7. 軟體包管理技巧

%

2.7.1. 如何挑選 Debian 軟體包

    你可以根據 aptitude 這個包管理工具中的軟體包描述或者是任務面板下
    的列表資訊，來查詢你所需要的軟體包。

    當遇到2個以上的類似的軟體包時，先前沒有經過反覆的嘗試，你不知道安
    裝哪一個的時候，應該用常識來判斷。我認為以下幾點是首選的軟體包應
    該具有的特徵。

      * 重要性：是 > 否

      * 型別：main > contrib > non-free

      * 優先順序：需要 > 重要 > 標準 > 可選 > 額外

      * 任務：在任務下有軟體包的列表資訊，例如 “桌面環境”

      * 軟體包是被與之有依賴關係的軟體包所選擇的（例如 python2.4 依賴
        python）

      * 流行度：在投票或者安裝指數上有著更高的分數

      * 更新日誌：維護者經常的更新

      * BTS (缺陷跟蹤系統):沒有 RC 級別的缺陷（沒有危險、重大嚴重的缺
        陷）

      * BTS (缺陷跟蹤系統):有維護者對缺陷報告反饋

      * BTS (缺陷跟蹤系統): 有著更多的近期修復的 bug 數目

      * BTS (缺陷跟蹤系統):遺留的非嚴重（non-wishlist）缺陷數量較少

    Debian 是一個使用分散式開發模式的志願專案，它的檔案庫包含了許多不
    同關注點和不同質量的軟體包。你必須做出自己的選擇。

%

2.7.2. 混合源檔案庫中的軟體包

    小心

    從混合源檔案庫中安裝軟體包是不被 Debian 官方發行版所支援的，除了
    官方支援的檔案庫的特殊組合以外，例如 stable 的 security updates
    和 bullseye-updates。

    這裡有一個列子，在原有隻跟蹤 testing 的場景，操作包含在 unstable
    裡發現的新的上游軟體包版本。

     1. 臨時更改 "/etc/apt/sources.list" 檔案，使之指向單一的
        "unstable" 發行版路徑。

     2. 執行 "aptitude update" 命令。

     3. 執行 "aptitude install <package-name>" 命令。

     4. 恢復到原始 "/etc/apt/sources.list" 檔案，使之指向 testing 路
        徑。

     5. 執行 "aptitude update" 命令。

    使用這個手工方法，你不需要建立 "/etc/apt/preferences" 檔案，也不
    需要擔心 apt-pinning。但這個方法仍然是非常麻煩的。

    小心

    當使用混合檔案源的時候，因為 Debian 不會確保軟體之間的相容性，所
    以你必須自己去解決相容性問題。如果軟體之間存在不相容性，系統可能
    會損壞。你必須能夠判斷這些操作所需的技術要求。使用任意混合的檔案
    源是完全可選的操作，我並不鼓勵你去使用它。

    從不同的檔案庫中安裝軟體包的一般規則如下。

      * 非二進位制軟體包 ("Architecture: all") 的安裝是更保險的。

          + 文件軟體包：沒有特別的要求

          + 解釋程式的軟體包：相容的直譯器必須是可用的

      * 二進位制軟體包 (non "Architecture: all")通常會面臨很多障礙，
        它的安裝不保險的。
   
          + 庫檔案版本的相容性（包括 "libc"）

          + 與之相關的有用的程式版本的相容性

          + 核心 ABI 的相容性

          + C++ ABI 的相容性

          + …

    注意
   
    為了使軟體包的安裝變得更保險，一些商業的非自由的二進位制程式包可
    能會提供完整的靜態連結庫。你還是應該檢查 ABI 的相容性問題等等。

    注意

    為避免短期出現壞的軟體包，從非官方支援的檔案庫安裝二進位制軟體包
    通常是一個壞注意。即使你在使用 apt-pinning 情況下，也是這樣的。
    (參見第 2.7.3 节 “調整候選版本”).你應當考慮使用 chroot 或類似技術
    (參見第 9.10 节 “虛擬化系統”)來執行不同檔案庫的程式。

%

2.7.3. 調整候選版本

    沒有 "/etc/apt/preferences" 檔案，APT 系統使用版本字串來選擇最新
    的可用版本作為候選版本。這是通常的狀態，也是 APT 系統最推薦的使用
    方法。所有官方支援的檔案庫集合，並不要求 "/etc/apt/preferences"
    檔案，因此，一些不應當被作為自動更新源的軟體包，被標記為 
    NotAutomatic，並被適當處理。

    提示
   
    版本字串的比較規則可以被驗證，例子如下，"dpkg --compare-versions
    ver1.1 gt ver1.1~1; echo $?" (參見 dpkg(1))。

    如果經常從混合源檔案庫中安裝軟體包 (參見第 2.7.2 节 “混合源檔案庫
    中的軟體包”), 你可以通過建立 "/etc/apt/preferences" 檔案並且在其
    中寫入關於調整候選版本的軟體包選取規則的合適條目 (如
    apt_preferences(5) 中所示)來自動化這些複雜的操作。這被稱為 
    apt-pinning。

    警告
   
    新手用 apt-pinning 命令會造成比較大的問題。你必須避免使用這個命令
    除非確實需要它。

    小心

    當使用 apt-pinning 命令時，因為 Debian 不會確保軟體之間的相容性，
    所以你必須自己確認其相容性。apt-pinning 是完全可選的操作，我並不
    建議去使用它。

    小心

    檔案庫層級的 Release 檔案 (參見第 2.5.3 节 “檔案庫層的“Release”檔
    案”) 使用 apt_preferences(5) 的規則.對於 Debian 通用檔案庫和
    Debian 安全檔案庫，apt-pinning 只在 "suite" 名下工作。(這點和
    Ubuntu 檔案庫不同.)例如，你在 "/etc/apt/preferences" 檔案裡面，可
    以使用"Pin: release a=unstable" ，但不能使用 "Pin: release a=
    sid".

    小心
   
    當使用非 Debian 的檔案庫作為 apt-pinning 的一部分時，你應該檢查它
    們的用途和可信度。例如，Ubuntu 和 Debian 是不能混在一起的。

    注意

    即使不建立 "/etc/apt/preferences" 檔案，在不用 apt-pinning 命令的
    情況下，你也可以進行相當複雜的系統工作 (參見第 2.6.4 节 “使用
    dpkg 命令進行救援”和第 2.7.2 节 “混合源檔案庫中的軟體包”)。

    如下是關於 apt-pinning 技術的簡化說明。

    可用的軟體包源在 "/etc/apt/sources.list" 檔案裡面定義，APT 系統從
    可用的軟體包源裡面選擇 Pin-Priority 值最大的，作為升級軟體包的候
    選版本.如果一個軟體包的 Pin-Priority 大於 1000,這個版本限制為只能
    升級，關閉了軟體包降級功能 (參見第 2.7.10 节 “緊急降級”).

    每個軟體包的 Pin-Priority 值是在 "/etc/apt/preferences" 檔案中的
    "Pin-Priority" 條目中定義或者是使用它的預設值。

    表 2.18. 用於 apt-pinning 技術的值得注意的 Pin-Priority 值列表。

    +---------------------------------------------------------------+
    |Pin-Priority|            apt-pinning 對軟體包的影響            |
    |------------+--------------------------------------------------|
    |1001        |安裝該軟體包，即使是一個降級軟體包的指令          |
    |------------+--------------------------------------------------|
    |990         |用作目標發行版檔案庫的預設值                      |
    |------------+--------------------------------------------------|
    |500         |用作常規檔案庫的預設值                            |
    |------------+--------------------------------------------------|
    |100         |用於 NotAutomatic 和 ButAutomaticUpgrades 檔案庫的|
    |            |預設值                                            |
    |------------+--------------------------------------------------|
    |100         |用於已安裝軟體包                                  |
    |------------+--------------------------------------------------|
    |1           |用於 NotAutomatic 檔案庫的預設值                  |
    |------------+--------------------------------------------------|
    |-1          |即使被推薦，也絕不安裝這個軟體包                  |
    +---------------------------------------------------------------+


    目標發行版檔案庫可以通過以下幾種方法來設定。

      * "/etc/apt/apt.conf" 配置檔案中寫入 "APT::Default-Release
        "stable";"

      * 命令列選項，例如: "apt-get install -t testing some-package"

    NotAutomatic 和 ButAutomaticUpgrades 的檔案是由檔案庫伺服器上檔案
    層級的 Release 檔案來設定，(參見第 2.5.3 节 “檔案庫層的“Release”
    檔案”)，同時包含"NotAutomatic: yes" 和 "ButAutomaticUpgrades:
    yes".而 NotAutomatic 檔案也是由檔案庫伺服器上的檔案層級的 Release
    檔案來設定，但只包含 "NotAutomatic: yes".

    來自眾多檔案源的<軟體包>的 apt-pinning 情況可以通過 "apt-cache
    policy <package>" 命令顯示。

      * "Package pin:" 開頭的行，列出了軟體包版本的 pin ，如果
        <package> 相關的 pin 已經定義, 例如, "Package pin: 0.190".

      * 沒有 "Package pin:" 的行存在，如果沒有 <package> 相關的定義。

      * 與 <package> 相關的 Pin-Priority 值列在所有版本字串的右邊，比
        如，"0.181 700".
   
      * "0" 是列在所有版本字串的右邊，如果沒有 <package> 相關的定義。
        例如, "0.181 0".

      * 檔案庫 (在 "/etc/apt/preferences" 檔案作為"Package: *"定義)
        的 Pin-Priority 值，列在所有檔案庫路徑的左邊，例如，"100
        http://deb.debian.org/debian/ bullseye-backports/main
        Packages".

%

2.7.4. 更新和向後移植

    bullseye-updates 和 backports.debian.org 檔案庫提供了stable
    (bullseye) 發行版的更新軟體包。

    為了去使用這些檔案庫，你需要在 "/etc/apt/sources.list" 檔案裡寫入
    如下所示的檔案庫列表。

    deb http://deb.debian.org/debian/ bullseye main contrib non-free
    deb http://security.debian.org/ bullseye/updates main contrib
    deb http://deb.debian.org/debian/ bullseye-updates main contrib non-free
    deb http://deb.debian.org/debian/ bullseye-backports main contrib non-free

    並不需要在 "/etc/apt/preferences" 檔案中顯式設定Pin-Priority值.
    當新的包可用時，預設配置提供了更合理的更新 (請見第 2.5.3 节 “檔案
    庫層的“Release”檔案”).

      * 所有已安裝的舊軟體包都可以通過 bullseye-updates 檔案庫升級到
        新軟體包。
   
      * 只有從 bullseye-backports 檔案庫中手動安裝的舊軟體包才會通過
        bullseye-backports 檔案庫升級到新軟體包。

    當你想要從 bullseye-backports 檔案庫中手動的安裝一個名叫 "
    <package-name>" 的軟體及其依賴包的時候，你應該在目標檔案庫之前加
    一個 “-t" 引數。

    $ sudo apt-get install -t bullseye-backports <package-name>

%

2.7.5. 阻止推薦的軟體包的安裝

    如果不想要引入推薦的特定軟體包，你必須建立 "/etc/apt/preferences"
    檔案並且像如下所示的那樣在檔案的頂部明確列出這些軟體包。

    Package: <package-1>
    Pin: version *
    Pin-Priority: -1
   
    Package: <package-2>
    Pin: version *
    Pin-Priority: -1

%

2.7.6. 使用帶有 unstable 軟體包的 testing 版本

    如下是一個關於 apt-pinning 技術的例子，當使用 testing的時候，實現
    unstable 中的特定的較新的上游版本軟體包的日常升級。你應該按如下所
    示的在 "/etc/apt/sources.list" 檔案中列出所有需要的檔案庫。

    deb http://deb.debian.org/debian/ testing main contrib non-free
    deb http://deb.debian.org/debian/ unstable main contrib non-free
    deb http://security.debian.org/ testing/updates main contrib

    按如下所示的設定 "/etc/apt/preferences" 檔案。

    Package: *
    Pin: release a=unstable
    Pin-Priority: 100

    當想要在此配置下從 unstable 檔案庫中安裝 "<package-name>" 軟體及
    它的依賴包時，你執行帶有 "-t" 選項 (unstable 的 Pin-Priority 值變
    為 990) 的轉換目標發行版的命令。

    $ sudo apt-get install -t unstable <package-name>

    在此配置下，執行 "apt-get update" 和 "apt-get dist-upgrade"(或者
    "aptitude safe-upgrade" 和 "aptitude full-upgrade") 命令,會從
    testing 檔案庫升級那些從 testing 檔案庫安裝的軟體包並且從
    unstable 檔案庫升級那些從 unstable 檔案庫中安裝的軟體包。

    小心

    小心不要去移除 "/etc/apt/sources.list" 檔案中的 "testing" 檔案庫
    。如果檔案中沒有 "testing" ，APT 系統會使用更加新的 unstable 檔案
    庫升級軟體包。

    提示

    我通常會在上述操作後，馬上註釋掉 "/etc/apt/sources.list" 檔案中的
    "unstable" 檔案庫記錄。這避免了因為處理 "/etc/apt/sources.list"
    檔案中的眾多記錄而造成的升級緩慢雖然同時也阻止了那些從 unstable
    檔案庫中安裝的軟體包通過 unstable 升級。

    提示

    如果 "/etc/apt/preferences" 檔案中 "Pin-Priority: 1" 替代了
    "Pin-Priority:100"，即使 "/etc/apt/sources.list" 檔案中的
    "testing" 記錄被刪除了，Pin-Priority 值為 100 的已安裝軟體包也不
    會通過 unstable 檔案庫升級。

    如果你希望自動跟蹤 unstable 裡某些特殊的軟體包，而在安裝時不再使
    用初始化選項 "-t unstable" ，你必須建立 "/etc/apt/preferences" 檔
    案，並在該檔案頂部按下面的方式清晰的列出所有那些軟體包。

    Package: <package-1>
    Pin: release a=unstable
    Pin-Priority: 700
   
    Package: <package-2>
    Pin: release a=unstable
    Pin-Priority: 700

    如下是為每個特定的軟體包設定 Pin-Priority 值。例如，為了使用最新
    的 unstable 的英文版 "Debian Reference"，你應該在 "/etc/apt/
    preferences" 檔案中寫入以下條目。

    Package: debian-reference-en
    Pin: release a=unstable
    Pin-Priority: 700
   
    Package: debian-reference-common
    Pin: release a=unstable
    Pin-Priority: 700

    提示
   
    即使你使用的是 stable 檔案庫，apt-pinning 技術仍然是有效的。根據
    我以前的經驗，從 unstable 檔案庫安裝的文件包一直是安全的。

%

2.7.7. 使用帶有 experimental 軟體包的 unstable 版本

    這是使用apt-pinning 的另一個示例，該示例主要使用unstable源，但包
    含了experimental源, 該源可用於安裝上游更新的軟體包 . 需要包含在"/
    etc/apt/sources.list" 檔案中的列表如下:

    deb http://deb.debian.org/debian/ unstable main contrib non-free
    deb http://deb.debian.org/debian/ experimental main contrib non-free
    deb http://security.debian.org/ testing/updates main contrib

    由於experimental源是非自動（NotAutomatic）的源 (參見第 2.5.3 节 “
    檔案庫層的“Release”檔案”)，其預設的Pin-Priority值被設定為1
    (<<100) . 並不需要在"/etc/apt/preferences"檔案中設定Pin-Priority
    值，只需要指定 experimental 源，除非你需要在下次更新時自動升級時
    更新特定軟體包.

%

2.7.8. 自動下載和升級軟體包

    apt 軟體包有自己的 cron 指令碼 “/etc/cron.daily/apt” ，它支援自動
    下載軟體包。可以安裝 unattended-upgrades 軟體包來增強這個指令碼，
    使它能夠自動升級軟體包。可以通過 “/etc/apt/apt.conf.d/02backup”
    和 “/etc/apt/apt.conf.d/50unattended-upgrades” 中的引數來進行自定
    義，相關說明位於 “/usr/share/doc/unattended-upgrades/README” 中。

    unattended-upgrades 軟體包主要用於 stable 系統的安全更新。如果自
    動升級損壞 stable 系統的風險小於被入侵者利用已被安全更新修復的安
    全漏洞，你應該考慮使用自動更新，配置引數如下。

    APT::Periodic::Update-Package-Lists "1";
    APT::Periodic::Download-Upgradeable-Packages "1";
    APT::Periodic::Unattended-Upgrade "1";

    如果你執行的是 unstable 系統，你應該不會想要使用自動更新，因為它
    肯定會在某天損壞系統。即使位於這樣的 unstable 情況下，你可能依舊
    想提前下載軟體包以節省互動式升級的時間，其配置引數如下。

    APT::Periodic::Update-Package-Lists "1";
    APT::Periodic::Download-Upgradeable-Packages "1";
    APT::Periodic::Unattended-Upgrade "0";

%

2.7.9. 限制 APT 的下載頻寬

    如果你想限制 APT 的下載頻寬到 800Kib/sec（=100KiB/sec），你應該像
    下面那樣設定 APT 的配置引數。

    APT::Acquire::http::Dl-Limit "800";

%

2.7.10. 緊急降級

    小心

    降級在 Debian 設計上就不被官方支援。僅僅是在緊急恢復過程中需要做
    的一部分工作。儘管憎恨這種情形，但降級在很多場景下工作得也不錯。
    對於重要系統，你應當在恢復操作後備份所有重要資料，並從零開始重新
    安裝一個新的系統。

    你可以通過控制候選版本從新的檔案庫降級到舊的檔案庫（參見第 2.7.3 
    节 “調整候選版本”），從而使損壞的系統恢復。下面是一種懶惰的方法，
    可以避免許多冗長的 “dpkg -i <broken-package>_<old-version>.deb”
    命令（參見第 2.6.4 节 “使用 dpkg 命令進行救援”）。

    搜尋 “/etc/apt/sources.list” 檔案中像下面那樣使用 unstable 的行。

    deb http://deb.debian.org/debian/ sid main contrib non-free

    使用下面的行替換它，從而改為使用 testing。

    deb http://deb.debian.org/debian/ bookworm main contrib non-free

    按如下所示的設定 "/etc/apt/preferences" 檔案。

    Package: *
    Pin: release a=testing
    Pin-Priority: 1010

    執行 “apt-get update; apt-get dist-upgrade” 使整個系統的軟體包強
    制降級。

    在緊急降級後，移除 “/etc/apt/preferences” 這個特殊的檔案。

    提示

    這是一個好方法，移除（不是清除！）儘可能多地軟體包，來減少依賴問
    題。你可能需要手動移除和安裝一些軟體包來使系統降級。需要特別注意
    Linux 核心、載入程式、udev、PAM、APT 和網路相關的軟體包以及它們的
    配置檔案。

%

2.7.11. 上傳軟體包的是誰？

    儘管 “/var/lib/dpkg/available” 和 “/usr/share/doc/package_name/
    changelog” 中列出的維護者姓名提供了關於“軟體包運作的幕後者是誰”這
    一問題的一些資訊，但軟體包的實際上傳者依舊不明。devscripts 軟體包
    中的 who-uploads(1) 可以識別 Debian 源軟體包的實際上傳者。

%

2.7.12. equivs 軟體包

    如果你從原始碼編譯了一個程式來代替 Debian 軟體包，最好將它做成一
    個真正的本地 Debian 軟體包（*.deb）並使用私人檔案庫。

    如果你選擇從原始碼編譯一個程式並將它安裝到 “/usr/local”，你可能需
    要使用 equivs 作為最後步驟來滿足缺失的軟體包依賴。

    Package: equivs
    Priority: optional
    Section: admin
    Description: Circumventing Debian package dependencies
     This package provides a tool to create trivial Debian packages.
     Typically these packages contain only dependency information, but they
     can also include normal installed files like other packages do.
     .
     One use for this is to create a metapackage: a package whose sole
     purpose is to declare dependencies and conflicts on other packages so
     that these will be automatically installed, upgraded, or removed.
     .
     Another use is to circumvent dependency checking: by letting dpkg
     think a particular package name and version is installed when it
     isn't, you can work around bugs in other packages' dependencies.
     (Please do still file such bugs, though.)

%

2.7.13. 移植一個軟體包到 stable 系統

    對於部分升級的 stable 系統，使用源軟體包在執行環境中重新構建一個
    軟體包是不錯的選擇。這可以避免因為依賴關係導致大量軟體包升級。

    在 stable 系統的 “/etc/apt/sources.list” 檔案中新增下列條目。

    deb-src http://deb.debian.org/debian unstable  main contrib non-free

    如下安裝編譯所需的軟體包並下載源軟體包。

    # apt-get update
    # apt-get dist-upgrade
    # apt-get install fakeroot devscripts build-essential
    # apt-get build-dep foo
    $ apt-get source foo
    $ cd foo*

    如果需要向後移植，可以從 backport 的軟體包中更新一些工具鏈軟體包
    ，例如 dpkg 和 debhelper。

    執行下列命令。

    $ dch -i

    更新軟體包版本，例如在 “debian/changelog” 中附加一個 “+bp1”

    像下面那樣構建軟體包並將它們安裝到系統中。

    $ debuild
    $ cd ..
    # debi foo*.changes

%

2.7.14. 用於 APT 的代理伺服器

    因為映象整個 Debian 檔案庫的子區會浪費硬碟和網路頻寬，當你管理許
    多 LAN 上的系統時，為 APT 部署一個本地代理伺服器是個好主意。APT
    可以通過配置來使用通用 web（http）代理伺服器，例如 squid（參見第
     6.10 节 “其它網路應用服務”），細節參見 apt.conf(5) 和 “/usr/
    share/doc/apt/examples/configure-index.gz”。環境變數 “$http_proxy
    會覆蓋 “/etc/apt/apt.conf” 檔案中設定的代理伺服器。

    這裡有一些 Debian 檔案庫的專用代理工具。你應該在使用它們之前檢查
    BTS。

    表 2.19. Debian 檔案庫的專用代理工具

    +---------------------------------------------------------------+
    |   軟體包    |流行 |大小|                 說明                 |
    |             | 度  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |approx       |V:0, |6317|快取 Debian 檔案庫檔案的代理伺服器（已|
    |             |I:0  |    |編譯的 OCaml 程式）                   |
    |-------------+-----+----+--------------------------------------|
    |apt-cacher   |V:0, |289 |為 Debian 軟體包和原始碼檔案進行快取代|
    |             |I:0  |    |理（Perl 程式）                       |
    |-------------+-----+----+--------------------------------------|
    |apt-cacher-ng|V:5, |1488|分發軟體包的快取代理（C++ 編譯的程式）|
    |             |I:5  |    |                                      |
    +---------------------------------------------------------------+


    小心

    當 Debian 重構它的檔案庫結構時，這些專用的代理工具往往需要軟體包
    維護者重寫程式碼，並可能在一段時間內無法使用。另一方面，通用 web
    （http）代理伺服器更強健並且更容易應對這種改變。

%

2.7.15. 小型公共軟體包檔案庫

    提示
   
    手動設置軟體包檔案庫是複雜的。有些可用的倉庫管理工具。一個詳盡的
    清單在網路上。

    下面是一個建立小型公共軟體包檔案庫的示例，相容了 secure APT 系統
    （參見第 2.5.2 节 “頂層“Release”檔案及真實性”）。讓我們進行一些假
    定。

      * 賬號名：“foo”

      * 主機名：“www.example.com”

      * 所需軟體包：apt-utils、gnupg 和其它軟體包

      * URL: "http://www.example.com/~foo/" ( → "/home/foo/
        public_html/index.html")

      * 軟體包架構：“amd64”

    在該伺服器上使用如下方式為 Foo 建立一個 APT 源鑰匙對。

    $ ssh foo@www.example.com
    $ gpg --gen-key
    ...
    $ gpg -K
    ...
    sec   1024D/3A3CB5A6 2008-08-14
    uid                  Foo (ARCHIVE KEY) <foo@www.example.com>
    ssb   2048g/6856F4A7 2008-08-14
    $ gpg --export -a 3A3CB5A6 >foo.public.key

    公佈 "foo.public.key"檔案，即公鑰 ID 為 "3A3CB5A6"的源公鑰檔案，
    該檔案可用於 Foo 源的釋出

    使用如下方式建立一個名為"Origin: Foo"的源目錄樹。

    $ umask 022
    $ mkdir -p ~/public_html/debian/pool/main
    $ mkdir -p ~/public_html/debian/dists/unstable/main/binary-amd64
    $ mkdir -p ~/public_html/debian/dists/unstable/main/source
    $ cd ~/public_html/debian
    $ cat > dists/unstable/main/binary-amd64/Release << EOF
    Archive: unstable
    Version: 4.0
    Component: main
    Origin: Foo
    Label: Foo
    Architecture: amd64
    EOF
    $ cat > dists/unstable/main/source/Release << EOF
    Archive: unstable
    Version: 4.0
    Component: main
    Origin: Foo
    Label: Foo
    Architecture: source
    EOF
    $ cat >aptftp.conf <<EOF
    APT::FTPArchive::Release {
      Origin "Foo";
      Label "Foo";
      Suite "unstable";
      Codename "sid";
      Architectures "amd64";
      Components "main";
      Description "Public archive for Foo";
    };
    EOF
    $ cat >aptgenerate.conf <<EOF
    Dir::ArchiveDir ".";
    Dir::CacheDir ".";
    TreeDefault::Directory "pool/";
    TreeDefault::SrcDirectory "pool/";
    Default::Packages::Extensions ".deb";
    Default::Packages::Compress ". gzip bzip2";
    Default::Sources::Compress "gzip bzip2";
    Default::Contents::Compress "gzip bzip2";

    BinDirectory "dists/unstable/main/binary-amd64" {
      Packages "dists/unstable/main/binary-amd64/Packages";
      Contents "dists/unstable/Contents-amd64";
      SrcPackages "dists/unstable/main/source/Sources";
    };

    Tree "dists/unstable" {
      Sections "main";
      Architectures "amd64 source";
    };
    EOF

    通過 dupload，你可以自動重複更新你伺服器系統上的 APT 檔案庫內容。

    當 “~/.dupload.conf” 包含如下內容時，在客戶端執行 “dupload -t foo
    changes_file” 將所有的軟體包檔案放入 “~foo/public_html/debian/
    pool/main/”。

    $cfg{'foo'} = {
      fqdn => "www.example.com",
      method => "scpb",
      incoming => "/home/foo/public_html/debian/pool/main",
      # The dinstall on ftp-master sends emails itself
      dinstall_runs => 1,
    };
   
    $cfg{'foo'}{postupload}{'changes'} = "
      echo 'cd public_html/debian ;
      apt-ftparchive generate -c=aptftp.conf aptgenerate.conf;
      apt-ftparchive release -c=aptftp.conf dists/unstable >dists/unstable/Release ;
      rm -f dists/unstable/Release.gpg ;
      gpg -u 3A3CB5A6 -bao dists/unstable/Release.gpg dists/unstable/Release'|
      ssh foo@www.example.com  2>/dev/null ;
      echo 'Package archive created!'";

    dupload(1)觸發postupload鉤子指令碼，該指令碼為每次上傳建立軟體包
    檔案.

    你可以通過下面的方法將這個小型公共檔案庫新增到你客戶端系統的 apt
    源中。

    $ sudo bash
    # echo "deb http://www.example.com/~foo/debian/ unstable main" \
       >> /etc/apt/sources.list
    # apt-key add foo.public.key

    提示
   
    如果檔案庫位於本地檔案系統中，你可以使用 “deb file:///home/foo/
    debian/ …”。

%

2.7.16. 記錄和複製系統配置

    你可以通過下面命令建立軟體包和 debconf 選擇狀態的本地副本。

    # dpkg --get-selections '*' > selection.dpkg
    # debconf-get-selections    > selection.debconf

    這裡，“*” 使 “selection.dpkg” 也包含 “purge” 的軟體包。

    你可以將這兩個檔案移動到另一個電腦，並通過下列命令安裝它們。

    # dselect update
    # debconf-set-selections < myselection.debconf
    # dpkg --set-selections  < myselection.dpkg
    # apt-get -u dselect-upgrade    # or dselect install

    如果你需要管理一個叢集中的許多伺服器，並且它們的配置幾乎相同，你
    應該考慮使用專門的軟體包，例如 fai 來管理整個系統。

%

2.7.17. 轉換或安裝一個外來的二進位制軟體包

    alien(1) 可以將 Red Hat 的 rpm、Stampede 的 slp、Slackware 的 tgz
    和 Solaris 的 pkg 二進位制軟體包檔案格式轉換為 Debian 的 deb 軟體
    包。如果你想使用來自另一個發行版的軟體包，你可以使用 alien 轉換並
    安裝它。alien 也支援 LSB 軟體包。

    警告

    不應該用 alien(1) 來替代必要的系統軟體包，例如 sysvinit、libc6、
    libpam-modules 等等。實際上，alien(1) 應該只用於 non-free 中僅提
    供二進位制檔案的軟體包，並且它們應該相容 LSB 或被靜態連結。對於自
    由軟體，你應該使用它們的源軟體包來製作一個真正的 Debian 軟體包。

%

2.7.18. 不使用 dpkg 解壓軟體包

    在任何的 Unix-like 環境中都可以不使用 dpkg(1)，而使用標準的 ar(1)
    和 tar(1) 來解壓 “dpkg*.deb” 軟體包。

    # ar x /path/to/dpkg_<version>_<arch>.deb
    # ls
    total 24
    -rw-r--r-- 1 bozo bozo  1320 2007-05-07 00:11 control.tar.gz
    -rw-r--r-- 1 bozo bozo 12837 2007-05-07 00:11 data.tar.gz
    -rw-r--r-- 1 bozo bozo     4 2007-05-07 00:11 debian-binary
    # mkdir control
    # mkdir data
    # tar xvzf control.tar.gz -C control
    # tar xvzf data.tar.gz -C data

    其它的 “*.deb” 軟體包可以使用 dpkg-deb(1) 解壓來獲得上面的
    “dpkg*.deb” 軟體包；或像上面那樣使用標準的 ar(1) 和較新的帶有 xz
    (1) 解壓支援的 GNU tar(1)。

    你也可以使用 mc 命令來瀏覽軟體包內容。

%

2.7.19. 更多關於軟體包管理的文件

    你可以從下面的文件中瞭解軟體包管理的更多資訊。

      * 軟體包管理的主要文件：

          + aptitude(8)、dpkg(1)、tasksel(8)、apt(8)、apt-get(8)、
            apt-config(8)、apt-key(8)、sources.list(5)、apt.conf(5)
            和 apt_preferences(5)；

          + 來自 apt-doc 軟體包的 “/usr/share/doc/apt-doc/guide.html/
            index.html” 和 “/usr/share/doc/apt-doc/offline.html/
            index.html”；

          + 來自 aptitude-doc-en 軟體包的 “/usr/share/doc/aptitude/
            html/en/index.html”。

      * Debian 檔案庫的官方詳細文件：

          + "Debian Policy Manual Chapter 2 - The Debian Archive"，

          + "Debian Developer's Reference, Chapter 4 - Resources for
            Debian Developers 4.6 The Debian archive"，

          + "The Debian GNU/Linux FAQ, Chapter 6 - The Debian FTP
            archives"。

      * 為 Debian 使用者構建一個 Debian 軟體包的教程：

          + “Debian 新維護人員手冊”（已過時）。

          + “Debian 維護者指南”。

第 3 章 系統初始化

    作爲系統管理員，粗略地瞭解 Debian 系統的啓動和配置方式是明智的。
    儘管準確的細節在安裝的軟體包及對應的文檔中，但這些知識對我們大多
    數人來說都是必須掌握的。

    筆者基於自己和其他人的過往及現在的知識，盡己所能地提供關於 Debian
    系統的知識要點及其配置的快速概覽作爲讀者的參考。由於 Debian 系統
    在不斷地更新中，系統的狀況可能已經有所變化。在對系統做任何修改之
    前，請參考各個軟體包的最新文檔。

    提示
   
    bootup(7) 介紹了基於 systemd 的系統啟動流程。（近期的 Debian）

    提示
   
    boot(7) 介紹了基於 UNIX System V Release 4 的系統啟動流程。（舊版
    的 Debian）

%

3.1. 啓動過程概述

    計算機系統從上電事件到能爲用戶提供完整的操作系統（OS）功能爲止，
    需要經歷幾個階段的啓動過程。

    爲簡便起見，筆者將討論範圍限定在具有默認安裝的典型 PC 平臺上。

    典型的啓動過程像是一個四級的火箭。每一級火箭將系統控制權交給下一
    級。

      * 第 3.1.1 节 “第一階段：BIOS”

      * 第 3.1.2 节 “第二階段：引載加載程序”
   
      * 第 3.1.3 节 “第三階段：迷你 Debian 系統”

      * 第 3.1.4 节 “第四階段：常規 Debian 系統”

    當然，這些階段可以有不同的配置。比如，你編譯了自己的內核，則可能
    會跳過迷你 Debian 系統的步驟。因此，在讀者親自確認之前，請勿假定
    自己系統的情況也是如此。

    注意

    對於 SUN 或 Macintosh 系統等非傳統 PC 平臺來說，ROM 上的 BIOS 及
    磁盤上的分區可能大不相同（第 9.5.2 节 “硬碟分割槽配置”）。對於這
    種情況，請另尋對應平臺相關的文檔。

%

3.1.1. 第一階段：BIOS

    BIOS 是啓動過程的第一階段，在上電事件後開始。CPU 的程序計數器在上
    電事件後被初始化爲一個特定的內存地址，駐留在只讀存儲器（ROM）中的
    BIOS 就是從這個特定的內存地址開始執行。

    BIOS 執行硬件的基本初始化（POST: 上電自檢）並將系統控制權交給你指
    定的下一步驟。BIOS 通常和硬件一同提供。

    BIOS 啓動屏幕通常指示了進入 BIOS 配置界面所需的按鍵。流行的按鍵是
    F1、F2、F10、Esc、Ins 和 Del 鍵。假如你的啓動屏幕被一個漂亮的圖形
    界面隱藏，你可以按下某些按鍵（比如 ESC）取消隱藏。這些按鍵高度依
    賴於硬件。

    硬件位置和 BIOS 啓動的代碼的優先級可以在 BIOS 配置界面中選擇。通
    常，在已選擇的設備（硬盤、軟體、CD-ROM……）中，最先找到的設備的最
    開始的幾個扇區將被加載到內存，並執行其中的初始化代碼。初始化代碼
    可以是以下任意一種。

      * 引導加載代碼

      * 類似 FreeDOS 這樣的過濾型操作系統的內核代碼

      * 能夠加載到如此小的空間中的目標操作系統的內核代碼

    通常，系統從主硬件的特定分區中引導。傳統 PC 硬盤的最開始兩個扇區
    中包含了主引導記錄（MBR）。在 MBR 的末尾記錄了磁盤分區信息及引導
    選擇。BIOS 中執行的首段引導加載代碼佔據了 MBR 的其餘部分。

%

3.1.2. 第二階段：引載加載程序

    引導加載程序是啓動過程的第二階段，由 BIOS 啓動。引導加載程序將系
    統內核映像和 initrd 映像加載到內存並將控制權交給它們。initrd 映像
    是根文件系統映像，其支持程度依賴於所使用的引導加載程序。

    Debian 系統通常使用 Linux 核心作為其預設的系統核心。當前 2.6/3.x
    版本 Linux 核心的 initrd 映象從技術上說是 initramfs（初始化 RAM
    檔案系統）映象。基本的 initrd 映象是 root 檔案系統中各個檔案使用
    cpio 壓縮得到的。核心可以在啟動流程中非常早的階段，在載入基本的
    initrd 映象之前即更新微碼。以未壓縮 cpio 格式儲存微碼二進位制檔案
    的 initrd 映象和基本 initrd 映象兩部分可以聯合組成一個 initrd 映
    象，從而幫助實現上述功能。

    提示

    您可以使用 lsinitramfs(8) 和 unmkinitramfs(8) 這兩個工具檢查
    initrd 映象檔案的內容，它們由 initramfs-tools-core軟體包提供。另
    見 https://wiki.debian.org/initramfs 以瞭解更多資訊。

    Debian 系統默認將 PC 平臺的 GRUB 引導加載程序的第一階段代碼安裝在
    MBR 中。可用的引導加載程序和配置選項如下。

    表 3.1. 引導加載程序列表

    +---------------------------------------------------------------+
    |    軟體包    |流行 |大小|initrd|引導加載|        說明         |
    |              | 度  |    |      |  程序  |                     |
    |--------------+-----+----+------+--------+---------------------|
    |              |V:0, |    |      |傳統    |可智能識別磁盤分區和 |
    |grub-legacy   |I:2  |735 |支持  |GRUB    |文件系統（例如 vfat、|
    |              |     |    |      |        |ext3…）。            |
    |--------------+-----+----+------+--------+---------------------|
    |              |V:28,|    |      |GRUB 第 |可智能識別磁盤分區和 |
    |grub-pc       |I:774|533 |支持  |2 版    |文件系統（例如 vfat、|
    |              |     |    |      |        |ext4…）。（默認安裝）|
    |--------------+-----+----+------+--------+---------------------|
    |              |     |    |      |        |此爲 GRUB 第 2 版的可|
    |grub-rescue-pc|V:0, |6367|支持  |GRUB 第 |引導修復映像（CD 和軟|
    |              |I:1  |    |      |2 版    |盤）（PC / BIOS 版本 |
    |              |     |    |      |        |）                   |
    |--------------+-----+----+------+--------+---------------------|
    |lilo          |V:0, |697 |支持  |Lilo    |依賴於數據在硬盤上的 |
    |              |I:2  |    |      |        |扇區位置。（較老）   |
    |--------------+-----+----+------+--------+---------------------|
    |              |V:4, |    |      |        |可識別 ISO9660 文件系|
    |syslinux      |I:48 |343 |支持  |Isolinux|統。引導 CD 使用此項 |
    |              |     |    |      |        |。                   |
    |--------------+-----+----+------+--------+---------------------|
    |              |V:4, |    |      |        |可識別 MSDOS 文件系統|
    |syslinux      |I:48 |343 |支持  |Syslinux|（FAT）。引導軟盤使用|
    |              |     |    |      |        |此項。               |
    |--------------+-----+----+------+--------+---------------------|
    |loadlin       |V:0, |90  |支持  |Loadlin |新系統從 FreeDOS 或  |
    |              |I:1  |    |      |        |MSDOS 中啓動。       |
    |--------------+-----+----+------+--------+---------------------|
    |              |V:0, |    |      |Neil    |此爲取代 MSDOS MBR 的|
    |mbr           |I:7  |50  |不支持|Turton  |自由軟體。只可識別硬 |
    |              |     |    |      |的 MBR  |盤分區。             |
    +---------------------------------------------------------------+


    警告

    假如沒有從 grub-rescue-pc 軟體包中的映像製作出來的可引導修復盤（
    隨身碟、CD 或軟盤），請勿玩弄引導載入程式。即使硬碟上沒有可正常工
    作的引導載入程式，可引導修復盤也能引導你的系統。

    傳統 GRUB 的菜單配置文件位於 /boot/grub/menu.lst。例如，文件中有
    如下的配置條目。

    title           Debian GNU/Linux
    root            (hd0,2)
    kernel          /vmlinuz root=/dev/hda3 ro
    initrd          /initrd.img

    GRUB 第 2 版的菜單配置文件位於 /boot/grub/grub.cfg。此文件由 /usr
    /sbin/update-grub 根據 "/etc/grub.d/*" 中的模板及 "/etc/default/
    grub" 中的設置自動生成。例如，文件中有如下的配置條目。

    menuentry "Debian GNU/Linux" {
            set root=(hd0,3)
            linux /vmlinuz root=/dev/hda3
            initrd /initrd.img
    }

    這些示例中，GRUB 參數的含義如下。

    表 3.2. GRUB 參數的含義

    +---------------------------------------------------------------+
    | GRUB |                          說明                          |
    | 參數 |                                                        |
    |------+--------------------------------------------------------|
    |root  |使用主磁盤的第 3 個分區，在傳統 GRUB 中將此參數設置爲 " |
    |      |(hd0,2)"，在 GRUB 第 2 版中將此參數設置爲 "(hd0,3)"     |
    |------+--------------------------------------------------------|
    |kernel|使用位於 "/vmlinuz" 的內核，同時將 "root=/dev/hda3 ro"  |
    |      |作爲參數傳遞給內核                                      |
    |------+--------------------------------------------------------|
    |initrd|使用 initrd/initramfs 映像，其位於 "/initrd.img"        |
    +---------------------------------------------------------------+


    注意
   
    傳統 GRUB 使用的分區號爲 Linux 內核及各種實用工具使用的分區號減 1
    。GRUB 第 2 版修復了這個問題。

    提示

    在標識一個塊設備時，可能需要使用 UUID（參見第 9.5.3 节 “使用 UUID
    訪問分割槽”）而不是類似 "/dev/hda3" 這樣的文件名，例如 "root=UUID
    =81b289d5-4341-4003-9602-e254a17ac232 ro"。

    提示

    如果使用了 GRUB，內核的啓動參數可以在 /boot/grub/grub.cfg 裏面設
    置。在 Debian 系統裏，你不應該直接編輯 /boot/grub/grub.cfg。你可
    以通過編輯 /etc/default/grub 文件中 GRUB_CMDLINE_LINUX_DEFAULT 的
    值並運行 update-grub(8) 來更新 /boot/grub/grub.cfg。

    提示
   
    通過使用鏈式引導技術，你可以在一個引導裝載程序中啓動另一個引導裝
    載程序。

    參見 “info grub” 及 grub-install(8)。

%

3.1.3. 第三階段：迷你 Debian 系統

    迷你 Debian 系統是啓動流程的第三階段，由引導加載程序啓動。它會在
    內存中運行系統內核和根文件系統。這是啓動流程的一個可選準備階段。

    注意

    “迷你 Debian 系統”是筆者自創的術語，用於在本文檔中描述啓動流程的
    第三個階段。這個系統通常被稱爲 initrd 或 initramfs 系統。內存中類
    似的系統在 Debian 安裝程序中使用。

    /init 程式是記憶體中的根檔案系統上執行的第一個程式。這個程式在使
    用者空間把核心初始化，並把控制權交給下一階段。迷你 Debian 系統能
    夠在主引導流程之前新增核心模組或以加密形式掛載根檔案系統，使引導
    流程更加靈活。

      * 如果 initramfs 是由 initramfs-tools 建立，則"/init" 程式是一
        個 shell 指令碼程式。

          + 通過給內核添加 “break=init" 等啓動參數，你可以中斷這部分
            啓動流程以獲取 root shell。更多中斷條件請參見 ”/init“ 腳
            本。這個 shell 環境已足夠成熟，你可通過它很好地檢查機器的
            硬件。
   
          + 迷你 Debian 系統中可用的命令是精簡過的，且主要由一個稱爲 
            busybox(1) 的 GNU 工具提供。

      * 如果 initramfs 是由 dracut 建立，則 "/init" 程式是一個二進位
        制 systemd 程式。

          + 迷你 Debian 系統中可用的命令是一個精簡過的 systemd(1) 環
            境。

    小心
   
    當在一個只讀的根文件系統上時，使用 mount 命令需要添加 -n 選項。

%

3.1.4. 第四階段：常規 Debian 系統

    常規 Debian 系統是啓動流程的第四階段，由迷你 Debian 系統啓動。迷
    你 Debian 系統的內核在此環境下繼續運行。根文件系統將由內存切換到
    實際的硬盤文件系統上。

    init 程序是系統執行的第一個程序（PID=1），它啓動其它各種程序以完
    成主引導流程。init 程序的默認路徑是 ”/sbin/init“，但可通過內核啓
    動參數修改，例如 ”init=/path/to/init_program"。

    默認的 init 程序一直在變化中：

      * squeeze 之前的 Debian，使用簡單的 SysV 風格的 init。

      * wheezy 版本的 Debian 對 SysV 風格的 init 做了改進：使用 LSB
        頭將啓動步驟排序，同時並行執行啓動腳本。

      * jessie版本的 Debian 將默認 init 切換成 systemd，以使用事件驅
        動和並行初始化。

    提示
   
    你的系統中實際使用的 init 命令可以使用 “ps --pid 1 -f” 命令確認。

    提示
   
    在 Debian jessie 版本後，"/sbin/init" 是一個到 "/lib/systemd/
    systemd" 的符號連結。

    表 3.3. Debian 系統啓動工具列表

    +---------------------------------------------------------------+
    |      軟體包       |流行度|大小 |             說明             |
    |-------------------+------+-----+------------------------------|
    |systemd            |V:810,|15998|基於事件且支持並發的 init(8)  |
    |                   |I:916 |     |守護進程（可替代 sysvinit）   |
    |-------------------+------+-----+------------------------------|
    |systemd-sysv       |V:802,|138  |systemd 需用的用以代替        |
    |                   |I:914 |     |sysvinit 的手冊頁和符號連結   |
    |-------------------+------+-----+------------------------------|
    |                   |V:1,  |     |提供 cron 後臺守護程序（daemon|
    |systemd-cron       |I:1   |143  |）和 anacron 功能的 systemd 單|
    |                   |      |     |元                            |
    |-------------------+------+-----+------------------------------|
    |init-system-helpers|V:675,|131  |在 sysvinit 和 systemd 之間進 |
    |                   |I:930 |     |行轉換的幫助工具              |
    |-------------------+------+-----+------------------------------|
    |initscripts        |V:91, |176  |用於初始化和關閉系統的腳本    |
    |                   |I:323 |     |                              |
    |-------------------+------+-----+------------------------------|
    |sysvinit-core      |V:7,  |276  |類 System V 的 init(8) 工具   |
    |                   |I:9   |     |                              |
    |-------------------+------+-----+------------------------------|
    |sysv-rc            |V:183,|81   |類 System V 的運行級別修改機制|
    |                   |I:335 |     |                              |
    |-------------------+------+-----+------------------------------|
    |sysvinit-utils     |V:494,|79   |類 System V 的實用工具（      |
    |                   |I:999 |     |startpar(8)，bootlogd(8)，……）|
    |-------------------+------+-----+------------------------------|
    |lsb-base           |V:881,|49   |Linux 標準規範 3.2 版的 init  |
    |                   |I:999 |     |腳本功能                      |
    |-------------------+------+-----+------------------------------|
    |insserv            |V:210,|150  |利用 LSB init.d 腳本依賴性來組|
    |                   |I:330 |     |織啓動步驟的工具              |
    |-------------------+------+-----+------------------------------|
    |uswsusp            |V:3,  |714  |使用 Linux 提供的使用者態軟體 |
    |                   |I:8   |     |suspend 的工具                |
    |-------------------+------+-----+------------------------------|
    |kexec-tools        |V:1,  |278  |用於 kexec(8) 重啟（熱啟動）的|
    |                   |I:8   |     |kexec 工具                    |
    |-------------------+------+-----+------------------------------|
    |systemd-bootchart  |V:0,  |128  |啟動流程效能分析器            |
    |                   |I:1   |     |                              |
    |-------------------+------+-----+------------------------------|
    |bootchart2         |V:0,  |94   |啟動流程效能分析器            |
    |                   |I:0   |     |                              |
    |-------------------+------+-----+------------------------------|
    |pybootchartgui     |V:0,  |177  |啟動流程效能分析器（視覺化）  |
    |                   |I:0   |     |                              |
    |-------------------+------+-----+------------------------------|
    |mingetty           |V:0,  |38   |僅包含控制檯的 getty(8)       |
    |                   |I:3   |     |                              |
    |-------------------+------+-----+------------------------------|
    |mgetty             |V:0,  |315  |可智慧調製解調的 getty(8) 替代|
    |                   |I:1   |     |品                            |
    +---------------------------------------------------------------+


    提示
   
    有關啟動流程加速的最新資訊，請參見 Debian 維基：啟動流程加速詞條
    。

%

3.2. Systemd 初始化

    本節描述系統是怎樣透過 PID=1 的 systemd(1) 程式來啟動（即初始化程
    序）。

    systemd 初始化程序基於單元配置檔案 (參見 systemd.unit(5)) 來並行
    派生程序，這些單元配置檔案使用宣告樣式來書寫，代替之前的類 SysV
    的過程樣式。這些單元配置檔案從下面的一系列路徑來載入 (參見 
    systemd-system.conf(5)) ：

      * "/lib/systemd/system": OS 預設配置檔案

      * "/etc/systemd/system": 系統管理員的配置檔案，它將忽略作業系統
        預設的配置檔案

      * "/run/systemd/system": 執行時產生的配置檔案，它將忽略安裝的配
        置檔案

    他們的相互依賴關係透過"Wants=", "Requires=", "Before=", "After=",
    … 等指示來配置，(參見 systemd.unit(5) 裡的 "MAPPING OF UNIT
    PROPERTIES TO THEIR INVERSES")。資源控制也是被定義 (參見 
    systemd.resource-control(5)).

    根據單元配置檔案的字尾來區分它們的型別：

      * *.service 描述由 systemd 控制和監管的程序.參見 
        systemd.service(5).

      * *.device 描述在 sysfs(5) 裡面作為 udev(7) 裝置樹展示的裝置。
        參見 systemd.device(5).

      * *.mount 描述由 systemd 控制和監管的檔案系統掛載點。參見 
        systemd.mount(5).

      * *.automount 描述由 systemd 控制和監管的檔案系統自動掛載點。參
        見 systemd.automount(5).

      * *.swap 描述由 systemd 控制和監管的 swap 檔案或裝置。參見 
        systemd.swap(5).

      * *.path 描述被 systemd 監控的路徑，用於基於路徑的活動。參見 
        systemd.path(5).

      * *.socket 描述被 systemd 控制和監管的套接字，用於基於套接字的
        活動。參見 systemd.socket(5).

      * *.timer 描述被 systemd 控制和監管的計時器，用於基於時間的活動
        。參見 systemd.timer(5).

      * *.slice 管理 cgroups(7) 的資源。參見 systemd.slice(5).

      * *.scope 使用 systemd 的匯流排介面來程式化的建立，用以管理一系
        列系統程序。參見 systemd.scope(5).

      * *.target 把其它單元配置檔案分組，在啟動的時候，來建立同步點。
        參見systemd.target(5).

    系統啟動時（即，init），systemd 程序會嘗試啟動"/lib/systemd/
    system/default.target（通常是到"graphical.target"的符號連結）。首
    先，一些特殊的 target 單元（參見 systemd.special(7)），比如
    "local-fs.target"、"swap.target"和"cryptsetup.target"會被引入以掛
    載檔案系統。之後，其它 target 單元也會根據單元依賴關係而被引入。
    詳細情況，請閱讀 bootup(7)。

    systemd 提供向後相容的功能。在 "/etc/init.d/rc[0123456S].d/[KS]
    <name>" 裡面的 SysV 風格的啟動指令碼仍然會被分析；telinit(8) 會被
    轉換為 systemd 的單元活動請求。

    小心
   
    模擬的執行級別 2 到 4 全部被符號連結到了相同的“multi-user.target”
    。

%

3.2.1. 主機名

    核心維護系統主機名。在啟動的時候，透過 systemd-hostnamed.service
    啟動的系統單位設定系統的主機名，此主機名儲存在 "/etc/hostname"。
    這個檔案應該只包含系統主機名，而不是全稱域名。

    不帶引數執行 hostname(1) 命令可以打印出當前的主機名。

%

3.2.2. 檔案系統

    硬碟和網路檔案系統的掛載選項可以在 "/etc/fstab" 中設定，參見 
    fstab(5) 和第 9.5.7 节 “通過掛載選項優化檔案系統”。

    加密檔案系統的配置設定在“/etc/crypttab”中。參見 crypttab(5)

    軟 RAID 的配置 mdadm(8) 設定在 "/etc/mdadm/mdadm.conf". 參見 
    mdadm.conf(5).

    警告
   
    每次啟動的時候，在掛載了所有檔案系統以後，"/tmp", "/var/lock", 和
    "/var/run" 中的臨時檔案會被清空。

%

3.2.3. 網路介面初始化

    對於使用 systemd 的現代 Debian 桌面系統，網路介面通常由兩個服務進
    行初始化：lo 介面通常在“networking.service”處理，而其它介面則由
    “NetworkManager.service”處理。

    參見第 5 章網路設置來獲取怎樣來配置它們的資訊。

%

3.2.4. 核心訊息

    在控制檯上顯示的核心錯誤資訊，能夠透過設定他們的閾值水平來配置。

    # dmesg -n3

    表 3.4. 核心錯誤級別表

    +------------------------------------------+
    |錯誤級別值|錯誤級別名稱|       說明       |
    |----------+------------+------------------|
    |0         |KERN_EMERG  |系統不可用        |
    |----------+------------+------------------|
    |1         |KERN_ALERT  |行為必須被立即採取|
    |----------+------------+------------------|
    |2         |KERN_CRIT   |危險條件          |
    |----------+------------+------------------|
    |3         |KERN_ERR    |錯誤條件          |
    |----------+------------+------------------|
    |4         |KERN_WARNING|警告條件          |
    |----------+------------+------------------|
    |5         |KERN_NOTICE |普通但重要的條件  |
    |----------+------------+------------------|
    |6         |KERN_INFO   |資訊提示          |
    |----------+------------+------------------|
    |7         |KERN_DEBUG  |debug 級別的資訊  |
    +------------------------------------------+


%

3.2.5. 系統訊息

    在 systemd 下, 核心和系統的資訊都透過日誌服務
    systemd-journald.service (又名 journald)來記錄，放在"/var/log/
    journal"下的不變的二進位制資料，或放在"/run/log/journal/"下的變化
    的二進位制資料.這些二進位制日誌資料，可以透過 journalctl(1) 命令
    來訪問。

    在 systemd 下,系統日誌工具 rsyslogd(8) 改變它的行為來讀取變化的二
    進位制資料(代替 systemd 之前的預設的"/dev/log") ，並能夠建立傳統
    的不變的 ASCII 系統日誌資料。

    "/etc/default/rsyslog" 和 "/etc/rsyslog.conf" 能夠自定義系統訊息
    的日誌檔案和螢幕顯示。參見 rsyslogd(8) 和 rsyslog.conf(5)，也可以
    參見第 9.2.2 节 “日誌分析”。

%

3.2.6. systemd 下的系統管理

    systemd 不僅僅提供系統初始化，還提供通用的系統管理功能。比如說日
    誌記錄，登入管理，時間管理，網路管理等等。

    systemd(1) 通過幾個命令來管理：

      * systemctl(1) 命令控制 systemd 的系統和服務管理器（命令列）,

      * systemsdm(1) 命令控制 systemd 的系統和服務管理器(圖形介面),

      * journalctl(1) 命令查詢 systemd 日誌,

      * loginctl(1) 命令控制 systemd 登入管理器，

      * systemd-analyze(1) 分析系統啟動效能。

    這裡有一個典型的 systemd 管理命令片段列表。確切含義，請閱讀相關
    man 手冊頁。

    表 3.5. 典型的systemd 管理命令片段列表

    +---------------------------------------------------------------+
    |            操作             | 型別 |         命令片段         |
    |-----------------------------+------+--------------------------|
    |用於服務管理的圖形介面       |圖形介|"systemadm" (systemd-ui 軟|
    |                             |面    |體包)                     |
    |-----------------------------+------+--------------------------|
    |列出所有 target 單元配置     |單元  |"systemctl list-units     |
    |                             |      |--type=target"            |
    |-----------------------------+------+--------------------------|
    |列出所有 service 單元配置    |單元  |"systemctl list-units     |
    |                             |      |--type=service"           |
    |-----------------------------+------+--------------------------|
    |列出所有單元配置型別         |單元  |"systemctl list-units     |
    |                             |      |--type=help"              |
    |-----------------------------+------+--------------------------|
    |列出記憶體中所有 socket 單元 |單元  |"systemctl list-sockets"  |
    |-----------------------------+------+--------------------------|
    |列出記憶體中所有 timer 單元  |單元  |"systemctl list-timers"   |
    |-----------------------------+------+--------------------------|
    |啟動 "$unit"                 |單元  |"systemctl start $unit"   |
    |-----------------------------+------+--------------------------|
    |停止 "$unit"                 |單元  |"systemctl stop $unit"    |
    |-----------------------------+------+--------------------------|
    |重新載入服務相關的配置       |單元  |"systemctl reload $unit"  |
    |-----------------------------+------+--------------------------|
    |停止和啟動所有 "$unit"       |單元  |"systemctl restart $unit" |
    |-----------------------------+------+--------------------------|
    |啟動 "$unit" 並停止所有其它的|單元  |"systemctl isolate $unit" |
    |-----------------------------+------+--------------------------|
    |轉換到 "圖形" (圖形介面系統) |單元  |"systemctl isolate        |
    |                             |      |graphical"                |
    |-----------------------------+------+--------------------------|
    |轉換到 "多使用者" (命令列系  |單元  |"systemctl isolate        |
    |統)                          |      |multi-user"               |
    |-----------------------------+------+--------------------------|
    |轉換到 "應急模式" (單使用者命|單元  |"systemctl isolate rescue"|
    |令列系統)                    |      |                          |
    |-----------------------------+------+--------------------------|
    |向"$unit"傳送殺死訊號        |單元  |"systemctl kill $unit"    |
    |-----------------------------+------+--------------------------|
    |檢查"$unit"服務是否是活動的  |單元  |"systemctl is-active      |
    |                             |      |$unit"                    |
    |-----------------------------+------+--------------------------|
    |檢查"$unit"服務是否是失敗的  |單元  |"systemctl is-failed      |
    |                             |      |$unit"                    |
    |-----------------------------+------+--------------------------|
    |檢查"$unit|$PID|device"的狀態|單元  |"systemctl status $unit|  |
    |                             |      |$PID|$device"             |
    |-----------------------------+------+--------------------------|
    |顯示"$unit|$job"的屬性       |單元  |"systemctl show $unit|    |
    |                             |      |$job"                     |
    |-----------------------------+------+--------------------------|
    |重設失敗的"$unit"            |單元  |"systemctl reset-failed   |
    |                             |      |$unit"                    |
    |-----------------------------+------+--------------------------|
    |列出所有單元服務的依賴性     |單元  |"systemctl                |
    |                             |      |list-dependencies --all"  |
    |-----------------------------+------+--------------------------|
    |列出安裝在系統上的單元檔案   |單元檔|"systemctl                |
    |                             |案    |list-unit-files"          |
    |-----------------------------+------+--------------------------|
    |啟用 "$unit" (增加符號連結)  |單元檔|"systemctl enable $unit"  |
    |                             |案    |                          |
    |-----------------------------+------+--------------------------|
    |禁用 "$unit" (刪除符號連結)  |單元檔|"systemctl disable $unit" |
    |                             |案    |                          |
    |-----------------------------+------+--------------------------|
    |取消遮掩 "$unit" (刪除到 "/  |單元檔|"systemctl unmask $unit"  |
    |dev/null" 的符號連結)        |案    |                          |
    |-----------------------------+------+--------------------------|
    |遮掩 "$unit" (增加到 "/dev/  |單元檔|"systemctl mask $unit"    |
    |null" 的符號連結)            |案    |                          |
    |-----------------------------+------+--------------------------|
    |獲取預設的 target 設定       |單元檔|"systemctl get-default"   |
    |                             |案    |                          |
    |-----------------------------+------+--------------------------|
    |設定預設 target 為"graphical"|單元檔|"systemctl set-default    |
    |(圖形系統)                   |案    |graphical"                |
    |-----------------------------+------+--------------------------|
    |設定預設的 target 為         |單元檔|"systemctl set-default    |
    |"multi-user" (命令列系統)    |案    |multi-user"               |
    |-----------------------------+------+--------------------------|
    |顯示工作環境變數             |環境變|"systemctl                |
    |                             |數    |show-environment"         |
    |-----------------------------+------+--------------------------|
    |設定環境變數 "variable" 的值 |環境變|"systemctl set-environment|
    |為 "value"                   |數    |variable=value"           |
    |-----------------------------+------+--------------------------|
    |取消環境變數 "variable" 的設 |環境變|"systemctl                |
    |定                           |數    |unset-environment         |
    |                             |      |variable"                 |
    |-----------------------------+------+--------------------------|
    |重新載入所有單元檔案和後臺守 |生命週|"systemctl daemon-reload" |
    |護程序（daemon）             |期    |                          |
    |-----------------------------+------+--------------------------|
    |關閉系統                     |系統  |"systemctl poweroff"      |
    |-----------------------------+------+--------------------------|
    |關閉和重啟系統               |系統  |"systemctl reboot"        |
    |-----------------------------+------+--------------------------|
    |掛起系統                     |系統  |"systemctl suspend"       |
    |-----------------------------+------+--------------------------|
    |休眠系統                     |系統  |"systemctl hibernate"     |
    |-----------------------------+------+--------------------------|
    |檢視 "$unit" 的工作日誌      |日誌  |"journalctl -u $unit"     |
    |-----------------------------+------+--------------------------|
    |檢視 "$unit"的工作日誌 ("tail|日誌  |"journalctl -u $unit -f"  |
    |-f" 式樣)                    |      |                          |
    |-----------------------------+------+--------------------------|
    |顯示每一個初始化步驟所消耗的 |分析  |"systemd-analyze time"    |
    |時間                         |      |                          |
    |-----------------------------+------+--------------------------|
    |列出所有單元的初始化時間     |分析  |"systemd-analyze blame"   |
    |-----------------------------+------+--------------------------|
    |載入"$unit"檔案並檢測錯誤    |分析  |"systemd-analyze verify   |
    |                             |      |$unit"                    |
    |-----------------------------+------+--------------------------|
    |跟蹤 cgroups(7) 的啟動過程   |Cgroup|"systemd-cgls"            |
    |-----------------------------+------+--------------------------|
    |跟蹤 cgroups(7) 的啟動過程   |Cgroup|"ps xawf -eo              |
    |                             |      |pid,user,cgroup,args"     |
    |-----------------------------+------+--------------------------|
    |跟蹤 cgroups(7) 的啟動過程   |Cgroup|讀取 "/sys/fs/cgroup/     |
    |                             |      |systemd/" 下的 sysfs      |
    +---------------------------------------------------------------+


    這裡, 上面例子中的"$unit"，可以是一個單元名（字尾.service 和
    .target 是可選的)，或者，在很多情況下，也可以是匹配的多個單元
    (shell 式樣的全域性萬用字元"*", "?", "[]"，透過使用 fnmatch(3) ，
    來匹配目前在記憶體中的所有單元的基本名稱).

    上面列子的系統狀態改變命令，通常是透過"sudo"來處理，用以獲得需要
    的系統管理許可權。

    "systemctl status $unit|$PID|$device" 的輸出使用有顏色的點("●")來
    概述單元狀態，讓人看一眼就知道。

      * 白色的 "●" 表示一個 "不活動"或"變為不活動中"的狀態。

      * 紅色的 "●"表示“失敗”或者“錯誤”狀態。

      * 綠色"●"表示“活動”、“重新載入中”或“啟用中”狀態。

%

3.2.7. 定製 systemd

    使用預設安裝，透過 systemd 啟動的過程中，在 network.target 啟動後
    ，很多網路服務 (參見第 6 章網路應用)作為後臺守護程序（daemon）啟
    動。 "sshd" 也不列外。讓我們修改為按需啟動"sshd" 作為一個定製化的
    例子。

    首先，禁用系統安裝的服務單元。

     $ sudo systemctl stop sshd.service
     $ sudo systemctl mask sshd.service

    傳統 Unix 服務的按需套接字啟用（on-demand socket activation）系統
    由 indetd 超級服務來提供。在 systemd 下, 相同功能能夠透過增加
    *.socket 和 *.service 單元配置檔案來啟用。

    sshd.socket 用來定義一個監聽的套接字

    [Unit]
    Description=SSH Socket for Per-Connection Servers

    [Socket]
    ListenStream=22
    Accept=yes

    [Install]
    WantedBy=sockets.target

    sshd@.service 作為 sshd.socket 匹配的服務檔案

    [Unit]
    Description=SSH Per-Connection Server
   
    [Service]
    ExecStart=-/usr/sbin/sshd -i
    StandardInput=socket

    然後重新載入。

     $ sudo systemctl daemon-reload

%

3.3. udev 系統

    Linux 核心 2.6 和更新的核心，udev 系統提供了自動硬體發現和初始化
    機制。(參見 udev(7)).在核心發現每個裝置的基礎上，udev 系統使用從
    sysfs 檔案系統 (參見第 1.2.12 节 “procfs 和 sysfs”)的資訊啟動一個
    使用者程序，使用 modprobe(8) 程式 (參見第 3.3.1 节 “核心模組初始
    化”)載入支援它所要求的核心模組, 建立相應的裝置節點。

    提示

    如果由於某些理由，"/lib/modules/<kernel-version>/modules.dep"沒有
    被 depmod(8) 正常生成，模組可能不會被 udev 系統按期望的方式載入。
    執行"depmod -a" 來修復它。

    裝置節點的名字，可以通過"/etc/udev/rules.d/"裡的 udev 檔案來配置.
    當前預設的規則傾向建立動態生成的名字，除了光碟機和網路裝置外，會
    生成非靜態的裝置名。通過新增和光碟機、網路裝置類似的個性化規則，
    你也可以為 USB 盤之類的其它裝置，生成靜態裝置名。參見 "Writing
    udev rules" 或 "/usr/share/doc/udev/writing_udev_rules/
    index.html".

    由於 udev 系統是一個正在變化的事物，我在其它文件進行了詳細描述，
    在這裡只提供了最少的資訊。

    提示

    "/etc/fstab"裡面的掛載規則,裝置節點不必需是靜態的。你能夠使用
    UUID 來掛載裝置，來代替"/dev/sda"之類的裝置名. 參見第 9.5.3 节 “
    使用 UUID 訪問分割槽”.

%

3.3.1. 核心模組初始化

    通過 modprobe(8) 程式新增和刪除核心模組，使我們能夠從使用者程序來
    配置正在執行的 Linux 核心。udev 系統(參見第 3.3 节 “udev 系統”)自
    動化它的呼叫來幫助核心模組初始化。

    下面的非硬體模組和特殊的硬體驅動模組，需要被預先載入，把它們在"/
    etc/modules"檔案裡列出 (參見 modules(5)).

      * TUN/TAP 模組提供虛擬的 Point-to-Point 網路裝置 (TUN) 和虛擬的
        Ethernet 乙太網網路裝置 (TAP),

      * netfilter 模組提供 netfilter 防火牆能力(iptables(8), 第 5.10 
        节 “Netfilter 網路過濾框架”),

      * watchdog timer 驅動模組。

    modprobe(8) 程式的配置檔案是按 modprobe.conf(5)的說明放在"/etc/
    modprobes.d/" 目錄下，(如果你想避免自動載入某些核心模組，考慮把它
    們作為黑名單放在"/etc/modprobes.d/blacklist" 檔案裡.)

    "/lib/modules/<version>/modules.dep" 檔案由 depmod(8) 程式生成，
    它描述了 modprobe(8) 程式使用的模組依賴性.

    注意
   
    如果你在啟動時出現模組載入問題，或者 modprobe(8)時出現模組載入問
    題, "depmod -a" 可以通過重構"modules.dep"來解決這些問題。

    modinfo(8) 程式顯示 Linux 核心模組資訊。

    lsmod(8) 程式以好看的格式展示"/proc/modules"的內容,顯示當前核心載
    入了哪些模組。

    提示
   
    你能夠精確識別你係統上的硬體。參見第 9.4.3 节 “硬體識別”.

    提示
   
    你可以在啟動時配置硬體來啟用期望的硬體特徵。參見第 9.4.4 节 “硬體
    配置”.

    提示
   
    你可以重新編譯核心來增加你的特殊裝置的支援。參見第 9.9 节 “核心”.

第 4 章 認證

    當用戶（或程式）需要訪問系統時，需要進行認證，確認身份是受信任。

    警告

    PAM 的配置錯誤可能會鎖住你的系統。你必須有一個準備好的救援 CD，或
    者設立一個替代的 boot 分割槽。為了恢復系統，你需要使用它們啟動系
    統並糾正錯誤。

    警告
   
    本章是基於 2013 年發佈的 Debian 7.0 (Wheezy) 編寫的，所以其內容正
    在變得過時。

%

4.1. 一般的 Unix 認證

    一般的 Unix 認證由 PAM （Pluggable Authentication Modules，即可插
    入的驗證模組）下的 pam_unix(8) 模組提供。它的 3 個重要檔案如下，
    其內的條目使用 “:” 分隔。

    表 4.1. pam_unix(8) 使用的 3 個重要配置檔案

    +-------------------------------------------------------------+
    |   檔案    |  許可權  |使用者|  組  |          說明          |
    |-----------+----------+------+------+------------------------|
    |/etc/passwd|-rw-r--r--|root  |root  |（明文的）使用者賬號資訊|
    |-----------+----------+------+------+------------------------|
    |/etc/shadow|-rw-r-----|root  |shadow|安全加密的使用者賬號資訊|
    |-----------+----------+------+------+------------------------|
    |/etc/group |-rw-r--r--|root  |root  |組資訊                  |
    +-------------------------------------------------------------+


    “/etc/passwd” 包含下列內容。

     ...
    user1:x:1000:1000:User1 Name,,,:/home/user1:/bin/bash
    user2:x:1001:1001:User2 Name,,,:/home/user2:/bin/bash
     ...

    如 passwd(5) 中所述，這個檔案中被 “:” 分隔的每項含義如下。

      * 登入名

      * 密碼形式說明

      * 數字形式的使用者 ID

      * 數字形式的組 ID

      * 使用者名稱或註釋欄位

      * 使用者家目錄

      * 可選的使用者命令直譯器

    “/etc/passwd” 的第二項曾經被用來儲存加密後的密碼。在引入了 “/etc/
    shadow” 後，該項被用來說明密碼形式。

    表 4.2. “/etc/passwd” 第二項的內容

    +---------------------------------------+
    | 內容 |              說明              |
    |------+--------------------------------|
    |（空）|無需密碼的賬號                  |
    |------+--------------------------------|
    |x     |加密後的密碼儲存在 “/etc/shadow”|
    |------+--------------------------------|
    |*     |無法登陸的賬號                  |
    |------+--------------------------------|
    |!     |無法登陸的賬號                  |
    +---------------------------------------+


    “/etc/shadow” 包含下列內容。

     ...
    user1:$1$Xop0FYH9$IfxyQwBe9b8tiyIkt2P4F/:13262:0:99999:7:::
    user2:$1$vXGZLVbS$ElyErNf/agUDsm1DehJMS/:13261:0:99999:7:::
     ...

    如 shadow(5) 中所述，這個檔案中被 “:” 分隔的每項含義如下。

      * 登入名

      * 加密後的密碼（開頭的 “$1$” 表示使用 MD5 加密。“*” 表示無法登
        陸。）

      * 最後一次修改密碼的時間，其表示從 1970 年 1 月 1 日起的天數

      * 允許使用者再次修改密碼的天數間隔
   
      * 使用者必須修改密碼的天數間隔

      * 密碼失效前的天數，在此期間使用者會被警告

      * 密碼失效後的天數，在次期間密碼依舊會被接受

      * 賬號失效的時間，其表示從 1970 年 1 月 1 日起的天數

      * …

    “/etc/group” 包含下列內容。

    group1:x:20:user1,user2

    如 group(5) 中所述，這個檔案中被 “:” 分隔的每項含義如下。

      * 組名稱

      * 加密後的密碼（不會被真正使用）
   
      * 數字形式的組 ID

      * 使用 “,” 分隔的使用者名稱列表

    注意
   
    “/etc/gshadow” 為 “/etc/group” 提供了與 “/etc/shadow” 相似的功能
    ，但沒有被真正地使用。

    注意

    如果"auth optional pam_group.so" 這行新增到了"/etc/pam.d/
    common-auth"，並且在"/etc/security/group.conf" 裡進行了設定，一個
    使用者的實際組就可以被動態新增。參見 pam_group(8).

    注意
   
    base-passwd 軟體包包含了一份使用者和組的官方文件：“/usr/share/doc
    /base-passwd/users-and-groups.html”。

%

4.2. 管理賬號和密碼資訊

    下面是一些管理賬號資訊的重要命令。

    表 4.3. 管理賬號資訊的命令

    +---------------------------------------------------------------+
    |          命令          |                 功能                 |
    |------------------------+--------------------------------------|
    |getent passwd           |瀏覽 “<user_name>” 的賬號資訊         |
    |<user_name>             |                                      |
    |------------------------+--------------------------------------|
    |getent shadow           |瀏覽使用者 "<user_name>" 隱藏的賬戶資 |
    |<user_name>             |訊                                    |
    |------------------------+--------------------------------------|
    |getent group            |瀏覽 “<group_name>” 的組資訊          |
    |<group_name>            |                                      |
    |------------------------+--------------------------------------|
    |passwd                  |管理賬號密碼                          |
    |------------------------+--------------------------------------|
    |passwd -e               |為啟用的賬號設定一次性的密碼          |
    |------------------------+--------------------------------------|
    |chage                   |管理密碼有效期資訊                    |
    +---------------------------------------------------------------+


    其中的一些功能只能被 root 使用。密碼和資料的加密參見 crypt(3)。

    注意

    在設定了 PAM 和 NSS 的系統上（例如 Debian salsa 機器），本地的 “/
    etc/passwd”、“/etc/group” 和 “/etc/shadow” 可能不會被系統啟用使用
    。上述的命令即使處於這種環境下依舊是有效的。

%

4.3. 好密碼

    在系統安裝時建立一個賬號或使用 passwd(1) 命令時，你應該選擇一個好
    密碼，它應該由 6 到 8 個字元組成，其中包含下列根據 passwd(1) 設定
    的每個組合中的一個或多個字元。

      * 小寫字母

      * 數字 0 到 9

      * 標點符號

    警告

    密碼中不要使用可以猜到的詞。賬號名、身份證號碼、電話號碼、地址、
    生日、家庭成員或寵物的名字、字典單詞、簡單的字元序列（例如
    “12345” 或 “qwerty”）等都是糟糕的選擇。

%

4.4. 設立加密的密碼

    下面是一些用於生成加鹽的加密密碼的獨立工具。

    表 4.4. 生成密碼的工具

    +---------------------------------------------------------------+
    |軟體包 | 流行度  |大小|   命令    |            功能            |
    |-------+---------+----+-----------+----------------------------|
    |whois  |V:35,    |364 |mkpasswd   |具備 crypt(3) 庫所有特性的前|
    |       |I:393    |    |           |端                          |
    |-------+---------+----+-----------+----------------------------|
    |openssl|V:794,   |1465|openssl    |計算密碼雜湊 (OpenSSL).     |
    |       |I:993    |    |passwd     |passwd(1ssl)                |
    +---------------------------------------------------------------+


%

4.5. PAM 和 NSS

    現代的類 Unix 系統（例如 Debian 系統）提供 PAM （Pluggable
    Authentication Modules，插入式驗證模組）和 NSS（Name Service
    Switch，名稱服務切換）機制給本地系統管理員，使他們能夠配置自己的
    系統。它們的功能可以概括為以下幾點。

      * PAM 給應用軟體提供了一個靈活的認證機制，因此涉及到了密碼資料
        的交換。
   
      * NSS 提供了一個靈活的名稱服務機制，它經常被 C 標準庫使用，使例
        如 ls(1) 和 id(1) 這樣的程式獲得使用者和組名稱。

    PAM 和 NSS 系統必須保持配置一致。

    PAM 和 NSS 系統中重要的軟體包如下。

    表 4.5. PAM 和 NSS 系統中重要的軟體包

    +---------------------------------------------------------------+
    |      軟體包       |流行度|大小 |             說明             |
    |-------------------+------+-----+------------------------------|
    |libpam-modules     |V:807,|1032 |插入式驗證模組（基礎服務）    |
    |                   |I:999 |     |                              |
    |-------------------+------+-----+------------------------------|
    |libpam-ldap        |I:12  |249  |允許 LDAP 介面的插入式驗證模組|
    |-------------------+------+-----+------------------------------|
    |libpam-cracklib    |I:16  |115  |啟用 cracklib 支援的插入式驗證|
    |                   |      |     |模組                          |
    |-------------------+------+-----+------------------------------|
    |libpam-systemd     |V:474,|573  |用於 logind 註冊使用者會話的插|
    |                   |I:853 |     |入式驗證模組（PAM）           |
    |-------------------+------+-----+------------------------------|
    |libpam-doc         |I:1   |1044 |插入式驗證模組（html 和文字文 |
    |                   |      |     |件）                          |
    |-------------------+------+-----+------------------------------|
    |libc6              |V:935,|12771|GNU C 庫：同樣提供“名稱服務切 |
    |                   |I:999 |     |換”服務的共享庫               |
    |-------------------+------+-----+------------------------------|
    |glibc-doc          |I:11  |3161 |GNU C 庫：幫助頁面            |
    |-------------------+------+-----+------------------------------|
    |glibc-doc-reference|I:5   |12740|GNU C 庫：參考手冊，有 info、 |
    |                   |      |     |pdf 和 html 格式（non-free）  |
    |-------------------+------+-----+------------------------------|
    |libnss-mdns        |I:526 |150  |用於解析組播 DNS 名稱的 NSS 模|
    |                   |      |     |組                            |
    |-------------------+------+-----+------------------------------|
    |libnss-ldap        |I:11  |265  |NSS 模組，用於使用 LDAP 作為一|
    |                   |      |     |個名稱服務的                  |
    |-------------------+------+-----+------------------------------|
    |                   |      |     |NSS 模組，用於使用 LDAP 作為一|
    |libnss-ldapd       |I:14  |153  |個名稱服務的（libnss-ldap 的新|
    |                   |      |     |fork）                        |
    +---------------------------------------------------------------+


      * libpam-doc 中 “The Linux-PAM System Administrators' Guide” 是
        瞭解 PAM 配置的必要文件。
   
      * glibc-doc-reference 中的 “System Databases and Name Service
        Switch” 是瞭解 NSS 配置的重要文件。

    注意

    你可以使用 “aptitude search 'libpam-|libnss-'” 命令檢視更多的相關
    軟體包。NSS 縮寫也可能意味著 “Network Security Service，網路安全
    服務”，它不同於 “Name Service Switch，名稱服務切換”。

    注意
   
    PAM 是為每個程式初始化環境變數為系統預設值的最基礎方法。

    在 systemd 下, libpam-systemd 軟體包被安裝用來管理使用者登入，透
    過在 systemd 控制組層，為 logind 註冊使用者會話來實現。參見 
    systemd-logind(8), logind.conf(5), 和 pam_systemd(8).

%

4.5.1. PAM 和 NSS 訪問的配置檔案

    下面是一些 PAM 和 NSS 訪問的重要配置檔案。

    表 4.6. PAM 和 NSS 訪問的配置檔案

    +---------------------------------------------------------------+
    |   配置檔案   |                      功能                      |
    |--------------+------------------------------------------------|
    |/etc/pam.d/   |為 “<program_name>” 程式設定 PAM 配置；參加 pam |
    |<program_name>|(7) 和 pam.d(5)                                 |
    |--------------+------------------------------------------------|
    |/etc/         |為每個服務條目設定 NSS 配置。參見 nsswitch.conf |
    |nsswitch.conf |(5)                                             |
    |--------------+------------------------------------------------|
    |/etc/nologin  |通過 pam_nologin(8) 模組限制使用者登陸          |
    |--------------+------------------------------------------------|
    |/etc/securetty|通過 pam_securetty(8) 模組限制 root 訪問 tty    |
    |--------------+------------------------------------------------|
    |/etc/security/|通過 pam_access(8) 模組設定訪問限制             |
    |access.conf   |                                                |
    |--------------+------------------------------------------------|
    |/etc/security/|通過 pam_group(8) 模組設定基於組的限制          |
    |group.conf    |                                                |
    |--------------+------------------------------------------------|
    |/etc/security/|通過 pam_env(8) 模組設定環境變數                |
    |pam_env.conf  |                                                |
    |--------------+------------------------------------------------|
    |/etc/         |通過帶有 “readenv=1” 引數的 pam_env(8) 模組設定 |
    |environment   |額外的環境變數                                  |
    |--------------+------------------------------------------------|
    |/etc/default/ |通過帶有 “readenv=1 envfile=/etc/default/locale”|
    |locale        |引數的 pam_env(8) 模組設定語言環境值（在 Debian |
    |              |系統中）                                        |
    |--------------+------------------------------------------------|
    |/etc/security/|通過 pam_linits(8) 模組設定資源限制（ulimit、   |
    |limits.conf   |core 等等）                                     |
    |--------------+------------------------------------------------|
    |/etc/security/|通過 pam_time(8) 模組設定時間限制               |
    |time.conf     |                                                |
    |--------------+------------------------------------------------|
    |/etc/systemd/ |設定systemd 的登入管理器配置 (參見 logind.conf  |
    |logind.conf   |(5) 和 systemd-logind.service(8))               |
    +---------------------------------------------------------------+


    密碼選擇的限制是通過 PAM 模組 pam_unix(8) 和 pam_cracklib(8) 來實
    現的。它們可以通過各自的引數進行配置。

    提示
   
    PAM 模組在檔名中使用字尾 “.so”。

%

4.5.2. 現代的集中式系統管理

    現代的集中式系統管理可以使用集中式的輕量目錄訪問協議（LDAP）伺服
    器進行部署，從而通過網路管理許多類 Unix 和非類 Unix 系統。輕量目
    錄訪問協議的開源實現是 OpenLDAP 軟體。

    LDAP 伺服器使用帶有 PAM 和 NSS 的libpam-ldap 和 libnss-ldap 軟體
    包為 Debian 系統提供賬號資訊。需要一些動作來啟用 LDAP（我沒有使用
    過這個設定，並且下面的資訊純粹是第二手的資訊。請在這種前提下閱讀
    下列內容。）。

      * 你通過執行一個程式，例如獨立的 LDAP 守護程序 slapd(8)，來建立
        集中式的 LDAP 伺服器。

      * 你在 “/etc/pam.d/” 目錄中的 PAM 配置檔案裡，使用
        “pam_ldap.so” 替代預設值 “pam_unix.so”。

          + Debian 使用 “/etc/pam_ldap.conf” 作為 libpam-ldap 的配置
            檔案，“/etc/pam_ldap.secret” 作為儲存 root 密碼的檔案。

      * 你在 “/etc/nsswitch.conf” 檔案中改變 NSS 配置，使用 “ldap” 替
        代預設值（“compat” 或 “file”）。

          + Debian 使用 “/etc/libnss-ldap.conf” 作為 libnss-ldap 的配
            置檔案。

      * 為了密碼的安全，你必須讓 libpam-ldap 使用 SLL（或 TLS）連線。

      * 為了確保 LDAP 網路開銷資料的完整性，你必須讓 libpam-ldap 使用
        SLL（或 TLS）連線。

      * 為了減少 LDAP 網路流量，你應該在本地執行 nscd(8) 來快取任何
        LDAP 搜尋結果。

    參見由 libpam-doc 軟體包提供的 pam_ldap.conf(5) 中的文件和 “/usr/
    share/doc/libpam-doc/html/”，以及 glibc-doc 軟體包提供的 “info
    libc 'Name Service Switch'”。

    類似地，你可以使用其它方法來設定另一種集中式的系統。

      * 同 Windows 系統整合使用者和組。

          + 通過 winbind 和 libpam_winbind 軟體包訪問 Windows domain
            服務.

          + 參見 winbindd(8) 和 Integrating MS Windows Networks with
            Samba。

      * 同古老的類 Unix 系統整合使用者和組。

          + 通過 nis 軟體包訪問 NIS (之前叫 YP) 或 NIS+。

          + 參見 The Linux NIS(YP)/NYS/NIS+ HOWTO。

%

4.5.3. “為什麼 GNU su 不支援 wheel 組”

    這是在舊的 “info su” 底部 Richard M. Stallman 所說的一句名言。別
    擔心：Debian 系統中當前的 su 命令使用了 PAM，這樣當在 “/etc/pam.d
    /su” 中啟用了帶有 “pam_wheel.so” 的行後，就能夠限制非 wheel 組的
    使用者 su 到 root 組的能力。

%

4.5.4. 嚴格的密碼規則

    安裝 libpam-cracklib 軟體包你能夠強制使用嚴格的密碼規則，例如，通
    過在 “/etc/pam.d/common-password” 中新增下列行。

    對於 squeeze 發行版：

    password required pam_cracklib.so retry=3 minlen=9 difok=3
    password [success=1 default=ignore] pam_unix.so use_authtok nullok md5
    password requisite pam_deny.so
    password required pam_permit.so

%

4.6. 其它的訪問控制

    注意
   
    參見第 9.3.15 节 “Alt-SysRq 鍵” 來限制核心的安全警告金鑰（SAK）功
    能。

%

4.6.1. sudo

    sudo(8) 程式是為了使一個系統管理員可以給使用者受限的 root 許可權
    並記錄 root 活動而設計的。sudo 只需要一個普通使用者的密碼。安裝
    sudo 軟體包並通過設定 “/etc/sudoers” 中的選項來使用它。參見 “/usr
    /share/doc/sudo/examples/sudoers” 和第 1.1.12 节 “sudo 配置” 中的
    配置示例。

    我將 sudo 用於單使用者系統（參見第 1.1.12 节 “sudo 配置”）是為了
    防止自己可能做出的愚蠢行為。就我個人而言，我認為使用 sudo 會比使
    用 root 賬號作業系統來得好。例如，下列命令將 “<some_file>” 的擁有
    者改變為 “<my_name>”。

    $ sudo chown <my_name> <some_file>

    當然如果你知道 root 密碼（比如自行安裝 Debian 的使用者所做的），
    任何使用者賬號都可以使用 “su -c” 讓任何命令以 root 執行。

%

4.6.2. PolicyKit

    PolicyKit 是在類 Unix 作業系統中控制整個系統許可權的一個作業系統
    元件。

    新的 GUI 圖形介面程式，在設計的時候，不是作為特權程序來執行。它們
    通過 PolicyKit 來和特權程序通訊，執行管理操作。

    在 Debian 系統中，PolicyKit 限制了屬於 sudo 組的使用者賬號的這種
    操作。

    參見 polkit(8)。

%

4.6.3. SELinux

    Security-Enhanced Linux (SELinux) 是一個收緊許可權模組的框架，它
    比普通的類 Unix 安全模組 mandatory access control (MAC) 策略更嚴
    格。 root 許可權在某些條件下被限制。

%

4.6.4. 限制訪問某些服務端的服務

    對系統安全而言，儘可能的禁用服務程式，是一個好的主意。網路服務是
    危險的。有不使用的服務，不管是直接由後臺守護程序（daemon）啟用，
    還是通過super-server 程式啟用，都被認為是安全風險。

    許多程式,比如說 sshd(8), 使用基於 PAM 的訪問控制。也還有許多方式
    來限制訪問一些服務端的程式。

      * 配置檔案: "/etc/default/<program_name>"

      * 後臺守護程序（daemon）的服務單元配置

      * PAM (Pluggable Authentication Modules)

      * super-server 使用 "/etc/inetd.conf"

      * TCP wrapper 使用 "/etc/hosts.deny" 和 "/etc/hosts.allow" , 
        tcpd(8)

      * Sun RPC" 使用 /etc/rpc.conf"

      * atd(8) 使用 "/etc/at.allow" 和 "/etc/at.deny"

      * crontab(1) 使用 "/etc/cron.allow" 和 "/etc/cron.deny"

      * Network firewall 或netfilter 框架

    參見第 3.2.6 节 “systemd 下的系統管理”, 第 4.5.1 节 “PAM 和 NSS
    訪問的配置檔案”, 和第 5.10 节 “Netfilter 網路過濾框架”.

    提示
   
    NFS 和其它基於 RPC 的程式，需要啟用 Sun RPC 服務。

    提示

    如果你遠端訪問最新的 Debian 系統有問題，看下在"/etc/hosts.deny"裡
    是否存在"ALL: PARANOID"這樣討厭的配置，請把它註釋掉。(但是你必須
    注意這種行為所帶來的安全風險。)

%

4.7. 安全認證

    注意
   
    這裡的資訊也許不夠完全滿足你的安全需求，但這也是一個好的開始.

%

4.7.1. 網際網路密碼安全

    許多流行的傳輸層服務，互動資訊使用純文字的密碼認證。這是非常差的
    方式，通過公共的網際網路傳輸純文字密碼，密碼能夠被截獲到。你能夠
    執行這些服務，使用 "Transport Layer Security" (TLS) 或它的前身,
    "Secure Sockets Layer" (SSL) ，通過加密來使包括密碼在內的整個通訊
    更加安全。

    表 4.7. 安全和不安全的服務埠列表

    +------------------------------------+
    |不安全的服務名|埠 |安全的服務名 |埠 |
    |--------------+---+-------------+---|
    |www (http)    |80 |https        |443|
    |--------------+---+-------------+---|
    |smtp (郵件)   |25 |ssmtp (smtps)|465|
    |--------------+---+-------------+---|
    |ftp-data      |20 |ftps-data    |989|
    |--------------+---+-------------+---|
    |ftp           |21 |ftps         |990|
    |--------------+---+-------------+---|
    |telnet        |23 |telnets      |992|
    |--------------+---+-------------+---|
    |imap2         |143|imaps        |993|
    |--------------+---+-------------+---|
    |pop3          |110|pop3s        |995|
    |--------------+---+-------------+---|
    |ldap          |389|ldaps        |636|
    +------------------------------------+


    加密消耗 CPU 時間。作為對 CPU 有益的替代方案，你可以保持使用純文
    字通訊，僅僅使用安全認證協議加密密碼，比如說：POP 使用
    "Authenticated Post Office Protocol" (APOP)，SMTP 和 IMAP 使用
    "Challenge-Response Authentication Mechanism MD5" (CRAM-MD5)。（
    你的郵件客戶端通過網際網路上你的郵件伺服器傳送郵件時，最近流行使
    用新的遞交埠 587 來代替傳統的 SMTP 埠 25，這樣可以避免在使用
    CRAM-MD5 認證自己時，網路提供商阻塞 25 埠。）

%

4.7.2. 安全 Shell

    安全 Shell (SSH) 程式使用安全認證來提供不安全網路上兩個不可信任主
    機之間的安全加密通訊。它由 OpenSSH 客戶端, ssh(1), 和 OpenSSH 後
    臺守護程序（daemon）, sshd(8)組成.SSH 使用埠轉發特性，可以給 POP
    和 X 之類的不安全的協議通訊建立隧道，使其可以在網際網路上安全傳輸
    。

    客戶端可以使用如下方式來認證自己：基於主機的認證、公鑰認證、質疑
    應答認證、密碼認證。使用公鑰認證，可以實現遠端免密碼登入。參見第
     6.9 节 “伺服器遠端訪問和工具 (SSH)”.

%

4.7.3. 網際網路額外的安全方式

    即使你執行 Secure Shell (SSH) 和 Point-to-point tunneling
    protocol (PPTP) 這樣的安全服務，在網際網路上，仍然有機會使用野蠻
    暴力猜測密碼攻擊進入。使用防火牆策略 (參見第 5.10 节 “Netfilter
    網路過濾框架”)，並和下面的安全工具一起，可以提升安全形勢。

    表 4.8. 提供額外安全方式的工具列表

    +---------------------------------------------------------------+
    |   軟體包    |流行度 |大小|                說明                |
    |-------------+-------+----+------------------------------------|
    |knockd       |V:0,   |102 |小的 port-knock 後臺守護程序（daemon|
    |             |I:3    |    |） knockd(1) 和客戶端 konck(1)      |
    |-------------+-------+----+------------------------------------|
    |fail2ban     |V:112, |2092|禁用造成多個認證錯誤的 IP           |
    |             |I:123  |    |                                    |
    |-------------+-------+----+------------------------------------|
    |libpam-shield|V:0,   |115 |把嘗試猜測密碼的遠端攻擊者關在外面  |
    |             |I:0    |    |                                    |
    +---------------------------------------------------------------+


%

4.7.4. root 密碼安全

    為阻止人們使用 root 許可權訪問你的機器，你需要做下面的操作。

      * 阻止對硬碟的物理訪問

      * 鎖住 BIOS 來阻止從可移動介質啟動
   
      * 為 GRUB 互動式會話設定密碼

      * 鎖住 GRUB 選單，禁止編輯

    如果可以物理訪問硬碟，則可以使用下面的步驟，相對簡單的重置密碼。

     1. 將硬碟拿到一個可以設定 BIOS 從CD 啟動的電腦。

     2. 使用緊急介質啟動系統（Debian 啟動磁碟, Knoppix CD, GRUB CD, …
        ）。
   
     3. 用讀寫訪問掛載根分割槽。

     4. 編輯根分割槽的"/etc/passwd"檔案，使 root 賬戶條目的第二段為空
        。

    對於 grub-rescue-pc ，即使用緊急介質啟動的電腦，如果有編輯 GRUB
    選單條目 (參見第 3.1.2 节 “第二階段：引載加載程序”) 的許可權，在
    啟動時，使用下面的步驟更加簡單。

     1. 使用核心引數啟動系統來修改一些事情，比如說，"root=/dev/hda6
        rw init=/bin/sh".
   
     2. 編輯 "/etc/passwd" 檔案，使 root 賬戶條目的第二段為空。

     3. 重啟系統。

    系統的 root shell 現在可以無密碼訪問了。

    注意

    一旦某人擁有 root shell 訪問許可權，他能夠訪問任何內容，並可以重
    設系統上的任何密碼。此外，他可以使用 john 和 crack 等軟體包的暴力
    破解工具來比較所有使用者的密碼 (參見第 9.4.11 节 “系統安全性和完
    整性檢查”)。被破解的密碼，可以用來和其它系統進行比較。

    為避免這些相關問題，僅有的理論上的軟體解決方案是使用 dm-crypt 和
    initramfs (參見第 9.8 节 “資料加密提示”)加密 root 分割槽(或 "/
    etc" 分割槽) 。這樣的話，你總是需要密碼來啟動系統。

第 5 章 網路設置

    提示
   
    關於GNU/Linux網路的通用手冊，請查看Linux 網路管理員手冊。

    提示
   
    關於Debian專屬的網路手冊，請查看Debian管理員手冊—網路配置。

    警告
   
    為代替使用傳統的網路介面名稱的方案 ("eth0", "eth1", "wlan0", …),
    新的 systemd 使用"enp0s25" 之類的 "可預測網路介面名稱".

    警告
   
    本章是基於 2013 年發佈的 Debian 7.0 (Wheezy) 編寫的，所以其內容正
    在變得過時。

    提示

    儘管本文件仍使用舊的 ifconfig(8) 以 IPv4 做為其網路組態的範例，
    Debian 正移動至 ip(8) 在 wheezy 釋出中使用 IPv4+IPv6。歡迎對本文
    件的昇級補丁。

    提示
   
    systemd環境下，可以用networkd來配置網路。請參考systemd-networkd
    (8)。

%

5.1. 基本網路架構

    讓我們來回顧一下現代Debian操作系統中的基本網路架構。

    表 5.1. 網路配置工具一覽表

    +---------------------------------------------------------------+
    |       軟體包        |流行度|大小 |  類型   |       說明       |
    |---------------------+------+-----+---------+------------------|
    |                     |V:587,|     |配置：： |用來啓動/關閉網路 |
    |ifupdown             |I:991 |217  |ifupdown |的標準工具（Debian|
    |                     |      |     |         |特有）            |
    |---------------------+------+-----+---------+------------------|
    |ifplugd              |V:3,  |217  |同上     |自動管理有線網路  |
    |                     |I:18  |     |         |                  |
    |---------------------+------+-----+---------+------------------|
    |                     |V:0,  |     |         |網路測試腳本，加強|
    |ifupdown-extra       |I:1   |106  |同上     |"ifupdown"軟體包的|
    |                     |      |     |         |功能              |
    |---------------------+------+-----+---------+------------------|
    |ifmetric             |V:0,  |37   |同上     |設置網路接口的路由|
    |                     |I:1   |     |         |度量              |
    |---------------------+------+-----+---------+------------------|
    |                     |      |     |         |腳本文件，利用"/  |
    |                     |V:0,  |     |         |etc/network/      |
    |guessnet             |I:0   |422  |同上     |interfaces"文件來 |
    |                     |      |     |         |加強"ifupdown"的功|
    |                     |      |     |         |能                |
    |---------------------+------+-----+---------+------------------|
    |                     |V:0,  |     |         |映射腳本文件，增強|
    |ifscheme             |I:0   |59   |同上     |"ifupdown"軟體包的|
    |                     |      |     |         |功能              |
    |---------------------+------+-----+---------+------------------|
    |                     |V:358,|     |配置：： |NetworkManager（守|
    |network-manager      |I:440 |14957|NM       |衛進程）：自動管理|
    |                     |      |     |         |網路              |
    |---------------------+------+-----+---------+------------------|
    |network-manager-gnome|V:132,|5540 |同上     |NetworkManager（  |
    |                     |I:372 |     |         |GNOME前端）       |
    |---------------------+------+-----+---------+------------------|
    |wicd                 |I:24  |36(*)|配置：： |有線和無線網路管理|
    |                     |      |     |wicd     |器（元軟體包）    |
    |---------------------+------+-----+---------+------------------|
    |wicd-cli             |V:0,  |60(*)|同上     |有線和無線網路管理|
    |                     |I:1   |     |         |器（命令行客戶端）|
    |---------------------+------+-----+---------+------------------|
    |                     |V:0,  |176  |         |有線和無線網路管理|
    |wicd-curses          |I:3   |(*)  |同上     |器（文本界面客戶端|
    |                     |      |     |         |）                |
    |---------------------+------+-----+---------+------------------|
    |wicd-daemon          |V:19, |992  |同上     |有線和無線網路管理|
    |                     |I:26  |(*)  |         |器（守護進程）    |
    |---------------------+------+-----+---------+------------------|
    |wicd-gtk             |V:15, |576  |同上     |有線和無線網路管理|
    |                     |I:25  |(*)  |         |器（GTK+客戶端）  |
    |---------------------+------+-----+---------+------------------|
    |                     |V:300,|     |配置：： |封包過濾和網路地址|
    |iptables             |I:993 |2520 |Netfilter|轉換管理工具（    |
    |                     |      |     |         |Netfilter）       |
    |---------------------+------+-----+---------+------------------|
    |                     |V:672,|     |配置：： |iproute2, IPv6和其|
    |iproute2             |I:926 |2867 |iproute2 |他高級網路配置：ip|
    |                     |      |     |         |(8),tc(8)等等     |
    |---------------------+------+-----+---------+------------------|
    |                     |V:0,  |     |         |根據不同的靜態標準|
    |ifrename             |I:3   |125  |同上     |來重命名網路接口：|
    |                     |      |     |         |ifrename(8)       |
    |---------------------+------+-----+---------+------------------|
    |ethtool              |V:102,|597  |同上     |顯示或更改以太網設|
    |                     |I:261 |     |         |備的設定          |
    |---------------------+------+-----+---------+------------------|
    |                     |V:234,|     |測試：： |測試能否連接遠程主|
    |iputils-ping         |I:997 |113  |iproute2 |機，通過主機名或IP|
    |                     |      |     |         |地址（iproute2）  |
    |---------------------+------+-----+---------+------------------|
    |iputils-arping       |V:8,  |55   |同上     |測試能否連接遠程主|
    |                     |I:127 |     |         |機，通過ARP地址   |
    |---------------------+------+-----+---------+------------------|
    |iputils-tracepath    |V:4,  |72   |同上     |跟蹤訪問遠程主機的|
    |                     |I:60  |     |         |路徑              |
    |---------------------+------+-----+---------+------------------|
    |                     |      |     |         |NET-3網路工具箱（ |
    |net-tools            |V:234,|991  |配置：： |net-tools，IPv4網 |
    |                     |I:634 |     |net-tools|絡配置）：ifconfig|
    |                     |      |     |         |(8)等等。         |
    |---------------------+------+-----+---------+------------------|
    |                     |      |     |         |測試能否連接遠程主|
    |inetutils-ping       |V:0,  |359  |測試：： |機，通過hostname或|
    |                     |I:1   |     |net-tools|IP 地址（傳統方式 |
    |                     |      |     |         |，GNU）           |
    |---------------------+------+-----+---------+------------------|
    |                     |V:2,  |     |         |測試能否連接遠程主|
    |arping               |I:29  |77   |同上     |機，通過ARP地址（ |
    |                     |      |     |         |傳統方法）        |
    |---------------------+------+-----+---------+------------------|
    |                     |V:63, |     |         |跟蹤連接遠程主機的|
    |traceroute           |I:936 |159  |同上     |路徑（傳統方法，控|
    |                     |      |     |         |制檯）            |
    |---------------------+------+-----+---------+------------------|
    |isc-dhcp-client      |V:231,|686  |配置：： |DHCP客戶端        |
    |                     |I:979 |     |底層     |                  |
    |---------------------+------+-----+---------+------------------|
    |wpasupplicant        |V:332,|3436 |同上     |WPA和WPA2客戶端支 |
    |                     |I:507 |     |         |持（IEEE 802.11i) |
    |---------------------+------+-----+---------+------------------|
    |wpagui               |V:0,  |781  |同上     |wpa_supplicant Qt |
    |                     |I:2   |     |         |圖形界面客戶端    |
    |---------------------+------+-----+---------+------------------|
    |wireless-tools       |V:188,|297  |同上     |操控Linux無線擴展 |
    |                     |I:254 |     |         |的工具            |
    |---------------------+------+-----+---------+------------------|
    |ppp                  |V:206,|1054 |同上     |使用chat連接PPP/  |
    |                     |I:474 |     |         |PPPoE             |
    |---------------------+------+-----+---------+------------------|
    |pppoeconf            |V:0,  |192  |配置：： |配置助手，以便於使|
    |                     |I:8   |     |輔助     |用PPPoE連接       |
    |---------------------+------+-----+---------+------------------|
    |pppconfig            |V:1,  |801  |同上     |配置助手，以便於使|
    |                     |I:2   |     |         |用chat連接PPP     |
    |---------------------+------+-----+---------+------------------|
    |                     |V:0,  |     |         |配置助手，以便於使|
    |wvdial               |I:5   |249  |同上     |用wvdial和ppp連接 |
    |                     |      |     |         |PPP               |
    |---------------------+------+-----+---------+------------------|
    |mtr-tiny             |V:6,  |161  |測試：： |追蹤連接遠程主機的|
    |                     |I:54  |     |底層     |路徑（文本界面）  |
    |---------------------+------+-----+---------+------------------|
    |                     |V:4,  |     |         |追蹤連接遠程主機的|
    |mtr                  |I:43  |214  |同上     |路徑（文本界面和  |
    |                     |      |     |         |GTK+界面）        |
    |---------------------+------+-----+---------+------------------|
    |gnome-nettool        |V:2,  |2105 |同上     |獲取常見網路信息的|
    |                     |I:45  |     |         |工具（GNOME)      |
    |---------------------+------+-----+---------+------------------|
    |nmap                 |V:31, |4452 |同上     |網路映射/端口掃描 |
    |                     |I:253 |     |         |（Nmap，控制檯）  |
    |---------------------+------+-----+---------+------------------|
    |zenmap               |V:2,  |2939 |同上     |網路映射/端口掃描 |
    |                     |I:9   |     |         |（GTK+）          |
    |---------------------+------+-----+---------+------------------|
    |tcpdump              |V:19, |1329 |同上     |網路流量分析（    |
    |                     |I:204 |     |         |Tcpdump，控制檯） |
    |---------------------+------+-----+---------+------------------|
    |wireshark            |I:55  |64   |同上     |網路流量分析（    |
    |                     |      |     |         |Wireshark,GTK+）  |
    |---------------------+------+-----+---------+------------------|
    |tshark               |V:3,  |407  |同上     |網路流量分析(控制 |
    |                     |I:34  |     |         |檯）              |
    |---------------------+------+-----+---------+------------------|
    |tcptrace             |V:0,  |401  |同上     |根據tcpdump的輸出 |
    |                     |I:3   |     |         |生成的連接數據統計|
    |---------------------+------+-----+---------+------------------|
    |snort                |V:0,  |2206 |同上     |靈活的網路入侵偵測|
    |                     |I:1   |     |         |系統（Snort）     |
    |---------------------+------+-----+---------+------------------|
    |ntopng               |V:1,  |969  |同上     |在網頁瀏覽器中展示|
    |                     |I:2   |     |         |網路流量          |
    |---------------------+------+-----+---------+------------------|
    |                     |      |     |         |BIND軟體包提供的網|
    |dnsutils             |V:64, |256  |同上     |絡客戶端程序：    |
    |                     |I:517 |     |         |nslookup(8),      |
    |                     |      |     |         |nsupdate(8),dig(8)|
    |---------------------+------+-----+---------+------------------|
    |dlint                |V:0,  |53   |同上     |利用域名伺服器查詢|
    |                     |I:7   |     |         |來查看DNS域信息   |
    |---------------------+------+-----+---------+------------------|
    |dnstracer            |V:0,  |61   |同上     |跟蹤DNS查詢直至源 |
    |                     |I:2   |     |         |頭                |
    +---------------------------------------------------------------+


%

5.1.1. 主機名解析

    主機名解析，目前也是由 NSS (名字服務轉換 Name Service Switch) 機
    制來支援。這個解析的流程如下。

     1. "/etc/nsswitch.conf" 檔案裡的 "hosts: files dns" 這段規定主機
        名解析順序。 (代替 "/etc/host.conf" 檔案裡的"order" 這段原有
        的功能。)

     2. files 方式首先被呼叫。如果主機名在 "/etc/hosts" 檔案裡面發現
        ，則返回所有有效地址並退出。 ( "/etc/host.conf" 檔案包含
        "multi on".)

     3. dns 方式被呼叫。如果主機名通過查詢 "/etc/resolv.conf" 檔案裡
        面寫的網際網路域名系統 Domain Name System (DNS) 來找到，則返
        回所有有效地址並退出。

    例如, "/etc/hosts" 看起來如下。

    127.0.0.1 localhost
    127.0.1.1 <host_name>

    # The following lines are desirable for IPv6 capable hosts
    ::1     ip6-localhost ip6-loopback
    fe00::0 ip6-localnet
    ff00::0 ip6-mcastprefix
    ff02::1 ip6-allnodes
    ff02::2 ip6-allrouters
    ff02::3 ip6-allhosts

    每一行由 IP 地址開始，接下來是相關聯的主機名.

    在這個例子的第二行 127.0.1.1 IP 地址也許不會在其它類 Unix 系統發
    現。Debian Installer 為沒有永久 IP 地址的系統建立這個條目，作為某
    些軟體（如 GNOME）的一個變通方法，見文件 bug #719621.

    <host_name> 匹配在"/etc/hostname"裡定義的主機名。

    對於有永久 IP 地址的系統，這個永久 IP 地址應當代替這裡的
    127.0.1.1。

    對於有永久 IP 地址和有域名系統 Domain Name System (DNS)提供完全資
    格域名 fully qualified domain name (FQDN) 的系統，規範名
    <host_name>.<domain_name> 應當被用來代替 <host_name>.

    如果 resolvconf 軟體包沒有安裝，"/etc/resolv.conf" 是一個靜態檔案
    。如果安裝了，它是一個符號連結。此外，它包含有解析策略的初始化資
    訊。如 DNS 是 IP="192.168.11.1",則包含如下。

    nameserver 192.168.11.1

    resolvconf 軟體包使這個 "/etc/resolv.conf" 檔案成為一個符號連結，
    並通過鉤子指令碼自動管理其內容。

    對於典型 adhoc 區域網環境下的 PC 工作站，除了基本的 files 和 dns
    方式之外，主機名還能夠通過組播 DNS (mDNS, 零配置網路 Zeroconf)進
    行解析。

      * Avahi 提供 Debian 下的組播 DNS 發現框架。

      * 它和 Apple Bonjour / Apple Rendezvous 相當.

      * libnss-mdns 外掛包提供 mDNS 的主機名解析，GNU C 庫 (glibc)的
        GNU 名字服務轉換 Name Service Switch (NSS) 功能支援 mDNS。

      * "/etc/nsswitch.conf" 檔案應當有像 "hosts: files mdns4_minimal
        [NOTFOUND=return] dns mdns4" 這樣的一段.

      * ".local"結尾的主機名，使用 pseudo-top-level domain (TLD) 來解
        析.

      * mDNS IPv4 本地連線組播地址 "224.0.0.251" 或它相應的 IPv6 地址
        "FF02::FB" 被用來作為 ".local" 結尾名字的 DNS 查詢。

    較老的 Windows 系統安裝 winbind 軟體包來提供舊的 NETBios over TCP
    /IP 主機名解析。為啟用這個功能，"/etc/nsswitch.conf" 檔案應當有這
    樣的一段： "hosts: files mdns4_minimal [NOTFOUND=return] dns
    mdns4 wins"。 (現代 Windows 系統通常使用 dns 方式來進行主機名解析
    。)

    注意

    域名系統 Domain Name System 中的擴充套件通用頂級域名 expansion of
    generic Top-Level Domains (gTLD) 還在進行中。在區域網內，選擇一個
    域名時，請提防名字衝突 name collision。

%

5.1.2. 網路介面名稱

    網路介面名稱，比如說 eth0, 是在 Linux 核心裡分配給每一個硬體的，
    當這個硬體被核心發現的時候，通過使用者層的配置機制udev (參見第
     3.3 节 “udev 系統”)來分配.網路卡介面名稱也就是 ifup(8) 和 
    interfaces(5)裡的 physical interface。

    為了保證每個網路介面名稱在每次重啟後一致，會用到 MAC 地址等,有一
    個規則檔案"/etc/udev/rules.d/70-persistent-net.rules". 這個檔案是
    由"/lib/udev/write_net_rules" 程式自動生成，是由
    "persistent-net-generator.rules" 規則檔案來執行. 你可以修改該檔案
    來改變命名規則。

    小心

    當編輯 "/etc/udev/rules.d/70-persistent-net.rules" 規則檔案時，你
    必須保持每條規則在單獨的一行中，並且 MAC 地址要小寫。比如說，如果
    你發現"FireWire device" 和"PCI device" 在這個檔案中，你也許想命名
    "PCI device" 作為 eth0，並配置它為首要網路介面。

%

5.1.3. 區域網網路地址範圍

    讓我們重新提醒下在 rfc1918 裡規定的區域網 local area networks
    (LANs)IPv4 32 位地址在各類地址的保留範圍. 這些地址保證不會與因特
    網上專有的地址衝突。

    表 5.2. 網路地址範圍列表

    +---------------------------------------------------------------+
    |類 |        網路地址        |  子網掩碼   |子網掩碼/位 |# 子網 |
    |別 |                        |             |     數     |  數   |
    |---+------------------------+-------------+------------+-------|
    |A  |10.x.x.x                |255.0.0.0    |/8          |1      |
    |---+------------------------+-------------+------------+-------|
    |B  |172.16.x.x — 172.31.x.x |255.255.0.0  |/16         |16     |
    |---+------------------------+-------------+------------+-------|
    |C  |192.168.0.x —           |255.255.255.0|/24         |256    |
    |   |192.168.255.x           |             |            |       |
    +---------------------------------------------------------------+


    注意

    如果這些地址分配到一個主機，那麼這個主機一定不能夠直接訪問網際網
    路，必須通過一個作為閘道器的代理服務或通過網路地址轉換 Network
    Address Translation (NAT). 消費區域網環境，寬頻路由器通常使用 NAT
    。

%

5.1.4. 網路裝置支援

    儘管 Debian 系統支援大多數硬體裝置，但依舊有一些網路裝置需要 DFSG
    non-free 韌體來支援它們。參見第 9.9.6 节 “硬體驅動和韌體”。

%

5.2. 現代的桌面網路配置

    對於使用 systemd 的現代 Debian 桌面系統，網路介面通常由兩個服務進
    行初始化：lo 介面通常在“networking.service”處理，而其它介面則由
    “NetworkManager.service”處理。

    Debian squeeze 和新的發行版都可以通過後臺守護程序（daemon）管理軟
    體來管理網路連線，例如 NetworkManager (NM)（network-manager 和相
    關軟體包）或 Wicd（wicd 和相關軟體包）。

      * 它們有自己的 GUI 和命令列程式來作為使用者介面。

      * 它們有自己的後臺守護程序（daemon）作為它們的系統後端。

      * 它們使你可以簡單地將系統連線到網路。

      * 它們使你可以簡單地管理有線和無線網路的配置。

      * 它們允許你配置網路而不依賴傳統的 ifupdown 軟體包。

    注意
   
    不要在伺服器上使用這些自動網路配置工具。它們主要針對於膝上型電腦
    上的移動桌面使用者。

    這些現代的網路配置工具需要進行適當的配置，以避免與傳統 ifupdown
    軟體包發生衝突，它的配置檔案位於 “/etc/network/interfaces”。

    注意

    這些自動網路配置工具的一些功能可能會帶來令人煩擾的問題。它們不像
    傳統的 ifupdown 軟體包那樣健壯。檢查 network-manager 的 BTS 和
    wicd 的 BTS，來檢視當前的問題和限制。

%

5.2.1. 圖形介面的網路配置工具

    Debian 系統 NM 和 Wicd 的官方文件分別位於 “/usr/share/doc/
    network-manager/README.Debian” 和 “/usr/share/doc/wicd/
    README.Debian”。

    本質上，如下操作即可完成桌面的網路配置。

     1. 通過下列命令使桌面使用者 foo 歸屬 “netdev” 組（另外，例如
        GNOME 和 KDE 這樣的現代桌面環境會通過 D-bus 自動完成該操作）
        。

        $ sudo adduser foo netdev

     2. 使 “/etc/network/interfaces” 的配置保持下面那樣簡潔。

        auto lo
        iface lo inet loopback

     3. 通過下列命令重新啟動 NM 或 Wicd。

        $ sudo /etc/init.d/network-manager restart

        $ sudo /etc/init.d/wicd restart

     4. 通過圖形介面配置網路。

    注意
   
    只有不列在 “/etc/network/interfaces” 中的介面會被 NM 或 Wicd 管理
    ，以避免與 ifupdown 的衝突。

    提示

    如果你想擴充套件 NM 的網路配置功能，請尋找適當的外掛模組和補充軟
    體包，例如 network-manager-openconnect、
    network-manager-openvpn-gnome、network-manager-pptp-gnome、
    mobile-broadband-provider-info、gnome-bluetooth 等等。這同樣適用
    於 Wicd。

    小心

    這些自動網路配置工具可能無法相容 “/etc/network/interfaces” 中傳統
    的 ifupdown 的深奧配置，例如第 5.6 节 “使用 ifupdown 進行基本網路
    配置（舊）” 和第 5.7 节 “使用 ifupdown 的高階網路配置（舊）” 中的
    那些配置。檢查 network-manager 的 BTS 和 wicd 的 BTS 來檢視當前的
    問題和限制。

%

5.3. 沒有影象介面的現代網路配置

    使用 systemd 的系統中，可以在 /etc/systemd/network/ 裡配置網路。
    參見 systemd-resolved(8)、resolved.conf(5) 和 systemd-networkd(8)
    。

    這個允許在沒有影象介面的情況下配置現代網路。

    DHCP 客戶端的配置可以透過建立 "/etc/systemd/network/dhcp.network"
    檔案來進行設定。例如：

    [Match]
    Name=en*
   
    [Network]
    DHCP=yes

    一個靜態網路配置能夠透過建立 "/etc/systemd/network/
    static.network" 來設定.比如：

    [Match]
    Name=en*
   
    [Network]
    Address=192.168.0.15/24
    Gateway=192.168.0.1

%

5.4. 傳統的網路連線和配置

    如果第 5.2 节 “現代的桌面網路配置” 中描述的方法無法滿足你的需要，
    那你應該使用結合了許多普通工具的傳統網路連線和配置方法。

    傳統網路連線的每個方法都是特定的（參見第 5.5 节 “網路連線方式（傳
    統）”）。

    用於 Linux 底層網路配置的程式有兩種型別（參見第 5.8.1 节
    “Iproute2 命令”）。

      * 來自 Linux NET-3 網路系統的舊 net-tools 程式（ifconfig(8)……）
        。它們中的大多數都已經過時了。
   
      * 來自現在的 Linux 網路系統的新 Linux iproute2 程式（ip(8)……）
        。

    儘管底層程式十分強大，但它們使用繁瑣。因此建立了高層網路配置系統
    。

    ifupdown 軟體包是 Debian 中這種高層網路配置系統的實際標準。它讓你
    可以簡單地通過例如 “ifup eth0” 這樣的命令來開啟網路。它的配置檔案
    位於 “/etc/network/interfaces” 中並且其典型內容如下。

    auto lo
    iface lo inet loopback
   
    auto eth0
    iface eth0 inet dhcp

    resolvconf 軟體包是為了使 ifupdown 系統支援自動重寫解析器配置檔案
    “/etc/resolv.conf” 來使網路地址解析平滑地重新配置。現在，大多數
    Debian 網路配置軟體包都使用了 resolvconf 軟體包（參見 “/usr/share
    /doc/resolvconf/README.Debian”）。

    ifupdown 軟體包的輔助指令碼，例如 ifplugd、guessnet、ifscheme等，
    是為了進行網路環境的自動動態配置，例如位於有線區域網中的移動電腦
    。這些相對來說比較難使用，但在當前的 ifupdown 系統下工作良好。

    詳細的案例參見第 5.6 节 “使用 ifupdown 進行基本網路配置（舊）” 和
    第 5.7 节 “使用 ifupdown 的高階網路配置（舊）”。

%

5.5. 網路連線方式（傳統）

    小心

    在這節描述的連線測試方式僅僅用於測試目的。不應當直接用於日常的網
    路連線。建議你使用 NM, Wicd, 或 ifupdown 包代替。(參見第 5.2 节 “
    現代的桌面網路配置” 和第 5.6 节 “使用 ifupdown 進行基本網路配置（
    舊）”).

    一臺電腦典型的網路連線方式和連線路徑，能夠使用下面的內容概述。

    表 5.3. 網路連線方式和連線路徑列表

    +---------------------------------------------------------------+
    |    PC    |  連線方式  |               連線路徑                |
    |----------+------------+---------------------------------------|
    |串列埠    |PPP         |⇔ modem ⇔ POTS ⇔ 撥號接入點 ⇔ ISP      |
    |(ppp0)    |            |                                       |
    |----------+------------+---------------------------------------|
    |乙太網口  |PPPoE/DHCP/ |⇔ 寬頻-modem ⇔ 寬頻鏈路 ⇔ 寬頻接入點 ⇔ |
    |(eth0)    |Static      |ISP                                    |
    |----------+------------+---------------------------------------|
    |乙太網口  |DHCP/Static |⇔ LAN ⇔ 網路地址轉換 (NAT) 的寬頻路由器|
    |(eth0)    |            |(⇔ 寬頻-modem …)                       |
    +---------------------------------------------------------------+


    每種連線方式配置指令碼彙總。

    表 5.4. 網路連線配置列表

    +---------------------------------------------------------------+
    | 連線方式  |            配置             |       後端包        |
    |-----------+-----------------------------+---------------------|
    |PPP        |pppconfig 建立固定的 chat    |pppconfig, ppp       |
    |-----------+-----------------------------+---------------------|
    |PPP (選用) |wvdialconf 建立啟發式的 chat |ppp, wvdial          |
    |-----------+-----------------------------+---------------------|
    |PPPoE      |pppoeconf 建立固定的 chat    |pppoeconf, ppp       |
    |-----------+-----------------------------+---------------------|
    |DHCP       |在 "/etc/dhcp/dhclient.conf" |isc-dhcp-client      |
    |           |裡描述                       |                     |
    |-----------+-----------------------------+---------------------|
    |靜態 IP    |在 "/etc/network/interfaces" |iproute 或 net-tools |
    |(IPv4)     |裡描述                       |(舊)                 |
    |-----------+-----------------------------+---------------------|
    |靜態 IP    |在 "/etc/network/interfaces" |iproute              |
    |(IPv6)     |裡描述                       |                     |
    +---------------------------------------------------------------+


    網路連線縮略語意義如下。

    表 5.5. 網路連線縮略語列表

    +---------------------------------------------------------------+
    |  縮略語  |                        說明                        |
    |----------+----------------------------------------------------|
    |POTS      |普通老式電話服務                                    |
    |----------+----------------------------------------------------|
    |BB        |寬頻                                                |
    |----------+----------------------------------------------------|
    |BB-service|比如說，數字使用者線路（DSL），電視線纜，光纖到戶   |
    |          |(FTTP)                                              |
    |----------+----------------------------------------------------|
    |BB-modem  |比如說，DSL modem, 線纜 modem, 或光纖網路終端(ONT)  |
    |----------+----------------------------------------------------|
    |LAN       |區域網                                              |
    |----------+----------------------------------------------------|
    |WAN       |廣域網                                              |
    |----------+----------------------------------------------------|
    |DHCP      |動態主機配置協議                                    |
    |----------+----------------------------------------------------|
    |PPP       |點到點協議                                          |
    |----------+----------------------------------------------------|
    |PPPoE     |乙太網上的點到點協議                                |
    |----------+----------------------------------------------------|
    |ISP       |網際網路服務提供商                                  |
    +---------------------------------------------------------------+


    注意

    通過電視線纜的廣域網服務，通常使用 DHCP 或 PPPoE。ADSL 和 FTTP 通
    常使用 PPPoE。你需要諮詢你的網際網路服務提供商來獲得廣域網連線使
    用的精確配置。

    注意

    當寬頻路由器用來搭建家庭區域網環境時，區域網上的電腦需要使用寬頻
    路由器上的網路地址轉換（NAT），來連線到廣域網。在這樣的情況下，區
    域網上的電腦網路介面需使用靜態 IP 或者寬頻路由器提供的 DHCP 服務
    。寬頻路由器必須按 ISP 的指引來配置連線到廣域網。

%

5.5.1. 乙太網 DHCP 連線

    典型的現代家庭和小的商業網路，也就是區域網，使用一些消費等級的寬
    頻路由器連線到廣域網（因特網）。路由器後面的區域網通常使用路由器
    上執行的動態主機配置協議（DHCP）服務端提供的服務。

    僅僅需要安裝 isc-dhcp-client 包為乙太網提供動態主機配置協議
    (DHCP)服務。

    參見 dhclient.conf(5).

%

5.5.2. 乙太網靜態 IP 連線

    靜態 IP 乙太網不需要特別的配置動作。

%

5.5.3. 使用 pppconfig 的 PPP 連線

    配置指令碼 pppconfig 配置 PPP 連線，僅需要互動式的選擇下面內容。

      * 電話號碼

      * ISP 使用者名稱

      * ISP 密碼
   
      * 埠速率

      * modem 通訊埠

      * 認證方式

    表 5.6. 使用 pppconfig 的 PPP 連線配置檔案列表

    +---------------------------------------------------------------+
    |         檔案          |                 功能                  |
    |-----------------------+---------------------------------------|
    |/etc/ppp/peers/        |pppconfig 生成針對 <isp_name> 的 pppd  |
    |<isp_name>             |配置檔案                               |
    |-----------------------+---------------------------------------|
    |/etc/chatscripts/      |pppconfig 生成針對 <isp_name> 的 chat  |
    |<isp_name>             |配置檔案                               |
    |-----------------------+---------------------------------------|
    |/etc/ppp/options       |pppd 常用的執行引數                    |
    |-----------------------+---------------------------------------|
    |/etc/ppp/pap-secret    |PAP 的鑑權認證資料 (有安全風險)        |
    |-----------------------+---------------------------------------|
    |/etc/ppp/chap-secret   |CHAP 的鑑權認證資料(更安全)            |
    +---------------------------------------------------------------+


    小心
   
    "<isp_name>" 是 "網際網路服務提供商" ，假設 pon 和 poff 命令呼叫
    時，沒有引數。

    你可以使用下面的底層網路配置工具測試配置。

    $ sudo pon <isp_name>
    ...
    $ sudo poff <isp_name>

    參見 "/usr/share/doc/ppp/README.Debian.gz".

%

5.5.4. 使用 wvdialconf 的另一種可選的 PPP 連線

    一個不同的使用pppd(8) 方案是使用來自 wvdial 包的 wvdial(1)。代替
    pppd 執行 chat(8) 來撥號和協商連線，wvdial 進行撥號和初始化協商，
    然後啟動 pppd 進行餘下操作。

    配置指令碼 wvdialconf 配置 PPP 連線，僅需要互動式的選擇下面內容。

      * 電話號碼

      * ISP 使用者名稱

      * ISP 密碼

    在大部分情況下，wvdial 能夠成功建立連線並自動維護認證鑑權資料。

    表 5.7. 使用 wvdialconf 的 PPP 連線配置檔案列表

    +---------------------------------------------------------------+
    |        檔案        |                   功能                   |
    |--------------------+------------------------------------------|
    |/etc/ppp/peers/     |wvdialconf 生成針對 wvdial 的 pppd 配置檔 |
    |wvdial              |案                                        |
    |--------------------+------------------------------------------|
    |/etc/wvdial.conf    |wvdialconf 生成配置檔案                   |
    |--------------------+------------------------------------------|
    |/etc/ppp/options    |pppd 常用的執行引數                       |
    |--------------------+------------------------------------------|
    |/etc/ppp/pap-secret |PAP 的鑑權認證資料 (有安全風險)           |
    |--------------------+------------------------------------------|
    |/etc/ppp/chap-secret|CHAP 的鑑權認證資料(更安全)               |
    +---------------------------------------------------------------+


    你可以使用下面的底層網路配置工具測試配置。

    $ sudo wvdial
    ...
    $ sudo killall wvdial

    參見 wvdial(1) 和 wvdial.conf(5).

%

5.5.5. 使用 pppoeconf 的 PPPoE 乙太網連線

    當你的網際網路提供商提供 PPPoE 連線，並且你決定把電腦直接連線到廣
    域網，那你的電腦網路必須使用 PPPoE 來配置。PPPoE 表示乙太網上的
    PPP。配置指令碼pppoeconf 互動式的配置 PPPoE 連線。

    配置檔案在下面。

    表 5.8. 使用 pppoeconf 的 PPPoE 連線配置檔案列表

    +---------------------------------------------------------------+
    |          檔案           |                功能                 |
    |-------------------------+-------------------------------------|
    |/etc/ppp/peers/          |pppoeconf 生成針對pppoe 的 pppd 配置 |
    |dsl-provider             |檔案                                 |
    |-------------------------+-------------------------------------|
    |/etc/ppp/options         |pppd 常用的執行引數                  |
    |-------------------------+-------------------------------------|
    |/etc/ppp/pap-secret      |PAP 的鑑權認證資料 (有安全風險)      |
    |-------------------------+-------------------------------------|
    |/etc/ppp/chap-secret     |CHAP 的鑑權認證資料(更安全)          |
    +---------------------------------------------------------------+


    你可以使用下面的底層網路配置工具測試配置。

    $ sudo /sbin/ifconfig eth0 up
    $ sudo pon dsl-provider
    ...
    $ sudo poff dsl-provider
    $ sudo /sbin/ifconfig eth0 down

    參見 "/usr/share/doc/pppoeconf/README.Debian".

%

5.6. 使用 ifupdown 進行基本網路配置（舊）

    Debian 系統上的傳統 TCP/IP 網路搭建，ifupdown 軟體包是作為一個上
    層工具來使用。有兩個典型場景。

      * 像移動電腦上的動態 IP 系統，你可以使用 resolvconf 包搭建 TCP/
        IP 網路，它能夠使你快速切換你的網路配置。 (參見第 5.6.4 节 “
        使用 DHCP 的網路介面”).
   
      * 像伺服器上的靜態 IP 系統，你不需要 resolvconf 包來搭建你的
        TCP/IP 網路，並保持你的系統簡單(參見第 5.6.5 节 “使用靜態 IP
        地址的網路介面”).

    如果你想設定高階配置，這些傳統的設定方法，是相當有用的。在下面的
    內容中發現細節。

    ifupdown 包提供 Debian 系統中標準的高層網路配置框架。在本節中，我
    們通過 ifupdown 的簡單介紹和許多典型列子來學習基本的網路配置。

%

5.6.1. 簡單的命令語法

    ifupdown 包包含有兩個命令: ifup(8) 和 ifdown(8). 它們提供專注於"/
    etc/network/interfaces" 配置檔案的上層網路配置。

    表 5.9. 使用 ifupdown 進行基本網路配置的命令列表

    +---------------------------------------------------------------+
    |  命令   |                        操作                         |
    |---------+-----------------------------------------------------|
    |ifup eth0|如果 "iface eth0" 節存在，使用 eth0 的配置來啟動網路 |
    |         |介面 eth0                                            |
    |---------+-----------------------------------------------------|
    |ifdown   |如果 "iface eth0" 節存在，使用 eth0 的配置來關閉網路 |
    |eth0     |介面 eth0                                            |
    +---------------------------------------------------------------+


    警告
   
    請不要使用 ifconfig(8) 和 ip(8) 這類的底層網路配置工具命令來配置
    一個 up 狀態的介面。

    注意
   
    並沒有一個叫 ifupdown 的命令。

%

5.6.2. "/etc/network/interfaces" 基本語法

    在 interfaces(5) 裡解釋的 "/etc/network/interfaces" 關鍵語法，能
    夠用下面的表格概括。

    表 5.10. "/etc/network/interfaces" 裡面的節列表

    +---------------------------------------------------------------+
    |           節            |                說明                 |
    |-------------------------+-------------------------------------|
    |"auto <interface_name>"  |當系統啟動時，啟動介面 <             |
    |                         |interface_name>                      |
    |-------------------------+-------------------------------------|
    |"allow-auto              |同上                                 |
    |<interface_name>"        |                                     |
    |-------------------------+-------------------------------------|
    |"allow-hotplug           |當核心從介面檢測到一個熱拔插事件時， |
    |<interface_name>"        |啟動介面 <interface_name>            |
    |-------------------------+-------------------------------------|
    |"iface <config_name> …"  |定義 <config_name> 的網路配置        |
    |開頭的行                 |                                     |
    |-------------------------+-------------------------------------|
    |"mapping                 |定義 <config_name> 的對映值來匹配    |
    |<interface_name_glob>" 開|<interface_name>                     |
    |頭的行                   |                                     |
    |-------------------------+-------------------------------------|
    |"#" 號開始的行           |像註釋一樣忽略（行尾註釋不被支援）   |
    |-------------------------+-------------------------------------|
    |"\" 反斜槓結尾的行       |擴充套件配置到下一行                 |
    +---------------------------------------------------------------+


    以 iface 開頭行的節，有下面的語法。

    iface <config_name> <address_family> <method_name>
     <option1> <value1>
     <option2> <value2>
     ...

    對於基本配置， mapping 節沒有被使用，你可以使用網路介面名作為網路
    配置名。 (參見第 5.7.5 节 “對映節 mapping stanza”).

    警告
   
    在 "/etc/network/interfaces"裡，不要為一個網路介面重複定義"iface"
    節。

%

5.6.3. 迴環網路介面

    在啟動系統的時候， "/etc/network/interfaces" 檔案裡下面的配置條目
    啟動了迴環網路介面 lo 。 (通過 auto 節).

    auto lo
    iface lo inet loopback

    這節內容在 "/etc/network/interfaces" 檔案裡面一直存在。

%

5.6.4. 使用 DHCP 的網路介面

    按第 5.5.1 节 “乙太網 DHCP 連線” 準備系統後，在"/etc/network/
    interfaces" 裡面，按下面的內容建立配置條目後，網路介面的 DHCP 便
    配置好了。

    allow-hotplug eth0
    iface eth0 inet dhcp

    當 Linux 核心檢測到物理介面 eth0, allow-hotplug 節促使 ifup 啟動
    介面，iface 促使 ifup 使用 DHCP 來配置介面。

%

5.6.5. 使用靜態 IP 地址的網路介面

    在 "/etc/network/interfaces" 檔案裡面建立配置條目，來配置靜態 IP
    網路介面。如下所示。

    allow-hotplug eth0
    iface eth0 inet static
     address 192.168.11.100
     netmask 255.255.255.0
     gateway 192.168.11.1
     dns-domain example.com
     dns-nameservers 192.168.11.1

    當 Linux 核心檢測到 eth0, allow-hotplug 節促使 ifup 啟動介面，
    iface 節促使 ifup 使用靜態 IP 來配置介面。

    這裡，我假設下面的配置。

      * 區域網的 IP 地址範圍: 192.168.11.0 - 192.168.11.255

      * 閘道器的 IP 地址: 192.168.11.1

      * 電腦的 IP 地址: 192.168.11.100
   
      * resolvconf 包:已安裝

      * 域名: "example.com"

      * DNS 伺服器的 IP 地址：192.168.11.1

    當 resolvconf 包沒有安裝時，DNS 相關的配置，需要按下面的方式手工
    編輯 "/etc/resolv.conf" 。

    nameserver 192.168.11.1
    domain example.com

    小心
   
    用在上面例子裡的 IP 地址，不意味著照抄。你應當按你實際網路配置調
    整 IP 地址。

%

5.6.6. 無線區域網介面基礎

    無線 LAN (簡稱 WLAN) 提供快速的無線連線，使用基於 IEEE 802.11 標
    準集的非授權無線寬頻擴頻通訊技術。

    無線介面跟乙太網介面非常像，但在初始化時，要求提供一些網路 ID 和
    金鑰資料。他們的上層網路工具差不多和乙太網介面一樣，除開介面名有
    一點點不同，按使用的不同核心驅動，像 eth1 , wlan0 , ath0 , wifi0
    ……

    提示
   
    wmaster0 裝置是主裝置，它僅僅只是新的 mac80211 Linux API 裡，
    SoftMAC 使用的一個內部裝置。

    這裡有一些需要記住的 WLAN 關鍵詞。

    表 5.11. WLAN 縮寫詞列表

    +---------------------------------------------------------------+
    |縮略語|      全稱       |                 說明                 |
    |------+-----------------+--------------------------------------|
    |NWID  |Network ID       |802.11 之前 WaveLAN 網路使用的 16 位網|
    |      |                 |路號 (強烈不贊成使用)                 |
    |------+-----------------+--------------------------------------|
    |(E)   |(Extended)       |無線接入點 (APs) 的網路名稱，互連形成 |
    |SSID  |Service Set      |一個完整的 802.11 無線區域網, 域名 ID |
    |      |Identifier       |                                      |
    |------+-----------------+--------------------------------------|
    |WEP,  |Wired Equivalent |使用 40 位金鑰的第一代 64位（128位）無|
    |(WEP2)|Privacy          |線加密標準（不贊成使用）              |
    |------+-----------------+--------------------------------------|
    |WPA   |Wi-Fi Protected  |第二代無線加密標準（實現大部分 802.11i|
    |      |Access           |），和 WEP 相容                       |
    |------+-----------------+--------------------------------------|
    |WPA2  |Wi-Fi Protected  |第三代無線加密標準（完全的 802.11i），|
    |      |Access 2         |與 WEP 不相容                         |
    +---------------------------------------------------------------+


    實際選擇使用的協議是由你配置的無線路由器所限制。

%

5.6.7. 使用 WPA/WPA2 的無線區域網介面

    你需要安裝 wpasupplicant 包來支援 WLAN 使用新的 WPA/WPA2.

    使用 DHCP 的無線區域網連線，"/etc/network/interfaces" 檔案的條目
    需要按下面的內容設定。

    allow-hotplug ath0
    iface ath0 inet dhcp
     wpa-ssid homezone
     # hexadecimal psk is encoded from a plaintext passphrase
     wpa-psk 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f

    參見 "/usr/share/doc/wpasupplicant/README.modes.gz".

%

5.6.8. 使用 WEP 的無線區域網介面

    你需要安裝 wireless-tools 包來支撐老的 WEP 無線區域網。（你的消費
    等級的路由器可能仍然使用不安全的架構，但這總比沒有好。）

    小心
   
    請注意：WEP 無線區域網上的網路流量，可以被其他人監聽。

    使用 DHCP 的無線區域網連線，"/etc/network/interfaces" 檔案的條目
    需要按下面的內容設定。

    allow-hotplug eth0
    iface eth0 inet dhcp
     wireless-essid Home
     wireless-key1 0123-4567-89ab-cdef
     wireless-key2 12345678
     wireless-key3 s:password
     wireless-defaultkey 2
     wireless-keymode open

    參見 "/usr/share/doc/wireless-tools/README.Debian".

%

5.6.9. PPP 連線

    你需要按之前的描述配置 PPP 連線(參見第 5.5.3 节 “使用 pppconfig
    的 PPP 連線”). 然後，按下面的方式給第一個 PPP 裝置 ppp0 增加 “/
    etc/network/interfaces" 檔案裡的條目.

    iface ppp0 inet ppp
     provider <isp_name>

%

5.6.10. 另一種 PPP 連線

    你需要按之前的描述先配置好使用 wvdial 的另外一種 PPP 連線(參見第
     5.5.4 节 “使用 wvdialconf 的另一種可選的 PPP 連線”). 然後，按下
    面的方式給第一個 PPP 裝置 ppp0 增加 “/etc/network/interfaces" 檔
    案裡的條目.

    iface ppp0 inet wvdial

%

5.6.11. PPPoE 連線

    使用 PPPoE 直接連線到廣域網的電腦，你需要按之前的描述用 PPPoE 連
    線配置系統(參見第 5.5.5 节 “使用 pppoeconf 的 PPPoE 乙太網連線”).
    然後，按下面的方式給第一個 PPPoE 裝置 eth0 增加 “/etc/network/
    interfaces" 檔案裡的條目.

    allow-hotplug eth0
    iface eth0 inet manual
     pre-up /sbin/ifconfig eth0 up
     up ifup ppp0=dsl
     down ifdown ppp0=dsl
     post-down /sbin/ifconfig eth0 down
    # The following is used internally only
    iface dsl inet ppp
     provider dsl-provider

%

5.6.12. ifupdown 網路配置狀態

    "/etc/network/run/ifstate" 檔案儲存了由 ifupdown 軟體包管理的當前
    所有的活動網路介面的期望狀態。但不幸的是，即使ifupdown 系統沒有按
    期望的啟動某個網路介面，"/etc/network/run/ifstate" 檔案仍然會把它
    列為啟用狀態。

    如果對一個網路介面的 ifconfig(8) 命令輸出沒有如下列子中的一行，那
    它就不能夠作為 IPV4 網路的一部分使用.

      inet addr:192.168.11.2  Bcast:192.168.11.255  Mask:255.255.255.0

    注意
   
    對於連線到 PPPoE 的乙太網裝置， ifconfig(8) 命令的輸出看起來像上
    面的列子。

%

5.6.13. 網路重新配置基礎

    當你試圖重新配置介面，如 eth0 時,你必須首先用 "sudo ifdown eth0"
    命令關閉它. 這將從"/etc/network/run/ifstate" 檔案裡面移除 eth0 條
    目。 (如果 eth0 之前沒有被適當配置，或沒有啟用，這個命令將導致出
    現一些錯誤資訊。迄今為止，對於簡單的單使用者工作站，在任何時間執
    行這個操作，看起來都是安全的。)

    你現在可以按需要重新配置網路介面 eth0 ，重寫 "/etc/network/
    interfaces" 檔案的內容。

    然後，你可以使用 "sudo ifup eth0" 命令，重新啟用 eth0 。

    提示
   
    你可以簡單的執行 "sudo ifdown eth0;sudo ifup eth0" 來初始化或重新
    初始化網路介面。

%

5.6.14. ifupdown-extra 包

    ifupdown-extra 包提供簡易的網路連線測試，和 ifupdown 包一道使用.

      * network-test(1) 命令能夠在 shell 裡使用。
   
      * 自動指令碼將執行每一個 ifup 執行的命令。

    network-test 命令把你從麻煩的執行分析網路問題的底層命令中解放出來
    。

    自動指令碼安裝在 " /etc/network/*/ "並執行下面的操作。

      * 檢查網路線纜連線

      * 檢查重複 IP 地址使用

      * 按 "/etc/network/routes" 的定義，建立系統靜態路由

      * 檢查網路的閘道器是否可以到達

      * 在 "/var/log/syslog" 檔案裡面記錄結果

    系統日誌記錄對管理遠端系統的網路問題非常有用。

    提示

    ifupdown-extra 包的自動化行為是由 "/etc/default/network-test" 來
    配置. 部分自動化檢查，會減慢一點系統啟動速度，因為這些指令碼需要
    一些時間來監聽 ARP 答覆.

%

5.7. 使用 ifupdown 的高階網路配置（舊）

    ifupdown 軟體包，使用其高階用法，其功能就能夠超出在第 5.6 节 “使
    用 ifupdown 進行基本網路配置（舊）” 所描述的內容。

    描述在這裡的這些功能是完全可選的。我，由於懶惰和極簡主義，幾乎不
    使用這些令人煩擾的東西。

    小心

    如果你不能夠通過第 5.6 节 “使用 ifupdown 進行基本網路配置（舊）”
    裡的資訊建立網路連線,使用下面的資訊，你就會使你的情形變得比較糟糕
    。

%

5.7.1. ifplugd 軟體包

    ifplugd 軟體包是一個老的自動網路配置工具，它僅能夠管理乙太網連線
    。解決了移動 PC 等拔插乙太網線纜的問題。如果你有安裝
    NetworkManager 或 Wicd (參見第 5.2 节 “現代的桌面網路配置”)，就不
    需要這個軟體包。

    這個軟體包執行一個後臺守護程序（daemon）來代替 auto 或 
    allow-hotplug 的功能 (參見表 5.10 “"/etc/network/interfaces" 裡面
    的節列表”)，並啟動網路連線上的介面。

    乙太網埠怎樣使用 ifplugd 軟體包，比如 eth0，請看下面。

     1. 刪除 "/etc/network/interfaces" 裡面的節: "auto eth0" 或
        "allow-hotplug eth0".

     2. 保留 "/etc/network/interfaces" 裡的節: "iface eth0 inet …" 和
        "mapping …".
   
     3. 安裝 ifplugd 軟體包.

     4. 執行 "sudo dpkg-reconfigure ifplugd".

     5. 把 eth0 作為 "由 ifplugd 監控的靜態網路卡".

    現在，網路按你希望的方式重新配置了。

      * 在開啟電源或發現硬體的時候啟動，介面不會自己啟動自己。

          + 快速啟動過程，沒有長的 DHCP 等待時間。

          + 沒有適當 IPv4 地址的介面不會被滑稽的啟用 (參見第 5.6.12 
            节 “ifupdown 網路配置狀態”).

      * 發現乙太網線纜時，啟動介面。

      * 在拔掉乙太網線纜後啟動一段時間，然後介面自動關閉。

      * 在插入另外的乙太網線纜時，介面在新的網路環境下啟動。

    提示
   
    ifplugd(8) 命令的引數能夠設定其行為，比如說重新配置介面的延時。

%

5.7.2. ifmetric 軟體包

    ifmetric 軟體包使我們能夠根據經驗來維護路由度量值，即使是 DHCP 的
    路由度量值。

    下面設定 eth0 介面的值，讓其在有 wlan0 介面的情況下，更加適當。

     1. 安裝 ifmetric 軟體包。

     2. 在 "/etc/network/interfaces" 裡，增加一行 "metric 0"，緊挨著
        放在"iface eth0 inet dhcp"這行下面。

     3. 在 "/etc/network/interfaces" 裡，增加一行 "metric 1" ，緊挨著
        放在 "iface wlan0 inet dhcp" 這行下面.

    metric 0 意味著最高路由優先順序，是預設值。大的 metric 值意味著較
    低的路由優先順序。具有最低 metric 值的活動的介面 IP 地址，成為原
    始路由。參見ifmetric(8)。

%

5.7.3. 虛擬介面

    單個物理乙太網介面能夠配置為使用不同的 IP 地址的多個虛擬介面。這
    樣做的目的，通常是把介面連線到幾個 IP 子網。比如說，只有一個網路
    卡的基於 IP 地址的虛擬 web 主機，就是這樣一個應用。

    舉個例子，讓我們假設下面的情況。

      * 你主機上的單個乙太網介面連線到乙太網集線器（不是寬頻路由器）
        。

      * 乙太網集線器同時連線到網際網路和本地區域網。

      * 區域網使用子網 192.168.0.x/24.

      * 你主機的物理介面 eth0 使用 DHCP 提供的 IP 地址來連線網際網路
        。

      * 你的主機使用 192.168.0.1 作為區域網的虛擬介面 eth0:0 的地址。

    "/etc/network/interfaces" 裡下面的節配置你的網路。

    iface eth0 inet dhcp
     metric 0
    iface eth0:0 inet static
     address 192.168.0.1
     netmask 255.255.255.0
     network 192.168.0.0
     metric 1

    小心

    雖然這個配置列子，並使用 netfilter/iptables (參見第 5.10 节
    “Netfilter 網路過濾框架”) 的網路地址轉換(NAT)，能夠給只有單個網路
    介面的區域網提供廉價的路由器，但這樣設定，沒有真正的防火牆能力。
    你應當使用 2 塊物理網路卡的 NAT 來使本地網路更安全，隔離不安全的
    網際網路。

%

5.7.4. 高階命令語法

    ifupdown 軟體包提供高階網路配置，使用網路配置名和網路介面名。我使
    用的術語和 ifup(8) 以及 interfaces(5)有少量不同。

    表 5.12. 網路裝置術語列表

    +---------------------------------------------------------------+
    |man 手冊|本文術|  下面文字的列子  |            說明            |
    | 頁術語 |  語  |                  |                            |
    |--------+------+------------------+----------------------------|
    |物理介面|網路介|lo, eth0,         |Linux 核心給出的名字 (使用  |
    |名      |面名  |<interface_name>  |udev 機制)                  |
    |--------+------+------------------+----------------------------|
    |邏輯介面|網路配|config1, config2, |在 "/etc/network/interfaces"|
    |名      |置名  |<config_name>     |裡緊跟著 iface 的名字       |
    +---------------------------------------------------------------+


    在第 5.6.1 节 “簡單的命令語法” 裡的基本網路配置命令，需要網路配置
    名來標識匹配 "/etc/network/interfaces" 裡 iface 節的網路介面名。

    高階網路配置命令能夠按下面的方式區分 "/etc/network/interfaces" 裡
    的網路配置名和網路介面名。

    表 5.13. ifupdown 高階網路配置命令列表

    +---------------------------------------------------------------+
    |       命令        |                   操作                    |
    |-------------------+-------------------------------------------|
    |ifup eth0=config1  |使用配置 config1 啟動網路介面 eth0         |
    |-------------------+-------------------------------------------|
    |ifdown eth0=config1|使用配置 config1 關閉網路介面 eth0         |
    |-------------------+-------------------------------------------|
    |ifup eth0          |使用 mapping 節選擇的 eth0 配置啟動網路介面|
    |-------------------+-------------------------------------------|
    |ifdown eth0        |使用 mapping 節選擇的 eth0 配置關閉網路介面|
    +---------------------------------------------------------------+


%

5.7.5. 對映節 mapping stanza

    為了避免複雜，我們在第 5.6.2 节 “"/etc/network/interfaces" 基本語
    法” 裡省略瞭解釋 "/etc/network/interfaces" 裡的 mapping 節。

    mapping <interface_name_glob>
     script <script_name>
     map <script_input1>
     map <script_input2>
     map ...

    這給 /etc/network/interfaces 檔案提供了一個高階特徵，可以自動選擇
    對映指令碼 <script_name> 定義的配置。

    讓我們來跟隨下面的執行。

    $ sudo ifup eth0

    當 "<interface_name_glob>" 匹配 "eth0", 這個執行過程執行下面的命
    令來自動配置 eth0。

    $ sudo ifup eth0=$(echo -e '<script_input1> \n <script_input2> \n ...' | <script_name> eth0)

    這裡，" map " 指令碼輸入行是可選和可以重複的。

    注意
   
    mapping 節工作的匹配模式，類似於 shell 檔名匹配。 (參見第 1.5.6 
    节 “Shell 萬用字元”).

%

5.7.6. 手動的可切換網路配置

    以下是如何在幾個網路配置中進行手動切換，而無需像第 5.6.13 节 “網
    路重新配置基礎” 中那樣重寫 “/etc/network/interfaces” 檔案。

    對於你需要訪問的所有網路配置，你需要在 “/etc/network/interfaces”
    檔案中像下面那樣建立一個單獨的節。

    auto lo
    iface lo inet loopback

    iface config1 inet dhcp

    iface config2 inet static
     address 192.168.11.100
     netmask 255.255.255.0
     gateway 192.168.11.1
     dns-domain example.com
     dns-nameservers 192.168.11.1
   
    iface pppoe inet manual
     pre-up /sbin/ifconfig eth0 up
     up ifup ppp0=dsl
     down ifdown ppp0=dsl
     post-down /sbin/ifconfig eth0 down

    # The following is used internally only
    iface dsl inet ppp
     provider dsl-provider

    iface pots inet ppp
     provider provider

    請注意，iface 後面標識的網路配置名稱不用於標識網路介面名稱。另外
    ，也沒有 auto 或 allow-hotplug 節來根據事件自動啟動網路介面 eth0
    。

    現在，你可以切換網路配置了。

    讓我們通過 DHCP 將你的 PC 移動到區域網。你可以通過下列命令開啟由
    網路配置名稱（邏輯介面名稱）config1 指定的網路介面（物理介面）
    eth0。

    $ sudo ifup eth0=config1
    Password:
    ...

    eth0 介面已開啟，由 DHCP 配置並連線到了區域網。

    $ sudo ifdown eth0=config1
    ...

    eth0 介面已關閉並斷開區域網連線。

    讓我們通過靜態 IP 使你的 PC 移動到區域網。你可以通過下列命令開啟
    由網路配置名稱 config2 指定的網路介面 eth0。

    $ sudo ifup eth0=config2
    ...

    開啟 eth0 介面，使用靜態 IP 配置並連線到區域網。像 dns-* 這樣的額
    外引數會配置 “/etc/resolv.conf” 的內容。如果安裝了 resolvconf，“/
    etc/resolv.conf” 會更容易管理。

    $ sudo ifdown eth0=config2
    ...

    eth0 介面再次關閉並斷開區域網連線。

    讓我們將你的 PC 移動到 PPPoE 伺服器的 BB-modem 上的一個埠。你可以
    通過下列命令開啟由網路配置名稱 pppoe 指定的網路介面 eth0。

    $ sudo ifup eth0=pppoe
    ...

    eth0 介面已開啟，由 PPPoE 配置直接連線到 ISP。

    $ sudo ifdown eth0=pppoe
    ...

    eth0 介面再次關閉並斷開連線。

    讓我們將你的 PC 移動到使用 POTS 和 modem 的位置，而非區域網或
    BB-modem。你可以通過下列命令開啟由網路配置名稱 ppp0 指定的網路介
    面 eth0。

    $ sudo ifup ppp0=pots
    ...

    開啟 ppp0介面，並使用 PPP 連線到網際網路。

    $ sudo ifdown ppp0=pots
    ...

    關閉 ppp0 介面並斷開網路。

    你應該檢查 “/etc/network/run/ifstate” 檔案，檢視ifupdown 系統當前
    網路配置的狀態。

    警告
   
    如果你有多個網路介面，你可能需要調整 eth*、ppp* 等的末尾數字。

%

5.7.7. ifupdown 系統的指令碼

    ifupdown 系統會自動執行安裝在 “/etc/network/*/” 中的指令碼，而且
    會傳遞環境變數給指令碼。

    表 5.14. ifupdown 系統傳遞的環境變數

    +---------------------------------------------------------------+
    |  環境變數  |                      傳遞值                      |
    |------------+--------------------------------------------------|
    |"$IFACE"    |處理中的介面的物理名稱（介面名稱）                |
    |------------+--------------------------------------------------|
    |"$LOGICAL"  |處理中的介面的邏輯名稱（配置名稱）                |
    |------------+--------------------------------------------------|
    |"$ADDRFAM"  |介面的 <address_family>                           |
    |------------+--------------------------------------------------|
    |"$METHOD"   |介面的 <method_name> （例如 “static”）            |
    |------------+--------------------------------------------------|
    |"$MODE"     |如果是 ifup 執行的，則值為 “start”；如果是 ifdown |
    |            |執行的，則值為 “stop”                             |
    |------------+--------------------------------------------------|
    |"$PHASE"    |根據 “$MODE”，但有更細緻的區分，共分為 pre-up、   |
    |            |post-up、pre-down 和 post-down 階段               |
    |------------+--------------------------------------------------|
    |"$VERBOSITY"|指示是否使用了 “--verbose”；是為 1，否為 0        |
    |------------+--------------------------------------------------|
    |"$PATH"     |命令搜尋路徑：“/usr/local/sbin:/usr/local/bin:/usr|
    |            |/sbin:/usr/bin:/sbin:/bin”                        |
    |------------+--------------------------------------------------|
    |"$IF_       |位於 iface 這節的相應選項值                       |
    |<OPTION>"   |                                                  |
    +---------------------------------------------------------------+


    這裡，每一個環境變數，"$IF_<OPTION>",是在相應的選項名字 <option1>
    和 <option2> 前增加 "$IF_" 來建立, 把字母轉換為大寫字母，將中劃線
    替換為下劃線，忽略非字母數字的字元。

    提示
   
    <address_family>, <method_name>, <option1> 和 <option2> 的說明，
    請參見第 5.6.2 节 “"/etc/network/interfaces" 基本語法”。

    ifupdown-extra 軟體包 (參見第 5.6.14 节 “ifupdown-extra 包”)使用
    這些環境變數來擴充套件ifupdown 軟體包的功能. ifmetric 軟體包 (參
    見第 5.7.2 节 “ifmetric 軟體包”)安裝 "/etc/network/if-up.d/
    ifmetric"指令碼，這個指令碼通過"$IF_METRIC"變數來設定 metric 路由
    度量值. guessnet 軟體包 (參見第 5.7.8 节 “guessnet Mapping 對映”
    ),提供簡單和功能強大的框架，用於通過 mapping 對映機制自動選擇網路
    配置，這個軟體包也使用了這些環境變數。

    注意

    使用這些環境變數進行個性化網路配置的列子，你可以檢視"/usr/share/
    doc/ifupdown/examples/*"裡的列子指令碼，以及 ifscheme 和
    ifupdown-scripts-zg2 軟體包使用的指令碼.這些額外的指令碼有部分功
    能和 ifupdown-extra與guessnet 軟體包的基本功能重疊. 如果你安裝了
    這些額外指令碼，你應當個性化這些指令碼來避免互相影響。

%

5.7.8. guessnet Mapping 對映

    為了替代在第 5.7.6 节 “手動的可切換網路配置” 描述的手工選擇配置，
    你可以使用在第 5.7.5 节 “對映節 mapping stanza” 描述的對映機制，
    自動選擇個性化指令碼來進行配置網路。

    guessnet 軟體包提供的 guessnet-ifupdown(8) 命令，是被設計作為對映
    指令碼，並提供強力框架來增強ifupdown 系統.

      * 在 iface 節下的每一個網路配置，列出測試條件作為guessnet 選項
        的值。

      * 對映機制選擇第一個沒有錯誤結果的 iface 作為網路配置。

    guessnet-ifupdown 使用的對映指令碼和 ifupdown的原始網路配置架構，
    這兩種對 "/etc/network/interfaces" 檔案的用法，不會造成負面的影響
    ，因為 guessnet 選項僅僅只匯出額外的環境變數到 ifupdown 系統執行
    的指令碼。細節參見 guessnet-ifupdown(8).

    注意

    當多個 guessnet 選項行需要在 "/etc/network/interfaces" 裡出現時,
    選項行使用 guessnet1, guessnet2,這類的開頭,因為 ifupdown 軟體包不
    允許選項行開頭字串重複。

5.8. 底層網路配置

%

5.8.1. Iproute2 命令

    Iproute2 命令集提供完整的底層網路配置能力。有個從舊的 net-tools
    命令集到新的 iproute2 命令集的轉換表。

    表 5.15. 從舊的 net-tools 命令集到新的 iproute2 命令集轉換表

    +---------------------------------------------------------------+
    |舊的 net-tools|新的 iproute2|               操作               |
    |--------------+-------------+----------------------------------|
    |ifconfig(8)   |ip addr      |一個裝置上的協議（IP 或 IPv6）地址|
    |--------------+-------------+----------------------------------|
    |route(8)      |ip route     |路由表條目                        |
    |--------------+-------------+----------------------------------|
    |arp(8)        |ip neigh     |ARP 或 NDISC 快取條目             |
    |--------------+-------------+----------------------------------|
    |ipmaddr       |ip maddr     |多播地址                          |
    |--------------+-------------+----------------------------------|
    |iptunnel      |ip tunnel    |IP 隧道                           |
    |--------------+-------------+----------------------------------|
    |nameif(8)     |ifrename(8)  |基於 MAC 地址的網路介面名         |
    |--------------+-------------+----------------------------------|
    |mii-tool(8)   |ethtool(8)   |乙太網裝置設定                    |
    +---------------------------------------------------------------+


    參見 ip(8) 和 IPROUTE2 工具套件 Howto.

%

5.8.2. 安全的底層網路操作

    你可以按下面的方式安全的使用底層網路命令，這些命令不會改變網路配
    置。

    表 5.16. 底層網路命令列表

    +---------------------------------------------------------------+
    |        命令         |                  說明                   |
    |---------------------+-----------------------------------------|
    |ifconfig             |顯示活動的網路介面連線和地址狀態         |
    |---------------------+-----------------------------------------|
    |ip addr show         |顯示活動的網路介面連線和地址狀態         |
    |---------------------+-----------------------------------------|
    |route -n             |用數字地址顯示全部路由表                 |
    |---------------------+-----------------------------------------|
    |ip route show        |用數字地址顯示全部路由表                 |
    |---------------------+-----------------------------------------|
    |arp                  |顯示當前 ARP 快取表的內容                |
    |---------------------+-----------------------------------------|
    |ip neigh             |顯示當前 ARP 快取表的內容                |
    |---------------------+-----------------------------------------|
    |plog                 |顯示 ppp 後臺守護程序（daemon）日誌      |
    |---------------------+-----------------------------------------|
    |ping yahoo.com       |檢查到 "yahoo.com" 的因特網連線          |
    |---------------------+-----------------------------------------|
    |whois yahoo.com      |在域名資料庫裡面檢查誰註冊了 "yahoo.com" |
    |---------------------+-----------------------------------------|
    |traceroute yahoo.com |跟蹤到 "yahoo.com" 的因特網連線          |
    |---------------------+-----------------------------------------|
    |tracepath yahoo.com  |跟蹤到 "yahoo.com" 的因特網連線          |
    |---------------------+-----------------------------------------|
    |mtr yahoo.com        |跟蹤到 "yahoo.com" 的因特網連線（重複的）|
    |---------------------+-----------------------------------------|
    |dig [@dns-server.com]|查詢由 "dns-server.com" 提供服務的       |
    |example.com [{a|mx|  |"example.com" 域名的 DNS 記錄： "a", "mx"|
    |any}]                |或 "any" 記錄                            |
    |---------------------+-----------------------------------------|
    |iptables -L -n       |檢視包過濾                               |
    |---------------------+-----------------------------------------|
    |netstat -a           |找出所有開啟的埠                         |
    |---------------------+-----------------------------------------|
    |netstat -l --inet    |找出監聽埠                               |
    |---------------------+-----------------------------------------|
    |netstat -ln --tcp    |找出 TCP 監聽埠（數字的）                |
    |---------------------+-----------------------------------------|
    |dlint example.com    |查詢 "example.com" 的 DNS zone 資訊      |
    +---------------------------------------------------------------+


    提示

    部分底層網路配置工具放在 "/sbin/" 目錄。你可以像 "/sbin/ifconfig"
    這樣使用完整命令路徑，或把 "/sbin" 加到 "~/.bashrc" 檔案列出的
    "$PATH" 環境變數裡。

%

5.9. 網路優化

    通用的網路優化超出了本文的範圍。我提及消費等級連線相關的主題。

    表 5.17. 網路優化工具列表

    +----------------------------------------------------------+
    | 軟體包  |  流行度  |大小|              說明              |
    |---------+----------+----+--------------------------------|
    |iftop    |V:7, I:115|97  |顯示一個網路介面上的頻寬使用資訊|
    |---------+----------+----+--------------------------------|
    |iperf    |V:4, I:55 |263 |網際網路協議頻寬測量工具        |
    |---------+----------+----+--------------------------------|
    |ifstat   |V:0, I:8  |60  |介面統計監控                    |
    |---------+----------+----+--------------------------------|
    |bmon     |V:1, I:17 |146 |行動式頻寬監視器和網速估計工具  |
    |---------+----------+----+--------------------------------|
    |ethstatus|V:0, I:5  |40  |快速測量網路裝置吞吐的指令碼    |
    |---------+----------+----+--------------------------------|
    |bing     |V:0, I:1  |80  |實驗性的隨機頻寬測試器          |
    |---------+----------+----+--------------------------------|
    |bwm-ng   |V:2, I:17 |90  |小巧簡單的控制檯頻寬監測器      |
    |---------+----------+----+--------------------------------|
    |ethstats |V:0, I:0  |23  |基於控制檯的乙太網統計監視器    |
    |---------+----------+----+--------------------------------|
    |ipfm     |V:0, I:0  |78  |頻寬分析工具                    |
    +----------------------------------------------------------+


%

5.9.1. 找出最佳 MTU

    最大傳輸單元 Maximum Transmission Unit (MTU) 的值能夠通過加 "-M
    do" 選項的 ping(8) 實驗來確定，它傳送從 1500 位元組（對於IP+ICMP
    包頭，有 28 位元組的偏移）大小開始的 ICMP 包，來找出 IP 不分片的
    最大包大小。

    嘗試下列例子

    $ ping -c 1 -s $((1500-28)) -M do www.debian.org
    PING www.debian.org (194.109.137.218) 1472(1500) bytes of data.
    From 192.168.11.2 icmp_seq=1 Frag needed and DF set (mtu = 1454)

    --- www.debian.org ping statistics ---
    0 packets transmitted, 0 received, +1 errors

    嘗試 1454 代替 1500

    你看到用 1454 ping(8) 成功了。

    這個過程是路徑 MTU (PMTU) 發現 (RFC1191) ， tracepath(8) 命令能夠
    自動完成這個。

    提示

    上面的列子，PMTU 的值是 1454，這是我先前的光纖到戶提供商，使用了
    非同步傳輸模式 Asynchronous Transfer Mode (ATM) 作為他們的骨幹網
    路，並使用 PPPoE 作為客戶端。實際 PMTU 值依賴於你的環境，比如說，
    我新的光纖到戶提供商是 1500。

    表 5.18. 最佳 MTU 值的基本指引方法

    +---------------------------------------------------------------+
    |     網路環境      |     MTU     |          基本原理           |
    |-------------------+-------------+-----------------------------|
    |撥號連線(IP: PPP)  |576          |標準的                       |
    |-------------------+-------------+-----------------------------|
    |乙太網連線 (IP:    |1500         |預設標準值                   |
    |DHCP 或固定)       |             |                             |
    |-------------------+-------------+-----------------------------|
    |乙太網連線 (IP:    |1492 (=      |PPP 頭部 2 位元組和 PPPOE 頭 |
    |PPPoE)             |1500-8)      |部 6 位元組                  |
    |-------------------+-------------+-----------------------------|
    |乙太網連線 (ISP 骨 |1462 (=      |作者推斷：18 位元組的乙太網頭|
    |幹網: ATM, IP: DHCP|48*31-18-8)  |，8位元組 SAR 尾（譯註：SAR  |
    |或固定 IP)         |             |為 ATM 技術名詞）            |
    |-------------------+-------------+-----------------------------|
    |乙太網連線 (ISP 骨 |1454 (=      |參見 "Optimal MTU            |
    |幹: ATM, IP: PPPoE)|48*31-8-18-8)|configuration for PPPoE ADSL |
    |                   |             |Connections" 來了解基本原理  |
    +---------------------------------------------------------------+


    除了這些基本的指引方法外，你還應當知道下面的資訊。

      * 使用任何隧道方式(VPN 等.)的最佳 MTU 需要進一步減去它們上面的
        頭部。
   
      * MTU 值不應當超過通過實驗驗證的 PMTU 值。

      * 當遇到其它限制的時候，較大的 MTU 值通常比較好。

%

5.9.2. 設定 MTU

    這裡示例設定 MTU 值，從預設的 1500 設定到 1454.

    對於 DHCP (參見第 5.6.4 节 “使用 DHCP 的網路介面”), 你能夠使用下
    面的方式替換 "/etc/network/interfaces" 檔案裡 iface 節相關的行.

    iface eth0 inet dhcp
     pre-up /sbin/ifconfig $IFACE mtu 1454

    對於靜態 IP (參見第 5.6.5 节 “使用靜態 IP 地址的網路介面”), 你能
    夠使用下面的方式替換 "/etc/network/interfaces" 檔案裡 iface 節相
    關的行.

    iface eth0 inet static
     address 192.168.11.100
     netmask 255.255.255.0
     gateway 192.168.11.1
     mtu 1454
     dns-domain example.com
     dns-nameservers 192.168.11.1

    對於直接 PPPoE (參見第 5.5.5 节 “使用 pppoeconf 的 PPPoE 乙太網連
    線”),你能夠使用下面的方式替換 "/etc/ppp/peers/dsl-provider" 裡
    "mtu" 相關的行.

    mtu 1454

    最大分片大小 (MSS) 是另外一種衡量包大小的方法。MSS 和 MTU 的關係
    如下.

      * 對於 IPv4， MSS = MTU - 40
   
      * 對於 IPv6，MSS = MTU - 60

    注意

    基於 iptables(8) (參見第 5.10 节 “Netfilter 網路過濾框架”) 的優化
    ，能夠通過 MSS 來壓縮包大小，路由器會用到 MMS 。參見 iptables(8)
    中的"TCPMSS" .

%

5.9.3. WAN TCP 優化

    TCP 吞吐量能夠通過調整 TCP 緩衝大小的引數來最大化，對現代大頻寬和
    高延時的 WAN，在 "TCP Tuning Guide" 和 "TCP tuning"裡有描述. 到目
    前為止，當前 Debian 預設設定能夠很好的服務好我的 1G bps 光纖到戶
    LAN 連線。

%

5.10. Netfilter 網路過濾框架

    Netfilter 使用 Linux 核心模組 (參見第 3.3.1 节 “核心模組初始化”)
    提供狀態防火牆和網路地址轉換 (NAT) 框架。

    表 5.19. 防火牆工具列表

    +---------------------------------------------------------------+
    |    軟體包     |流行度|大小|               說明                |
    |---------------+------+----+-----------------------------------|
    |iptables       |V:300,|2520|netfilter 管理工具(iptables(8) 用於|
    |               |I:993 |    |IPv4, ip6tables(8) 用於 IPv6)      |
    |---------------+------+----+-----------------------------------|
    |arptables      |V:0,  |96  |netfilter 管理工具(arptables(8) 用 |
    |               |I:2   |    |於 ARP)                            |
    |---------------+------+----+-----------------------------------|
    |ebtables       |V:15, |265 |netfilter 管理工具 (ebtables(8) 用 |
    |               |I:39  |    |於乙太網橋)                        |
    |---------------+------+----+-----------------------------------|
    |iptstate       |V:0,  |116 |持續性監控 netfilter 狀態 (和 top  |
    |               |I:3   |    |(1) 相似)                          |
    |---------------+------+----+-----------------------------------|
    |shorewall-init |V:0,  |68  |Shoreline 防火牆初始化             |
    |               |I:0   |    |                                   |
    |---------------+------+----+-----------------------------------|
    |shorewall      |V:5,  |2458|Shoreline 防火牆, netfilter 配置檔 |
    |               |I:13  |    |案生成器                           |
    |---------------+------+----+-----------------------------------|
    |shorewall-lite |V:0,  |65  |Shoreline 防火牆, netfilter 配置檔 |
    |               |I:0   |    |案生成器 (精簡版)                  |
    |---------------+------+----+-----------------------------------|
    |shorewall6     |V:1,  |779 |Shoreline 防火牆, netfilter 配置檔 |
    |               |I:2   |    |案生成器(IPv6 版本)                |
    |---------------+------+----+-----------------------------------|
    |shorewall6-lite|V:0,  |64  |Shoreline 防火牆, netfilter 配置檔 |
    |               |I:0   |    |案生成器 (IPv6,精簡版)             |
    +---------------------------------------------------------------+


    netfilter 主要的使用者層程式是 iptables(8).你能從 shell 手工交付
    式的配置 netfilter，使用 iptables-save(8) 儲存當前狀態,當系統重啟
    時，通過 init 指令碼呼叫 iptables-restore(8) 來恢復。

    像 shorewall 這樣的配置幫助指令碼能夠使這個過程變得更簡單。

    參見 http://www.netfilter.org/documentation/ 上的文件(或在 "/usr/
    share/doc/iptables/html/" 裡面的文件).

      * Linux Networking-concepts HOWTO

      * Linux 2.4 Packet Filtering HOWTO

      * Linux 2.4 NAT HOWTO

    提示
   
    雖然這些是為 Linux 2.4 寫的,iptables(8) 命令和 netfilter 核心功能
    都能夠在 Linux2.6 和 3.x 核心系列實現.

第 6 章 網路應用

    建立網路連線後（參加第 5 章網路設置），你可以執行各種網路應用。

    提示
   
    對於現代的 Debian 網路基礎設施的具體說明，閱讀 Debian 管理員手冊
    —— 網路基礎設施。

    提示

    在某些 ISP 下，如果你啟用“兩步驗證”，你可能需要獲取一個應用密碼以
    從你的程式訪問 POP 和 SMTP 服務。你也可能需要事先允許你的主機 IP
    進行訪問。

%

6.1. 網頁瀏覽器

    有許多網頁瀏覽器軟體包，使用超文字傳輸協議（HTTP）訪問遠端內容。

    表 6.1. 網頁瀏覽器列表

    +---------------------------------------------------------------+
    |     軟體包     |流行度| 大小 |類|       網路瀏覽器說明        |
    |                |      |      |型|                             |
    |----------------+------+------+--+-----------------------------|
    |chromium        |V:51, |180040|X |Chromium，（來自 Google 的開 |
    |                |I:141 |      |  |源瀏覽器）                   |
    |----------------+------+------+--+-----------------------------|
    |                |V:13, |      |同|Firefox，（來自 Mozilla 的開 |
    |firefox         |I:20  |205631|上|源瀏覽器，僅在 Debian        |
    |                |      |      |  |Unstable 中可用）            |
    |----------------+------+------+--+-----------------------------|
    |firefox-esr     |V:217,|198436|同|Firefox ESR（Firefox 延長支援|
    |                |I:437 |      |上|版本）                       |
    |----------------+------+------+--+-----------------------------|
    |epiphany-browser|V:4,  |3730  |同|GNOME，相容 HIG，Epiphany    |
    |                |I:24  |      |上|                             |
    |----------------+------+------+--+-----------------------------|
    |konqueror       |V:18, |20763 |同|KDE，Konqueror               |
    |                |I:100 |      |上|                             |
    |----------------+------+------+--+-----------------------------|
    |dillo           |V:1,  |1536  |同|Dillo，（基於 FLTK 的輕量級瀏|
    |                |I:7   |      |上|覽器）                       |
    |----------------+------+------+--+-----------------------------|
    |w3m             |V:31, |2289  |文|w3m                          |
    |                |I:284 |      |字|                             |
    |----------------+------+------+--+-----------------------------|
    |lynx            |V:13, |1948  |同|Lynx                         |
    |                |I:98  |      |上|                             |
    |----------------+------+------+--+-----------------------------|
    |elinks          |V:6,  |1767  |同|ELinks                       |
    |                |I:28  |      |上|                             |
    |----------------+------+------+--+-----------------------------|
    |links           |V:6,  |2249  |同|Links（純文字）              |
    |                |I:39  |      |上|                             |
    |----------------+------+------+--+-----------------------------|
    |links2          |V:1,  |5417  |影|Links（沒有 X 的控制檯影象） |
    |                |I:15  |      |象|                             |
    +---------------------------------------------------------------+


%

6.1.1. 瀏覽器配置

    在某些瀏覽器中，你可以使用下列特殊的 URL 來確認它們的設定。

      * "about:"

      * "about:config"

      * "about:plugins"

    Debian 提供了在 main 檔案庫中提供了許多自由的瀏覽器外掛軟體包，不
    僅可以處理 Java（軟體平臺）和 Flash，也可以處理 MPEG、MPEG2、
    MPEG4、DivX、Windows Media Video (.wmv)、QuickTime (.mov)、MP3
    (.mp3)、Ogg/Vorbis 檔案、DVD、VCD 等等。Debian 也提供相關輔助程式
    ，可以用來安裝來自 contrib 或 non-free 的 non-free 瀏覽器外掛軟體
    包。

    表 6.2. 瀏覽器外掛軟體包列表

    +---------------------------------------------------------------------+
    |                軟體包                |流行|大小| 區域  |    說明    |
    |                                      | 度 |    |       |            |
    |--------------------------------------+----+----+-------+------------|
    |                                      |    |    |       |Pepper Flash|
    |                                      |V:1,|    |       |Player（胡椒|
    |pepperflashplugin-nonfree             |I:21|29  |contrib|Flash 播放器|
    |                                      |    |    |       |）——瀏覽器外|
    |                                      |    |    |       |掛          |
    |--------------------------------------+----+----+-------+------------|
    |                                      |    |    |       |PPAPI-host  |
    |                                      |    |    |       |NPAPI-plugin|
    |browser-plugin-freshplayer-pepperflash|I:9 |1135|contrib|，          |
    |                                      |    |    |       |pepperflash |
    |                                      |    |    |       |的介面卡    |
    +---------------------------------------------------------------------+


    提示

    儘管使用上述的 Debian 軟體包會更容易，但你依舊可以手動啟用外掛，
    你需要將 “*.so” 檔案安裝到外掛目錄中（例如 “/usr/lib/iceweasel/
    plugins/”）並重啟瀏覽器。

    有些網站拒絕基於你所使用瀏覽器的使用者代理字串的連線。你可以通過
    偽裝使用者代理字串來解決這個問題。例如，你可以新增下面這行到使用
    者配置檔案中（例如 “~/.gnome2/epiphany/mozilla/epiphany/user.js”
    或 “~/.mozilla/firefox/*.default/user.js”）。

    user_pref{"general.useragent.override","Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)"};

    或者，你也可以通過輸入 “about:config” 到 URL，並右擊它所顯示的內
    容，來新增並重置這個變數。

    小心
   
    偽裝的使用者代理字串可以會導致來自 Java 的不良副作用。

%

6.2. 郵件系統

    小心
   
    如果你想設定郵件伺服器來直接通過網際網路交換郵件，你應該最好閱讀
    一下這個基本文件。

    郵件系統涉及到執行在多個主機上的許多伺服器程式和客戶端程式。從功
    能來說，有3種類型的郵件代理程式：

      * 郵件傳輸代理（MTA，參見第 6.3 节 “郵件傳輸代理 (MTA)”），是不
        同主機之間傳送郵件的程式。

      * 郵件投遞代理（MDA，參見第 6.6 节 “帶有過濾器的郵件投遞代理
        (MDA)”），是傳遞資訊到一臺主機內的使用者郵箱的程式。

      * 郵件使用者代理（MUA，也被稱為電子郵件客戶端，參見第 6.4 节 “
        郵件使用者代理 (MUA)”），是生成資訊和訪問傳遞的資訊的程式。

    注意
   
    對於那些消費者級網路連線的典型移動工作站，以下的配置例子是有效的
    。

%

6.2.1. 電子郵件基礎

    電子郵件由三個部分組成，訊息的信封，郵件標頭及郵件正文。

    SMTP 用電子郵件信封上的 "To" 和 "From" 資訊來投遞郵件。(信封上的
    "From" 資訊也被叫做退回地址, 例如 From_ 等等）。

    電子郵件頭的"To" 和 "From" 資訊，顯示在電子郵件客戶端上. (在大部
    分情況下，這些資訊是跟電子郵件信封一致，但並不全是這樣。）

    為了處理正文資料型別及其編碼，電子郵件客戶端 (MUA) 需要用多用途網
    際網路郵件擴充套件 (MIME)來解釋郵件標頭和郵件正文。

%

6.2.2. 現代郵件服務基礎

    為了儘可能減少垃圾郵件 (不想要的和未經請求的電子郵件) 的問題，許
    多提供消費者級網際網路連線的 ISP 服務商正在採取應對措施。

      * 智慧主機服務於 ISP 的客戶，使用rfc4409裡面規定的（587）埠傳送
        郵件，並使用在rfc4954裡面規定的密碼(SMTP 認證服務).

      * 內部的網路主機 (除了 ISP 自己的傳送郵件伺服器) 連線到網際網路
        的 SMTP 25 埠已經被封鎖了。

      * 從一些可疑的外部網路主機到 ISP 接收郵件伺服器SMTP 25 埠的連線
        會被阻隔.(連線來自用於撥號和其它消費等級網際網路連線的動態 IP
        地址範圍,首先被阻隔.)

      * 像域名金鑰識別郵件 (DKIM)、發信者策略框架 (SPF) 和基於域名的
        訊息認證、報告和反應（DMARC）這樣的反垃圾郵件技術廣泛用於電子
        郵件過濾。

      * 域名金鑰識別郵件服務可能會用於你的通過 smarthost 的電子郵件傳
        送。

      * 智慧主機可以在上面重寫源電子郵件地址為你的郵件賬戶。

    當配置電子郵件系統或解決郵遞問題時，你必須考慮這些新的限制。

    小心
   
    在消費者級的網路上執行 SMTP 伺服器來直接傳送郵件到遠端可信賴主機
    是不現實的。

    小心
   
    期望單個智慧主機可靠的傳送不相關的源郵件地址到遠端主機，這是不現
    實的。

    小心

    一個郵件能夠被任何主機靜悄悄的拒絕，即使路由到了目的地。傳送一個
    郵件到遠端主機的可靠方法，就是使你的郵件儘可能的看起來是經過認證
    的。

    鑑於這些不利的網際網路情況和限制，像 Yahoo.com 和 Gmail.com 這樣
    的獨立網際網路郵件 ISP 提供了安全的郵件服務，使用傳輸層安全協議
    (TLS) 和它的前身，安全套接層協議 (SSL) 就可以在任何地方通過網路連
    線到這些郵件服務。

      * 智慧主機上的 465 埠服務,是過時的在 SSL 上的 SMTP (SMTPS 協
        議).
   
      * 智慧主機上的 587 埠服務使用 STARTTLS 協議。

      * TLS/POP3 埠 (995) 是用 POP3 協議來接受郵件的。

    為了簡便起見，在接下來的文字中，我假定 smarthost 是
    "smtp.hostname.dom", 需要 SMTP 認證並且使用帶有STARTTLS 協議的資
    訊傳送埠 (587) 。

%

6.2.3. 工作站的郵件配置策略

    最簡單的電子郵件配置是使用 MUA 傳送郵件到 ISP 的 smarthost，然後
    從 ISP 的 POP3 伺服器接收郵件 (參見第 6.4 节 “郵件使用者代理
    (MUA)”)。這種型別的配置流行使用全功能的基於 GUI 的 MUA，例如
    icedove(1)，evolution(1) 等等。如果需要通過郵件的型別來過濾它們，
    你應該使用 MUA 的過濾功能。對於這種情況，本地 MTA (參見第 6.3 节
    “郵件傳輸代理 (MTA)”) 只需在本地投遞 (當傳送者和接收者在同一主機
    上)。

    請注意 Debian 是多使用者系統。即使你是唯一的使用者，這裡仍然有許
    多以 root 使用者執行的程式並且它們會給你傳送電子郵件。

    另外可選的郵件配置是通過本地 MTA 傳送郵件到 ISP 的 smarthost，通
    過郵件檢索 (參見第 6.5 节 “遠端郵件檢索和轉發實用工具”) 從 ISP 的
    POP3 伺服器接受郵件，並把郵件儲存到本地郵箱。如果需要通過郵件的型
    別來過濾它們，你應該使用 MDA 的過濾功能 (參見第 6.6 节 “帶有過濾
    器的郵件投遞代理 (MDA)”) 來過濾郵件到單獨的郵箱。這種型別的配置流
    行使用基於終端的簡單 MUA，例如 mutt(1)，mew(1)等等，儘管使用任何
    MUA 都是可以的 (參見第 6.4 节 “郵件使用者代理 (MUA)”)。對於這種情
    況，本地 MTA (參見第 6.3 节 “郵件傳輸代理 (MTA)”) 需要做
    smarthost 投遞和本地投遞。因為移動工作站沒有有效的 FQDN，你必須配
    置本地 MTA 來隱藏和偽裝外發郵件中的真實本地郵件名稱，來避免郵件投
    遞錯誤 (參見第 6.3.3 节 “郵件地址配置”)。

    提示
   
    你可能想要配置 MUA/MDA 來使用 Maildir，以便儲存郵件到你使用者目錄
    的某個位置。

%

6.3. 郵件傳輸代理 (MTA)

    對於一般的工作站而言，郵件傳輸代理 (MTA) 的主流選擇是 exim4-* 或
    者 postfix 軟體包，這由你決定。

    表 6.3. 用於工作站的基礎的郵件傳輸代理相關的軟體包列表

    +---------------------------------------------------------------+
    |      軟體包      | 流行度 |大小|             說明             |
    |------------------+--------+----+------------------------------|
    |exim4-daemon-light|V:342,  |1493|Exim4 郵件傳輸代理 (MTA :     |
    |                  |I:367   |    |Debian 預設的)                |
    |------------------+--------+----+------------------------------|
    |exim4-base        |V:349,  |1704|Exim4 文件 (文字) 和通用檔案  |
    |                  |I:377   |    |                              |
    |------------------+--------+----+------------------------------|
    |exim4-doc-html    |I:1     |3662|Exim4 文件 (html)             |
    |------------------+--------+----+------------------------------|
    |exim4-doc-info    |I:1     |624 |Exim4 文件 (info)             |
    |------------------+--------+----+------------------------------|
    |postfix           |V:145,  |4182|Postfix 郵件傳輸代理 (MTA : 替|
    |                  |I:160   |    |代品)                         |
    |------------------+--------+----+------------------------------|
    |postfix-doc       |I:9     |4444|Postfix 文件 (html+text)      |
    |------------------+--------+----+------------------------------|
    |sasl2-bin         |V:5,    |428 |Cyrus SASL API 實現 (實現     |
    |                  |I:19    |    |postfix SMTP 認證)            |
    |------------------+--------+----+------------------------------|
    |cyrus-sasl2-doc   |I:1     |575 |Cyrus SASL - 文件             |
    +---------------------------------------------------------------+


    儘管在流行度投票數上，exim4-* 某些時候看起來要比 postfix 流行，但
    這並不意味著 postfix 在 Debian 開發者中不流行。Debian 伺服器系統
    使用 exim4 和 postfix。著名的 Debian 開發者發到郵件列表的帖子的郵
    件標頭分析的結果也表明這兩種 MTA 一樣受歡迎。

    exim4-* 軟體包最為人所知的是，有著非常小的記憶體消耗和非常靈活的
    配置。postfix 軟體包最為人所知的是，它的簡潔、快速、簡單和安全的
    特性。這兩種工具都帶有充足的文件，在質量和許可證上都同樣是不錯的
    。

    在 Debian 檔案庫裡，有許多不同效能和不同關注點的郵件傳輸代理
    (MTA) 軟體包可供選擇。

    表 6.4. Debian 檔案庫中可供選擇的郵件傳輸代理 (MTA) 軟體包的列表

    +---------------------------------------------------------------+
    |      軟體包      |  流行度  |大小|        效能和關注點        |
    |------------------+----------+----+----------------------------|
    |exim4-daemon-light|V:342,    |1493|全功能                      |
    |                  |I:367     |    |                            |
    |------------------+----------+----+----------------------------|
    |postfix           |V:145,    |4182|全功能 (安全)               |
    |                  |I:160     |    |                            |
    |------------------+----------+----+----------------------------|
    |exim4-daemon-heavy|V:7, I:8  |1643|全功能 (靈活)               |
    |------------------+----------+----+----------------------------|
    |sendmail-bin      |V:14, I:15|1854|全功能(如果你已經對它熟悉)  |
    |------------------+----------+----+----------------------------|
    |nullmailer        |V:7, I:10 |479 |部分功能,沒有本地郵件       |
    |------------------+----------+----+----------------------------|
    |ssmtp             |V:8, I:11 |2   |部分功能,沒有本地郵件       |
    |------------------+----------+----+----------------------------|
    |courier-mta       |V:0, I:0  |2416|非常全功能(web 介面等.)     |
    |------------------+----------+----+----------------------------|
    |masqmail          |V:0, I:0  |337 |輕量                        |
    |------------------+----------+----+----------------------------|
    |esmtp             |V:0, I:0  |128 |輕量                        |
    |------------------+----------+----+----------------------------|
    |esmtp-run         |V:0, I:0  |32  |輕量(sendmail 相容擴充套件到|
    |                  |          |    |esmtp)                      |
    |------------------+----------+----+----------------------------|
    |msmtp             |V:5, I:10 |547 |輕量                        |
    |------------------+----------+----+----------------------------|
    |msmtp-mta         |V:3, I:4  |86  |輕量(sendmail 相容擴充套件到|
    |                  |          |    |msmtp)                      |
    +---------------------------------------------------------------+


%

6.3.1. exim4 的配置

    小心

    配置exim4 來發送網際網路郵件，多個源電子郵件地址使用多個相應的智
    慧主機，這是不尋常的。對於 popcon 和 cron 這樣的系統程式，配置
    exim4 僅僅只使用一個電子郵件地址；對於mutt 這樣的使用者程式，配置
    msmtp 來使用多個源電子郵件地址。

    對於那些通過 smarthost 的網路郵件，你應該按如下所示的 (重新) 配置
    exim4-* 軟體包。

    $ sudo /etc/init.d/exim4 stop
    $ sudo dpkg-reconfigure exim4-config

    配置 "General type of mail configuration" 時，選擇 "mail sent by
    smarthost; received via SMTP or fetchmail"。

    設定 "System mail name:" 為預設的 FQDN (參見第 5.1.1 节 “主機名解
    析”)。

    設定 "IP-addresses to listen on for incoming SMTP connections:"
    為預設的 "127.0.0.1; ::1"。

    "Other destinations for which mail is accepted:" 選項留空。

    "Machines to relay mail for:" 選項留空。

    設定 "IP address or host name of the outgoing smarthost:" 為
    "smtp.hostname.dom:587"。

    設定 "Hide local mail name in outgoing mail?" 選項為 "<No>"。(或
    者像第 6.3.3 节 “郵件地址配置”描述的那樣使用 /etc/
    email-addresses" 代替)

    選擇如下所示的其中一個來回答 "Keep number of DNS-queries minimal
    (Dial-on-Demand)?"。

      * "No" 如果啟動的時候，系統就連上了網際網路。
   
      * "Yes" 如果啟動的時候，系統沒有連上網際網路。

    設定 "Delivery method for local mail:" 選項為 "mbox format in /
    var/mail/"。

    "Split configuration into small files?:" 選項設為 "<Yes>"。

    通過修改 "/etc/exim4/passwd.client" 檔案，來建立用於 smarthost 的
    密碼條目。

    $ sudo vim /etc/exim4/passwd.client
     ...
    $ cat /etc/exim4/passwd.client
    ^smtp.*\.hostname\.dom:username@hostname.dom:password

    通過如下所示的啟動 exim4。

    $ sudo /etc/init.d/exim4 start

    "/etc/exim4/passwd.client" 檔案中的主機名不應該是別名，你應該按如
    下所示的檢查真正的主機名。

    $ host smtp.hostname.dom
    smtp.hostname.dom is an alias for smtp99.hostname.dom.
    smtp99.hostname.dom has address 123.234.123.89

    我在 "/etc/exim4/passwd.client" 檔案中使用正則表示式來繞過別名問
    題。即使 ISP 更改了別名所指向的主機名，SMTP AUTH 還是可能工作的。

    你能夠通過如下所示的手動更新 exim4 配置:

      * 更新 "/etc/exim4/" 目錄下的 exim4 配置檔案。

          + 建立 "/etc/exim4/exim4.conf.localmacros" 來設定巨集命令和
            修改 "/etc/exim4/exim4.conf.template" 檔案。(沒有分割的配
            置）

          + 在 ”/etc/exim4/exim4.conf.d" 子目錄中建立新檔案或編輯已存
            在的檔案。(分割的配置）

      * 執行 "invoke-rc.d exim4 reload" 命令。

    請閱讀 "/usr/share/doc/exim4-base/README.Debian.gz" 官方指導和 
    update-exim4.conf(8)。

    小心

    如果 debconf 詢問 "Keep number of DNS-queries minimal
    (Dial-on-Demand)?" 這個問題時，選擇了 "No" (預設值)，那麼啟動
    exim4 會花很長時間並且系統在啟動的時候不會連線到網際網路。

    警告
   
    雖然你的 ISP 允許，但是使用沒有加密的明文密碼是不安全的。

    提示

    儘管推薦在 587 埠上使用 STARTTLS 的 SMTP 協議，但是有些 ISP 仍然
    使用廢棄的 SMTPS 協議 (在 465 埠上的 SSL)。4.77 版本以後的 Exim4
    支援在客戶端和伺服器上的廢棄 SMTPS 協議。

    提示

    如果你正在為膝上型電腦尋找一個遵守 "/etc/aliases" 規則的輕量 MTA
    ，你應該考慮配置 exim4(8)，在 "/etc/default/exim4" 檔案中寫入
    "QUEUERUNNER='queueonly'"，"QUEUERUNNER='nodaemon'" 等等。

%

6.3.2. 帶有 SASL 的 postfix 配置

    對於通過 smarthost 的網路郵件，你應該首先閱讀 postfix 文件和關鍵
    的手冊頁。

    表 6.5. 重要的 postfix 手冊頁列表

    +-----------------------------------+
    |    命令    |         功能         |
    |------------+----------------------|
    |postfix(1)  |Postfix 控制程式      |
    |------------+----------------------|
    |postconf(1) |Postfix 配置工具      |
    |------------+----------------------|
    |postconf(5) |Postfix 配置引數      |
    |------------+----------------------|
    |postmap(1)  |Postfix 查詢表維護    |
    |------------+----------------------|
    |postalias(1)|Postfix 別名資料庫維護|
    +-----------------------------------+


    你應該按如下所示的 (重新) 配置 postfix 和 sasl2-bin 軟體包。

    $ sudo /etc/init.d/postfix stop
    $ sudo dpkg-reconfigure postfix

    選擇 "Internet with smarthost"。

    設定 "SMTP relay host (blank for none):" 為 "
    [smtp.hostname.dom]:587" 並按如下所示配置。

    $ sudo postconf -e 'smtp_sender_dependent_authentication = yes'
    $ sudo postconf -e 'smtp_sasl_auth_enable = yes'
    $ sudo postconf -e 'smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd'
    $ sudo postconf -e 'smtp_sasl_type = cyrus'
    $ sudo vim /etc/postfix/sasl_passwd

    為 smarthost 建立密碼條目。

    $ cat /etc/postfix/sasl_passwd
    [smtp.hostname.dom]:587     username:password
    $ sudo postmap hush:/etc/postfix/sasl_passwd

    通過如下所示的啟動 postfix。

    $ sudo /etc/init.d/postfix start

    dpkg-reconfigure 會話中使用的 "[" 和 "]" 和 "/etc/postfix/
    sasl_passwd" 確保不去檢查 MX 記錄而是直接使用指定的明確主機名。參
    見 "/usr/share/doc/postfix/html/SASL_README.html" 裡面的
    "Enabling SASL authentication in the Postfix SMTP client" 條目。

%

6.3.3. 郵件地址配置

    這裡有一些用於郵件傳輸、投遞和使用者代理的郵件地址配置檔案。

    表 6.6. 與郵件地址相關的配置檔案列表

    +---------------------------------------------------------------+
    |     檔案      |      功能       |            應用             |
    |---------------+-----------------+-----------------------------|
    |/etc/mailname  |用於 (外發) 郵件 |Debian 專用的，mailname(5)   |
    |               |的預設主機名     |                             |
    |---------------+-----------------+-----------------------------|
    |/etc/          |用於外發郵件的主 |exim(8) 專用的，             |
    |email-addresses|機名偽裝         |exim4-config_files(5)        |
    |---------------+-----------------+-----------------------------|
    |/etc/postfix/  |用於外發郵件的主 |postfix(1) 專用的，postmap(1)|
    |generic        |機名偽裝         |命令執行後啟用。             |
    |---------------+-----------------+-----------------------------|
    |/etc/aliases   |用於接收郵件的賬 |通用的，newaliases(1) 命令執 |
    |               |戶別名           |行後啟用。                   |
    +---------------------------------------------------------------+


    "/etc/mailname" 檔案中的 mailname 通常是全稱域名 (FQDN)，這個全程
    域名將會被解析成主機的 IP 地址。對於沒有可解析成 IP 地址的主機名
    的移動工作站，設定 mailname 為 "hostname -f" 的值。(這對於
    exim4-* 和 postfix 都是安全有效的選擇。)

    提示

    "/etc/mailname" 中的內容被許多非 MTA 程式用作它們的預設行為。對於
    mutt, 在~/muttrc 檔案中設定 "hostname" 和 "from" 變數來覆蓋 
    mailname 值。對於 devscripts 軟體包的程式，例如 bts(1) 和 dch(1)
    ，匯出環境變數 "$DEBFULLNAME" 和 "$DEBEMAIL" 的值來覆蓋它。

    提示

    popularity-contest 軟體包一般以 FQDN 形式的 root 賬戶傳送郵件。你
    需要像 /usr/share/popularity-contest/default.conf 檔案中描述的那
    樣去設定 /etc/popularity-contest.conf 檔案中的 MAILFROM 值。否則
    ，你的郵件會被 smarthost SMTP 伺服器拒絕。儘管這些過程很乏味，這
    種方法比為所有通過 MTA 並且是以 root 使用者傳送的郵件重寫源地址更
    安全。這也可以被其他守護程序或者是 cron 指令碼使用。

    當設定 mailname 為 "hostname -f" 的值時，通過 MTA 的源郵件地址的
    偽裝可以通過如下所示的來實現。

      * 用於 exim4(8) 的 "/etc/email-addresses" 檔案，
        exim4-config_files(5) 手冊頁中有關於它的解釋
   
      * 用於 postfix(1) 的 "/etc/postfix/generic" 檔案，generic(5) 手
        冊頁中有關於它的解釋

    對於 postfix，接下來的額外步驟需要執行。

    # postmap hash:/etc/postfix/generic
    # postconf -e 'smtp_generic_maps = hash:/etc/postfix/generic'
    # postfix reload

    你能夠通過如下所示的來測試郵件地址配置。

      * exim(8) 用 -brw, -bf, -bF, -bV, ... 選項
   
      * postmap(1) 用 -q 選項。

    提示
   
    Exim 帶有一些有用的程式，例如 exiqgrep(8) 和 exipick(8)。參見
    "dpkg -L exim4-base|grep man8/" 來獲得可用的命令。

%

6.3.4. 基礎 MTA 操作

    這裡有一些基礎的 MTA 操作。有一些可能會通過 sendmail(1) 的相容性
    介面來實現。

    表 6.7. 基礎 MTA 操作列表

    +---------------------------------------------------------------+
    | exim 命令  |      postfix 命令       |          說明          |
    |------------+-------------------------+------------------------|
    |sendmail    |sendmail                 |從標準輸入讀取郵件並且安|
    |            |                         |排投遞 (-bm)            |
    |------------+-------------------------+------------------------|
    |mailq       |mailq                    |列出帶有狀態和佇列 ID 的|
    |            |                         |郵件佇列 (-bq)          |
    |------------+-------------------------+------------------------|
    |newaliases  |newaliases               |初始化別名資料庫 (-I)   |
    |------------+-------------------------+------------------------|
    |exim4 -q    |postqueue -f             |重新整理等待郵件 (-q)   |
    |------------+-------------------------+------------------------|
    |exim4 -qf   |postsuper -r ALL         |重新整理所有郵件        |
    |            |deferred; postqueue -f   |                        |
    |------------+-------------------------+------------------------|
    |exim4 -qff  |postsuper -r ALL;        |重新整理甚至已經凍結的郵|
    |            |postqueue -f             |件                      |
    |------------+-------------------------+------------------------|
    |exim4 -Mg   |postsuper -h queue_id    |通過郵件的佇列 ID 來凍結|
    |queue_id    |                         |它                      |
    |------------+-------------------------+------------------------|
    |exim4 -Mrm  |postsuper -d queue_id    |通過郵件的佇列 ID 來移除|
    |queue_id    |                         |它                      |
    |------------+-------------------------+------------------------|
    |N/A         |postsuper -d ALL         |移除所有郵件            |
    +---------------------------------------------------------------+


    提示
   
    往 "/etc/ppp/ip-up.d/*" 裡寫一個重新整理所有郵件的指令碼會是個不
    錯的主意。

%

6.4. 郵件使用者代理 (MUA)

    如果你訂閱了 Debian 相關的郵件列表，使用像 mutt 和 mew 這樣的 MUA
    會是個不錯主意，同時對使用者來說，它們也是事實上的標準並且可以像
    預期的那樣工作良好。

    表 6.8. 郵件使用者代理列表 (MUA)

    +---------------------------------------------------------------+
    |  軟體包   | 流行度 | 大小 |               類型                |
    |-----------+--------+------+-----------------------------------|
    |evolution  |V:31,   |475   |X GUI 程式 (GNOME3, groupware 套件)|
    |           |I:229   |      |                                   |
    |-----------+--------+------+-----------------------------------|
    |thunderbird|V:57,   |165180|X GUI 程式 (GNOME2, 無品牌的       |
    |           |I:138   |      |Mozilla Thunderbird)               |
    |-----------+--------+------+-----------------------------------|
    |kmail      |V:34,   |18011 |X GUI 程式 (KDE)                   |
    |           |I:88    |      |                                   |
    |-----------+--------+------+-----------------------------------|
    |mutt       |V:37,   |7056  |很有可能與 vim 一起使用的字元終端程|
    |           |I:313   |      |式                                 |
    |-----------+--------+------+-----------------------------------|
    |mew        |V:0, I:0|2325  |(x)emacs 下的字元終端程式          |
    +---------------------------------------------------------------+


%

6.4.1. 基礎 MUA — Mutt

    按如下所示的自定義 "~/.muttrc" ，與 vim 結合使用郵件使用者代理
    (MUA) 軟體 mutt。

    #
    # User configuration file to override /etc/Muttrc
    #
    # spoof source mail address
    set use_from
    set hostname=example.dom
    set from="Name Surname <username@example.dom>"
    set signature="~/.signature"

    # vim: "gq" to reformat quotes
    set editor="vim -c 'set tw=72 et ft=mail'"

    # "mutt" goes to Inbox, while "mutt -y" lists mailboxes
    set mbox_type=Maildir           # use qmail Maildir format for creating mbox
    set mbox=~/Mail                 # keep all mail boxes in $HOME/Mail/
    set spoolfile=+Inbox            # mail delivered to $HOME/Mail/Inbox
    set record=+Outbox              # save fcc mail to $HOME/Mail/Outbox
    set postponed=+Postponed        # keep postponed in $HOME/Mail/postponed
    set move=no                     # do not move Inbox items to mbox
    set quit=ask-yes                # do not quit by "q" only
    set delete=yes                  # always delete w/o asking while exiting
    set fcc_clear                   # store fcc as non encrypted

    # Mailboxes in Maildir (automatic update)
    mailboxes `cd ~/Mail; /bin/ls -1|sed -e 's/^/+/' | tr "\n" " "`
    unmailboxes Maillog *.ev-summary

    ## Default
    #set index_format="%4C %Z %{%b %d} %-15.15L (%4l) %s"
    ## Thread index with senders (collapse)
    set index_format="%4C %Z %{%b %d} %-15.15n %?M?(#%03M)&(%4l)? %s"

    ## Default
    #set folder_format="%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f"
    ## just folder names
    set folder_format="%2C %t %N %f"

    增加下面的內容到"/etc/mailcap" 或 "~/.mailcap" 來內鑲顯示 HTML 郵
    件和微軟 Word 附件.

    text/html; lynx -force_html %s; needsterminal;
    application/msword; /usr/bin/antiword '%s'; copiousoutput; description="Microsoft Word Text"; nametemplate=%s.doc

    提示

    Mutt 能夠作為 IMAP 客戶端和 mailbox 格式轉換器.你可以使用"t", "T"
    等標識郵件.這些標識的郵件能夠使用";C"在不同的郵箱之間拷貝,並可以
    使用";d" 來一次性刪除.

%

6.4.2. 高階 MUA — Mutt + msmtp

    Mutt 能夠使用 msmtp 來配置多個源電子郵件地址使用多個相應的智慧主
    機。

    提示

    Msmtp 是一個 sendmail 模擬器，它允許和其它提供 /usr/sbin/sendmail
    命令的 sendmail 模擬器一起安裝。所以你可以保留你係統上的郵件系統
    為 exim4 或 postfix。

    讓我們考慮支援 3 個電子郵件地址作為例子：

      * "My Name1 <myaccount1@gmail.com>"

      * "My Name2 <myaccount2@gmail.com>"

      * "My Name3 <myaccount3@example.org>"

    一個定製的 ~/.muttrc 例子，支援 3 個智慧主機用於 3 個不同的源電子
    郵件地址。

    set use_from
    set from="My Name3 <myaccount3@example.org>"
    set reverse_name
    alternates myaccount1@gmail\.com|myaccount1@gmail\.com|myaccount3@example\.org

    # ...

    # MACRO
    macro compose "1" "<edit-from>^UMy Name1 \<myaccount1@gmail.com\>\n"
    macro compose "2" "<edit-from>^UMy Name2 \<myaccount2@gmail.com\>\n"
    macro compose "3" "<edit-from>^UMy Name3 \<myaccount3@example.org\>\n"

    send2-hook '~f myaccount1@gmail.com' "set sendmail = '/usr/bin/msmtp --read-envelope-from'"
    send2-hook '~f myaccount2@gmail.com' "set sendmail = '/usr/bin/msmtp --read-envelope-from'"
    send2-hook '~f myaccount3@example.org' "set sendmail = '/usr/bin/msmtp --read-envelope-from'"

    # ...

    讓我們來安裝 msmtp-gnome 並按下面的方式設定 ~/.msmtprc。

    defaults
    logfile ~/.msmtp.log
    domain myhostname.example.org
    tls on
    tls_starttls on
    tls_certcheck on
    tls_trust_file /etc/ssl/certs/ca-certificates.crt
    auth on
    port 587
    auto_from

    account myaccount1@gmail.com
    host smtp.gmail.com
    from  myaccount1@gmail.com
    user  myaccount1@gmail.com

    account myaccount2@gmail.com
    host smtp.gmail.com
    from  myaccount2@gmail.com
    user  myaccount2@gmail.com

    account myaccount3@example.org
    host mail.example.org
    from  myaccount3@example.org
    user  myaccount3@example.org

    account default : myaccount3@example.org

    然後，增加密碼資料到 Gnome 鑰匙環。例如：

     $ secret-tool store --label=msmtp \
         host smtp.gmail.com \
         service smtp \
         user myaccount1@gmail.com
     ...

    提示

    如果你不想使用 Gnome 鑰匙環，你可以透過安裝 msmtp 軟體包來代替，
    在 ~/.msmtprc 檔案裡面，給每一個賬號增加一個類似 "password
    secret123" 的條目。更多資訊請參見 memtp 文件。

%

6.5. 遠端郵件檢索和轉發實用工具

    而不是手動執行 MUA 去訪問遠端郵件並去處理它們，你可能希望自動化這
    些過程，然後把所有郵件都投遞到本地。遠端郵件檢索和轉發實用工具很
    適合你使用。

    儘管 fetchmail(1) 已經成為 GNU/Linux 用於遠端郵件檢索的事實上的標
    準，作者現在還是喜歡 getmail(1)。如果你想要在下載郵件之前拒絕郵件
    來達到節省頻寬的目的，mailfilter 或 mpop 工具可能是很有用的。不管
    使用哪種郵件檢索實用程式，配置系統使之能夠投遞已檢索的郵件到 MDA
    會是個不錯的主意，例如通過管道的 maildrop。

    表 6.9. 遠端郵件檢索和轉發實用程式列表

    +---------------------------------------------------------------+
    |  軟體包  |流行度 |大 |                  說明                  |
    |          |       |小 |                                        |
    |----------+-------+---+----------------------------------------|
    |fetchmail |V:5,   |814|郵件檢索 (POP3, APOP, IMAP) (舊的)      |
    |          |I:17   |   |                                        |
    |----------+-------+---+----------------------------------------|
    |getmail   |V:1,   |30 |郵件檢索 (POP3, IMAP4 和 SDPS) (簡單、安|
    |          |I:6    |   |全和可靠)                               |
    |----------+-------+---+----------------------------------------|
    |mailfilter|V:0,   |291|有正則表示式過濾功能的郵件檢索 (POP3)   |
    |          |I:0    |   |                                        |
    |----------+-------+---+----------------------------------------|
    |mpop      |V:0,   |400|郵件檢索 (POP3) 和帶有過濾功能的 MDA    |
    |          |I:0    |   |                                        |
    +---------------------------------------------------------------+


%

6.5.1. getmail 配置

    getmail(1) 的配置在getmail documentation裡描述.這裡是我作為使用者
    搭建訪問多個 POP3帳號.

    按如下所示的建立 "/usr/local/bin/getmails"。

    #!/bin/sh
    set -e
    if [ -f $HOME/.getmail/running ]; then
      echo "getmail is already running ... (if not, remove $HOME/.getmail/running)" >&2
      pgrep -l "getmai[l]"
      exit 1
    else
      echo "getmail has not been running ... " >&2
    fi
    if [ -f $HOME/.getmail/stop ]; then
      echo "do not run getmail ... (if not, remove $HOME/.getmail/stop)" >&2
      exit
    fi
    if [ "x$1" = "x-l" ]; then
      exit
    fi
    rcfiles="/usr/bin/getmail"
    for file in $HOME/.getmail/config/* ; do
      rcfiles="$rcfiles --rcfile $file"
    done
    date -u > $HOME/.getmail/running
    eval "$rcfiles $@"
    rm $HOME/.getmail/running

    按如下所示的配置它。

    $ sudo chmod 755 /usr/local/bin/getmails
    $ mkdir -m 0700 $HOME/.getmail
    $ mkdir -m 0700 $HOME/.getmail/config
    $ mkdir -m 0700 $HOME/.getmail/log

    按如下所示的為每個 POP3 賬戶建立 "$HOME/.getmail/config/
    pop3_name" 配置檔案。

    [retriever]
    type = SimplePOP3SSLRetriever
    server = pop.example.com
    username =  pop3_name@example.com
    password = <your-password>

    [destination]
    type = MDA_external
    path = /usr/bin/maildrop
    unixfrom = True

    [options]
    verbose = 0
    delete = True
    delivered_to = False
    message_log = ~/.getmail/log/pop3_name.log

    按如下所示的配置它。

    $ chmod 0600 $HOME/.getmail/config/*

    計劃使用 cron(8) 每 15 分鐘執行一次 "/usr/local/bin/getmails"，通
    過執行 "sudo crontab -e -u <user_name>" 並把如下所示的命令新增到
    使用者的 cron 條目中。

    5,20,35,50 * * * * /usr/local/bin/getmails --quiet

    提示

    POP3 訪問的問題可能並不來自於 getmail。一些主流的免費 POP3 服務可
    能違反了 POP3 協議並且它們的垃圾郵件過濾機制可能不是非常完美。例
    如，它們可能在剛剛接收到 RETR 命令並且沒有接收到 DELE 命令就可能
    刪除了郵件並且可能隔離郵件到垃圾郵件信箱。你應該儘可能的減少損害
    ，通過配置它們使之成為可訪問的歸檔檔案並且不要刪除它們。參見
    "Some mail was not downloaded"。

%

6.5.2. fetchmail 配置

    "/etc/default/fetchmail"，"/etc/fetchmailrc" 和 "$HOME
    /.fetchmailrc" 可以配置 fetchmail(1)。參見 "/usr/share/doc/
    fetchmail/examples/fetchmailrc.example" 配置例子。

%

6.6. 帶有過濾器的郵件投遞代理 (MDA)

    大多數 MTA 程式，例如 postfix 和 exim4，兼任 MDA (郵件投遞代理)。
    這裡有專門的帶有過濾功能的 MDA。

    儘管 procmail(1) 已經成為 GUN/Linux 上關於帶有過濾器的 MDA 的事實
    標準，作者現在還是喜歡 maildrop(1)。不管使用哪種過濾程式，配置系
    統使之能投遞已過濾的郵件到 qmail 風格的 Maildir 都是一個好主意。

    表 6.10. 有過濾器的 MDA 列表

    +-------------------------------------------------+
    | 軟體包  |  流行度   |大小|         說明         |
    |---------+-----------+----+----------------------|
    |procmail |V:40, I:277|300 |有過濾器的 MDA (舊的) |
    |---------+-----------+----+----------------------|
    |mailagent|V:0, I:5   |1356|帶有 Perl 過濾器的 MDA|
    |---------+-----------+----+----------------------|
    |maildrop |V:0, I:2   |1141|有結構化過濾語言的 MDA|
    +-------------------------------------------------+


%

6.6.1. maildrop 配置

    maildrop(1) 配置在 maildropfilter documentation 中有說明。這裡有
    一個關於 "$HOME/.mailfilter 檔案的配置例子。

    # Local configuration
    MAILROOT="$HOME/Mail"
    # set this to /etc/mailname contents
    MAILHOST="example.dom"
    logfile $HOME/.maildroplog

    # rules are made to override the earlier value by the later one.

    # mailing list mails ?
    if (     /^Precedence:.*list/:h || /^Precedence:.*bulk/:h )
    {
        # rules for mailing list mails
        # default mailbox for mails from mailing list
        MAILBOX="Inbox-list"
        # default mailbox for mails from debian.org
        if ( /^(Sender|Resent-From|Resent-Sender): .*debian.org/:h )
        {
            MAILBOX="service.debian.org"
        }
        # default mailbox for mails from bugs.debian.org (BTS)
        if ( /^(Sender|Resent-From|Resent-sender): .*@bugs.debian.org/:h )
        {
            MAILBOX="bugs.debian.org"
        }
        # mailbox for each properly maintained mailing list with "List-Id: foo" or "List-Id: ...<foo.bar>"
        if ( /^List-Id: ([^<]*<)?([^<>]*)>?/:h )
        {
            MAILBOX="$MATCH2"
        }
    }
    else
    {
        # rules for non-mailing list mails
        # default incoming box
        MAILBOX="Inbox-unusual"
        # local mails
        if ( /Envelope-to: .*@$MAILHOST/:h )
        {
            MAILBOX="Inbox-local"
        }
        # html mails (99% spams)
        if ( /DOCTYPE html/:b ||\
             /^Content-Type: text\/html/ )
        {
            MAILBOX="Inbox-html"
        }
        # blacklist rule for spams
        if ( /^X-Advertisement/:h ||\
             /^Subject:.*BUSINESS PROPOSAL/:h ||\
             /^Subject:.*URGENT.*ASISSTANCE/:h ||\
             /^Subject: *I NEED YOUR ASSISTANCE/:h )
        {
            MAILBOX="Inbox-trash"
        }
        # whitelist rule for normal mails
        if ( /^From: .*@debian.org/:h ||\
             /^(Sender|Resent-From|Resent-Sender): .*debian.org/:h ||\
             /^Subject: .*(debian|bug|PATCH)/:h )
        {
            MAILBOX="Inbox"
        }
        # whiltelist rule for BTS related mails
        if ( /^Subject: .*Bug#.*/:h ||\
             /^(To|Cc): .*@bugs.debian.org/:h )
        {
            MAILBOX="bugs.debian.org"
        }
        # whitelist rule for getmails cron mails
        if ( /^Subject: Cron .*getmails/:h )
        {
            MAILBOX="Inbox-getmails"
        }
    }

    # check existance of $MAILBOX
    `test -d $MAILROOT/$MAILBOX`
    if ( $RETURNCODE == 1 )
    {
        # create maildir mailbox for $MAILBOX
        `maildirmake $MAILROOT/$MAILBOX`
    }
    # deliver to maildir $MAILBOX
    to "$MAILROOT/$MAILBOX/"
    exit

    警告

    不像 procmail，maildrop 不會自動建立不存在的 maildir 目錄。你必須
    提前使用 maildirmake(1) 手動建立它們，正如 "$HOME/.mailfilter" 例
    子裡的那樣。

%

6.6.2. procmail 配置

    這裡有一個 procmail(1) 的 "$HOME/.procmailrc" 檔案的類似配置例子
    。

    MAILDIR=$HOME/Maildir
    DEFAULT=$MAILDIR/Inbox/
    LOGFILE=$MAILDIR/Maillog
    # clearly bad looking mails: drop them into X-trash and exit
    :0
    * 1^0 ^X-Advertisement
    * 1^0 ^Subject:.*BUSINESS PROPOSAL
    * 1^0 ^Subject:.*URGENT.*ASISSTANCE
    * 1^0 ^Subject: *I NEED YOUR ASSISTANCE
    X-trash/

    # Delivering mailinglist messages
    :0
    * 1^0 ^Precedence:.*list
    * 1^0 ^Precedence:.*bulk
    * 1^0 ^List-
    * 1^0 ^X-Distribution:.*bulk
    {
    :0
    * 1^0 ^Return-path:.*debian-devel-admin@debian.or.jp
    jp-debian-devel/

    :0
    * ^Resent-Sender.*debian-user-request@lists.debian.org
    debian-user/

    :0
    * ^Resent-Sender.*debian-devel-request@lists.debian.org
    debian-devel/

    :0
    * ^Resent-Sender.*debian-announce-request@lists.debian.org
    debian-announce

    :0
    mailing-list/
    }

    :0
    Inbox/

%

6.6.3. 重新投遞 mbox 內容

    如果你的家目錄已經滿了並且 procmail(1) 失敗了，你需要從 "/var/
    mail/<username>" 目錄手動投遞郵件到家目錄下的已分類好的郵箱中。家
    目錄有空閒空間以後，執行如下命令。

    # /etc/init.d/${MAILDAEMON} stop
    # formail -s procmail </var/mail/<username>
    # /etc/init.d/${MAILDAEMON} start

%

6.7. POP3/IMAP4 伺服器

    如果將要在區域網上執行一個私有伺服器，你應該考慮執行 POP3 / IMAP4
    伺服器，用來投遞郵件到區域網客戶端。

    表 6.11. POP3/IMAP4 伺服器列表

    +---------------------------------------------------------------+
    |   軟體包   |流行 |大 |類型|               說明                |
    |            | 度  |小 |    |                                   |
    |------------+-----+---+----+-----------------------------------|
    |courier-pop |V:2, |308|POP3|Courier 郵件伺服器 - POP3 伺服器   |
    |            |I:2  |   |    |(只有 maildir 格式)                |
    |------------+-----+---+----+-----------------------------------|
    |cyrus-pop3d |V:0, |160|POP3|Cyrus 郵件系統 (支援 POP3)         |
    |            |I:0  |   |    |                                   |
    |------------+-----+---+----+-----------------------------------|
    |courier-imap|V:3, |589|IMAP|Courier 郵件伺服器 - IMAP 伺服器   |
    |            |I:4  |   |    |(只支援 maildir 格式)              |
    |------------+-----+---+----+-----------------------------------|
    |cyrus-imapd |V:1, |484|IMAP|Cyrus 郵件系統 (支援 IMAP)         |
    |            |I:1  |   |    |                                   |
    +---------------------------------------------------------------+


%

6.8. 列印服務和工具

    在老的類 Unix 系統中，BSD Line printer daemon(lpd) 行印表機後臺守
    護曾經是標準。傳統的自由軟體的標準列印輸出格式是 PostScript (PS)
    。為了能夠列印到非 PostScript 印表機，需要將一些過濾器系統和
    Ghostscript 一道使用。參見第 11.4.1 节 “Ghostscript”。

    在現代的 Debian 系統中，Common UNIX Printing System 通用 UNIX 列
    印系統是事實上的標準。現代自由軟體的標準列印輸出格式是 Portable
    Document Format (PDF)可移植檔案格式。

    CUPS 使用 Internet Printing Protocol 網際網路列印協議 (IPP). IPP
    現在已經被其它作業系統，如 Windows XP 和 Mac OS X 支援。它已經變
    成新的具備雙向通訊能力的跨平臺遠端列印的事實標準。

    幸虧有 CUPS 系統的檔案格式依賴自動轉化特徵，簡單的傳送任何資料到
    lpr 命令，都將產生期望的列印輸出。(在 CUPS 裡, lpr 能夠通過安裝
    cups-bsd 軟體包來獲取.)

    Debian 系統有一些不錯的軟體包用於列印服務和作為列印工具。

    表 6.12. 列印服務和工具列表

    +---------------------------------------------------------------+
    |         軟體包          |流行度|大小|  埠   |      說明       |
    |-------------------------+------+----+-------+-----------------|
    |                         |V:3,  |    |printer|BSD lpr/lpd (線性|
    |lpr                      |I:4   |362 |(515)  |印表機後臺守護程 |
    |                         |      |    |       |序 daemon)       |
    |-------------------------+------+----+-------+-----------------|
    |lprng                    |V:1,  |3064|同上   |, , (增強)       |
    |                         |I:1   |    |       |                 |
    |-------------------------+------+----+-------+-----------------|
    |cups                     |V:140,|1141|IPP    |網際網路列印 CUPS|
    |                         |I:395 |    |(631)  |伺服器           |
    |-------------------------+------+----+-------+-----------------|
    |                         |      |    |       |用於 CUPS 的     |
    |                         |      |    |       |System V 印表機命|
    |                         |      |    |       |令: lp(1), lpstat|
    |cups-client              |V:56, |493 |同上   |(1), lpoptions(1)|
    |                         |I:454 |    |       |, cancel(1),     |
    |                         |      |    |       |lpmove(8), lpinfo|
    |                         |      |    |       |(8), lpadmin(8), |
    |                         |      |    |       |…                |
    |-------------------------+------+----+-------+-----------------|
    |                         |      |    |       |用於 CUPS 的 BSD |
    |cups-bsd                 |V:36, |122 |同上   |印表機命令: lpr  |
    |                         |I:385 |    |       |(1), lpq(1), lprm|
    |                         |      |    |       |(1), lpc(8)      |
    |-------------------------+------+----+-------+-----------------|
    |printer-driver-gutenprint|V:100,|937 |沒有使 |CUPS 印表機驅動  |
    |                         |I:372 |    |用     |                 |
    +---------------------------------------------------------------+


    提示
   
    你可以讓你的 web 瀏覽器訪問 "http://localhost:631/" 來配置 CUPS
    系統。

%

6.9. 伺服器遠端訪問和工具 (SSH)

    Secure SHell (SSH) 是因特網上的安全連線方式。在 Debian 裡面，有一
    個叫 OpenSSH 的免費 SSH 版本，在 openssh-client 和 openssh-server
    包裡。

    表 6.13. 伺服器遠端訪問和工具列表

    +------------------------------------------------------------------+
    |        軟體包        |流行度|大小|         工具         |  說明  |
    |----------------------+------+----+----------------------+--------|
    |openssh-client        |V:803,|4298|ssh(1)                |SSH 客戶|
    |                      |I:996 |    |                      |端      |
    |----------------------+------+----+----------------------+--------|
    |openssh-server        |V:690,|1567|sshd(8)               |SSH 服務|
    |                      |I:834 |    |                      |端      |
    |----------------------+------+----+----------------------+--------|
    |                      |      |    |                      |請求使用|
    |                      |V:0,  |    |ssh-askpass-fullscreen|者輸入密|
    |ssh-askpass-fullscreen|I:0   |42  |(1)                   |碼的    |
    |                      |      |    |                      |ssh-add |
    |                      |      |    |                      |(GNOME2)|
    |----------------------+------+----+----------------------+--------|
    |                      |      |    |                      |請求使用|
    |                      |      |    |                      |者輸入密|
    |ssh-askpass           |V:3,  |106 |ssh-askpass(1)        |碼的    |
    |                      |I:34  |    |                      |ssh-add |
    |                      |      |    |                      |(plain  |
    |                      |      |    |                      |X)      |
    +------------------------------------------------------------------+


    小心
   
    如果你的 SSH 是從因特網來訪問，參見第 4.7.3 节 “網際網路額外的安
    全方式”。

    提示
   
    請使用 screen(1) 程式來讓遠端 shell 在中斷的連線上存活(參見第
     9.1 节 “screen 程式”).

%

6.9.1. SSH 基礎

    警告
   
    如果想要執行 OpenSSH 服務，"/etc/ssh/sshd_not_to_be_run"必須不存
    在。

    SSH 有兩個認證協議。

    表 6.14. SSH 認證協議和方式列表

    +---------------------------------------------------------------+
    | SSH |            SSH 方式             |         說明          |
    |協議 |                                 |                       |
    |-----+---------------------------------+-----------------------|
    |SSH-1|"RSAAuthentication"              |基於 RSA 身份祕鑰的使用|
    |     |                                 |者認證                 |
    |-----+---------------------------------+-----------------------|
    |同上 |"RhostsAuthentication"           |".rhosts" 基於主機的認 |
    |     |                                 |證（不安全，禁用）     |
    |-----+---------------------------------+-----------------------|
    |同上 |"RhostsRSAAuthentication"        |".rhosts" 使用 RSA 主機|
    |     |                                 |祕鑰的主機認證（禁用） |
    |-----+---------------------------------+-----------------------|
    |同上 |"ChallengeResponseAuthentication"|RSA 質疑-應答認證      |
    |-----+---------------------------------+-----------------------|
    |同上 |"PasswordAuthentication"         |基於密碼的認證         |
    |-----+---------------------------------+-----------------------|
    |SSH-2|"PubkeyAuthentication"           |基於公鑰的使用者認證   |
    |-----+---------------------------------+-----------------------|
    |     |                                 |"~/.rhosts" or "/etc/  |
    |同上 |"HostbasedAuthentication"        |hosts.equiv" 使用客戶端|
    |     |                                 |主機公鑰的主機認證（禁 |
    |     |                                 |用）                   |
    |-----+---------------------------------+-----------------------|
    |同上 |"ChallengeResponseAuthentication"|質疑-應答認證          |
    |-----+---------------------------------+-----------------------|
    |同上 |"PasswordAuthentication"         |基於密碼的認證         |
    +---------------------------------------------------------------+


    小心
   
    如果你使用一個非 Debian 的系統，請小心注意這些不同。

    細節參見 "/usr/share/doc/ssh/README.Debian.gz", ssh(1), sshd(8), 
    ssh-agent(1), and ssh-keygen(1).

    下面是祕鑰配置檔案。

    表 6.15. SSH 配置檔案列表

    +---------------------------------------------------------------+
    |     配置檔案      |               配置檔案描述                |
    |-------------------+-------------------------------------------|
    |/etc/ssh/ssh_config|SSH 客戶端預設, 參見 ssh_config(5)         |
    |-------------------+-------------------------------------------|
    |/etc/ssh/          |SSH 服務端預設, 參見 sshd_config(5)        |
    |sshd_config        |                                           |
    |-------------------+-------------------------------------------|
    |~/.ssh/            |該賬戶連線到這個伺服器上的客戶端使用的預設 |
    |authorized_keys    |SSH 公鑰                                   |
    |-------------------+-------------------------------------------|
    |~/.ssh/identity    |使用者的 SSH-1 RSA 私鑰                    |
    |-------------------+-------------------------------------------|
    |~/.ssh/id_rsa      |使用者的 SSH-2 RSA 私鑰                    |
    |-------------------+-------------------------------------------|
    |~/.ssh/id_dsa      |使用者的 SSH-2 DSA 私鑰                    |
    +---------------------------------------------------------------+


    提示
   
    參見 ssh-keygen(1), ssh-add(1) 和 ssh-agent(1) 來了解怎樣使用 SSH
    公鑰和私鑰。

    提示
   
    一定要通過連線測試來確認設定。有任何問題的連線，使用 "ssh -v".

    提示
   
    稍後可以使用 "ssh-keygen -p" 改變密碼來加密本地 SSH 私鑰.

    提示
   
    你可以在 "~/.ssh/authorized_keys" 裡給條目增加選項來限制主機和執
    行特定的命令。細節請參見 sshd(8).

    從客戶端啟動一個 ssh(1) 連線.

    表 6.16. SSH 客戶端啟動例子列表

    +---------------------------------------------------------------+
    |                     命令                     |      說明      |
    |----------------------------------------------+----------------|
    |ssh username@hostname.domain.ext              |使用預設模式連線|
    |----------------------------------------------+----------------|
    |ssh -v username@hostname.domain.ext           |有詳細資訊的預設|
    |                                              |連線模式        |
    |----------------------------------------------+----------------|
    |ssh -1 username@hostname.domain.ext           |強制使用 SSH 1  |
    |                                              |版本連線        |
    |----------------------------------------------+----------------|
    |ssh -1 -o RSAAuthentication=no -l username    |SSH 1 版本，強制|
    |hostname.domain.ext                           |使用密碼        |
    |----------------------------------------------+----------------|
    |ssh -o PreferredAuthentications=password -l   |SSH 2 版本，強制|
    |username hostname.domain.ext                  |使用密碼        |
    +---------------------------------------------------------------+


    如果本地和遠端主機，使用同樣的使用者名稱，你可以省略輸入
    "username@". 即使在本地和遠端主機使用不同的使用者名稱，你可以使用
    "~/.ssh/config" 來省略輸入使用者名稱.對於 Debian Salsa 伺服器，使
    用賬戶名 "foo-guest",你可以設定 "~/.ssh/config" 包含下面的內容。

    Host salsa.debian.org people.debian.org
        User foo-guest

    對於使用者來講, ssh(1) 功能比telnet(1) 更加智慧和安全. 不像
    telnet命令, ssh 命令不會在遇到 telnet 的退出字元(初始預設是
    CTRL-])時停止.

%

6.9.2. SMTP/POP3 隧道的埠轉發

    通過 ssh 建立一個這樣的管道連線，從 localhost 的 4025 埠到
    remote-server 的 25 埠，並從 localhost 的 4110 埠到 remote-server
    的 110 埠，請在本機執行如下命令.

    # ssh -q -L 4025:remote-server:25 4110:remote-server:110 username@remote-server

    這是跨越因特網建立 SMTP/POP3 服務連線的安全方法。在遠端主機"/etc/
    ssh/sshd_config"裡設定"AllowTcpForwarding"條目為 "yes".

%

6.9.3. 免密碼遠端連線

    使用 "RSAAuthentication" (SSH-1 協議) 或 "PubkeyAuthentication"
    (SSH-2 協議)，人們可以避免記住遠端系統的密碼.

    在遠端系統的"/etc/ssh/sshd_config"裡，設定相應的條目,
    "RSAAuthentication yes" 或 "PubkeyAuthentication yes"。

    在本地生成授權祕鑰對，並安裝公鑰到遠端系統。

      * "RSAAuthentication": SSH-1 的 RSA key (不建議使用，因為已被廢
        棄.)

    $ ssh-keygen
    $ cat .ssh/identity.pub | ssh user1@remote "cat - >>.ssh/authorized_keys"

      * "PubkeyAuthentication": SSH-2 的 RSA key

    $ ssh-keygen -t rsa
    $ cat .ssh/id_rsa.pub | ssh user1@remote "cat - >>.ssh/authorized_keys"

      * "PubkeyAuthentication": SSH-2 的 DSA key(不建議，因為慢.)

    $ ssh-keygen -t dsa
    $ cat .ssh/id_dsa.pub | ssh user1@remote "cat - >>.ssh/authorized_keys"

    提示

    使用 SSH-2 的 DSA key 是不建議的，應為 key 較小並且慢。由於 RSA
    專利已經過期，沒有理由使用 DSA 來作為規避 RSA 專利的臨時措施。DSA
    表示 Digital Signature Algorithm，速度慢。同時參見 DSA-1571-1.

    注意

    為了讓 "HostbasedAuthentication" 在 SSH-2 下執行,你必須同時調整服
    務端主機 "/etc/ssh/sshd_config" 和客戶機 "/etc/ssh/ssh_config" 或
    "~/.ssh/config" 的 "HostbasedAuthentication" 配置為 "yes" 。

%

6.9.4. 處理其它 SSH 客戶端

    其它平臺上有一些免費的 SSH 客戶端。

    表 6.17. 其它平臺上免費 SSH 客戶端列表

    +---------------------------------------------------------------+
    |    環境    |                  免費 SSH 程式                   |
    |------------+--------------------------------------------------|
    |Windows     |puTTY (http://www.chiark.greenend.org.uk/~sgtatham|
    |            |/putty/) (GPL)                                    |
    |------------+--------------------------------------------------|
    |Windows     |cygwin 裡的 SSH (http://www.cygwin.com/) (GPL)    |
    |(cygwin)    |                                                  |
    |------------+--------------------------------------------------|
    |Macintosh 類|macSSH (http://www.macssh.com/) (GPL)             |
    |------------+--------------------------------------------------|
    |Mac OS X    |OpenSSH;在終端應用中使用 ssh (GPL)                |
    +---------------------------------------------------------------+


%

6.9.5. 建立 ssh 代理

    用密碼來保護你的 SSH 認證私鑰是安全的。如果密碼沒有設定，使用
    "ssh-keygen -p" 來設定。

    把你的公鑰 (比如："~/.ssh/id_rsa.pub") 放到遠端主機的"~/.ssh/
    authorized_keys"，這個遠端主機使用上面描述的基於密碼的連線方式。

    $ ssh-agent bash
    $ ssh-add ~/.ssh/id_rsa
    Enter passphrase for /home/<username>/.ssh/id_rsa:
    Identity added: /home/<username>/.ssh/id_rsa (/home/<username>/.ssh/id_rsa)

    從這裡執行接下來的命令，就不再需要密碼。

    $ scp foo <username>@remote.host:foo

    按 ^D 來終結 ssh 代理會話。

    對於 X 服務端，通常的 Debian 啟動指令碼會作為父程序執行 ssh-agent
    。所以你只需要執行一次 ssh-add。進一步的資訊，請閱讀 ssh-agent(1)
    和 ssh-add(1).

%

6.9.6. 怎樣通過 SSH 關閉遠端系統

    你可以使用 at(1) 命令 (參見第 9.3.13 节 “單次任務時間安排”)來從
    SSH 終端裡保護"shutdown -h now" (參見第 1.1.8 节 “怎樣關閉系統”)
    操作過程。

    # echo "shutdown -h now" | at now

    在 screen(1) (參見第 9.1 节 “screen 程式”) 會話裡執行 "shutdown
    -h now"，是另外一個方法來做這同樣的事情。

%

6.9.7. SSH 故障排查

    如果你遇到問題，檢查配置檔案的許可權並用 "-v" 選項執行 ssh。

    如果你是 root 賬戶，並有使用防火牆，使用 "-p" 選項; 這可以避免使
    用1 — 1023 之間的服務埠.

    如果 ssh 連線到遠端站點突然停止工作，這也許是系統管理員胡亂操作的
    結果，可能是在系統維護時改變了 "host_key". 在確認這個情況後，並且
    沒有人試圖用聰明的黑客技術來篡改遠端主機，你可以在本機 "~/.ssh/
    known_hosts" 裡刪除 "host_key" 條目來重新獲得連線。

%

6.10. 其它網路應用服務

    這裡是其它網路應用服務。

    表 6.18. 其它網路應用服務列表

    +---------------------------------------------------------------+
    |     軟體包      | 流行度 |大小 | 協議 |         說明          |
    |-----------------+--------+-----+------+-----------------------|
    |telnetd          |V:1, I:3|115  |TELNET|TELNET 服務            |
    |-----------------+--------+-----+------+-----------------------|
    |telnetd-ssl      |V:0, I:0|170  |同上  |TELNET 服務( 支援SSL)  |
    |-----------------+--------+-----+------+-----------------------|
    |nfs-kernel-server|V:38,   |342  |NFS   |Unix 檔案共享          |
    |                 |I:79    |     |      |                       |
    |-----------------+--------+-----+------+-----------------------|
    |samba            |V:102,  |16629|SMB   |Windows 檔案和列印共享 |
    |                 |I:159   |     |      |                       |
    |-----------------+--------+-----+------+-----------------------|
    |netatalk         |V:2, I:3|2077 |ATP   |Apple/Mac 檔案和列印共 |
    |                 |        |     |      |享(AppleTalk)          |
    |-----------------+--------+-----+------+-----------------------|
    |proftpd-basic    |V:24,   |488  |FTP   |通用檔案下載           |
    |                 |I:32    |     |      |                       |
    |-----------------+--------+-----+------+-----------------------|
    |apache2          |V:246,  |610  |HTTP  |通用 web 伺服器        |
    |                 |I:315   |     |      |                       |
    |-----------------+--------+-----+------+-----------------------|
    |squid            |V:13,   |8385 |同上  |通用 web 代理伺服器    |
    |                 |I:15    |     |      |                       |
    |-----------------+--------+-----+------+-----------------------|
    |squid3           |V:4,    |240  |同上  |同上                   |
    |                 |I:10    |     |      |                       |
    |-----------------+--------+-----+------+-----------------------|
    |bind9            |V:52,   |1063 |DNS   |其它主機的 IP 地址     |
    |                 |I:65    |     |      |                       |
    |-----------------+--------+-----+------+-----------------------|
    |isc-dhcp-server  |V:18,   |1471 |DHCP  |客戶端自身的 IP 地址   |
    |                 |I:54    |     |      |                       |
    +---------------------------------------------------------------+


    通用網際網路檔案系統協議(CIFS) 和服務訊息塊(SMB) 協議一樣，被微軟
    Windows 廣泛應用。

    提示
   
    參見第 4.5.2 节 “現代的集中式系統管理” 服務系統整合。

    提示

    主機名解析通常由 DNS 服務提供. 對於由 DHCP 動態分配的主機 IP 地
    址, 動態 DNS 能夠使用 bind9 和isc-dhcp-server 建立主機名解析，
    Debian wiki 的 DDNS 頁有說明.

    提示
   
    使用 squid 之類的代理伺服器，和使用 Debian 文件庫的完全本地映象伺
    服器相比，能夠大量節省頻寬。

%

6.11. 其它網路應用客戶端

    這裡是其它網路應用客戶端。

    表 6.19. 網路應用客戶端列表

    +---------------------------------------------------------------+
    |    軟體包     |流行度 |大小| 協議  |           說明           |
    |---------------+-------+----+-------+--------------------------|
    |netcat         |I:41   |16  |TCP/IP |TCP/IP 瑞士軍刀           |
    |---------------+-------+----+-------+--------------------------|
    |openssl        |V:794, |1465|SSL    |安全套接字層 (SSL)二進位制|
    |               |I:993  |    |       |和相關的加密工具          |
    |---------------+-------+----+-------+--------------------------|
    |stunnel4       |V:5,   |507 |同上   |通用 SSL 封裝             |
    |               |I:17   |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |telnet         |V:65,  |163 |TELNET |TELNET 客戶端             |
    |               |I:904  |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |telnet-ssl     |V:0,   |210 |同上   |TELNET 服務( 支援SSL)     |
    |               |I:3    |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |nfs-common     |V:181, |768 |NFS    |Unix 檔案共享             |
    |               |I:343  |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |smbclient      |V:16,  |2016|SMB    |微軟 Windows 檔案和列印共 |
    |               |I:174  |    |       |享客戶端                  |
    |---------------+-------+----+-------+--------------------------|
    |cifs-utils     |V:32,  |299 |同上   |遠端微軟 Windows 檔案系統 |
    |               |I:123  |    |       |掛載和解除安裝命令        |
    |---------------+-------+----+-------+--------------------------|
    |ftp            |V:18,  |137 |FTP    |FTP 客戶端                |
    |               |I:282  |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |lftp           |V:6,   |2255|同上   |同上                      |
    |               |I:39   |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |ncftp          |V:3,   |1339|同上   |全屏 FTP 客戶端           |
    |               |I:22   |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |wget           |V:288, |3477|HTTP 和|web 下載工具              |
    |               |I:988  |    |FTP    |                          |
    |---------------+-------+----+-------+--------------------------|
    |curl           |V:151, |426 |同上   |同上                      |
    |               |I:548  |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |axel           |V:0,   |216 |同上   |下載加速器                |
    |               |I:4    |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |aria2          |V:2,   |1854|同上   |BitTorrent 和 Metalink 支 |
    |               |I:19   |    |       |援的下載加速器            |
    |---------------+-------+----+-------+--------------------------|
    |bind9-host     |V:382, |365 |DNS    |來自 bind9 的 host(1),    |
    |               |I:948  |    |       |"Priority: standard"      |
    |---------------+-------+----+-------+--------------------------|
    |dnsutils       |V:64,  |256 |同上   |來自 bind 的 dig(1),      |
    |               |I:517  |    |       |"Priority: standard"      |
    |---------------+-------+----+-------+--------------------------|
    |isc-dhcp-client|V:231, |686 |DHCP   |獲得 IP 地址              |
    |               |I:979  |    |       |                          |
    |---------------+-------+----+-------+--------------------------|
    |ldap-utils     |V:14,  |718 |LDAP   |從 LDAP 服務獲取資料      |
    |               |I:75   |    |       |                          |
    +---------------------------------------------------------------+


%

6.12. 系統後臺守護程序（daemon）診斷

    telnet 程式能夠手工連線到系統後臺守護程序（daemon），並進行診斷。

    測試純 POP3 服務，嘗試用下面的操作

    $ telnet mail.ispname.net pop3

    部分 ISP 提供 TLS/SSL 加密的POP3 服務，為了測試它，你需要用到
    telnet-ssl 包裡支援 TLS/SSL 的 telnet 客戶端，或 openssl 軟體包。

    $ telnet -z ssl pop.gmail.com 995

    $ openssl s_client -connect pop.gmail.com:995

    下面的 RFCs 提供每一個系統後臺守護程序（daemon）所需要的知識。

    表 6.20. 常用 RFC 列表

    +----------------------------------------------------+
    |       RFC        |              說明               |
    |------------------+---------------------------------|
    |rfc1939 和 rfc2449|POP3 服務                        |
    |------------------+---------------------------------|
    |rfc3501           |IMAP4 服務                       |
    |------------------+---------------------------------|
    |rfc2821 (rfc821)  |SMTP 服務                        |
    |------------------+---------------------------------|
    |rfc2822 (rfc822)  |郵件檔案格式                     |
    |------------------+---------------------------------|
    |rfc2045           |多用途網際網路郵件擴充套件 (MIME)|
    |------------------+---------------------------------|
    |rfc819            |DNS 服務                         |
    |------------------+---------------------------------|
    |rfc2616           |HTTP 服務                        |
    |------------------+---------------------------------|
    |rfc2396           |URI 定義                         |
    +----------------------------------------------------+


    在 "/etc/services" 裡，描述了埠用途.

第 7 章 X 視窗系統

    警告
   
    本章是基於 2013 年發佈的 Debian 7.0 (Wheezy) 編寫的，所以其內容正
    在變得過時。

    Debian 上的 X 視窗系統基於 X.Org 的原始碼。

%

7.1. 關鍵軟體包

    這裡有一些用於簡易安裝的（元）軟體包。

    表 7.1. X 視窗的關鍵（元）軟體包列表

    +---------------------------------------------------------------+
    |   （元）軟體包   |流行度|大小|              說明              |
    |------------------+------+----+--------------------------------|
    |                  |      |    |X 庫、一個 X 伺服器、一系列字型 |
    |xorg              |I:457 |52  |以及一組基礎的 X 客戶端和工具（ |
    |                  |      |    |元軟體包）                      |
    |------------------+------+----+--------------------------------|
    |xserver-xorg      |V:66, |238 |X 伺服器的全部套件及其配置      |
    |                  |I:492 |    |                                |
    |------------------+------+----+--------------------------------|
    |xbase-clients     |I:26  |46  |各種 X 客戶端（元軟體包）       |
    |------------------+------+----+--------------------------------|
    |x11-common        |V:372,|308 |X 視窗系統的檔案系統的基礎設施  |
    |                  |I:755 |    |                                |
    |------------------+------+----+--------------------------------|
    |xorg-docs         |I:6   |2036|X.Org 軟體套件的各種文件        |
    |------------------+------+----+--------------------------------|
    |menu              |V:54, |1509|為理解選單的應用生成Debian選單  |
    |                  |I:197 |    |                                |
    |------------------+------+----+--------------------------------|
    |menu-xdg          |V:31, |27  |將 Debian 選單結構轉換為        |
    |                  |I:109 |    |freedesktop.org xdg 選單結構    |
    |------------------+------+----+--------------------------------|
    |xdg-utils         |V:229,|327 |freedesktop.org 提供的整合桌面環|
    |                  |I:521 |    |境的工具                        |
    |------------------+------+----+--------------------------------|
    |task-gnome-desktop|I:175 |9   |標準 GNOME 桌面環境（元軟體包） |
    |------------------+------+----+--------------------------------|
    |task-kde-desktop  |I:66  |6   |核心 KDE 桌面環境（元軟體包）   |
    |------------------+------+----+--------------------------------|
    |task-xfce-desktop |I:106 |9   |Xfce 輕量級桌面環境（元軟體包） |
    |------------------+------+----+--------------------------------|
    |task-lxde-desktop |I:35  |9   |LXDE 輕量級桌面環境（元軟體包） |
    |------------------+------+----+--------------------------------|
    |fluxbox           |V:2,  |3860|Fluxbox：可配置度高且資源耗費低 |
    |                  |I:9   |    |的 X 視窗管理器                 |
    +---------------------------------------------------------------+


    關於 X 基礎知識，請參考 X(7) 和 the LDP XWindow-User-HOWTO。

%

7.2. 設定桌面環境

    一個桌面環境通常是一個 X 視窗管理器、一個檔案管理器和一套相容的實
    用程式組合而成。

    你能夠在 aptitude 的任務選單下安裝全部的桌面環境，例如 GNOME，KDE
    ，Xfce 或者 LXDE。

    提示

    在Debian unstable/testing下，任務選單可能與最新的軟體包過渡狀態不
    同步。在這種情況下，您需要取消選擇aptitude(8)任務選單下列出的一些
    （元)包。當取消選擇（元）軟體包時，您必須選擇那些提供依賴項手動操
    作的軟體包，避免它們被自動刪除。

    你也可以手動只建立一個 X 視窗管理器，例如 Fluxbox。

    關於 X 視窗管理器和桌面環境的介紹，參見 Window Managers for X。

%

7.2.1. Debian 選單

    Debian 菜單系統從 menu 軟體包中為帶有 update-menus(1) 的文字和 X
    程式提供了一個通用介面。每個軟體包都會將它的選單資料安裝到 “/usr/
    share/menu/” 目錄。參見 “/usr/share/menu/README”。

%

7.2.2. Freedesktop.org 選單

    每個遵從 Freedesktop.org xdg 選單的軟體包都會將由 “*.desktop” 提
    供的選單資料安裝到 “/usr/share/applications/” 下。符合
    Freedesktop.org 標準的現代桌面環境會利用它們的資料使用 xdg-utils
    軟體包生成選單。參見 “/usr/share/doc/xdg-utils/README”。

%

7.2.3. 從 Freedesktop.org 選單到 Debian 選單

    為了從遵從 Freedesktop.org 選單的視窗管理器環境（例如 GNOME 和
    KDE）訪問傳統的 Debian 選單，你必須安裝 menu-xdg 軟體包。

%

7.3. 伺服器/客戶端關係

    X Window系統作為服務和客戶端程式的組合被啟動. 在這裡，server 和 
    client的意義需要和local和remote區分開來.

    表 7.2. 伺服器/客戶端術語表

    +---------------------------------------------------------------+
    |   類型    |                       說明                        |
    |-----------+---------------------------------------------------|
    |X 伺服器   |一個執行在本地主機上的程式，連線了使用者的顯示和輸 |
    |           |入裝置。                                           |
    |-----------+---------------------------------------------------|
    |X 客戶端   |一個執行在遠端主機上的程式，它會與 X 伺服器進行資料|
    |           |的處理和傳輸。                                     |
    |-----------+---------------------------------------------------|
    |應用程式伺 |一個執行在遠端主機上的程式，會與應用程式客戶端進行 |
    |服器       |資料處理和傳輸。                                   |
    |-----------+---------------------------------------------------|
    |應用程式客 |一個執行在本地主機上的程式，連線了使用者的顯示和輸 |
    |戶端       |入裝置。                                           |
    +---------------------------------------------------------------+


    現代X伺服器具有 MIT 共享記憶體擴充套件，他們和本地X客戶端通過本地
    共享記憶體進行通訊. 這就繞過了網路透明的Xlib程序間通訊通道，提升
    了大型影象的處理效能.

%

7.4. X 伺服器

    關於 X 伺服器的資訊，參見xorg(1)。

%

7.4.1. X 伺服器的（重新）配置

    使用下面命令（重新）配置一個 X 伺服器。

    # dpkg-reconfigure --priority=low x11-common

    注意

    新的 Linux 核心使用 DRM、KMS 和 udev，對圖形和輸入裝置進行了良好
    的支援。X 伺服器被重寫以使用它們。因此 “/etc/X11/xorg.conf” 通常
    不存在於你的系統中。這些引數由核心進行配置。參見 Linux 核心文件中
    的 “fb/modedb.txt”。

    對於高解析度的 CRT 大顯示器，最好將將重新整理率設定為顯示器支援的
    最高值（85 Hz 不錯，75 Hz 也行）以減少閃爍。對於 LCD 顯示器，較慢
    的標準重新整理率（60 Hz）就可以了，因為它的反應較慢。

    注意
   
    當心，別使用過高的重新整理率，這可能會導致你的顯示器系統發生重大
    的硬體故障。

%

7.4.2. 連線到 X 伺服器的方式

    這裡有一些方式，可以使 “X 伺服器”（顯示端）接受來自 “X 客戶端”（
    應用端）的連線。

    表 7.3. 連線到 X 伺服器的方式

    +---------------------------------------------------------------+
    |              |      |    |使 |     |           |              |
    |    軟體包    |流行度|大小|用 |加密 |   方式    |   相關使用   |
    |              |      |    |者 |     |           |              |
    |--------------+------+----+---+-----+-----------+--------------|
    |              |      |    |不 |     |           |              |
    |xbase-clients |I:26  |46  |檢 |無   |xhost 命令 |棄用          |
    |              |      |    |查 |     |           |              |
    |--------------+------+----+---+-----+-----------+--------------|
    |xbase-clients |I:26  |46  |檢 |無   |xauth 命令 |通過管道進行本|
    |              |      |    |查 |     |           |地連線        |
    |--------------+------+----+---+-----+-----------+--------------|
    |openssh-client|V:803,|4298|檢 |有   |ssh -X 命令|遠端網路連線  |
    |              |I:996 |    |查 |     |           |              |
    |--------------+------+----+---+-----+-----------+--------------|
    |              |V:165,|    |檢 |無（ |GNOME 顯示 |通過管道進行本|
    |gdm3          |I:229 |5101|查 |XDMCP|管理器     |地連線        |
    |              |      |    |   |）   |           |              |
    |--------------+------+----+---+-----+-----------+--------------|
    |              |V:53, |    |檢 |無（ |KDE 顯示管 |通過管道進行本|
    |sddm          |I:95  |1742|查 |XDMCP|理器       |地連線        |
    |              |      |    |   |）   |           |              |
    |--------------+------+----+---+-----+-----------+--------------|
    |              |V:3,  |    |檢 |無（ |X 顯示管理 |通過管道進行本|
    |xdm           |I:6   |686 |查 |XDMCP|器         |地連線        |
    |              |      |    |   |）   |           |              |
    |--------------+------+----+---+-----+-----------+--------------|
    |              |V:31, |    |檢 |無（ |WindowMaker|通過管道進行本|
    |wdm           |I:284 |2289|查 |XDMCP|顯示管理器 |地連線        |
    |              |      |    |   |）   |           |              |
    |--------------+------+----+---+-----+-----------+--------------|
    |              |V:0,  |    |檢 |     |LTSP 顯示管|遠端 SSH 網路 |
    |ldm           |I:0   |436 |查 |有   |理器       |連線（瘦客戶端|
    |              |      |    |   |     |           |）            |
    +---------------------------------------------------------------+


    警告

    不要在不安全的網路中使用遠端 TCP/IP 進行 X 連線，除非你有非常好的
    理由，例如使用了加密。未加密的遠端 TCP/IP socket 連線容易遭到竊聽
    攻擊並且 Debian 系統預設禁用了它。請使用 “ssh -X”。

    警告
   
    也不要在不安全的網路中使用 XDMCP 連線。它通過未加密的 UDP/IP 傳輸
    資料，很容易遭到竊聽攻擊。

    提示
   
    LTSP 代表 Linux 終端伺服器專案（Linux Terminal Server Project）。

%

7.5. 啟動 X 視窗系統

    X 視窗系統通常是作為 X 會話啟動的，X 會話是由 X 伺服器和連線客戶
    端組成的。對於常規的桌面系統，它們兩個都是在一個工作站上執行的。

    X 會話由以下方式之一啟動。

      * 從命令列用 startx 命令啟動
   
      * 基於"graphical.target"的依賴關係，一個 X 圖形顯示管理器的後臺
        守護程式*dm 透過 systemd 啟動。

    提示

    顯示管理器後臺守護程序（daemon）的啟動指令碼在實際執行它們自己時
    會檢查 “/etc/X11/default-display-manager” 檔案的內容。這可以確保
    只有一個 X 顯示管理器後臺守護程序（daemon）程式被啟用。

    提示
   
    關於 X 顯示管理器的初始環境變數，參見第 8.4.5 节 “只用於 X 視窗的
    特定語言環境”。

    本質上，所有的這些程式都是執行 “/etc/X11/Xsession” 指令碼。之後 “
    /etc/X11/Xsession” 指令碼通過 run-parts(8) 執行 “/etc/X11/
    Xsession.d/” 目錄中的指令碼。這本質上是通過內建的 exec 命令執行按
    下面順序第一個被找到的程式。

     1. X顯示管理器呼叫"/etc/X11/Xsession" 的引數中指定的指令碼, 如果
        他被定義了。

     2. “~/.xsession” 或 “~/.Xsession” 指令碼，如果它被定義。
   
     3. “/usr/bin/x-session-manager” 命令，如果它被定義。

     4. “/usr/bin/x-window-manager” 命令，如果它被定義。

     5. “/usr/bin/x-terminal-emulator” 命令，如果它被定義。

    這個過程會受 “/etc/X11/Xsession.options” 的影響。“/usr/bin/x-*”
    命令所指向的準確程式，是由 Debian 選擇系統決定的，並且可以通過
    “update-alternatives --config x-session-manager” 修改。

    細節參見 Xsession(5).

%

7.5.1. 使用 gdm3 啟動 X 會話

    gdm3(1) 讓你從它的選單中選擇會話型別（或桌面環境：第 7.2 节 “設定
    桌面環境”），還有 X 會話的語言（或語言環境：第 8.4 节 “語言環境”
    ）。它在 “~/.dmrc” 中像下面那樣設定選擇的預設值。

    [Desktop]
    Session=default
    Language=ja_JP.UTF-8

%

7.5.2. 自定義 X 會話（經典方式）

    系統中的 “/etc/X11/Xsession.options” 包含沒有前置 “#” 字元的
    “allow-user-xsession” 行，則定義了 “~/.xsession” 或 “~/.Xsession”
    的任何使用者都能夠通過完全覆蓋系統程式碼來自定義 “/etc/X11/
    Xsession” 的動作。在 “~/.xsession” 檔案中的最後一個命令應該使用
    “exec some-window/session-manager” 這樣的形式來啟動你最喜歡的 X
    視窗/會話管理器。

    如果使用了這個特性，系統實用程式選擇的顯示 (或登入) 管理器 (DM),
    會話管理器或者視窗管理器 (WM) 會被忽略。

%

7.5.3. 自定義 X 會話（新方式）

    以下是自定義 X 會話的新方式，它不會像上面那樣完全覆蓋系統程式碼。

      * 顯示管理器 gdm3 可以選擇一個特定的會話並將它設定為 “/etc/X11/
        Xsession” 的引數。

          + "/etc/profile", "~/.profile", "/etc/xprofile", 和 "~
            /.xprofile" 檔案會被作為 gdm3 啟動程序的一部分來執行。

      * “~/.xsessionrc” 檔案作為啟動程序的一部分被執行。（獨立桌面）

          + "/etc/X11/Xsession.options" 中的 "#allow-user-xsession"
            不會限制 "~/.xsessionrc" 檔案的執行。

      * “~/.gnomerc” 檔案作為啟動程序的一部分被執行。（僅 GNOME 桌面
        ）

    系統實用程式選擇的顯示 (或登入) 管理器 (DM), 會話管理器或者視窗管
    理器 (WM) 是相當不錯的。

    在這些配置檔案裡面，不應當有 "exec …" 或 "exit".

%

7.5.4. 通過 SSH 連線一個遠端 X 客戶端

    使用 “ssh -X” 可以啟用一個來自本地 X 伺服器到遠端應用程式伺服器的
    安全連線。

    如果你想避免命令列選項 “-X”，你需要將遠端主機的 “/etc/ssh/
    sshd_config” 檔案中的 “X11Forwarding” 設定為 “yes”。

    在本地主機上啟動 X 伺服器。

    在本地主機中開啟一個 xterm。

    通過下列命令，執行 ssh(1) 建立與遠端站點的連線。

    localname @ localhost $ ssh -q -X loginname@remotehost.domain
    Password:

    通過下列命令，在遠端站點執行一個 X 應用程式，例如 “gimp”。

    loginname @ remotehost $ gimp &

    這個方法可以顯示來自遠端 X 客戶端的輸出，相當於它是通過一個本地
    UNIX 域名 socket 進行本地的連線。

%

7.5.5. 連線網際網路的安全 X 終端

    連線網際網路的 X 安全終端，並且會顯示在遠端執行的整個 X 桌面環境
    ，這可以通過使用特定軟體包（例如 ldm）輕鬆地做到。通過 SSH，你的
    本地機器會變成連線到遠端應用程式伺服器的一個安全瘦客戶端。

%

7.6. X 視窗中的字型

    在2002年，人們建立了發行版獨立的庫Fontconfig 2.0用於配置和定製字
    型訪問. squeeze 以後的Debian使用 Fontconfig 2.0 進行字型配置.

    X 視窗系統中的字型支援可以概括如下。

      * 傳統的 X 伺服器端的字型支援系統

          + 原始的核心 X11 字體系統為舊版本的 X 客戶端應用提供了向後
            相容。

          + 原始的核心 X11 字型被安裝到了 X 伺服器上。

      * 現代 X 客戶端的字型支援系統

          + 現代 X 系統支援下列帶有高階功能（例如抗鋸齒）的所有字型（
            第 7.6.1 节 “基礎字型”，第 7.6.2 节 “其它字型” 和第
             7.6.3 节 “CJK 字型”）。
   
          + Xft 2.0 連線現代 X 應用，例如來自 GNOME、KDE 和帶有
            FreeType 2.0 庫的LibreOffice 的應用。

          + FreeType 2.0 提供字型柵格化的庫。

          + Fontconfig 為 Xft 2.0 解決了字型規範的問題。配置參見 
            fonts.conf(5)。

          + 所有使用 Xft 2.0 的現代 X 應用都可以與使用 X 渲染擴充套件
            的現代 X 伺服器進行交流。

          + X渲染擴充套件將字型訪問和glyph影象生成從X伺服器移動到了X
            客戶端.

    表 7.4. 支援 X 視窗字體系統的軟體包

    +---------------------------------------------------------------+
    |     軟體包      |流行度 |大 |              說明               |
    |                 |       |小 |                                 |
    |-----------------+-------+---+---------------------------------|
    |xfonts-utils     |V:66,  |415|X 視窗系統字型實用程式           |
    |                 |I:542  |   |                                 |
    |-----------------+-------+---+---------------------------------|
    |libxft2          |V:143, |122|Xft 的，一個庫，連線到了帶有     |
    |                 |I:662  |   |FreeType 字型柵格化庫的 X 應用   |
    |-----------------+-------+---+---------------------------------|
    |libfreetype6     |V:426, |896|FreeType 2.0 字型柵格化庫        |
    |                 |I:994  |   |                                 |
    |-----------------+-------+---+---------------------------------|
    |fontconfig       |V:354, |583|Fontconfig 的，一個通用的字型配置|
    |                 |I:776  |   |庫——支援二進位制                 |
    |-----------------+-------+---+---------------------------------|
    |fontconfig-config|V:367, |442|Fontconfig 的，一個通用的字型配置|
    |                 |I:871  |   |庫——配置資料                     |
    +---------------------------------------------------------------+


    你可以通過下列方法檢視字型配置資訊。

      * 使用 “xset q” 檢視核心 X11 字型路徑

      * 使用 “fc-match” 檢視 fontconfig 的字型預設

      * 使用 “fc-list” 檢視所有可用的 fontconfig 字型

    提示

    “The Penguin and Unicode” 很好地概述了現代的 X 視窗系統。在 http:
    //unifont.org/ 中的其它文件提供了關於 Unicode 字型、支援 Unicode
    的軟體以及國際化的相關資訊，還有免費/自由/開源（free/libre/open
    source，FLOSS）作業系統中的 Unicode 可用性問題。

%

7.6.1. 基礎字型

    計算機字型有兩種主要的型別。

      * 點陣字型（低解析度柵格化下表現良好）
   
      * 輪廓/筆畫字型（高解析度柵格化下表現良好）

    縮放點陣字型會導致影象產生鋸齒，而縮放輪廓/筆畫字型則生成平滑的影
    象。

    Debian 系統中的點陣字型通常由壓縮的 X11 pcf 點陣字型檔案提供，它
    帶有 “.pcf.gz” 檔案字尾名。

    Debian 系統中的輪廓字型由以下提供。

      * PostScript Type 1 字型檔案，它帶有 “.pfb”（二進位制字型檔案）
        和 “.afm”（字型規格檔案）檔案字尾名。

      * TrueType（或 OpenType）字型檔案，通常帶有 “.ttf 檔案字尾名。

    提示
   
    OpenType 是為了取代 TrueType 和 PostScript Type 1。

    表 7.5. 相應的 PostScript Type 1 字型

    +-------------------------------------------------------------------+
    |字型軟體包 |流行 |大小 |無襯線字 |襯線字型|  等寬字型   | 字型來源 |
    |           | 度  |     |   型    |        |             |          |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |PostScript |N/A  |N/A  |Helvetica|Times   |Courier      |Adobe     |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |           |     |     |Nimbus   |Nimbus  |             |URW （    |
    |gsfonts    |I:599|4439 |Sans L   |Roman   |Nimbus Mono L|Adobe 相容|
    |           |     |     |         |No9 L   |             |的大小）  |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |           |     |     |         |Nimbus  |             |PostScript|
    |gsfonts-x11|I:82 |95   |Nimbus   |Roman   |Nimbus Mono L|Type 1 字 |
    |           |     |     |Sans L   |No9 L   |             |型支援的 X|
    |           |     |     |         |        |             |字型。    |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |           |     |     |         |        |             |URW 擴充套|
    |t1-cyrillic|I:19 |4878 |Free     |Free    |Free Courier |件（Adobe |
    |           |     |     |Helvetian|Times   |             |相容的大小|
    |           |     |     |         |        |             |）        |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |           |     |     |         |        |             |基於現代計|
    |           |     |     |         |        |             |算機的可縮|
    |           |     |     |         |        |             |放        |
    |lmodern    |V:13,|33270|LMSans*  |LMRoman*|LMTypewriter*|PostScript|
    |           |I:113|     |         |        |             |和        |
    |           |     |     |         |        |             |OpenType  |
    |           |     |     |         |        |             |字型（來自|
    |           |     |     |         |        |             |Tex）     |
    +-------------------------------------------------------------------+


    表 7.6. 對應的 TrueType 字型

    +-----------------------------------------------------------------------------------+
    |       字型軟體包        |流行度|大小|無襯線字型| 襯線字型 | 等寬字型 |  字型來源  |
    |-------------------------+------+----+----------+----------+----------+------------|
    |                         |      |    |          |          |          |微軟（Adobe |
    |                         |V:1,  |    |          |Times New |Courier   |相容的大小）|
    |ttf-mscorefonts-installer|I:64  |92  |Arial     |Roman     |New       |（這會安裝  |
    |                         |      |    |          |          |          |non-free 資 |
    |                         |      |    |          |          |          |料）        |
    |-------------------------+------+----+----------+----------+----------+------------|
    |                         |      |    |          |          |          |Liberation  |
    |fonts-liberation         |I:469 |2093|Liberation|Liberation|Liberation|字型專案（微|
    |                         |      |    |Sans      |Serif     |Mono      |軟相容的大小|
    |                         |      |    |          |          |          |）          |
    |-------------------------+------+----+----------+----------+----------+------------|
    |                         |V:50, |    |          |          |          |GNU 自由字型|
    |fonts-freefont-ttf       |I:276 |6656|FreeSans  |FreeSerif |FreeMono  |（微軟相容的|
    |                         |      |    |          |          |          |大小）      |
    |-------------------------+------+----+----------+----------+----------+------------|
    |                         |      |    |          |          |          |覆蓋了      |
    |                         |      |    |DejaVu    |DejaVu    |DejaVu    |Unicode 的  |
    |fonts-dejavu             |I:478 |39  |Sans      |Serif     |Sans Mono |DejaVu、    |
    |                         |      |    |          |          |          |Bitstream   |
    |                         |      |    |          |          |          |Vera        |
    |-------------------------+------+----+----------+----------+----------+------------|
    |                         |      |    |          |          |          |覆蓋了      |
    |                         |      |    |          |          |          |Unicode 的  |
    |                         |      |    |          |          |          |DejaVu、    |
    |                         |      |    |          |          |          |Bitstream   |
    |fonts-dejavu-core        |V:220,|2954|DejaVu    |DejaVu    |DejaVu    |Vera（sans、|
    |                         |I:809 |    |Sans      |Serif     |Sans Mono |sans-bold、 |
    |                         |      |    |          |          |          |serif、     |
    |                         |      |    |          |          |          |serif-bold、|
    |                         |      |    |          |          |          |mono、      |
    |                         |      |    |          |          |          |mono-bold） |
    |-------------------------+------+----+----------+----------+----------+------------|
    |                         |      |    |          |          |          |覆蓋了      |
    |                         |      |    |          |          |          |Unicode 的  |
    |                         |      |    |          |          |          |DejaVu、    |
    |                         |      |    |          |          |          |Bitstream   |
    |                         |      |    |          |          |          |Vera（      |
    |fonts-dejavu-extra       |I:516 |7493|N/A       |N/A       |N/A       |oblique、   |
    |                         |      |    |          |          |          |italic、    |
    |                         |      |    |          |          |          |bold-oblique|
    |                         |      |    |          |          |          |、          |
    |                         |      |    |          |          |          |bold-italic |
    |                         |      |    |          |          |          |、condensed |
    |                         |      |    |          |          |          |）          |
    |-------------------------+------+----+----------+----------+----------+------------|
    |                         |      |    |          |          |          |GNU Unifont |
    |                         |      |    |          |          |          |，帶有      |
    |                         |      |    |          |          |          |Unicode 5.1 |
    |ttf-unifont              |I:21  |21  |N/A       |N/A       |unifont   |基本多文種平|
    |                         |      |    |          |          |          |面（BMP）中 |
    |                         |      |    |          |          |          |所有的可列印|
    |                         |      |    |          |          |          |字元        |
    +-----------------------------------------------------------------------------------+


    提示
   
    DejaVu 字型基於 Bitstream Vera 字型，並對其進行了擴充。

%

7.6.2. 其它字型

    aptitude(8) 可以幫你輕鬆找到其它的字型。

      * 簡單的軟體包列表位於 “軟體集” → “本地化”

      * 平面軟體包列表可以使用 debtag 正則表示式來過濾字型資料：
        “~Gmade-of::data:font”
   
      * 在軟體包名稱裡採用下面的正則表示式來過濾得到BDF（點陣圖）字型
        包列表: "~nxfonts-"

      * 在軟體包名稱裡採用下面的正則表示式來得到TrueType字型包列表:
        "~nttf-|~nfonts-"

    因為自由字型有時會受限，因此對於 Debian 使用者而言，可以選擇安裝
    或分享一些商業的 TrueType 字型。為了簡化該過程，建立一些方便的軟
    體包。

      * mathematica-fonts
   
      * fonts-mscorefonts-installer

    當你付出使用非自由字型汙染你自由系統的代價後，你會得到一些相當不
    錯的 trueType 字型。

%

7.6.3. CJK 字型

    下面是一些主要關注 CJK 字元的字型。

    表 7.7. CJK 字型名稱中所使用的暗示字型型別的關鍵詞

    +-----------------------------------------------------------+
    |字型型別|  日文字型名稱  |中文字型名稱|    韓文字型名稱    |
    |--------+----------------+------------+--------------------|
    |無襯線  |gothic、ゴチック|hei、gothic |dodum、gulim、gothic|
    |--------+----------------+------------+--------------------|
    |襯線    |mincho、明朝    |song、ming  |batang              |
    +-----------------------------------------------------------+


    像 “VL PGothic” 這樣帶有 “P” 的字型名稱是對應的 “VL Gothic” 字型
    修改寬度後的比例字型。

    舉個例子，Shift_JIS 的碼錶包含了 7070 個字元。它們可以像下面那樣
    分類。

      * JIS X 0201 單位元組字元（191 個字元，又名半形字元）
   
      * JIS X 0208 雙位元組字元（6879 個字元，又名全形字元）

    使用修復寬度的 CJK 字型的雙位元組字元佔用控制檯終端的雙倍寬度。為
    了應對這種情況，帶有 “.hbf” 檔案字尾名的漢字點陣字型（Hanzi
    Bitmap Font，HBF）檔案被設計為包含了單位元組和雙位元組字元的字型
    。

    為了節省 TrueType 字型檔案的空間，可以使用帶有 “.ttc” 檔案字尾名
    的 TrueType 字型集合檔案。

    為了覆蓋複雜的編碼字型空間, CID採用"%!PS-Adobe-3.0 Resource-CMap"
    開頭的CMap檔案作為PostScript型別1字型的關鍵字。這個幾乎很少用在普
    通的X顯示上，更多用於PDF等格式的檔案渲染上。(參考第 7.7.2 节 “X
    實用應用”).

    提示

    對於Han unification，一些Unicode編碼點陣期望能夠有多樣化的glyphs
    。其中最令人討厭的在中日韓三個國家“U + 3001頓號”和“U + 3002表意的
    句號”的字元位置各不相同。配置日文中心字型的優先順序，中文用的是"
    7~/.fonts.conf 8"能夠讓日本感到有所平衡。

7.7. X 應用

%

7.7.1. X 辦公應用

    下面是一些基礎的辦公應用（LO 是 LibreOffice）。

    表 7.8. 基礎的 X 辦公應用

    +---------------------------------------------------------------+
    |      軟體包       | 流行度  |軟體包大|類型 |       說明       |
    |                   |         |   小   |     |                  |
    |-------------------+---------+--------+-----+------------------|
    |libreoffice-writer |V:188,   |39333   |LO   |文書處理軟體      |
    |                   |I:441    |        |     |                  |
    |-------------------+---------+--------+-----+------------------|
    |libreoffice-calc   |V:188,   |32973   |LO   |電子表格          |
    |                   |I:436    |        |     |                  |
    |-------------------+---------+--------+-----+------------------|
    |libreoffice-impress|V:176,   |9934    |LO   |簡報              |
    |                   |I:433    |        |     |                  |
    |-------------------+---------+--------+-----+------------------|
    |libreoffice-base   |V:145,   |7473    |LO   |資料庫管理        |
    |                   |I:325    |        |     |                  |
    |-------------------+---------+--------+-----+------------------|
    |libreoffice-draw   |V:177,   |14600   |LO   |向量圖形編輯器（繪|
    |                   |I:434    |        |     |圖）              |
    |-------------------+---------+--------+-----+------------------|
    |libreoffice-math   |V:174,   |1963    |LO   |數學方程/公式編輯 |
    |                   |I:437    |        |     |器                |
    |-------------------+---------+--------+-----+------------------|
    |abiword            |V:1, I:12|5141    |GNOME|文書處理軟體      |
    |-------------------+---------+--------+-----+------------------|
    |gnumeric           |V:6, I:21|9933    |GNOME|電子表格          |
    |-------------------+---------+--------+-----+------------------|
    |gimp               |V:68,    |22313   |GTK  |點陣圖圖形編輯器  |
    |                   |I:341    |        |     |(繪圖)            |
    |-------------------+---------+--------+-----+------------------|
    |inkscape           |V:55,    |84823   |GNOME|向量圖形編輯器（繪|
    |                   |I:209    |        |     |圖）              |
    |-------------------+---------+--------+-----+------------------|
    |dia                |V:5, I:31|3727    |GTK  |流程圖和示意圖編輯|
    |                   |         |        |     |器                |
    |-------------------+---------+--------+-----+------------------|
    |planner            |V:0, I:5 |1146    |GNOME|專案管理          |
    |-------------------+---------+--------+-----+------------------|
    |calligrawords      |V:0, I:7 |5717    |KDE  |文書處理軟體      |
    |-------------------+---------+--------+-----+------------------|
    |calligrasheets     |V:0, I:6 |10890   |KDE  |電子表格          |
    |-------------------+---------+--------+-----+------------------|
    |calligrastage      |V:0, I:5 |5102    |KDE  |簡報              |
    |-------------------+---------+--------+-----+------------------|
    |calligraplan       |V:0, I:2 |15342   |KDE  |專案管理          |
    |-------------------+---------+--------+-----+------------------|
    |kexi               |V:0, I:2 |7576    |KDE  |資料庫管理        |
    |-------------------+---------+--------+-----+------------------|
    |karbon             |V:0, I:7 |3473    |KDE  |向量圖形編輯器（繪|
    |                   |         |        |     |圖）              |
    +---------------------------------------------------------------+


%

7.7.2. X 實用應用

    下面是一些引起我注意的基礎實用應用。

    表 7.9. 基礎的實用應用

    +---------------------------------------------------------------+
    | 軟體包  |  流行度  |軟體包大|類型 |           說明            |
    |         |          |   小   |     |                           |
    |---------+----------+--------+-----+---------------------------|
    |evince   |V:116,    |954     |GNOME|文件（pdf）閱讀器          |
    |         |I:329     |        |     |                           |
    |---------+----------+--------+-----+---------------------------|
    |okular   |V:46,     |14646   |KDE  |文件（pdf）閱讀器          |
    |         |I:118     |        |     |                           |
    |---------+----------+--------+-----+---------------------------|
    |calibre  |V:9, I:36 |54876   |KDE  |電子書轉換器和庫管理       |
    |---------+----------+--------+-----+---------------------------|
    |fbreader |V:2, I:15 |3074    |GTK  |電子書閱讀器               |
    |---------+----------+--------+-----+---------------------------|
    |evolution|V:31,     |475     |GNOME|個人資訊管理（群組軟體和電 |
    |         |I:229     |        |     |子郵件）                   |
    |---------+----------+--------+-----+---------------------------|
    |kontact  |V:1, I:16 |2152    |KDE  |個人資訊管理（群組軟體和電 |
    |         |          |        |     |子郵件）                   |
    |---------+----------+--------+-----+---------------------------|
    |scribus  |V:2, I:23 |30375   |KDE  |桌面頁面佈局編輯器         |
    |---------+----------+--------+-----+---------------------------|
    |glabels  |V:0, I:4  |1326    |GNOME|標籤編輯器                 |
    |---------+----------+--------+-----+---------------------------|
    |gnucash  |V:3, I:12 |32304   |GNOME|個人會計                   |
    |---------+----------+--------+-----+---------------------------|
    |homebank |V:0, I:3  |1044    |GTK  |個人會計                   |
    |---------+----------+--------+-----+---------------------------|
    |kmymoney |V:0, I:2  |12036   |KDE  |個人會計                   |
    |---------+----------+--------+-----+---------------------------|
    |shotwell |V:19,     |6451    |GTK  |數碼照片管理器             |
    |         |I:223     |        |     |                           |
    |---------+----------+--------+-----+---------------------------|
    |xsane    |V:17,     |2346    |GTK  |掃描器前段                 |
    |         |I:173     |        |     |                           |
    +---------------------------------------------------------------+


    小心

    為了讓 evince 和 okular 使用 Cmap 資料（第 7.6.3 节 “CJK 字型”）
    來顯示 CJK PDF 文件，必須要安裝 poppler-data 軟體包（之前為
    non-free，參見第 11.4.1 节 “Ghostscript”）。

    注意

    如果在 GNOME 桌面環境中沒有相應功能的軟體，那麼安裝例如 scribus（
    KDE）這樣的軟體包是完全可以接受的。但別安裝過多功能重複的軟體包，
    這會使你的選單凌亂。

7.8. X 瑣事

%

7.8.1. 剪貼簿

    使用滑鼠的 3 個按鍵來進行 X 選擇是 X 原生的剪貼簿（參見第 1.4.4 
    节 “Unix類型的鼠標操作”）。

    提示
   
    Shift-Insert 等同於單擊滑鼠中鍵。

    表 7.10. 基礎的 X 選擇程式

    +----------------------------------------------------+
    |軟體包|  流行度  |軟體包大小|類型|       說明       |
    |------+----------+----------+----+------------------|
    |xsel  |V:10, I:44|59        |X   |X 選擇的命令列介面|
    |------+----------+----------+----+------------------|
    |xclip |V:9, I:49 |64        |X   |X 選擇的命令列介面|
    +----------------------------------------------------+


    現代的桌面環境（GNOME、KDE……）提供了不同的剪貼簿系統用於剪下、複
    製和貼上，它們使用滑鼠左鍵和關鍵鍵（CTRL-X、CRTL-C 和 CTRL-V）。

%

7.8.2. X 中的鍵盤和滑鼠按鈕對映

    xmodmap(1) 是 X 視窗系統中用來修改鍵盤和滑鼠按鈕對映的工具。為了
    獲得 keycode，你需要在 X 中執行 xev(1) 並按下對應按鍵。為了獲得 
    keysym 的含義，你需要檢視 “/usr/include/X11/keysymdef.h” 檔案（
    x11proto-core-dev 軟體包）中 MACRO 的定義。檔案中所有的 “#define”
    語句後面都是以 “XK_” 開頭，後接 keysym 名稱。

%

7.8.3. 典型的 X 客戶端

    大多數傳統的 X 客戶端程式，例如 xterm(1)，可以用一組標準的命令列
    選項來啟動，從而指定大小、字型和顯示。

    它們還使用 X 資源資料庫來配置它們的外觀。系統預設的 X 資源儲存在
    “/etc/X11/Xresources/*” 中，應用預設的 X 資源儲存在 “/etc/X11/
    app-defaults/*” 中。使用這些設定作為起點。

    “~/.Xresources” 檔案被用來儲存使用者資源設定。這個檔案在登陸時會
    自動合併到預設的 X 資源。要更改這些設定並使其立即生效，使用下列命
    令將它們合併到資料庫中。

    $ xrdb -merge ~/.Xresources

    參見 x(7) 和 xrdb(1).

%

7.8.4. X 終端模擬器 —— xterm

    在 http://dickey.his.com/xterm/xterm.faq.html 可以瞭解到關於 
    xterm(1) 的一切資訊。

%

7.8.5. 以 root 執行 X 客戶端

    警告

    不要通過在顯示管理器（例如 gdm3）的提示符後輸入 root 來以 root 身
    份啟動 X 顯示/會話管理器，因為這是不安全的，即使你打算進行管理員
    操作。以 root 執行整個 X 架構被認為是不安全的。你必須總是使用盡可
    能低許可權的賬號，例如普通的使用者賬號。

    執行一個特殊的 X 客戶端（例如使 “foo” 取得 root 許可權）的簡單方
    法是像下面那樣使用 sudo(8) 等。

    $ sudo foo &

    $ sudo -s
    # foo &

    $ ssh -X root@localhost
    # foo &

    小心
   
    為了該目的像上面那樣使用 ssh(1) 會浪費資源。

    為了使 X 客戶端連結到 X 伺服器，請注意以下幾點。

      * 舊使用者 “$XAUTHORITY” 和 “$DISPLAY” 環境變數的值必須複製給新
        使用者。

      * “$XAUTHORITY” 環境變數的值所指向的檔案必須對新使用者可讀。

第 8 章 I18N 和 L10N

    一個應用軟體的多語言化 (M17N)或本地語言支援，通過 2 個步驟完成。

      * 國際化 (I18N): 使一個軟體能夠處理多個語言環境。
   
      * 本地化 (L10N)：使一個軟體處理一個特定的語言環境。

    提示

    在 multilingualization（多語言化）、internationalization（國際化
    ）和 localization（本地化）中，有17, 18, 或 10 個字母在"m" 和
    "n", "i" 和 "n", 或 "l" 和 "n"中間，它們相應表示為 M17N, I18N 和
    L10N.

    GNOME 和 KDE 等現代軟體是多語言的。他們通過處理 UTF-8 資料來實現
    國際化，並通過 gettext(1) 架構提供翻譯資訊來本地化。翻譯資訊可以
    由獨立的本地化軟體包來提供。翻譯資訊易於選擇使用，通過給相關的環
    境變數設定適當的語言環境即可。

    最簡單的文字資料表示方法是 ASCII，使用少於 127 個字元 (用 7 位表
    示)，這對英語足夠了。為了支援用於國際化的更多字元，人們發明了許多
    字元編碼系統。現代知名的編碼系統是 UTF-8，它可以處理人類所知的幾
    乎所有字元(參見第 8.4.1 节 “編碼的基礎知識”).

    細節請參見 i18n 介紹.

    有本地化硬體配置資料便能支援國際化硬體。

    警告
   
    本章是基於 2013 年發佈的 Debian 7.0 (Wheezy) 編寫的，所以其內容正
    在變得過時。

%

8.1. 鍵盤輸入

    Debian 系統可以使用 keyboard-configuration 和 console-setup 軟體
    包配置多個國際化鍵盤佈局。

    # dpkg-reconfigure keyboard-configuration
    # dpkg-reconfigure console-setup

    這將配置 Linux 控制檯和 X 視窗的鍵盤，並更新 “/etc/default/
    keyboard” 和 “/etc/default/console-setup” 中的配置引數。這也可以
    用來配置 Linux 控制檯的字型。

    許多非 ASCII 字元，包括許多歐洲語言使用的重音字元，可以使用死鍵、
    AltGr 鍵和組合鍵來輸入它們。

    對於亞洲語言，你需要更復雜的輸入法支援，例如下面將要討論的 IBus。

%

8.1.1. IBus 支援的輸入法

    輸入多種語言到應用程式的處理流程如下：

    鍵盤                               應用程式
       |                                        ^
       |                                        |
       +-> Linux 核心 -> 輸入法 -> Gtk、Qt、或 X

    通過 im-config 使用 IBus 家族的軟體包可以簡單地為 Debian 系統建立
    多語種的輸入。下面列出了一些 IBus 軟體包。

    表 8.1. IBus 支援的輸入法

    +--------------------------------------------------------------+
    |    軟體包     |  流行度  |大小|        支援的語言環境        |
    |---------------+----------+----+------------------------------|
    |ibus           |V:70, I:87|1581|使用 dbus 的輸入方式框架      |
    |---------------+----------+----+------------------------------|
    |ibus-mozc      |V:1, I:2  |999 |日文                          |
    |---------------+----------+----+------------------------------|
    |ibus-anthy     |V:0, I:1  |8723|同上                          |
    |---------------+----------+----+------------------------------|
    |ibus-kkc       |V:0, I:0  |214 |同上                          |
    |---------------+----------+----+------------------------------|
    |ibus-skk       |V:0, I:0  |244 |同上                          |
    |---------------+----------+----+------------------------------|
    |ibus-pinyin    |V:0, I:1  |1434|中文（zh_CN）                 |
    |---------------+----------+----+------------------------------|
    |ibus-chewing   |V:0, I:0  |415 |中文 (zh_TW)                  |
    |---------------+----------+----+------------------------------|
    |ibus-hangul    |V:0, I:1  |288 |韓文                          |
    |---------------+----------+----+------------------------------|
    |ibus-table     |V:0, I:1  |1801|IBus 表引擎                   |
    |---------------+----------+----+------------------------------|
    |ibus-table-thai|I:0       |47  |泰文                          |
    |---------------+----------+----+------------------------------|
    |ibus-unikey    |V:0, I:0  |318 |越南語                        |
    |---------------+----------+----+------------------------------|
    |ibus-m17n      |V:0, I:1  |187 |多語言：印度語、阿拉伯語和其它|
    +--------------------------------------------------------------+


    kinput2 方式和其它本地獨立的亞洲經典輸入法依舊存在，但不推薦在現
    代的 UTF-8 X 環境中使用。SCIM 和 uim 工具鏈是用於現代的 UTF-8 X
    環境下的國際化輸入法的較舊的方法。

%

8.1.2. 一個日語的例子

    我發現在英語環境("en_US.UTF-8")下啟動日文輸入法非常有用. 下面是在
    GNOME3下使用IBus的做法:

     1. 安裝日文輸入法軟體包 ibus-anthy ，以及im-config等推薦的軟體
        包.

     2. 從使用者Shell中執行"im-config"，然後選擇"ibus"作為輸入法.

     3. 選擇 "Settings" → "Keyboard" → "Input Sources" → 在"Input
        Sources"中單擊 "+" → "Japanese" → "Japanese (anthy)"，然後單
        擊"Add".

     4. 選擇"日語"並"新增"到支援日語鍵盤，就不需要字元轉換。(你可能會
        選擇更多的輸入源)

     5. 重新登入使用者賬戶。

     6. 使用"im-config"驗證設定.

     7. 右鍵單擊 GUI 工具條圖示，設定輸入源。

     8. 使用SUPER-SPACE在安裝的輸入法之間進行切換. (SUPER鍵通常是
        Windows鍵.)

    請注意以下幾點。

      * im-config(8)如果命令是從root賬戶執行的表現會有所不同。

      * im-config(8) 讓最佳的輸入法作為系統預設而不需要使用者干預。

      * 使用者介面選單入口im-config(8) 預設會被禁用，以免造成混亂。

%

8.1.3. 禁用輸入法

    如果你不想通過 XIM（X 所使用的機制）來進行輸入，你可以在啟動程式
    時將 “$XMODIFIERS” 的值設定為 “none”。這可能會是這種情況，你想在 
    emacs(1) 中使用日文輸入基礎設施 egg 同時禁用 ibus。你可以從 shell
    中執行如下命令。

    $ XMODIFIERS=none emacs

    為了調整 Debian 選單執行的命令，請根據 “/usr/share/doc/menu/html”
    中描述的方法定製 “/etc/menu/” 中的配置。

%

8.2. 顯示輸出

    Linux 控制檯只能顯示有限的字元。（你需要使用特殊的終端程式，例如
    jfbterm(1)，從而在非 X 控制檯中顯示非歐洲語言。）

    只要需要的字型檔資料存在X視窗可以通過UTF-8編碼顯示任意字元。（X視
    窗系統能夠維護好原始字型資料編碼，這對使用者來說是透明的）

%

8.3. 東亞環境下寬度有歧義的字元

    在東亞語言環境下，方框繪製、希臘字元和西里爾字元可能會顯示得比你
    預期的樣子更寬，這樣會導致終端輸出排列不再整齊（參見 Unicode 標準
    附錄 #11）。

    您可以繞過這個問題：

      * gnome-terminal：編輯 → 首選項 → 配置檔案 → 編輯 → 相容性 → 寬
        度有歧義的字元 → 窄

      * ncurses：設定環境變數 export NCURSES_NO_UTF8_ACS=0。

%

8.4. 語言環境

    下面重點介紹在從 gdm3(1) 啟動的 X 視窗環境下執行的應用程式的語言
    設定。

%

8.4.1. 編碼的基礎知識

    環境變數 “LANG=xx_YY.ZZZZ” 將語言環境設定為語言程式碼 “xx”、國家
    程式碼 “YY” 和編碼 “ZZZZ”（參見第 1.5.2 节 ““$LANG”變量”）。

    現在的 Debian 系統一般將語言環境設定為 “LANG=xx_YY.UTF-8”。這將會
    使用帶有 Unicode 字符集的 UTF-8 編碼。UTF-8 編碼系統是多位元組的
    程式碼系統並且碼點的使用更加智慧。ASCII 資料（只包含了7位二進位制
    程式碼）總是合法的 UTF-8 資料（每個字元使用1個位元組）。

    之前的 Debian 系統曾經將語言環境設定為 “LANG=C” 或 “LANG=xx_YY”（
    沒有 “.UTF-8”）。

      * “LANG=C” 或 “LANG=POSIX” 使用 ASCII 字符集。
   
      * “LANG=xx_YY” 使用 Unix 的傳統編碼系統。

    “LANG=xx_YY” 所使用的確切傳統編碼系統可以通過 “/usr/share/i18n/
    SUPPORTED” 來確認。例如，“en_US” 使用 “ISO-8859-1” 編碼，
    “fr_FR@euro” 使用 “ISO-8859-15” 編碼。

    提示
   
    編碼值的含義，參見表 11.2 “編碼值和用法的列表”。

%

8.4.2. UTF-8 語言環境的基本原理

    Unicode 字符集可以用從 0 到 10FFFF （十六進位制）範圍的碼點來顯示
    幾乎所有人類已知的字元。它的儲存至少需要 21 位。

    文字編碼系統 UTF-8 將 Unicode 碼點適配到一個合理的 8 位資料流，併
    兼容 ASCII 資料處理系統。UTF 表示 Unicode 轉換格式（Unicode
    Transformation Format）。

    我建議在你的桌面使用 UTF-8 語言環境，例如 “LANG=zh_CN.UTF-8”。語
    言環境的第一部分決定了應用程式中顯示的資訊。例如，“LANG=
    fr_FR.UTF-8” 語言環境下的 gedit(1)（GNOME 桌面的文字編輯器），選
    單是用法語顯示的，但只要安裝所需的字型和輸入法就可以顯示和編輯中
    文字元文字資料。

    我還建議只使用 “$LANG” 環境變數來設定語言環境。我沒有看到在 UTF-8
    語言環境下設定複雜的 “LC_*” 變數組合有什麼好處（參見 locale(1)）
    。

    即使純英文文字也可能包含非 ASCII 字元，例如微微卷曲的左右引號在
    ASCII 中是不可用的。

    “雙引號的文字” 並非 “雙引號的 ASCII”
    ‘單引號的文字’ 並非 ‘單引號的 ASCII’

    當純 ASCII 文字資料轉換為 UTF-8 後，它會具有與原本完全相同的內容
    和大小。因此使用 UTF-8 語言環境並不會使你損失什麼。

    一些程式在支援 I8N 後會消耗更多的記憶體。這是因為它們為了速度優化
    ，而在內部使用 UTF-32(UCS4) 來支援 Unicode，並且每個獨立於語言環
    境所選的 ASCII 字元資料都會消耗 4 個位元組。再一次地，使用 UTF-8
    語言環境並不會使你損失什麼。

    供應商指定的舊的非 UTF-8 編碼系統在一些字元上往往有較小但惱人的不
    同，例如許多國家使用的字形。而使用了 UTF-8 系統的現代作業系統基本
    上能解決這行編碼衝突問題。

%

8.4.3. 語言環境的重新配置

    為了使系統訪問特定的語言環境，必須從語言環境資料庫編譯相應語言環
    境資料。（Debian 系統不帶有所有提前編譯的可用語言環境，除非你安裝
    locales-all 軟體包。）所支援的可編譯語言環境的完整列表位於 “/usr/
    share/i18n/SUPPORTED”，它列出了所有準確的語言環境名稱。下列命令列
    出已編譯成二進位制形式的所有可用的 UTF-8 語言環境。

    $ locale -a | grep utf8

    下列的命令會重新配置 locales 軟體包。

    # dpkg-reconfigure locales

    該過程包含 3 個步驟。

     1. 更新可用的語言環境列表

     2. 將它們編譯為二進位制形式

     3. 在 “/etc/default/locale” 設定系統預設的語言環境值給 PAM 使用
        （參見第 4.5 节 “PAM 和 NSS”）

    可用的語言環境列表應該包含 “en_US.UTF-8” 和所有你感興趣的帶有
    “UTF-8” 的語言。

    對於美式英語，推薦預設的語言環境為 “en_US.UTF-8”。對於其它語言，
    請確保所選的語言環境帶有 “UTF-8”。這些設定中的任何一個都能夠處理
    任何國際字元。

    注意
   
    雖然將語言環境設定為 “C” 會使用美式英語，但它只處理 ASCII 字元。

%

8.4.4. “$LANG” 環境變數的值

    “$LANG” 環境變數的值由許多應用程式設定和改變。

      * login(1) 的 PAM 機制為本地 Linux 控制檯程式進行了最初的設定

      * 顯示管理器的 PAM 機制為所有的 X 程式進行了最初的設定

      * ssh(1) 的 PAM 機制為遠端控制檯程式進行了最初的設定
   
      * 一些顯示管理器，例如 gdm3(1) 會為所有 X 程式改變設定

      * 通過 “~/.xsessionrc”，X 會話啟動碼會為所有 X 程式改變設定

      * shell 啟動碼，例如 “~/.bashrc”，會為所有控制檯程式改變設定

    提示
   
    將系統預設語言環境設定為 “en_US.UTF-8” 能夠獲得最大的相容性。

%

8.4.5. 只用於 X 視窗的特定語言環境

    你可以像下面那樣選擇只用於 X 視窗的特定語言環境，而不管你的系統使
    用 PAM 定製（參見第 4.5 节 “PAM 和 NSS”）的預設語言環境。

    這個環境能夠給你提供最好的桌面體驗，並保持穩定。即使 X 視窗系統不
    工作，你也可以訪問帶有可讀資訊的多功能字元終端。這對於使用非羅馬
    字元（如中文，日語和韓語）的語言來說是必不可少的。

    注意

    改善 X 會話管理軟體包可能會使另一種可用的方法，但請閱讀下面的內容
    作為設定語言環境的通用和基礎的方法。對於 gdm3(1)，我們知道你能夠
    通過它的選單來選擇 X 會話的語言環境。

    在 PAM 配置檔案中的下面這行定義了語言環境的檔案位置，例如 “/etc/
    pam.d/gdm3”。

    auth    required        pam_env.so read_env=1 envfile=/etc/default/locale

    將這行改成下面那樣。

    auth    required        pam_env.so read_env=1 envfile=/etc/default/locale-x

    對於中文，建立一個帶有 “-rw-r--r-- 1 root root” 許可權的 “/etc/
    default/locale-x” 檔案，幷包含下面這行。

    LANG="zh_CN.UTF-8"

    保持用於其它程式的預設 “/etc/default/locale” 檔案有下面這行。

    LANG="en_US.UTF-8"

    這是定製語言環境最通用的技術，並且會使 gdm3(1) 本身的選單選擇對話
    方塊被本地化。

    對於該情況的另一種解決方法是使用 “~/.xsessionrc” 檔案來改變語言環
    境。

%

8.4.6. 檔名編碼

    對於跨平臺的資料交換(參見第 10.1.7 节 “可移動儲存裝置”),你需要使
    用特殊的編碼掛載檔案系統.舉個例子，不使用選項時，mount(8) 假設
    vfat 檔案系統使用 CP437. 你需要給檔名提供明確的掛載選項來使用
    UTF-8 或 CP932.

    注意

    在 GNOME 這類的現代桌面環境下，當自動掛載一個熱拔插 U 盤時，你可
    以提供這樣的掛載選項。右擊桌面上的圖示，點選 "Drive" , "Setting",
    輸入 "utf8" 到 "Mount options:". 當這個 U 盤下次掛載時，UTF-8 就
    可以了。

    注意

    如果你在升級一個系統，或者從老的非 UTF-8 系統遷移磁碟，非 ASCII
    字元的檔名也許是使用老舊的 ISO-8859-1 或 eucJP 來編碼. 請尋求文字
    轉換工具把他們轉換到 UTF-8. 參見第 11.1 节 “文字資料轉換工具”.

    在預設情況下，Samba 對新的客戶端(Windows NT, 200x, XP)使用
    Unicode，但對老的客戶端(DOS 和 Windows 9x/Me)使用 CP850.可以在 "/
    etc/samba/smb.conf" 檔案裡面，使用"dos charset" 來改變老客戶端的
    這個預設編碼。比如說，CP932 表示為日語。

%

8.4.7. 本地化資訊和翻譯文件

    在 Debian 系統中顯示的許多文件和文字資訊有翻譯存在，比如錯誤資訊
    、標準程式輸出、選單和手冊頁。GNU gettext(1) 命令工具鏈是大部分翻
    譯活動的後端工具。

    aptitude(8) 裡，"Tasks" → "Localization" 提供一個有用的二進位制包
    擴充套件列表，給應用程式增加本地化資訊和提供翻譯文件。

    舉個例子，你可以安裝 manpages-<LANG> 包來獲得本地化 man 手冊頁資
    訊。從 "/usr/share/man/it/" 來讀取 <programname> 義大利語的 man
    手冊頁 ,執行下面的操作。

    LANG=it_IT.UTF-8 man <programname>

%

8.4.8. 語言環境的影響

    sort(1) 的字元排序，受語言環境的影響. 西班牙語和英語語言環境排序
    是不一樣的。

    ls(1) 的日期格式受語言環境影響. "LANG=C ls -l" 和 "LANG=
    en_US.UTF-8" 的日期格式是不一樣的(參見第 9.2.5 节 “定製時間和日期
    的顯示”).

    不同語言環境的數字標點不一樣.比如說，英語語言環境中, 一千點一顯示
    為 "1,000.1"，而在德語語言環境中,它顯示為 "1.000,1". 你可以在電子
    表格程式裡面看到這個不同。

第 9 章 系統技巧

    這裡，描述配置和管理系統的基本技巧，大部分在控制檯操作。

%

9.1. screen 程式

    對通過不可靠或斷斷續續的連線訪問遠端主機的人們而言，screen(1) 是
    一個非常有用的工具，因為它支援可中斷的網路連線。

    表 9.1. 支援可中斷網路連線的程式列表

    +---------------------------------------------------------------+
    |軟體包|  流行度   |大小|                 說明                  |
    |------+-----------+----+---------------------------------------|
    |screen|V:127,     |1013|VT100/ANSI 終端模擬器混合複用的終端    |
    |      |I:281      |    |                                       |
    |------+-----------+----+---------------------------------------|
    |tmux  |V:34, I:136|830 |終端複用的備選方案（使用 “Control-B”代 |
    |      |           |    |替）                                   |
    +---------------------------------------------------------------+


%

9.1.1. screen(1) 的使用場景

    screen(1) 不但允許一個終端視窗執行多個程序，還允許遠端 shell 程序
    支援中斷的連線.這裡是一個典型的 screen(1) 使用場景.

     1. 登入到一個遠端機器。

     2. 在單個控制檯上啟動 screen。

     3. 使用 ^A c ("Control-A" 接著 "c")在 screen 中建立的視窗執行多
        個程式.

     4. 按 ^A n ("Control-A" 接著"n")來在多個 screen 視窗間轉換.

     5. 突然，你需要離開你的終端，但你不想丟掉正在做的工作，而這些工
        作需要連線來保持。

     6. 你可以通過任何方式分離 screen 會話。

          + 殘忍地拔掉你的網路連線

          + 輸入 ^A d ("Control-A" 接著 "d") 並手工從遠端連線退出登入

          + 輸入 ^A DD ("Control-A" 接著 "DD") 分離 screen 並退出登入

     7. 你重新登入到同一個遠處主機（即使從不同的終端）。

     8. 使用 "screen -r" 啟動 screen.

     9. screen 魔術般的重新附上先前所有的 screen 視窗和所有在活動執行
        的程式.

    提示

    對於撥號或者按包計費的網路連線，你可以通過 screen 節省連線費用，
    應為你可以在斷開連線時讓一個程序繼續執行，當你稍後再次連線時重新
    附上它。

%

9.1.2. screen 命令的鍵繫結

    在 screen 會話裡,除了命令按鍵外的所有鍵盤輸入都會被髮送到當前視窗
    。 screen 所有命令按鍵是通過 ^A ("Control-A") 加單個鍵[加任何引
    數] 來輸入.這裡有一些重要的命令按鍵需要記住。

    表 9.2. screen 鍵繫結列表

    +---------------------------------------------+
    |鍵綁定功能|               說明               |
    |----------+----------------------------------|
    |^A ?      |顯示幫助螢幕（顯示鍵繫結）        |
    |----------+----------------------------------|
    |^A c      |建立一個新的視窗並切換到該視窗    |
    |----------+----------------------------------|
    |^A n      |到下一個視窗                      |
    |----------+----------------------------------|
    |^A p      |到前一個視窗                      |
    |----------+----------------------------------|
    |^A 0      |到 0 號視窗                       |
    |----------+----------------------------------|
    |^A 1      |到 1 號視窗                       |
    |----------+----------------------------------|
    |^A w      |顯示視窗列表                      |
    |----------+----------------------------------|
    |^A a      |作為鍵盤輸入傳送 Ctrl-A 到當前視窗|
    |----------+----------------------------------|
    |^A h      |把當前視窗的硬拷貝寫到一個檔案    |
    |----------+----------------------------------|
    |^A H      |開始/結束當前視窗到檔案的記錄     |
    |----------+----------------------------------|
    |^A ^X     |鎖定終端(密碼保護)                |
    |----------+----------------------------------|
    |^A d      |從終端分離 screen 會話            |
    |----------+----------------------------------|
    |^A DD     |分離 screen 會話並退出登入        |
    +---------------------------------------------+


    細節參見 screen(1).

9.2. 資料記錄和展示

%

9.2.1. 日誌後臺守護程序（daemon）

    許多程式在"/var/log/" 目錄下記錄它們的活動.

      * 系統日誌後臺守護程序（daemon）: rsyslogd(8)

    參見第 3.2.5 节 “系統訊息” 和第 3.2.4 节 “核心訊息”.

%

9.2.2. 日誌分析

    這裡是主要的日誌分析軟體 ("~Gsecurity::log-analyzer" 在 aptitude
    (8) 中).

    表 9.3. 系統日誌分析軟體列表

    +---------------------------------------------------------------+
    |    軟體包    | 流行度 |大小|               說明               |
    |--------------+--------+----+----------------------------------|
    |logwatch      |V:16,   |2265|用 Perl 寫的日誌分析軟體，有好的輸|
    |              |I:18    |    |出                                |
    |--------------+--------+----+----------------------------------|
    |fail2ban      |V:112,  |2092|禁用造成多個認證錯誤的 IP         |
    |              |I:123   |    |                                  |
    |--------------+--------+----+----------------------------------|
    |analog        |V:4,    |3534|web 伺服器日誌分析                |
    |              |I:109   |    |                                  |
    |--------------+--------+----+----------------------------------|
    |awstats       |V:9,    |6910|強大和特性全面的 web 伺服器日誌分 |
    |              |I:15    |    |析                                |
    |--------------+--------+----+----------------------------------|
    |sarg          |V:3, I:3|843 |生成 squid 分析報告               |
    |--------------+--------+----+----------------------------------|
    |pflogsumm     |V:1, I:4|111 |Postfix 日誌條目概要              |
    |--------------+--------+----+----------------------------------|
    |syslog-summary|V:0, I:2|30  |總結 syslog 日誌檔案內容          |
    |--------------+--------+----+----------------------------------|
    |fwlogwatch    |V:0, I:0|479 |防火牆日誌分析軟體                |
    |--------------+--------+----+----------------------------------|
    |squidview     |V:0, I:1|189 |監控和分析 squid access.log 檔案  |
    |--------------+--------+----+----------------------------------|
    |swatch        |V:0, I:0|101 |有正則表示式、高亮和曲線的日誌檔案|
    |              |        |    |檢視器                            |
    |--------------+--------+----+----------------------------------|
    |crm114        |V:0, I:0|1119|Controllable Regex Mutilator 和垃 |
    |              |        |    |圾郵件過濾 (CRM114)               |
    |--------------+--------+----+----------------------------------|
    |icmpinfo      |V:0, I:0|44  |解釋 ICMP 資訊                    |
    +---------------------------------------------------------------+


    注意
   
    CRM114 提供語言架構來寫模糊過濾器，使用了 TRE 正則表示式庫。它主
    要在垃圾郵件過濾器中使用，但也能夠用於日誌分析。

%

9.2.3. 清晰的記錄 shell 活動

    簡單地使用 script(1) （參見第 1.4.9 节 “記錄shell活動”）記錄
    shell 活動會產生一個有控制字元的檔案。這些控制字元可以按下面的方
    式，使用 col(1) 去掉。

    $ script
    Script started, file is typescript

    做些操作……按 Ctrl-D 退出 script.

    $ col -bx <typescript >cleanedfile
    $ vim cleanedfile

    如果你沒有 script (例如：在 initramfs 裡的啟動過程中），你可以使
    用下面的方式代替。

    $ sh -i 2>&1 | tee typescript

    提示
   
    像 gnome-terminal 之類的x-terminal-emulator 也能夠記錄。你也許需
    要增加行緩衝來用滾動條檢視。

    提示
   
    你可以使用 screen(1) 和 "^A H" (參見第 9.1.2 节 “screen 命令的鍵
    繫結”)來進行控制檯記錄。

    提示
   
    你可以使用 emacs(1) 和 "M-x shell", "M-x eshell", 或 "M-x term"
    來進行控制檯記錄。你稍後可以使用 "C-x C-w" 將緩衝寫到檔案。

%

9.2.4. 定製文字資料的顯示

    儘管例如 more(1) 和 less(1) 這樣的分頁程式（參見第 1.4.5 节 “文件
    內容查看”）和用於高亮和格式的自定義工具（參見第 11.1.8 节 “高亮並
    格式化純文字資料”）可以漂亮地顯示文字資料，但通用的編輯器（參見第
     1.4.6 节 “文本編輯器”）是用途最廣的，且可定製性最高。

    提示
   
    對於 vim(1) 和它的分頁模式別名 view(1)，“:set hls” 可以啟用高亮搜
    尋。

%

9.2.5. 定製時間和日期的顯示

    “ls -l” 命令預設的時間和日期顯示格式取決於語言環境（相關的值參見
    第 1.2.6 节 “時間戳”）。“$LANG” 變數將被首先考慮，但它會被
    “$LC_TIME” 變數覆蓋。

    每個語言環境實際的預設顯示格式取決於所使用的 C 標準庫的版本（
    libc6 軟體包），也就是說，不同的 Debian 發行版有不同的預設情況。

    如果你真的想自定義超出語言環境的時間和日期顯示格式，你應該通過
    “--time-style” 引數或 “$TIME_STYLE” 的值來設定時間樣式值（參見ls
    (1)、date(1)、“info coreutils 'ls invocation'”）。

    表 9.4. wheezy 中 “ls -l” 命令時間和日期的顯示案例

    +---------------------------------------------------------------+
    |  時間樣式值  |   語言環境    |         時間和日期顯示         |
    |--------------+---------------+--------------------------------|
    |iso           |任何值         |01-19 00:15                     |
    |--------------+---------------+--------------------------------|
    |long-iso      |任何值         |2009-01-19 00:15                |
    |--------------+---------------+--------------------------------|
    |full-iso      |任何值         |2009-01-19 00:15:16.000000000   |
    |              |               |+0900                           |
    |--------------+---------------+--------------------------------|
    |locale        |C              |Jan 19 00:15                    |
    |--------------+---------------+--------------------------------|
    |locale        |en_US.UTF-8    |Jan 19 00:15                    |
    |--------------+---------------+--------------------------------|
    |locale        |es_ES.UTF-8    |ene 19 00:15                    |
    |--------------+---------------+--------------------------------|
    |+%d.%m.%y     |任何值         |19.01.09 00:15                  |
    |%H:%M         |               |                                |
    |--------------+---------------+--------------------------------|
    |+%d.%b.%y     |C or           |19.Jan.09 00:15                 |
    |%H:%M         |en_US.UTF-8    |                                |
    |--------------+---------------+--------------------------------|
    |+%d.%b.%y     |es_ES.UTF-8    |19.ene.09 00:15                 |
    |%H:%M         |               |                                |
    +---------------------------------------------------------------+


    提示

    你可以使用命令別名以避免在命令列中輸入長的選項，例如 “alias ls=
    'ls --time-style=+%d.%m.%y\ %H:%M'”（參見第 1.5.9 节 “命令別名”）
    。

    提示
   
    ISO 8601 遵循這些 iso 格式。

%

9.2.6. shell 中 echo 的顏色

    大部分現代終端的 shell 中 echo 能夠使用 ANSI 轉義字元來顯示顏色（
    參見 “/usr/share/doc/xterm/ctlseqs.txt.gz”）。

    嘗試下列例子

    $ RED=$(printf "\x1b[31m")
    $ NORMAL=$(printf "\x1b[0m")
    $ REVERSE=$(printf "\x1b[7m")
    $ echo "${RED}RED-TEXT${NORMAL} ${REVERSE}REVERSE-TEXT${NORMAL}"

%

9.2.7. 有顏色輸出的命令

    在互動式的環境下，命令的輸出帶顏色，能夠給檢查命令的輸出帶來便利
    。我在我的"~/.bashrc"里加入了下面內容.

    if [ "$TERM" != "dumb" ]; then
        eval "`dircolors -b`"
        alias ls='ls --color=always'
        alias ll='ls --color=always -l'
        alias la='ls --color=always -A'
        alias less='less -R'
        alias ls='ls --color=always'
        alias grep='grep --color=always'
        alias egrep='egrep --color=always'
        alias fgrep='fgrep --color=always'
        alias zgrep='zgrep --color=always'
    else
        alias ll='ls -l'
        alias la='ls -A'
    fi

    在互動式命令中，使用別名來限制顏色的影響範圍。匯出環境變數
    "export GREP_OPTIONS='--color=auto'" 也有好處，這樣能夠讓 less(1)
    之類的頁面程式看到顏色。當使用管道到其它命令時，你想去掉顏色，上
    面列子 "~/.bashrc" 中的內容，可以使用 "--color=auto" 代替.

    提示
   
    在互動式的環境中，通過"TERM=dumb bash"呼叫 shell ，你能夠關閉這些
    顏色別名。

%

9.2.8. 記錄編輯器複雜的重複操作動作

    你能夠記錄編輯器複雜的重複操作動作。

    對於 Vim,請按下面操作。

      * "qa": 開始記錄輸入字元到有名字的暫存器 "a".

      * … 編輯器操作
   
      * "q": 結束記錄輸入的字元。

      * "@a":執行暫存器 "a 的內容".

    對於 Emacs, 請按下面操作。

      * "C-x (": 開始定義一個鍵盤巨集.

      * … 編輯器操作
   
      * "C-x )":結束定義一個鍵盤巨集.

      * "C-x e": 執行一個鍵盤巨集.

%

9.2.9. 記錄 X 應用程式的圖形

    有少量方法可以記錄 X 應用程式的影象，包括xterm 顯示。

    表 9.5. 圖形影象處理工具列表

    +-----------------------------------------+
    |   軟體包    |  流行度   |大小 |  命令   |
    |-------------+-----------+-----+---------|
    |xbase-clients|I:26       |46   |xwd(1)   |
    |-------------+-----------+-----+---------|
    |gimp         |V:68, I:341|22313|GUI 選單 |
    |-------------+-----------+-----+---------|
    |imagemagick  |I:400      |218  |import(1)|
    |-------------+-----------+-----+---------|
    |scrot        |V:8, I:80  |70   |scrot(1) |
    +-----------------------------------------+


%

9.2.10. 記錄配置檔案的變更

    有特定的工具可以通過 DVCS 系統的幫助來記錄配置檔案的變更。

    表 9.6. 在 VCS 中記錄配置歷史的軟體包

    +---------------------------------------------------------------+
    |  軟體包   |流行度|大 |                  說明                  |
    |           |      |小 |                                        |
    |-----------+------+---+----------------------------------------|
    |etckeeper  |V:27, |162|使用 Git（預設）、Mercurial 或 Bazaar（ |
    |           |I:32  |   |新）來儲存配置檔案和它們的元資料        |
    |-----------+------+---+----------------------------------------|
    |changetrack|V:0,  |71 |使用 RCS（舊）儲存配置檔案              |
    |           |I:0   |   |                                        |
    +---------------------------------------------------------------+


    我建議使用帶有 git(1) 的 etckeeper 軟體包，它將整個 “/etc” 置於
    VCS 控制之下。它的安裝指南和教程參見 “/usr/share/doc/etckeeper/
    README.gz”。

    從本質上講，執行 “sudo etckeeper init” 來為 “/etc” 初始化 git 倉
    庫，與第 10.6.5 节 “記錄配置歷史的 Git” 中所解釋的過程相似，但需
    要特殊的 hook 指令碼來進行更全面的設定。

    當你改變你的配置時，你可以使用 git(1) 來正常地記錄它們。你每次執
    行軟體包管理命令時，它也會自動記錄變更。

    提示

    你可以通過執行 “sudo GIT_DIR=/etc/.git gitk” 來瀏覽 “/etc” 的變更
    記錄，你可以清晰地看到新的已安裝軟體包、已移除軟體包和軟體包版本
    的變更。

%

9.3. 監控、控制和啟動程式活動

    程式活動能夠使用特殊的工具監控和控制。

    表 9.7. 監控和控制程式活動工具列表

    +---------------------------------------------------------------+
    | 軟體包  |流行度 |大小 |                 說明                  |
    |---------+-------+-----+---------------------------------------|
    |coreutils|V:891, |17478|nice(1): 用指定的排程優先權執行一個程式|
    |         |I:999  |     |                                       |
    |---------+-------+-----+---------------------------------------|
    |bsdutils |V:673, |393  |renice(1): 調整一個目前在執行的程序的排|
    |         |I:999  |     |程優先權值                             |
    |---------+-------+-----+---------------------------------------|
    |procps   |V:739, |792  |"/proc" 檔案系統工具: ps(1), top(1),   |
    |         |I:999  |     |kill(1), watch(1), …                   |
    |---------+-------+-----+---------------------------------------|
    |psmisc   |V:427, |679  |"/proc" 檔案系統工具: killall(1), fuser|
    |         |I:845  |     |(1), peekfd(1), pstree(1)              |
    |---------+-------+-----+---------------------------------------|
    |time     |V:15,  |82   |time(1):執行一個程式，並從時間消耗方面 |
    |         |I:279  |     |來報告系統資源的使用                   |
    |---------+-------+-----+---------------------------------------|
    |sysstat  |V:161, |1918 |sar(1), iostat(1), mpstat(1), …: linux |
    |         |I:183  |     |系統性能工具                           |
    |---------+-------+-----+---------------------------------------|
    |isag     |V:0,   |116  |sysstat 的互動式的系統活動圖           |
    |         |I:3    |     |                                       |
    |---------+-------+-----+---------------------------------------|
    |lsof     |V:391, |451  |lsof(8): 使用 "-p" 選項列出被一個系統程|
    |         |I:946  |     |序開啟的檔案                           |
    |---------+-------+-----+---------------------------------------|
    |strace   |V:16,  |2367 |strace(1):跟蹤系統呼叫和訊號           |
    |         |I:153  |     |                                       |
    |---------+-------+-----+---------------------------------------|
    |ltrace   |V:1,   |363  |ltrace(1): 跟蹤庫呼叫                  |
    |         |I:21   |     |                                       |
    |---------+-------+-----+---------------------------------------|
    |xtrace   |V:0,   |353  |xtrace(1):跟蹤 X11 客戶端和伺服器端之間|
    |         |I:0    |     |的通訊                                 |
    |---------+-------+-----+---------------------------------------|
    |powertop |V:9,   |662  |powertop(1):系統能耗使用資訊           |
    |         |I:217  |     |                                       |
    |---------+-------+-----+---------------------------------------|
    |cron     |V:805, |263  |根據 cron(8) 後臺守護程序（daemon）的排|
    |         |I:997  |     |程執行一個程序                         |
    |---------+-------+-----+---------------------------------------|
    |anacron  |V:409, |99   |用於非整天 24 小時執行系統的命令計劃， |
    |         |I:482  |     |類 cron                                |
    |---------+-------+-----+---------------------------------------|
    |at       |V:162, |161  |at(1) 或 batch(1): 在一個特定的時間執行|
    |         |I:310  |     |任務或在某一系統負載下執行             |
    +---------------------------------------------------------------+


    提示
   
    procps 包提供了非常基礎的監控、控制程式活動功能和啟動程式功能。你
    應當把他們全部學會。

%

9.3.1. 程序耗時

    顯示命令呼叫程序的時間消耗。

    # time some_command >/dev/null
    real    0m0.035s       # 執行時間 (佔用的真實時間)
    user    0m0.000s      # 使用者模式時間
    sys     0m0.020s       # 核心模式時間

%

9.3.2. 排程優先順序

    程序的排程優先順序是被一個程序優先順序值控制。

    表 9.8. 排程優先順序值列表

    +----------------------------------------------+
    |程序優先順序值|         排程優先順序          |
    |--------------+-------------------------------|
    |19            |最低優先順序程序               |
    |--------------+-------------------------------|
    |0             |非常高的普通使用者優先順序程序 |
    |--------------+-------------------------------|
    |-20           |root 使用者非常高的優先順序程序|
    +----------------------------------------------+


    # nice  -19 top                                      # 非常優先
    # nice --20 wodim -v -eject speed=2 dev=0,0 disk.img # 非常快

    在某些情況下，極端的程序優先順序值會對系統造成傷害。小心使用這個
    命令。

%

9.3.3. ps 命令

    在 Debian 系統上的 ps(1) 命令同時支援 BSD 和 SystemV 特徵，有助於
    識別靜態的程序活動。

    表 9.9. ps 命令樣式列表

    +----------------------------------+
    |  樣式  |典型的命令|     特徵     |
    |--------+----------+--------------|
    |BSD     |ps aux    |顯示 %CPU %MEM|
    |--------+----------+--------------|
    |System V|ps -efH   |顯示 PPID     |
    +----------------------------------+


    對於殭屍（死了的）子程序，你能夠通過 "PPID" 欄位的父程序 ID 來殺
    死它們。

    pstree(1) 命令顯示程序樹。

%

9.3.4. top 命令

    Debian 系統上的 top(1) 擁有豐富的特徵，有助於識別程序有趣的動態行
    為。

    它是一個互動式的全屏程式。你可以透過按"h"鍵來得到它的使用幫助，按
    "q"鍵來終止該程式。

%

9.3.5. 列出被一個程序開啟的檔案

    你能夠通過一個程序 ID(PID)來列出該程序所有開啟的檔案，例如，PID
    為 1 的程序，使用下面的方式。

    $ sudo lsof -p 1

    PID=1 通常用於 init 程式.

%

9.3.6. 跟蹤程式活動

    你能夠跟蹤程式活動，使用strace(1), ltrace(1), xtrace(1) 來跟蹤系
    統呼叫和訊號、庫呼叫、X11 客戶端和伺服器端之間的通訊。

    跟蹤 ls 命令的系統呼叫。

    $ sudo strace ls

%

9.3.7. 識別使用檔案和套接字的程序

    你可以通過 fuser(1) 來識別出使用檔案的程序，例如，用下面的方式識
    別出 "/var/log/mail.log" 由哪個程序開啟。

    $ sudo fuser -v /var/log/mail.log
                         USER        PID ACCESS COMMAND
    /var/log/mail.log:   root       2946 F.... rsyslogd

    你可以看到 "/var/log/mail.log" 是由 rsyslogd(8) 命令開啟並寫入。

    你可以通過 fuser(1) 來識別出使用套接字的程序，例如，用下面的方式
    識別出 "smtp/tcp" 由哪個程序開啟。

    $ sudo fuser -v smtp/tcp
                         USER        PID ACCESS COMMAND
    smtp/tcp:            Debian-exim   3379 F.... exim4

    現在你知道你的系統執行 exim4(8) 來處理連線到 SMTP 埠 (25)的 TCP
    連線.

%

9.3.8. 使用固定間隔重複一個命令

    watch(1) 使用固定間隔重新執行一個命令，並全屏顯示輸出。

    $ watch w

    顯示哪些人登入到系統，每 2 秒鐘更新一次。

%

9.3.9. 使用檔案迴圈來重複一個命令

    通過匹配某些條件的檔案來迴圈重複一個命令，有幾種方法，例如，匹配
    全域性模式"*.ext".

      * Shell 迴圈方式(參見第 12.1.4 节 “shell 迴圈”):

    for x in *.ext; do if [ -f "$x"]; then command "$x" ; fi; done

      * find(1) 和 xargs(1) 聯合:

    find . -type f -maxdepth 1 -name '*.ext' -print0 | xargs -0 -n 1 command

      * find(1) 使用 "-exec" 選項並執行命令:

    find . -type f -maxdepth 1 -name '*.ext' -exec command '{}' \;

      * find(1) 使用 "-exec" 選項並執行一個短的 shell 指令碼:

    find . -type f -maxdepth 1 -name '*.ext' -exec sh -c "command '{}' && echo 'successful'" \;

    上面的列子確保適當處理怪異的檔名（如包含空格）。 find(1) 更多高階
    的用法，參見第 10.1.5 节 “查詢檔案的語法”.

%

9.3.10. 從 GUI 啟動一個程式

    對於命令列介面（command-line interface，CLI），$PATH 環境變數所指
    定的目錄中第一個匹配相應名稱的程式會被執行。參見第 1.5.3 节
    “"$PATH" 變數”。

    對於遵從 freedesktop.org 標準的圖形使用者介面（graphical user
    interface，GUI），/usr/share/applications/ 目錄中的 *.desktop 檔
    案給每個程式的 GUI 選單顯示提供了必要的屬性。參見第 7.2.2 节
    “Freedesktop.org 選單”。

    舉個例子，chromium.desktop 檔案中為 “Chromium 網路瀏覽器” 定義了
    相關屬性，例如程式名 “Name”，程式執行路徑和引數 “Exec”，所使用的
    圖示 “Icon” 等等（參見桌面配置項規範）。檔案內容如下：

    [Desktop Entry]
    Version=1.0
    Name=Chromium Web Browser
    GenericName=Web Browser
    Comment=Access the Internet
    Comment[fr]=Explorer le Web
    Exec=/usr/bin/chromium %U
    Terminal=false
    X-MultipleArgs=false
    Type=Application
    Icon=chromium
    Categories=Network;WebBrowser;
    MimeType=text/html;text/xml;application/xhtml_xml;x-scheme-handler/http;x-scheme-handler/https;
    StartupWMClass=Chromium
    StartupNotify=true

    這是一個較為簡單的說明。*.desktop 檔案像下面那樣被搜尋。

    桌面環境設定 $XDG_DATA_HOME 和 $XDG_DATA_DIR 環境變數。舉個例子，
    在 GNOME 3 中：

      * 未設定 $XDG_DATA_HOME。（將使用預設值 $HOME/.local/share。）
   
      * $XDG_DATA_DIRS 被設定為 /usr/share/gnome:/usr/local/share/:/
        usr/share/。

    基準目錄（參見 XDG Base Directory Specification）和應用程式目錄如
    下所示。

      * $HOME/.local/share/ → $HOME/.local/share/applications/

      * /usr/share/gnome/ → /usr/share/gnome/applications/
   
      * /usr/local/share/ → /usr/local/share/applications/

      * /usr/share/ → /usr/share/applications/

    *.desktop 檔案將按照這個順序在這些 applications 目錄中進行搜尋。

    提示
   
    要建立一個使用者自定義的 GUI 選單項，需要在 $HOME/.local/share/
    applications/ 目錄中新增一個 *.desktop 檔案。

    提示

    相似地，如果在這些基準目錄下的 autostart 目錄中建立了一個
    *.desktop 檔案，則 *.desktop 檔案中指定的程式會在桌面環境啟動時自
    動執行。參見 Desktop Application Autostart Specification。

    提示

    相似地，如果在 $HOME/Desktop 目錄中建立了一個 *.desktop 檔案並且
    桌面環境被配置為支援桌面圖示啟動器功能，則點選圖示時指定的程式會
    被執行。請注意，$HOME/Desktop 目錄的實際名稱與語言環境有關。參見 
    xdg-user-dirs-update(1)。

%

9.3.11. 自定義被啟動的程式

    一些程式會被另一個程式自動啟動。下面是自定義該過程的方法。

      * 應用程式配置選單：

          + GNOME3 桌面：“設定” → “系統” → “詳細資訊” → “預設應用程式
            ”

          + KDE 桌面: "K" → "Control Center 控制中心" → "KDE
            Components 元件" → "Component Chooser 元件選擇器"

          + Iceweasel 瀏覽器：“編輯” → “首選項” → “應用程式”

          + mc(1)：“/etc/mc/mc.ext”

      * 例如 “$BROWSER”、“$EDITOR”、“$VISUAL” 和 “$PAGER” 這樣的環境
        變數（參見 eviron(7)）

      * 用於例如 “editor”、“view”、“x-www-browser”、
        “gnome-www-browser” 和 “www-browser” 這樣的程式的 
        update-alternatives(1) 系統（參見第 1.4.7 节 “設置默認文本編
        輯器”）

      * “~/.mailcap” 和 “/etc/mailcap” 檔案的內容關聯了程式的 MIME 型
        別（參見 mailcap(5)）

      * “~/.mime.types” 和 “/etc/mime.types” 檔案的內容關聯了 MIME 型
        別的副檔名（參見 run-mailcap(1)）

    提示
   
    update-mime(8) 會更新 "/etc/mailcap" 檔案，期間會用到 "/etc/
    mailcap.order" 檔案 (參見 mailcap.order(5)).

    提示

    debianutils 軟體包提供 sensible-browser(1)、sensible-editor(1) 和
    sensible-pager(1)，它們可以分別對要呼叫的編輯器、分頁程式和網路瀏
    覽器作出明智的選擇。我建議你閱讀那些 shell 指令碼。

    提示

    為了在 X 下執行例如 mutt 這樣的控制檯應用程式來作為你的首選應用程
    式，你應該像下面那樣建立一個 X 應用程式並設定 “/usr/local/bin/
    mutt-term” 為你想要啟動的首選應用程式。

    # cat /usr/local/bin/mutt-term <<EOF
    #!/bin/sh
    gnome-terminal -e "mutt \$@"
    EOF
    chmod 755 /usr/local/bin/mutt-term

%

9.3.12. 殺死一個程序

    使用 kill(1) 通過程序 ID 來殺死（傳送一個訊號）一個程序。

    使用 killall(1) 或 pkill(1) 通過程序命令的名字或其它屬性來做同樣
    的事情。

    表 9.10. kill 命令常用訊號列表

    +----------------------------------------+
    |訊號值|訊號名|           功能           |
    |------+------+--------------------------|
    |1     |HUP   |重啟後臺守護程序（daemon）|
    |------+------+--------------------------|
    |15    |TERM  |普通 kill                 |
    |------+------+--------------------------|
    |9     |KILL  |硬 kill                   |
    +----------------------------------------+


%

9.3.13. 單次任務時間安排

    執行 at(1) 命令來安排一次性的工作。

    $ echo 'command -args'| at 3:40 monday

%

9.3.14. 定時任務安排

    使用 cron(8) 來進行定時任務安排。參見 crontab(1) 和 crontab(5).

    你能夠作為一個普通使用者定時執行一個程序，比如， foo 使用
    "crontab -e" 命令建立一個 crontab(5) 的檔案 "/var/spool/cron/
    crontabs/foo"。

    這裡是一個 crontab(5) 檔案的列子。

    # use /bin/sh to run commands, no matter what /etc/passwd says
    SHELL=/bin/sh
    # mail any output to paul, no matter whose crontab this is
    MAILTO=paul
    # Min Hour DayOfMonth Month DayOfWeek command (Day... are OR'ed)
    # run at 00:05, every day
    5  0  *  * *   $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
    # run at 14:15 on the first of every month -- output mailed to paul
    15 14 1  * *   $HOME/bin/monthly
    # run at 22:00 on weekdays(1-5), annoy Joe. % for newline, last % for cc:
    0 22 *   * 1-5 mail -s "It's 10pm" joe%Joe,%%Where are your kids?%.%%

    23 */2 1 2 *   echo "run 23 minutes after 0am, 2am, 4am ..., on Feb 1"
    5  4 *   * sun echo "run at 04:05 every Sunday"
    # run at 03:40 on the first Monday of each month
    40 3 1-7 * *   [ "$(date +%a)" == "Mon" ] && command -args

    提示

    對那些非連續執行的系統，安裝 anacron 軟體包來定時執行週期性的命令
    ，命令在接近機器啟動的時間執行，並允許有特定的時間間隔。參見 
    anacron(8) 和 anacrontab(5).

    提示

    對於定時系統維護指令碼，你能夠以root 賬戶定時執行，把這類指令碼放
    入 "/etc/cron.hourly/", "/etc/cron.daily/", "/etc/cron.weekly/",
    或 "/etc/cron.monthly/". 這些指令碼的執行時間，可以通過 "/etc/
    crontab" 和 "/etc/anacrontab" 來定製。

%

9.3.15. Alt-SysRq 鍵

    核心編譯選項 "Magic SysRq key" (SAK 鍵)提供預防系統故障的措施，該
    選項現在是 Debian 核心的預設值。按 Alt-SysRq 鍵，接著按下面鍵中的
    一個鍵，會做拯救系統的神奇事情。

    表 9.11. SAK命令鍵列表

    +---------------------------------------------------------------+
    |Alt-SysRq 之後的 |                  行為描述                   |
    |       鍵        |                                             |
    |-----------------+---------------------------------------------|
    |r                |在 X 崩潰後，從 raw 模式恢復鍵盤             |
    |-----------------+---------------------------------------------|
    |0                |把控制檯日誌級別改變到 0 來減少錯誤資訊      |
    |-----------------+---------------------------------------------|
    |k                |kill 在當前虛擬控制檯上的所有程序            |
    |-----------------+---------------------------------------------|
    |e                |傳送 SIGTERM 到所有程序，除開 init(8)        |
    |-----------------+---------------------------------------------|
    |i                |傳送 SIGKILL 到所有程序，除開 init(8)        |
    |-----------------+---------------------------------------------|
    |s                |sync 所有已經掛載的檔案系統來避免資料損壞    |
    |-----------------+---------------------------------------------|
    |u                |重新以只讀方式掛載所有已掛載的檔案系統 (u    |
    |                 |mount)                                       |
    |-----------------+---------------------------------------------|
    |b                |reboot 系統，不同步或解除安裝                |
    +---------------------------------------------------------------+


    提示
   
    閱讀 signal(7), kill(1) 和 sync(1) 手冊頁來理解上面的描述。

    "Alt-SysRq s", "Alt-SysRq u" 和 "Alt-SysRq r" 組合，有助於跳出真
    正壞的情形，並可以在不停止系統的情況下獲得可用的鍵盤。

    參見 "/usr/share/doc/linux-doc-3.*/Documentation/sysrq.txt.gz".

    小心

    由於允許使用者訪問 root 許可權的功能，Alt-SysRq 特性可能被認為是
    安全風險。在 "/etc/rc.local" 裡面放入"echo 0 >/proc/sys/kernel/
    sysrq" 或在 "/etc/sysctl.conf" 裡放入 "kernel.sysrq = 0"來禁用
    Alt-SysRq 特性。

    提示

    從 SSH 終端等，你能夠通過向 "/proc/sysrq-trigger" 寫入內容來使用
    Alt-SysRq 特性。例如，從 root shell 提示符執行 "echo s > /proc/
    sysrq-trigger; echo u > /proc/sysrq-trigger" 來 syncs 和 umounts
    所有已掛載的檔案系統。

9.4. 系統維護技巧

%

9.4.1. 誰在系統裡？

    你可以通過下面的方法檢查誰登入在系統裡。

      * who(1) 顯示誰登入在系統裡面。

      * w(1) 顯示誰登入在系統裡面，他們在做什麼。
   
      * last(1) 顯示使用者最後登入的列表。

      * lastb(1) 顯示使用者最後錯誤登入的列表。

    提示
   
    "/var/run/utmp" 和 "/var/log/wtmp" 儲存這樣的使用者資訊。參見 
    login(1) 和 utmp(5).

%

9.4.2. 警告所有人

    你可以通過下面的方式使用 wall(1) 給登入系統的每一個人傳送資訊。

    $ echo "We are shutting down in 1 hour" | wall

%

9.4.3. 硬體識別

    對於 PCI 類裝置(AGP, PCI-Express, CardBus, ExpressCard 等), 一開
    始就使用 lspci(8) (也許加上 "-nn" 選項) 進行硬體識別比較好。

    此外，你可以通過閱讀 "/proc/bus/pci/devices" 裡面的內容或瀏覽"/
    sys/bus/pci" 下面的目錄樹來進行硬體識別(參見第 1.2.12 节 “procfs
    和 sysfs”).

    表 9.12. 硬體識別工具列表

    +---------------------------------------------------------------+
    |  軟體包   |   流行度   |大小|              說明               |
    |-----------+------------+----+---------------------------------|
    |pciutils   |V:195, I:992|196 |Linux PCI 工具: lspci(8)         |
    |-----------+------------+----+---------------------------------|
    |usbutils   |V:84, I:862 |324 |Linux USB 工具: lsusb(8)         |
    |-----------+------------+----+---------------------------------|
    |pcmciautils|V:13, I:21  |97  |Linux PCMCIA 工具: pccardctl(8)  |
    |-----------+------------+----+---------------------------------|
    |scsitools  |V:0, I:3    |390 |SCSI 硬體管理工具集: lsscsi(8)   |
    |-----------+------------+----+---------------------------------|
    |procinfo   |V:0, I:13   |135 |從 "/proc": lsdev(8) 獲得系統資訊|
    |-----------+------------+----+---------------------------------|
    |lshw       |V:12, I:94  |842 |硬體配置資訊: lshw(1)            |
    |-----------+------------+----+---------------------------------|
    |discover   |V:41, I:947 |90  |硬體識別系統: discover(8)        |
    +---------------------------------------------------------------+


%

9.4.4. 硬體配置

    像 GNOME 和 KDE 這類現代圖形桌面系統，雖然大部分硬體的配置都能夠
    通過相應的圖形配置工具來管理，但知道一些配置它們的基礎方式，也是
    一個好的主意。

    表 9.13. 硬體配置工具列表

    +---------------------------------------------------------------+
    |     軟體包      |流行度|大小|              說明               |
    |-----------------+------+----+---------------------------------|
    |console-setup    |V:137,|411 |Linux 控制檯字型和鍵盤表工具     |
    |                 |I:959 |    |                                 |
    |-----------------+------+----+---------------------------------|
    |x11-xserver-utils|V:282,|511 |X 服務端工具: xset(1), xmodmap(1)|
    |                 |I:534 |    |                                 |
    |-----------------+------+----+---------------------------------|
    |acpid            |V:145,|176 |管理高階可配置和電源介面(ACPI)事 |
    |                 |I:318 |    |件分發的後臺守護程序（daemon）   |
    |-----------------+------+----+---------------------------------|
    |acpi             |V:17, |45  |顯示 ACPI 裝置資訊的工具         |
    |                 |I:302 |    |                                 |
    |-----------------+------+----+---------------------------------|
    |sleepd           |V:0,  |86  |在筆記本空閒時，使其進入休眠狀態 |
    |                 |I:0   |    |的後臺守護程序（daemon）         |
    |-----------------+------+----+---------------------------------|
    |hdparm           |V:408,|256 |硬碟訪問優化 (參見第 9.5.9 节 “硬|
    |                 |I:718 |    |碟優化”)                         |
    |-----------------+------+----+---------------------------------|
    |smartmontools    |V:134,|2117|使用 S.M.A.R.T. 控制和監控儲存系 |
    |                 |I:197 |    |統                               |
    |-----------------+------+----+---------------------------------|
    |setserial        |V:5,  |117 |串列埠管理工具集                 |
    |                 |I:9   |    |                                 |
    |-----------------+------+----+---------------------------------|
    |memtest86+       |V:1,  |2391|記憶體硬體管理工具集             |
    |                 |I:29  |    |                                 |
    |-----------------+------+----+---------------------------------|
    |scsitools        |V:0,  |390 |SCSI 硬體管理工具集              |
    |                 |I:3   |    |                                 |
    |-----------------+------+----+---------------------------------|
    |setcd            |V:0,  |35  |光碟機訪問優化                   |
    |                 |I:1   |    |                                 |
    |-----------------+------+----+---------------------------------|
    |big-cursor       |I:1   |27  |X 系統的大滑鼠游標               |
    +---------------------------------------------------------------+


    這裡, ACPI 是一個比 APM 新的電源管理系統框架。

    提示
   
    現代系統的 CPU 頻率調整功能，是由核心模組 acpi_cpufreq 管理的。

%

9.4.5. 系統時間和硬體時間

    下面設定系統的硬體時間為：MM/DD hh:mm, CCYY.

    # date MMDDhhmmCCYY
    # hwclock --utc --systohc
    # hwclock --show

    Debian 系統的時間通常顯示為本地時間，但硬體時間通常使用 UTC(GMT)
    時間。

    如果硬體（BIOS）時間設定為 UTC 時間，請在“/etc/default/rcS”裡面設
    定“UTC=yes”。

    下面是重新配置 Debian 系統使用的時區。

    # dpkg-reconfigure tzdata

    如果你希望通過網路來更新系統時間，考慮使用 ntp, ntpdate 和 chrony
    這類包提供的 NTP 服務。

    提示
   
    在 systemd 下，是使用 systemd-timesyncd 來替代進行網路時間同步。
    參見 systemd-timesyncd(8).

    看下面。

      * 精確時間和日期管理 HOWTO

      * NTP 公共服務專案

      * ntp-doc 包

    提示
   
    在 ntp 包裡面的 ntptrace(8) 能夠跟蹤 NTP 服務鏈至原始源。

%

9.4.6. 終端配置

    有幾個元件可以用來配置字元控制檯和 ncurses(3) 系統功能。

      * “/etc/terminfo/*/*” 檔案（terminfo(5)）

      * “$TERM” 環境變數（term(7)）

      * setterm(1)、stty(1)、tic(1) 和 toe(1)

    如果 xterm 的 terminfo 對非 Debian 的 xterm 不起作用，則當你從遠
    端登陸到 Debian 系統時，你需要改變你的終端型別 “$TERM”，從
    “xterm” 更改為功能受限的版本（例如 “xterm-r6”）。更多內容參見 “/
    usr/share/doc/libncurses5/FAQ”。“dumb” 是 “$TERM” 中最通用的。

%

9.4.7. 聲音基礎設施

    用於現在的 Linux 的音效卡裝置驅動程式由高階 Linux 聲音體系（
    Advanced Linux Sound Architecture，ALSA）提供。ALSA 提供了相容之
    前的開放聲音系統（Open Sound System，OSS）的模擬模式。

    提示
   
    使用 “cat /dev/urandom > /dev/audio” 或 speaker-test(1) 來測試揚
    聲器（^C 停止）。

    提示

    如果你無法聽到聲音，那你的揚聲器可能連線到了一個靜音輸出。現代的
    聲音系統有許多輸出。alsa-utils 軟體包中的 alsamixer(1) 可以很好地
    配置聲音和靜音設定。

    應用軟體可被配置為不僅直接訪問聲音裝置，也可以通過一些標準化聲音
    伺服器系統來訪問它們。

    表 9.14. 聲音軟體包

    +---------------------------------------------------------------+
    |     軟體包      | 流行度 |大小|             說明              |
    |-----------------+--------+----+-------------------------------|
    |alsa-utils       |V:341,  |2283|配置和使用 ALSA 的工具         |
    |                 |I:476   |    |                               |
    |-----------------+--------+----+-------------------------------|
    |oss-compat       |V:2,    |20  |在 ALSA 下相容 OSS，預防 “/dev/|
    |                 |I:29    |    |dsp not found” 錯誤            |
    |-----------------+--------+----+-------------------------------|
    |jackd            |V:4,    |9   |JACK Audio Connection Kit.     |
    |                 |I:27    |    |(JACK) 伺服器（低延遲）        |
    |-----------------+--------+----+-------------------------------|
    |libjack0         |V:1,    |338 |JACK Audio Connection Kit.     |
    |                 |I:13    |    |(JACK) 庫（低延遲）            |
    |-----------------+--------+----+-------------------------------|
    |nas              |V:0, I:0|243 |網路音訊系統（Network Audio    |
    |                 |        |    |System，NAS）伺服器            |
    |-----------------+--------+----+-------------------------------|
    |libaudio2        |V:60,   |165 |網路音訊系統（Network Audio    |
    |                 |I:488   |    |System，NAS）庫                |
    |-----------------+--------+----+-------------------------------|
    |pulseaudio       |V:350,  |6398|PulseAudio 伺服器，替代 ESD    |
    |                 |I:471   |    |                               |
    |-----------------+--------+----+-------------------------------|
    |libpulse0        |V:289,  |969 |PulseAudio 客戶端庫，替代 ESD  |
    |                 |I:604   |    |                               |
    |-----------------+--------+----+-------------------------------|
    |libgstreamer1.0-0|V:372,  |5280|GStreamer：GNOME 聲音引擎      |
    |                 |I:574   |    |                               |
    |-----------------+--------+----+-------------------------------|
    |libphonon4       |I:121   |680 |Phonon：KDE 聲音引擎           |
    +---------------------------------------------------------------+


    每個流行的桌面環境通常都有一個通用的聲音引擎。每個被應用程式使用
    的聲音引擎都可以選擇連線到不同的聲音伺服器。

%

9.4.8. 關閉螢幕保護

    關閉螢幕保護，使用下面的命令。

    表 9.15. 關閉螢幕保護命令列表

    +-------------------------------------------------------+
    |           環境            |           命令            |
    |---------------------------+---------------------------|
    |Linux 控制檯               |setterm -powersave off     |
    |---------------------------+---------------------------|
    |X 視窗（關閉螢幕保護）     |xset s off                 |
    |---------------------------+---------------------------|
    |X 視窗（關閉 dpms）        |xset -dpms                 |
    |---------------------------+---------------------------|
    |X 視窗（螢幕保護 GUI 配置）|xscreensaver-command -prefs|
    +-------------------------------------------------------+


%

9.4.9. 關閉蜂鳴聲

    可以把電腦的揚聲器拔掉來關閉蜂鳴聲。把 pcspkr 核心模組刪除，也可
    以做到這點。

    bash(1) 用到的 readline(3) 程式，當遇到告警字元(ASCII=7)時，將會
    發生。下面的操作將阻止發生。

    $ echo "set bell-style none">> ~/.inputrc

%

9.4.10. 記憶體使用

    對你來說，這裡有兩種可用的方法來得到記憶體的使用情況。

      * “/var/log/dmesg” 中的核心啟動資訊包含了可用記憶體的精確總大小
        。

      * free(1) 和 top(1) 顯示正在執行的系統中記憶體資源的相關資訊。

    下面是一個例子。

    # grep '\] Memory' /var/log/dmesg
    [    0.004000] Memory: 990528k/1016784k available (1975k kernel code, 25868k reserved, 931k data, 296k init)
    $ free -k
                 total       used       free     shared    buffers     cached
    Mem:        997184     976928      20256          0     129592     171932
    -/+ buffers/cache:     675404     321780
    Swap:      4545576          4    4545572

    你可能會覺得奇怪：“dmesg 告訴你 free 為 990 MB，而 free -k 告訴你
    free 為 320 MB。這丟失了超過 600 MB ……”。

    別擔心 “Mem:” 這行中 “used” 較大的值以及 “free” 較小的值，放輕鬆
    ，你需要檢視的是下面的那個（在上面的例子中它們是 675404 和 321780
    ）。

    對於我的 MacBook，有 1GB=1048576k 記憶體（顯示卡系統用掉一些），
    我看到的如下。

    表 9.16. 報告的記憶體大小

    +--------------------------------------------------+
    |        報告         |            大小            |
    |---------------------+----------------------------|
    |dmesg 中 total 的大小|1016784k = 1GB - 31792k     |
    |---------------------+----------------------------|
    |dmesg 中的 free      |990528k                     |
    |---------------------+----------------------------|
    |shell 下的 total     |997184k                     |
    |---------------------+----------------------------|
    |shell 下的 free      |20256k（但有效的為 321780k）|
    +--------------------------------------------------+


%

9.4.11. 系統安全性和完整性檢查

    糟糕的系統維護可能會暴露你的系統，導致它被外部非法使用。

    對於系統安全性和完整性的檢查，你需要從下面這些方面開始。

      * debsums 軟體包，參見 debsums(1) 和第 2.5.2 节 “頂層“Release”
        檔案及真實性”。

      * chkrootkit 軟體包，參見 chkrootkit(1)。
   
      * clamav 軟體包家族，參見 clamscan(1) 和 freshclam(1)。

      * Debian security FAQ。

      * Securing Debian Manual。

    表 9.17. 用於系統安全性和完整性檢查的工具

    +---------------------------------------------------------------+
    |  軟體包  |流行度|大小 |                 說明                  |
    |----------+------+-----+---------------------------------------|
    |logcheck  |V:8,  |102  |後臺守護程序（daemon），將系統日誌檔案 |
    |          |I:10  |     |中的異常通過郵件傳送給管理員           |
    |----------+------+-----+---------------------------------------|
    |debsums   |V:5,  |107  |實用程式，使用 MD5 校驗碼對已安裝軟體包|
    |          |I:42  |     |的檔案進行校驗                         |
    |----------+------+-----+---------------------------------------|
    |chkrootkit|V:5,  |970  |rootkit 檢測軟體                       |
    |          |I:24  |     |                                       |
    |----------+------+-----+---------------------------------------|
    |clamav    |V:13, |774  |Unix 的反病毒實用程式 —— 命令列介面    |
    |          |I:58  |     |                                       |
    |----------+------+-----+---------------------------------------|
    |tiger     |V:2,  |7822 |報告系統安全漏洞                       |
    |          |I:3   |     |                                       |
    |----------+------+-----+---------------------------------------|
    |tripwire  |V:2,  |11521|檔案和目錄完整性檢測軟體               |
    |          |I:3   |     |                                       |
    |----------+------+-----+---------------------------------------|
    |john      |V:2,  |452  |先進的密碼破解工具                     |
    |          |I:12  |     |                                       |
    |----------+------+-----+---------------------------------------|
    |aide      |V:1,  |2063 |高階入侵環境檢測 —— 靜態二進位制       |
    |          |I:2   |     |                                       |
    |----------+------+-----+---------------------------------------|
    |integrit  |V:0,  |329  |檔案完整性驗證程式                     |
    |          |I:0   |     |                                       |
    |----------+------+-----+---------------------------------------|
    |crack     |V:0,  |149  |密碼猜測程式                           |
    |          |I:1   |     |                                       |
    +---------------------------------------------------------------+


    下面是一個簡單的指令碼，用來檢測典型的所有人可寫的錯誤檔案許可權
    。

    # find / -perm 777 -a \! -type s -a \! -type l -a \! \( -type d -a -perm 1777 \)

    小心
   
    由於 debsums 軟體包使用本地儲存的 MD5 校驗碼，因此面對惡意攻擊，
    也不能完全相信系統安全性檢測工具。

%

9.5. 資料儲存技巧

    使用 live CD 或 debian-installer CD 以救援模式啟動你的系統，可以
    讓你簡單地重新配置你的啟動裝置的資料儲存。

%

9.5.1. 硬碟空間使用情況

    硬碟空間的使用情況可以通過 mount、coreutils 和 xdu 軟體包提供的程
    式來評估：

      * mount(8) 顯示所有掛載的檔案系統(= 磁碟).

      * df(1) 報告檔案系統使用的硬碟空間。

      * du(1) 報告目錄樹使用的硬碟空間。

    提示
   
    你可以將 du(8) 的輸出傳輸給 xdu(1x)，來使用它的圖形互動式演示，例
    如 “du -k . |xdu”、“sudo du -k -x / |xdu” 等等。

%

9.5.2. 硬碟分割槽配置

    對於硬碟分割槽配置，儘管 fdisk(8) 被認為是標準的配置，但是 parted
    (8) 工具還是值得注意的。

    大多數 PC 使用經典的主引導記錄（Master Boot Record，MBR）方案，將
    硬碟分割槽資料儲存在第一個扇區，即 LBA 扇區 0（512 位元組）。

    注意

    一些帶有可擴充套件韌體介面（Extensible Firmware Interface，EFI）
    的新 PC，包括基於 Intel 的 Mac，使用全域性唯一標識分割槽表（GUID
    Partition Table，GPT）方案，硬碟分割槽資料不儲存在第一個扇區。

    儘管 fdisk(8) 一直是硬碟分割槽的標準工具，但現在 parted(8) 替代了
    它。

    表 9.18. 硬碟分割槽管理軟體包

    +---------------------------------------------------------------+
    |  軟體包  | 流行度  |大小| GPT |             說明              |
    |----------+---------+----+-----+-------------------------------|
    |util-linux|V:891,   |4598|不支 |多種系統工具，包含 fdisk(8) 和 |
    |          |I:999    |    |持   |cfdisk(8)                      |
    |----------+---------+----+-----+-------------------------------|
    |parted    |V:363,   |304 |支持 |GNU Parted，硬碟分割槽調整程式 |
    |          |I:561    |    |     |                               |
    |----------+---------+----+-----+-------------------------------|
    |gparted   |V:19,    |2046|支持 |基於 libparted 的 GNOME 分割槽 |
    |          |I:132    |    |     |編輯程式                       |
    |----------+---------+----+-----+-------------------------------|
    |gdisk     |V:278,   |852 |支持 |用於 GPT 硬碟的分割槽編輯程式  |
    |          |I:513    |    |     |                               |
    |----------+---------+----+-----+-------------------------------|
    |kpartx    |V:16,    |87  |支持 |為分割槽建立裝置對映的程式     |
    |          |I:29     |    |     |                               |
    +---------------------------------------------------------------+


    小心

    儘管 parted(8) 聲稱也能用來建立和調整檔案系統，但使用維護最好的專
    門工具來做這些事會更為安全，例如 mkfs(8)（mkfs.msdos(8)、
    mkfs.ext2(8)、mkfs.ext3(8)、mkfs.ext4(8)……）和 resize2fs(8)。

    注意

    為了在 GPT 和 MBR 之間切換，你需要直接刪除開頭的幾個塊中的內容（
    參見第 9.7.6 节 “清空檔案內容”）並使用 “parted /dev/sdx mklabel
    gpt” 或 “parted /dev/sdx mklabel msdos” 來設定它。請注意，這裡使
    用的 “msdos” 是用於 MBR。

%

9.5.3. 使用 UUID 訪問分割槽

    儘管重新配置你的分割槽或可移動儲存介質的啟用順序可能會給分割槽產
    生不同的名字，但你可以使用同一個 UUID 來訪問它們。如果你有多個硬
    碟並且你的 BIOS 沒有給它們一致的裝置名的話，使用 UUID 是不錯的選
    擇。

      * mount(8) 命令帶有 “-U” 選項可以使用UUID 來掛載一個塊裝置，而
        不必使用他的檔名稱，例如 “/dev/sda3”。

      * “/etc/fstab”（參見 fstab(5)）可以使用 UUID。

      * 引載載入程式（第 3.1.2 节 “第二階段：引載加載程序”）也可以使
        用 UUID。

    提示
   
    你可以使用 blkid(8) 來檢視一個特定塊裝置的 UUID。

    提示
   
    如果需要的話，裝置（例如可移動儲存介質）的裝置節點可以通過 udev
    規則使其變為靜態。參見第 3.3 节 “udev 系統”。

%

9.5.4. LVM2

    LVM2 是一個用於 Linux 核心的邏輯卷管理器。使用 LVM2 的話，硬碟分
    割槽可以建立在邏輯捲上來替代物理硬碟。

    LVM 有下列需求。

      * Linux 核心中的裝置對映支援（Debian 核心預設支援）

      * 使用者自定義裝置對映支援庫（libdevmapper* 軟體包）

      * 使用者自定義 LVM2 工具（lvm2 軟體包）

    請從下面的 man 手冊開始瞭解 LVM2。

      * lvm(8)：LVM2 機制的基礎知識（列出了所有 LVM2 命令）

      * lvm.conf(5)：LVM2 的配置檔案

      * lvs(8)：報告邏輯卷的相關資訊

      * vgs(8)：報告卷組的相關資訊

      * pvs(8)：報告物理卷的相關資訊

%

9.5.5. 檔案系統配置

    對於 ext4 檔案系統, e2fsprogs 包提供下面的工具。

      * mkfs.ext4(8) 建立新的 ext4 檔案系統

      * fsck.ext4(8) 檢查和修復現有 ext4 檔案系統
   
      * tune2fs(8) 配置 ext4 檔案系統的超級塊

      * debugfs(8) 互動式的除錯 ext4 檔案系統. (它有 undel 命令來恢復
        已經刪除的檔案.)

    mkfs(8) 和 fsck(8) 命令是由 e2fsprogs 包提供的，是各種檔案系統相
    關程式的前端。(mkfs.fstype 和 fsck.fstype). 對於 ext4 檔案系統,它
    們是 mkfs.ext4(8) 和 fsck.ext4(8) (它們被符號連結到 mke2fs(8) 和 
    e2fsck(8)).

    Linux 支援的每一個檔案系統，有相似的命令。

    表 9.19. 檔案系統管理包列表

    +---------------------------------------------------------------+
    |   軟體包    | 流行度  |大小|               說明               |
    |-------------+---------+----+----------------------------------|
    |e2fsprogs    |V:576,   |1449|ext2/ext3/ext4 檔案系統工具       |
    |             |I:999    |    |                                  |
    |-------------+---------+----+----------------------------------|
    |reiserfsprogs|V:11,    |1132|Reiserfs 檔案系統工具             |
    |             |I:29     |    |                                  |
    |-------------+---------+----+----------------------------------|
    |dosfstools   |V:128,   |235 |FAT 檔案系統工具. (Microsoft:     |
    |             |I:524    |    |MS-DOS, Windows)                  |
    |-------------+---------+----+----------------------------------|
    |xfsprogs     |V:21,    |3191|XFS 檔案系統工具. (SGI: IRIX)     |
    |             |I:98     |    |                                  |
    |-------------+---------+----+----------------------------------|
    |ntfs-3g      |V:186,   |1479|NTFS 檔案系統工具. (Microsoft:    |
    |             |I:512    |    |Windows NT, …)                    |
    |-------------+---------+----+----------------------------------|
    |jfsutils     |V:1, I:12|1577|JFS 檔案系統工具. (IBM: AIX, OS/2)|
    |-------------+---------+----+----------------------------------|
    |reiser4progs |V:0, I:4 |1373|Reiser4 檔案系統工具              |
    |-------------+---------+----+----------------------------------|
    |hfsprogs     |V:0, I:8 |356 |HFS 和 HFS Plus 檔案系統工具.     |
    |             |         |    |(Apple: Mac OS)                   |
    |-------------+---------+----+----------------------------------|
    |btrfs-progs  |V:38,    |4027|Btrfs 檔案系統工具                |
    |             |I:64     |    |                                  |
    |-------------+---------+----+----------------------------------|
    |zerofree     |V:3, I:94|25  |把 ext2/3/4 檔案系統上空閒塊設定為|
    |             |         |    |零的程式                          |
    +---------------------------------------------------------------+


    提示
   
    Ext4 檔案系統是 Linux 系統上預設的檔案系統，強烈推薦使用這個檔案
    系統，除非你有特殊的理由不使用。

    提示
   
    Btrfs 檔案系統在 Linux 核心 3.2(Debian wheezy)上存在。它被期望作
    為 ext4 檔案系統之後的下一個預設檔案系統。

    警告
   
    在得到當前核心空間的 fsck(8) 特徵和引導管理器支援前，你的關鍵資料
    不應當使用 Btrfs 檔案系統。

    提示
   
    一些工具可以在沒有 Linux 核心支援的情況下訪問檔案系統(參見第
     9.7.2 节 “不掛載磁碟操作檔案”).

%

9.5.6. 檔案系統建立和完整性檢查

    mkfs(8) 在 Linux 系統上建立檔案系統。fsck(8) 命令在 Linux系統上提
    供檔案系統完整性檢查和修復功能。

    在檔案系統建立後，Debian 現在預設不周期性的執行 fsck。

    小心
   
    在已經掛載的檔案系統上執行 fsck ，一般是不安全的.

    提示

    在 "/etc/mke2fs.conf" 裡設定 "enable_periodic_fsck" 並使用
    "tune2fs -c0 /dev/<partition_name>" 設定最大掛載數為 0，便可以在
    重啟時，讓 root 檔案系統包括在內的所有檔案系統上，安全的執行fsck
    (8) 命令. 參見 mke2fs.conf(5) 和 tune2fs(8).

    提示
   
    從啟動腳本里面執行的 fsck(8) 命令結果，可以在 "/var/log/fsck/" 目
    錄下檢視。

%

9.5.7. 通過掛載選項優化檔案系統

    “/etc/fstab” 中包含了基礎的靜態檔案系統配置。例如，

    # <file system> <mount point>   <type>  <options>       <dump>  <pass>
    proc            /proc           proc    defaults        0       0
    UUID=709cbe4c-80c1-56db-8ab1-dbce3146d2f7 / ext4 noatime,errors=remount-ro 0 1
    UUID=817bae6b-45d2-5aca-4d2a-1267ab46ac23 none swap sw  0       0
    /dev/scd0       /media/cdrom0   udf,iso9660 user,noauto 0       0

    提示
   
    UUID（參見第 9.5.3 节 “使用 UUID 訪問分割槽”）可以替代一般的塊裝
    置名稱（例如 “/dev/sda1”、“/dev/sda2”……）來識別一個塊裝置。

    一個檔案系統的效能和特性可以通過所用的掛載選項來進行優化（參見 
    fstab(5) 和 mount(8)）。值得注意的有以下幾點。

      * “defaults” 選項隱含的預設選項為：
        “rw,suid,dev,exec,auto,nouser,async”。（通常）

      * “noatime” 或 “relatime” 選項對於加速讀取訪問非常有效。（通常
        ）

      * “user” 選項允許一個普通使用者掛載檔案系統。這個選項是
        “noexec,nosuid,nodev” 選項的組合。（通常，用於 CD 或 usb 儲存
        裝置）

      * “noexec,nodev,nosuid” 選項組合被用來增強安全性。（通常）

      * "noauto" 選項限制掛載，只有明確進行掛載操作才進行掛載（通常）

      * 用於 ext3fs 的 “data=journal” 選項可以增強電源故障時資料的完
        整性，但會損失一些寫入速度。

    提示

    配置 root 檔案系統非預設的日誌模式，你需要向核心提供啟動引數(參見
    第 3.1.2 节 “第二階段：引載加載程序”),比如說 "rootflags=data=
    journal"。對於 lenny 版本,預設的日誌模式是 "rootflags=data=
    ordered".對於 squeeze 版本，是"rootflags=data=writeback".

%

9.5.8. 通過超級塊（superblock）優化檔案系統

    一個檔案系統的特性可以使用 tune2fs(8) 命令通過超級塊來優化。

      * 執行 “sudo tune2fs -l /dev/hda1” 可以顯示 “/dev/hda1” 上的檔
        案系統超級塊內容。

      * 執行"sudo tune2fs -c 50 /dev/hda1" 改變 "/dev/hda1" 檔案系統
        的檢查(在啟動時執行 fsck)頻率為每 50 次啟動.

      * 執行 “sudo tune2fs -j /dev/hda1” 會給檔案系統新增日誌功能，即
        “/dev/hda1” 的檔案系統從 ext2 轉換為 ext3。（對未掛載的檔案系
        統這麼做。）

      * 執行 “sudo tune2fs -O extents,uninit_bg,dir_index /dev/hda1 &
        & fsck -pf /dev/hda1” 在 “/dev/hda1” 上將它從 ext3 轉換為
        ext4。（對未掛載的系統這麼做。）

    提示
   
    儘管 tune2fs(8) 的名字是這樣的，但它不僅能用於 ext2 檔案系統，也
    能用於 ext3 和 ext4 檔案系統。

%

9.5.9. 硬碟優化

    警告
   
    在你折騰硬碟配置之前，請檢查你的硬體並閱讀 hdparam(8) 的 man 手冊
    頁，因為這可能會對資料完整性造成相當大的危害。

    你可以通過 “hdparm -tT /dev/hda” 來測試 “/dev/hda” 硬碟的訪問速度
    。對於一些使用 (E)IDE 連線的硬碟，你可以使用 “hdparm -q -c3 -d1
    -u1 -m16 /dev/hda” 來啟用 “(E)IDE 32 位支援”、啟用 “using_dma
    flag”、設定 “interrupt-unmask flag” 並設定 “multiple 16 sector I/
    O”（危險！），從而加速硬碟訪問速度。

    你可以通過 “hdparm -W /dev/sda” 來測試 “/dev/sda” 硬碟的寫入快取
    功能。你可以使用 “hdparm -W 0 /dev/sda” 關閉寫入快取功能。

    現代高速 CD-ROM 光碟機，你可以使用 "setcd -x 2" 降低速度，來讀取
    不當壓縮的 CDROM 光碟。

%

9.5.10. 固態硬碟優化

    固態硬碟（solid state drive，SSD）的效能和硬碟磨損可以通過下列方
    式優化。

      * 使用最新的 Linux 核心。（>= 3.2）

      * 減少讀取硬碟訪問的硬碟寫入。

          + 在 /etc/fstab 中設定 “noatime” 或 “relatime” 掛載選項。

      * 啟用 TRIM 命令。

          + 在 /etc/fstab 中為 ext4 檔案系統、swap 分割槽、Btrfs 等設
            定 discard 掛載選項。參見 fstab(5)。

          + 在 /etc/lvm/lvm.conf 中為 LVM 設定 “discard” 選項。參見 
            lvm.conf(5)。
   
          + 在 /etc/crypttab 中為 dm-crypt 設定 “discard” 選項。參見 
            crypttab(5)。

      * 啟用 SSD 硬碟空間分配優化方案。

          + 在 /etc/fstab 中為 Brtfs 設定 “ssd” 掛載選項。

      * 對於膝上型電腦，使系統每 10 分鐘重新整理資料到硬碟。

          + 在 /etc/fstab 中設定 “commit=600” 掛載選項。參見 fstab(5)
            。

          + 設定 pm-utils 使用筆記本模式，即使在 AC 電源供電下。參見
            Debian BTS #659260.

    警告
   
    將重新整理間隔從一般的 5 秒改為 10 分鐘會導致遇到電源故障時資料容
    易丟失。

%

9.5.11. 使用 SMART 預測硬碟故障

    你可以使用相容 SMART 的 smartd(8) 後臺守護程序（daemon）來監控和
    記錄你的硬碟。

     1. 在 BIOS 中啟用 SMART 功能。

     2. 安裝 smartmontools 軟體包。

     3. 通過 df(1) 列出硬碟驅動並識別它們。

          + 讓我們假設要監控的硬碟為 “/dev/hda”。

     4. 檢查 “smartctl -a /dev/hda” 的輸出，看 SMART 功能是否已啟用。
   
          + 如果沒有，通過 “smartctl -s on -a /dev/hda” 啟用它。

     5. 通過下列方式執行 smartd(8) 後臺守護程序（daemon）。

          + 消除 /etc/default/smartmontools” 檔案中 “start_smartd=
            yes” 的註釋。

          + 通過 “sudo /etc/init.d/smartmontools restart” 重新啟動 
            smartd(8) 後臺守護程序（daemon）。

    提示
   
    smartd(8) 後臺守護程序（daemon）可以使用 /etc/smartd.conf 檔案進
    行自定義，檔案中包含了相關的警告。

%

9.5.12. 通過 $TMPDIR 指定臨時儲存目錄

    應用程式一般在臨時儲存目錄 “/tmp” 下建立臨時檔案。如果 “/tmp” 沒
    有足夠的空間，你可以通過 $TMPDIR 變數來為程式指定臨時儲存目錄。

%

9.5.13. 通過 LVM 擴充套件可用儲存空間

    在安裝時建立在 Logical Volume Manager 邏輯卷管理(LVM) (Linux 特
    性) 上的分割槽，它們可以容易的通過合併擴充套件或刪除擴充套件的方
    式改變大小，而不需要在多個儲存裝置上進行大量的重新配置。

%

9.5.14. 通過掛載另一個分割槽來擴充套件可用儲存空間

    如果你有一個空的分割槽（例如 “/dev/sdx”），你可以使用 mkfs.ext4
    (1) 將它格式化，並使用 mount(8) 將它掛載到你需要更多空間的目錄。
    （你需要複製原始資料內容。）

    $ sudo mv work-dir old-dir
    $ sudo mkfs.ext4 /dev/sdx
    $ sudo mount -t ext4 /dev/sdx work-dir
    $ sudo cp -a old-dir/* work-dir
    $ sudo rm -rf old-dir

    提示

    你也可以選擇掛載一個空硬碟映像檔案（參見第 9.6.5 节 “製作空的磁碟
    映像檔案”）作為一個迴圈裝置（參見第 9.6.3 节 “掛載磁碟映像檔案”）
    。實際的硬碟使用量會隨著實際儲存資料的增加而增加。

%

9.5.15. 通過 “mount --bind” 掛載另一個目錄來擴充套件可用儲存空間

    如果你在另一個分割槽裡有一個帶有可用空間的空目錄（例如 “/path/to/
    emp-dir”），你可以通過帶有 “--bind” 選項的 mount(8)，將它掛載到一
    個你需要更多空間的目錄（例如 “work-dir”）。

    $ sudo mount --bind /path/to/emp-dir work-dir

9.5.16. 透過 overlay 掛載（overlay-mounting）另一個目錄來擴充套件可用
儲存空間

    如果你在另一個分割槽表中有可用的空間（例如，“/path/to/empty” 和 “
    /path/to/work”），你可以在其中建立一個目錄並堆疊到你需要空間的那
    個舊的目錄（例如，“/path/to/old”），要這樣做，你需要用於 Linux
    3.18 版核心或更新版本（對應 Debian Stetch 9.0 或更新版本）的
    OverlayFS。

    $ sudo mount -t overlay overlay \
      -olowerdir=/path/to/old-dir,upperdir=/path/to/empty,workdir=/path/to/work

    “/path/to/empty” 和 “/path/to/work” 應該位於可讀寫的分割槽，從而
    能夠寫入 “/path/to/old”。

%

9.5.17. 使用符號連結擴充套件可用儲存空間

    小心
   
    這是一個已棄用的做法。某些軟體在遇到“軟連結目錄”時可能不會正常工
    作。請優先使用上文所述的“掛載”的途徑。

    如果你在另一個分割槽裡有一個帶有可用空間的空目錄（例如 “/path/to/
    emp-dir”），你可以使用 ln(8) 建立目錄的一個符號連結。

    $ sudo mv work-dir old-dir
    $ sudo mkdir -p /path/to/emp-dir
    $ sudo ln -sf /path/to/emp-dir work-dir
    $ sudo cp -a old-dir/* work-dir
    $ sudo rm -rf old-dir

    警告
   
    別對由系統管理的目錄（例如 “/opt”）使用“連結到目錄”，這樣的連結在
    系統升級時可能會被覆蓋。

%

9.6. 磁碟映像

    我們在這裡討論磁碟影響的操作。

%

9.6.1. 製作磁碟映像檔案

    一個未掛載裝置（例如，第二個 SCSI 或序列 ATA 裝置 “/dev/sdb”）的
    磁碟映像檔案 “disk.img” 可以使用 cp(1) 或 dd(1) 通過下列方式建立
    。

    # cp /dev/sdb disk.img
    # dd if=/dev/sdb of=disk.img

    傳統 PC 中位於主 IDE 硬碟第一扇區的主引導記錄（MBR）（參見第
     9.5.2 节 “硬碟分割槽配置”）的磁碟映像可以使用 dd(1) 通過下列方式
    建立。

    # dd if=/dev/hda of=mbr.img bs=512 count=1
    # dd if=/dev/hda of=mbr-nopart.img bs=446 count=1
    # dd if=/dev/hda of=mbr-part.img skip=446 bs=1 count=66

      * “mbr.img”：帶有分割槽表的 MBR

      * “mbr-nopart.img”：不帶分割槽表的 MBR

      * “mbr-part.img”：僅 MBR 的分割槽表

    如果你使用 SCSI 或序列 ATA 裝置作為啟動硬碟，你需要使用 “/dev/
    sda” 替代 “/dev/hda”。

    如果你要建立原始硬碟的一個硬碟分割槽的映像，你需要使用 “/dev/
    hda1” 等替代 “/dev/hda”。

%

9.6.2. 直接寫入硬碟

    磁碟映像檔案 “disk.img” 可以通過下列方式寫入到一個匹配大小的未掛
    載裝置（例如，第二個 SCSI 裝置 “/dev/sdb”。

    # dd if=disk.img of=/dev/sdb

    相似地，硬碟分割槽映像檔案 “partition.img” 可以通過下列方式寫入到
    匹配大小的未掛載分割槽（例如，第二個 SCSI 裝置的第一個分割槽 “/
    dev/sdb1”）。

    # dd if=partition.img of=/dev/sdb1

%

9.6.3. 掛載磁碟映像檔案

    可以使用迴圈裝置通過下列方式掛載和解除安裝包含單個分割槽映像的磁
    碟映像 “partition.img”。

    # losetup -v -f partition.img
    Loop device is /dev/loop0
    # mkdir -p /mnt/loop0
    # mount -t auto /dev/loop0 /mnt/loop0
    ...hack...hack...hack
    # umount /dev/loop0
    # losetup -d /dev/loop0

    可以簡化為如下步驟。

    # mkdir -p /mnt/loop0
    # mount -t auto -o loop partition.img /mnt/loop0
    ...hack...hack...hack
    # umount partition.img

    可以使用迴圈裝置掛載包含多個分割槽的磁碟映像 “disk.img” 的每個分
    割槽。因為迴圈裝置預設不管理分割槽，因此我們需要通過下列方式重新
    設定它。

    # modinfo -p loop # verify kernel capability
    max_part:Maximum number of partitions per loop device
    max_loop:Maximum number of loop devices
    # losetup -a # verify nothing using the loop device
    # rmmod loop
    # modprobe loop max_part=16

    現在迴圈裝置可以管理多達 16 個分割槽。

    # losetup -v -f disk.img
    Loop device is /dev/loop0
    # fdisk -l /dev/loop0

    Disk /dev/loop0: 5368 MB, 5368709120 bytes
    255 heads, 63 sectors/track, 652 cylinders
    Units = cylinders of 16065 * 512 = 8225280 bytes
    Disk identifier: 0x452b6464

          Device Boot      Start         End      Blocks   Id  System
    /dev/loop0p1               1         600     4819468+  83  Linux
    /dev/loop0p2             601         652      417690   83  Linux
    # mkdir -p /mnt/loop0p1
    # mount -t ext4 /dev/loop0p1 /mnt/loop0p1
    # mkdir -p /mnt/loop0p2
    # mount -t ext4 /dev/loop0p2 /mnt/loop0p2
    ...hack...hack...hack
    # umount /dev/loop0p1
    # umount /dev/loop0p2
    # losetup -d /dev/loop0

    或者，你也可以使用 kpartx 軟體包中的 kpartx(8) 建立裝置對映裝置來
    達到相同的效果。

    # kpartx -a -v disk.img
    ...
    # mkdir -p /mnt/loop0p2
    # mount -t ext4 /dev/mapper/loop0p2 /mnt/loop0p2
    ...
    ...hack...hack...hack
    # umount /dev/mapper/loop0p2
    ...
    # kpartx -d /mnt/loop0

    注意
   
    你也可以使用迴圈裝置利用偏移量來跳過 MBR 等，來掛載此類磁碟映像的
    單個分割槽。但這更加容易出錯。

%

9.6.4. 清理磁碟映像檔案

    使用下面的方式，一個磁碟映像檔案 "disk.img" 能夠清理掉所有已經刪
    除的檔案，成為一個乾淨的稀疏映像 "new.img"。

    # mkdir old; mkdir new
    # mount -t auto -o loop disk.img old
    # dd bs=1 count=0 if=/dev/zero of=new.img seek=5G
    # mount -t auto -o loop new.img new
    # cd old
    # cp -a --sparse=always ./ ../new/
    # cd ..
    # umount new.img
    # umount disk.img

    如果 “disk.img” 位於 ext2、ext3 或 ext4，你也可以像下面那樣使用
    zerofree 軟體包中的 zerofree(8)。

    # losetup -f -v disk.img
    Loop device is /dev/loop3
    # zerofree /dev/loop3
    # cp --sparse=always disk.img new.img

%

9.6.5. 製作空的磁碟映像檔案

    按下面的方式使用 dd(1) ，可以製作一個大小為 5GiB 的空磁碟映像檔案
    。

    $ dd bs=1 count=0 if=/dev/zero of=disk.img seek=5G

    按下面的方式使用環回裝置，你能夠在這個磁碟映像"disk.img"上建立
    ext4 檔案系統。

    # losetup -f -v disk.img
    Loop device is /dev/loop1
    # mkfs.ext4 /dev/loop1
    ...hack...hack...hack
    # losetup -d /dev/loop1
    $ du  --apparent-size -h disk.img
    5.0G  disk.img
    $ du -h disk.img
    83M disk.img

    對於 "disk.img",它的檔案大小是5.0 GiB，而它實際磁碟使用僅僅是
    83MiB.這個差距可能是由於 ext4 裡面有稀疏檔案.

    提示
   
    稀疏檔案的實際磁碟使用會隨著資料的寫入而增加。

    迴環裝置或裝置對映裝置上使用類似的操作，在這些裝置按第 9.6.3 节 “
    掛載磁碟映像檔案” 掛載後, 你能夠使用 parted(8) 或 fdisk(8)對這個
    磁碟映像"disk.img"進行分割槽，能夠使用 mkfs.ext4(8), mkswap(8)在
    上面建立檔案系統等.

%

9.6.6. 製作 ISO9660 映象檔案

    "源目錄"下的目錄樹可以通過如下所示的 cdrkit 提供的 genisoimage(1)
    命令來製作 ISO9660 映象檔案，"cd.iso"。

    #  genisoimage -r -J -T -V volume_id -o cd.iso source_directory

    類似的，可引導的 ISO9660 映象檔案，"cdboot.iso", 能夠從
    debian-installer 類似目錄樹 "source_directory" 製作，方式如下。

    #  genisoimage -r -o cdboot.iso -V volume_id \
       -b isolinux/isolinux.bin -c isolinux/boot.cat \
       -no-emul-boot -boot-load-size 4 -boot-info-table source_directory

    這裡的 Isolinux boot loader (參見第 3.1.2 节 “第二階段：引載加載
    程序”) 是用於啟動的.

    按下面的方式，你可以直接從光碟機裝置計算 md5sum 值，並製作
    ISO9660 映象。

    $ isoinfo -d -i /dev/cdrom
    CD-ROM is in ISO 9660 format
    ...
    Logical block size is: 2048
    Volume size is: 23150592
    ...
    # dd if=/dev/cdrom bs=2048 count=23150592 conv=notrunc,noerror | md5sum
    # dd if=/dev/cdrom bs=2048 count=23150592 conv=notrunc,noerror > cd.iso

    警告
   
    為了得到正確結果，你必須小心避免 Linux ISO9600 檔案系統預讀 bug。

%

9.6.7. 直接寫入檔案到 CD/DVD-R/RW

    提示
   
    對於由 cdrkit 提供的 wodim(1) 來講，DVD 僅僅是一個大的 CD。

    你能夠通過如下所示的命令找到可用的裝置。

    # wodim --devices

    然後將空的 CD-R 插入 CD 驅動器並且把 ISO9660 映象檔案，"cd.iso"
    寫入到裝置中，例如用如下所示的 wodim(1) 將資料寫入到 "/dev/hda"
    裝置。

    # wodim -v -eject dev=/dev/hda cd.iso

    如果用 CD-RW 代替 CD-R，用如下所示的命令來替代。

    # wodim -v -eject blank=fast dev=/dev/hda cd.iso

    提示
   
    如果你的桌面系統自動掛載 CDs，在使用 wodim(1) 之前在終端裡面用
    "sudo umount /dev/hda" 解除安裝它。

%

9.6.8. 掛載 ISO9660 映象檔案

    如果 "cd.iso" 包含一個 ISO9660 映象, 下面的命令手工掛載這個檔案到
    "/cdrom".

    # mount -t iso9660 -o ro,loop cd.iso /cdrom

    提示
   
    現代桌面系統能夠自動掛載可移動介質，如按 ISO9660 格式化的 CD(參見
    第 10.1.7 节 “可移動儲存裝置”).

%

9.7. 二進位制資料

    這裡，我們討論直接操作儲存介質上的二進位制資料。

%

9.7.1. 檢視和編輯二進位制資料

    最基礎的檢視二進位制資料的方法是使用 "od -t x1" 命令。

    表 9.20. 檢視和修改二進位制資料的軟體包列表

    +---------------------------------------------------------------+
    |    軟體包     |流行度 |大小 |              說明               |
    |---------------+-------+-----+---------------------------------|
    |coreutils      |V:891, |17478|基礎軟體包，有 od(1) 來匯出檔案  |
    |               |I:999  |     |(HEX, ASCII, OCTAL, …)           |
    |---------------+-------+-----+---------------------------------|
    |bsdmainutils   |V:60,  |26   |工具軟體包，有 hd(1) 來匯出檔案  |
    |               |I:996  |     |(HEX, ASCII, OCTAL, …)           |
    |---------------+-------+-----+---------------------------------|
    |hexedit        |V:1,   |72   |二進位制瀏覽和編輯器(HEX, ASCII) |
    |               |I:12   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |bless          |V:0,   |1028 |全功能的十六進位制編輯器(GNOME)  |
    |               |I:4    |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |okteta         |V:1,   |1508 |全功能的十六進位制編輯器(KDE4)   |
    |               |I:15   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |ncurses-hexedit|V:0,   |132  |二進位制瀏覽和編輯器(HEX, ASCII, |
    |               |I:2    |     |EBCDIC)                          |
    |---------------+-------+-----+---------------------------------|
    |beav           |V:0,   |133  |二進位制瀏覽和編輯器(HEX, ASCII, |
    |               |I:0    |     |EBCDIC, OCTAL, ...)              |
    +---------------------------------------------------------------+


    提示

    HEX 是十六進位制英文hexadecimal首字母縮略詞，基數 radix 是 16。
    OCTAL 是八進位制英文octal 首字母縮略詞，基數 radix是 8。ASCII是美
    國資訊交換標準程式碼 American Standard Code for Information
    Interchange 的英文縮寫，即正常的英語文字程式碼。EBCDIC是擴充套件
    二進位制編碼十進位制交換碼 Extended Binary Coded Decimal
    Interchange Code 的英文縮寫，在 IBM 大型機作業系統上使用。

%

9.7.2. 不掛載磁碟操作檔案

    有工具可以在沒有掛載磁碟的情況下讀寫檔案。

    表 9.21. 不掛載磁碟操作檔案的軟體包列表

    +----------------------------------------------------------+
    | 軟體包 |  流行度  |大小|              說明               |
    |--------+----------+----+---------------------------------|
    |mtools  |V:10, I:83|389 |不掛載磁碟的 MSDOS 檔案工具      |
    |--------+----------+----+---------------------------------|
    |hfsutils|V:0, I:7  |1884|不掛載磁碟的 HFS 和 HFS+ 檔案工具|
    +----------------------------------------------------------+


%

9.7.3. 資料冗餘

    Linux 核心所提供的RAID軟體系統提供核心檔案系統級別的資料冗餘來實
    現高水平的儲存可靠性。

    有在應用程式級別增加資料冗餘來實現高水平儲存可靠性的工具。

    表 9.22. 向檔案新增資料冗餘的工具列表

    +---------------------------------------------------------------+
    |  軟體包  |流行度 |大小|                 說明                  |
    |----------+-------+----+---------------------------------------|
    |par2      |V:4,   |271 |奇偶校驗檔案卷設定，用於檢查和修復檔案 |
    |          |I:15   |    |                                       |
    |----------+-------+----+---------------------------------------|
    |dvdisaster|V:0,   |1741|CD/DVD 媒體資料損失/劃傷/老化的保護    |
    |          |I:2    |    |                                       |
    |----------+-------+----+---------------------------------------|
    |dvbackup  |V:0,   |413 |使用 MiniDV 行動式攝像機的備份工具(提供|
    |          |I:0    |    |rsbep(1))                              |
    |----------+-------+----+---------------------------------------|
    |vdmfec    |V:0,   |97  |使用前向糾錯恢復丟失的塊               |
    |          |I:0    |    |                                       |
    +---------------------------------------------------------------+


%

9.7.4. 資料檔案恢復和診斷分析

    有用於資料檔案恢復和診斷分析的工具。

    表 9.23. 資料檔案恢復和診斷分析軟體包列表

    +---------------------------------------------------------------+
    |   軟體包    |流行 |大小|                 說明                 |
    |             | 度  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |testdisk     |V:3, |1426|分割槽掃描和磁碟恢復的實用程式        |
    |             |I:38 |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |magicrescue  |V:0, |259 |通過查詢幻數 magic 位元組來恢復檔案的 |
    |             |I:3  |    |工具（譯註：請 man file 來了解幻數）  |
    |-------------+-----+----+--------------------------------------|
    |scalpel      |V:0, |87  |簡潔、高效能的檔案提取                |
    |             |I:4  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |myrescue     |V:0, |83  |恢復損壞硬碟中的資料                  |
    |             |I:3  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |extundelete  |V:1, |148 |恢復刪除 ext3/4 檔案系統上的檔案的實用|
    |             |I:11 |    |程式                                  |
    |-------------+-----+----+--------------------------------------|
    |ext4magic    |V:0, |233 |恢復刪除 ext3/4 檔案系統上的檔案的實用|
    |             |I:4  |    |程式                                  |
    |-------------+-----+----+--------------------------------------|
    |ext3grep     |V:0, |281 |幫助恢復 ext3 檔案系統上刪除的檔案的工|
    |             |I:3  |    |具                                    |
    |-------------+-----+----+--------------------------------------|
    |scrounge-ntfs|V:0, |50  |NTFS 檔案系統的資料恢復程式           |
    |             |I:3  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |gzrt         |V:0, |33  |gzip 恢復工具包                       |
    |             |I:0  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |sleuthkit    |V:2, |1511|診斷分析工具(Sleuthkit)               |
    |             |I:24 |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |autopsy      |V:0, |1027|SleuthKit 的圖形化介面                |
    |             |I:2  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |foremost     |V:0, |104 |恢復資料的診斷程式                    |
    |             |I:7  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |guymager     |V:0, |1030|基於 Qt 的診斷影象工具                |
    |             |I:1  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |dcfldd       |V:0, |106 |增強版的 dd，用於診斷和安全           |
    |             |I:5  |    |                                      |
    +---------------------------------------------------------------+


    提示

    在 e2fsprogs 軟體包裡有 debugfs(8) 命令，使用該命令裡的
    list_deleted_inodes 和 undel 指令，你能夠恢復 ext2 檔案系統上刪除
    的檔案。

%

9.7.5. 把大檔案分成多個小檔案

    當一個檔案太大而不能備份的時候，你應該在備份之前先把它分割為多個
    小於 2000MiB 的小檔案，稍後再把這些小檔案合併為初始的檔案。

    $ split -b 2000m large_file
    $ cat x* >large_file

    小心
   
    為了防止檔名衝突，請確保沒有任何以 "x" 開頭的檔案。

%

9.7.6. 清空檔案內容

    為了清除諸如日誌檔案之類的檔案的內容，不要用 rm(1) 命令去刪除檔案
    然後建立新的空檔案，因為這個檔案可能在命令執行的期間還在被使用。
    以下是清除檔案內容的正確方法。

    $ :>file_to_be_cleared

%

9.7.7. 樣子文件

    下面的命令創建樣子文件或空文件。

    $ dd if=/dev/zero    of=5kb.file bs=1k count=5
    $ dd if=/dev/urandom of=7mb.file bs=1M count=7
    $ touch zero.file
    $ : > alwayszero.file

    你將發現下列文件。

      * "5kb.file" 是 5KB 零。

      * "7mb.file" 是 7MB 隨機數據。

      * "zero.file" 也許是一個 0 字節的文件。如果這個文件之前就存在，
        則它的 mtime 會被更新，而它的內容和長度保持不變。

      * "alwayszero.file" 一定是一個 0 字節文件。如果這個文件之前存在
        ，則它的 mtime 會被更新，而它的內容會被清零。

%

9.7.8. 擦除整塊硬碟

    有幾種方法來完全擦除裝置上整個硬碟上資料，比如說，在 "/dev/sda"
    上的 USB 記憶體盤。

    小心

    在執行這裡的命令之前，你應該用 mount(8) 命令來檢視 USB 記憶棒的掛
    載位置。"/dev/sda" 指向的裝置可能是裝有整個系統的 SCSI 硬碟或者
    serial-ATA 硬碟。

    如下所示是通過資料歸 0 的方式來擦除硬碟上所有資料的。

    # dd if=/dev/zero of=/dev/sda

    如下是用隨機資料重寫的方式來擦除所有資料的。

    # dd if=/dev/urandom of=/dev/sda

    如下是用隨機資料重寫的方式來高效擦除所有資料。

    # shred -v -n 1 /dev/sda

    因為 dd(1) 命令在許多可引導的 Linux CDs (例如 Debian 安裝光碟) 上
    的 shell 環境下都是可用的，你能夠在裝有系統的硬碟上，例如 "/dev/
    hda", "/dev/sda" 等等裝置上執行擦除命令來完全清除已經安裝的系統。

%

9.7.9. 擦除硬碟上的未使用的區域

    硬碟（或 USB 記憶棒）上未使用的區域，例如“/dev/sdb1”可能仍然包含
    可被擦除的資料，因為他們本身只是解除了從檔案系統的連結，這些可以
    通過重寫來清除。

    # mount -t auto /dev/sdb1 /mnt/foo
    # cd /mnt/foo
    # dd if=/dev/zero of=junk
    dd: writing to `junk': No space left on device
    ...
    # sync
    # umount /dev/sdb1

    警告
   
    這對您的USB 記憶棒來說通常已經足夠好了，但這還不完美。大部分已擦
    除的檔名和它們的屬性可能隱藏並留在檔案系統中。

%

9.7.10. 恢復已經刪除但仍然被開啟的檔案

    即使你不小心刪除了某個檔案，只要這個檔案仍然被一些應用程式所使用
    （讀或者寫），恢復此檔案是可能的。

    嘗試下列例子

    $ echo foo > bar
    $ less bar
    $ ps aux | grep 'less[ ]'
    bozo    4775  0.0  0.0  92200   884 pts/8    S+   00:18   0:00 less bar
    $ rm bar
    $ ls -l /proc/4775/fd | grep bar
    lr-x------ 1 bozo bozo 64 2008-05-09 00:19 4 -> 2 /home/bozo/bar (deleted)
    $ cat /proc/4775/fd/4 > 3bar
    $ ls -l
    -rw-r--r-- 1 bozo bozo 4 2008-05-09 00:25 bar
    $ cat bar
    foo

    當你安裝了 lsof 軟體包的時候，在另外一個終端執行如下命令。

    $ ls -li bar
    2228329 -rw-r--r-- 1 bozo bozo 4 2008-05-11 11:02 bar
    $ lsof |grep bar|grep less
    less 4775 bozo 4r REG 8,3 4 2228329 /home/bozo/bar
    $ rm bar
    $ lsof |grep bar|grep less
    less 4775 bozo 4r REG 8,3 4 2228329 /home/bozo/bar (deleted)
    $ cat /proc/4775/fd/4 > bar
    $ ls -li bar
    2228302 -rw-r--r-- 1 bozo bozo 4 2008-05-11 11:05 bar
    $ cat bar
    foo

%

9.7.11. 查詢所有硬連結

    有硬連結的檔案，能夠使用 "ls -li" 確認。

    $ ls -li
    total 0
    2738405 -rw-r--r-- 1 root root 0 2008-09-15 20:21 bar
    2738404 -rw-r--r-- 2 root root 0 2008-09-15 20:21 baz
    2738404 -rw-r--r-- 2 root root 0 2008-09-15 20:21 foo

    "baz" 和 "foo" 的連結數為 "2" (>1)，表示他們有硬連結。它們的
    inode 號都是"2738404".這表示它們是同樣的硬連結檔案。如果你不想偶
    然碰巧發現硬連結檔案，你可以通過 inode 號來查詢它。比如說, 按下面
    的方式查詢 "2738404" 。

    # find /path/to/mount/point -xdev -inum 2738404

%

9.7.12. 不可見磁碟空間消耗

    所有開啟的檔案被刪除後，仍然消耗磁碟空間，儘管他們不能夠被普通的 
    du(1) 所看見。這些被刪除的檔案和他們的大小，可以通過下面的方式列
    出。

    # lsof -s -X / |grep deleted

%

9.8. 資料加密提示

    在可以物理訪問您的 PC的情況下，任何人都可以輕易獲得 root 許可權，
    訪問您的 PC 上的所有檔案 (見第 4.7.4 节 “root 密碼安全”)。這意味
    著登入密碼系統在您的PC被偷盜時並不能保證您私人和敏感資料的安全。
    您必須部署資料加密技術來實現。儘管 GNU 隱私守護 (見第 10.3 节 “資
    料安全基礎”) 可以對檔案進行加密，但它需要一些使用者端的工作。

    dm-crypt 和 eCryptfs通過 Linux 核心模組與很少的使用者操作實現本地
    自動資料加密。

    表 9.24. 資料加密工具列表

    +---------------------------------------------------------------+
    |    軟體包    |流行 |大 |                 說明                 |
    |              | 度  |小 |                                      |
    |--------------+-----+---+--------------------------------------|
    |cryptsetup    |V:29,|402|可用於加密的塊裝置的實用程式（dm-crypt|
    |              |I:78 |   |/ 3LUKS）                             |
    |--------------+-----+---+--------------------------------------|
    |              |V:4, |   |可用於加密的塊裝置著重於正常使用者掛載|
    |cryptmount    |I:5  |228|/解除安裝的實用程式（ dm-crypt / LUKS |
    |              |     |   |）                                    |
    |--------------+-----+---+--------------------------------------|
    |ecryptfs-utils|V:3, |460|可用於堆疊加密檔案系統的實用程式(     |
    |              |I:5  |   |eCryptfs)                             |
    +---------------------------------------------------------------+


    Dm-crypt 是一個使用 device-mapper 加密的檔案系統. Device-mapper
    對映一個塊裝置到另外一個。

    eCryptfs 是另外一個加密檔案系統，使用了堆疊檔案系統。堆疊檔案系統
    把它自己堆疊在已掛載檔案系統的一個已有目錄之上。

    小心
   
    資料加密會消耗 CPU 時間等資源，請權衡其利弊。

    注意
   
    通過 debian-installer (lenny 或更新版)，整個 Debian 系統能夠被安
    裝到一個加密的磁碟上，使用 dm-crypt/LUKS 和 initramfs.

    提示
   
    請參閱第 10.3 节 “資料安全基礎” 使用者空間加密實用程式： GNU
    Privacy Guard。

%

9.8.1. 使用 dm-crypt/LUKS 加密移動磁碟

    您可以用dm-crypt/LUKS加密大容量可移動裝置上資料，例如掛載在“/dev/
    sdx”上的USB 記憶棒。你只需按如下步驟簡單地把它格式化。

    # badblocks -c 1024 -s -w -t random -v /dev/sdx
    # fdisk /dev/sdx
    ... "n" "p" "1" "return" "return" "w"
    # cryptsetup luksFormat /dev/sdx1
    ...
    # cryptsetup open --type luks /dev/sdx1 sdx1
    ...
    # ls -l /dev/mapper/
    total 0
    crw-rw---- 1 root root  10, 60 2008-10-04 18:44 control
    brw-rw---- 1 root disk 254,  0 2008-10-04 23:55 sdx1
    # mkfs.vfat /dev/mapper/sdx1
    ...
    # cryptsetup luksClose sdx1

    然後，它就可以正常的在現代桌面環境下，例如 GNOME 桌面可以使用 
    gnome-mount(1)，掛載到 "/media/<disk_label"。只不過它會要求輸入密
    碼 (參見第 10.1.7 节 “可移動儲存裝置”)。不同的是寫入的資料都是加
    密的。你可以把它格式化成其他格式的檔案系統，例如用 "mkfs.ext4 /
    dev/mapper/sdx1" 把它格式化為 ext4。

    注意
   
    如果您對資料的安全性要求很高，您可能需要重寫多次（在上述示例中的
    "badblocks"命令）。雖然這個操作非常耗費時間。

%

9.8.2. 用dm-crypt加密的交換分割槽

    讓我們假設你原先的"/etc/fstab"包含以下內容。

    /dev/sda7 swap sw 0 0

    您可以使用 dm-crypt 通過如下步驟啟用加密的交換分割槽。

    # aptitude install cryptsetup
    # swapoff -a
    # echo "cswap /dev/sda7 /dev/urandom swap" >> /etc/crypttab
    # perl -i -p -e "s/\/dev\/sda7/\/dev\/mapper\/cswap/" /etc/fstab
    # /etc/init.d/cryptdisks restart
     ...
    # swapon -a

%

9.8.3. 使用dm-crypt/LUKS掛載加密的磁碟

    用dm-crypt/LUKS在"/dev/sdc5" 上建立的加密磁碟可以用如下步驟掛載到
    "/mnt"：

    $ sudo cryptsetup open /dev/sdc5 ninja --type luks
    Enter passphrase for /dev/sdc5: ****
    $ sudo lvm
    lvm> lvscan
      inactive          '/dev/ninja-vg/root' [13.52 GiB] inherit
      inactive          '/dev/ninja-vg/swap_1' [640.00 MiB] inherit
      ACTIVE            '/dev/goofy/root' [180.00 GiB] inherit
      ACTIVE            '/dev/goofy/swap' [9.70 GiB] inherit
    lvm> lvchange -a y /dev/ninja-vg/root
    lvm> exit
      Exiting.
    $ sudo mount /dev/ninja-vg/root /mnt

%

9.8.4. 用eCryptfs自動加密檔案

    您可以用eCryptfs和ecryptfs-utils包對~/Private/下的建立的檔案自動
    加密。

      * 根據下面的提示執行ecryptfs-setup-private(1)並設定~/Private/。

      * 通過執行ecryptfs-mount-private(1)啟用“~/Private/”。

      * 將敏感資料檔案移動到"~/Private/"並根據要求建立符號連結。

          + 候選："~/.fetchmailrc"、"~/.ssh/identity"，"~/.ssh/
            id_rsa"，"~/.ssh/id_dsa"和"go-rwx"的其他檔案

      * 將敏感資料目錄移動到"~/Private/"的子目錄中並按要求建立符號連
        結。

          + 候選："~/.gnupg"和"go-rwx的其他目錄

      * 建立從“~/Desktop/Private/”到“~/Private/的符號連結，實現更方便
        的桌面操作。

      * 通過執行 ecryptfs-umount-private(1) 停用"~/Private/"。

      * 在你需要加密檔案時，使用“ecryptfs-mount-private”命令啟用“~/
        Private/”目錄。

    提示

    因為 eCryptfs 只是選擇性的加密敏感資料，它的花費比使用 dm-crypt
    在 root 或 "/home" 裝置加密的花費少的多。它不需要任何特殊的磁碟上
    的儲存分配，但是其不能保證檔案系統所有元資料的祕密性。

%

9.8.5. 自動掛載 eCryptfs

    如果您使用您的登入密碼為環繞加密金鑰，您可以通過 PAM （可插拔身份
    驗證模組）自動化安裝 eCryptfs。

    在"/etc/pam.d/common-auth"檔案中的 "pam_permit.so"前插入下面的行
    。

    auth required pam_ecryptfs.so unwrap

    在"/etc/pam.d/common-session"檔案中插入下面的行作為最後一行。

    session optional pam_ecryptfs.so unwrap

    在"/etc/pam.d/common-password"中的第一個活動行插入下面的行。

    password required pam_ecryptfs.so

    這相當方便。

    警告
   
    PAM的配置錯誤可能會把您鎖在自己的系統外。請參閱第 4 章認證。

    小心

    如果你使用你自己的登入密碼作為環繞加密金鑰，加密的資料和使用者登
    入密碼的安全性一樣 (參見第 4.3 节 “好密碼”)。除非你已認真設定了一
    個強密碼，否則你的資料仍然處在危險中，當別人偷了筆記本以後，然後
    執行密碼破解軟體 (參見第 4.7.4 节 “root 密碼安全”)。

%

9.9. 核心

    對於支援的架構，Debian 使用軟體包來分發模組化的 Linux核心.

%

9.9.1. Linux 核心 2.6/3.x

    相對於 2.4 版來說，Linux 核心的 2.6/3.x 版有一些值得注意的特徵。

      * 裝置由 udev 系統建立(參見第 3.3 节 “udev 系統”).

      * 讀寫訪問 IDE CD/DVD 裝置，不再使用 ide-scsi 模組.

      * 網路包過濾功能使用 iptables 核心模組.

    Linux 版本從 2.6.39 跳到 3.0，不僅僅是一個主要的技術改變，也是第
    20 個週年紀念日。

%

9.9.2. 核心引數

    許多 Linux 特性可以按下面的方式，通過核心引數來配置。

      * 核心引數通過 bootloader 初始化(參見第 3.1.2 节 “第二階段：引
        載加載程序”)

      * 對通過 sysfs 訪問的核心引數，在執行時通過 sysctl(8) 修改(參見
        第 1.2.12 节 “procfs 和 sysfs”)

      * 當一個模組被啟用時，通過 modprobe(8) 引數來設定模組引數。(參
        見第 9.6.3 节 “掛載磁碟映像檔案”)

    參見 "kernel-parameters.txt(.gz)" 和 linux-doc-3.* 軟體包提供的其
    它相關文件 ("/usr/share/doc/linux-doc-3.*/Documentation/
    filesystems/*")。

%

9.9.3. 核心標頭檔案

    大部分普通程式編譯時不需要核心標頭檔案，如果你直接使用它們來編譯
    ，甚至會導致編譯中斷。在 Debian 系統上，普通程式編譯依賴
    libc6-dev 軟體包 (由 glibc 原始碼包建立)提供的，在"/usr/include/
    linux" 和 "/usr/include/asm" 裡的標頭檔案。

    注意

    對於編譯一些核心相關的程式，比如說從外部原始碼編譯的核心模組和
    automounter 後臺守護（daemon）程式(amd),你必須包含相應的核心標頭
    檔案到路徑裡，比如"-I/usr/src/linux-particular-version/include/",
    到你的命令列。 module-assistant(8) (它的簡稱 m-a)幫助我們更簡單的
    為一個或者多個個性化核心編譯和安裝模組軟體包。

%

9.9.4. 編譯核心和相關模組

    Debian 有它自己的方式來編譯核心和相關模組。

    表 9.25. Debian 系統核心編譯需要安裝的主要軟體包列表

    +---------------------------------------------------------------+
    |    軟體包     |流行度|大小 |               說明               |
    |---------------+------+-----+----------------------------------|
    |build-essential|I:499 |20   |建立 Debian 軟體包所必須的軟體包: |
    |               |      |     |make, gcc, …                      |
    |---------------+------+-----+----------------------------------|
    |bzip2          |V:157,|122  |bz2 檔案壓縮和解壓縮工具          |
    |               |I:970 |     |                                  |
    |---------------+------+-----+----------------------------------|
    |libncurses5-dev|I:116 |6    |ncurses 開發者庫和文件            |
    |---------------+------+-----+----------------------------------|
    |git            |V:305,|35040|git：Linux 核心使用的分散式版本控 |
    |               |I:478 |     |制系統                            |
    |---------------+------+-----+----------------------------------|
    |fakeroot       |V:35, |228  |為非 root 使用者建立軟體包提供一個|
    |               |I:521 |     |偽造的 root 環境                  |
    |---------------+------+-----+----------------------------------|
    |initramfs-tools|V:371,|112  |建立 initramfs 的工具（Debian 規範|
    |               |I:989 |     |）                                |
    |---------------+------+-----+----------------------------------|
    |dkms           |V:70, |294  |動態核心模組支援 dynamic kernel   |
    |               |I:219 |     |module support (DKMS) (通用)      |
    |---------------+------+-----+----------------------------------|
    |               |V:9,  |     |Debian Package maintainer Debian  |
    |devscripts     |I:57  |2623 |包維護者的幫助指令碼（Debian 規範 |
    |               |      |     |）                                |
    +---------------------------------------------------------------+


    如果你在第 3.1.2 节 “第二階段：引載加載程序” 使用 initrd , 請一定
    閱讀 initramfs-tools(8), update-initramfs(8), mkinitramfs(8) 和
    initramfs.conf(5) 裡的相關資訊。

    警告

    在編譯 Linux 核心原始碼時，請不要放置從"/usr/include/linux" 和 "/
    usr/include/asm" 到原始碼樹(比如："/usr/src/linux*") 裡目錄的符號
    連結。(一些過期的文件建議這樣做.)

    注意
   
    當在 Debian stable 版裡編譯最新的 Linux 核心時, 可能需要使用一些
    從Debian unstable 版裡 backported 向後移植的最新版本的工具。

    注意

    dynamic kernel module support (DKMS)動態核心模組支援是一個新的分
    散式獨立框架，被設計用來允許單個的核心模組在不改變整個核心的情況
    下升級。這可以用於維護核心程式碼樹外部的模組。這也使你升級核心時
    ，重新編譯模組變得非常簡單。

%

9.9.5. 編譯核心原始碼：Debian 核心團隊推薦

    從上游核心原始碼編譯個性化的核心二進位制包，你應當使用由它提供的
    "deb-pkg" 物件。

    $ sudo apt-get build-dep linux
    $ cd /usr/src
    $ wget http://www.kernel.org/pub/linux/kernel/v3.11/linux-<version>.tar.bz2
    $ tar -xjvf linux-<version>.tar.bz2
    $ cd linux-<version>
    $ cp /boot/config-<version> .config
    $ make menuconfig
     ...
    $ make deb-pkg

    提示
   
    linux-source-<version> 軟體包使用 "/usr/src/linux-
    <version>.tar.bz2" 提供有 Debian 補丁的 Linux核心原始碼。

    從 Debian 核心原始碼軟體包編譯特定的二進位制包，你應當使用
    "debian/rules.gen" 裡的 "binary-arch_<architecture>_<featureset>_
    <flavour>" 物件。

    $ sudo apt-get build-dep linux
    $ apt-get source linux
    $ cd linux-3.*
    $ fakeroot make -f debian/rules.gen binary-arch_i386_none_686

    進階資訊參見：

      * Debian Wiki: KernelFAQ

      * Debian Wiki: DebianKernel

      * Debian Linux 核心手冊：https://kernel-handbook.debian.net

%

9.9.6. 硬體驅動和韌體

    硬體驅動是執行在目標系統上的程式碼。大部分硬體驅動現在是自由軟體
    ，已經包含在普通的 Debian 核心軟體包裡，放在 main 區域。

      * GPU 驅動

          + Intel GPU 驅動 (main)

          + AMD/ATI GPU 驅動 (main)和/
   
          + NVIDIA GPU 驅動 (nouveau 驅動放在 main , 由廠家支援的二進
            位制驅動，放在 non-free.)

      * Softmodem 驅動

          + martian-modem 和 sl-modem-dkms 軟體包 (non-free)

    韌體是載入在裝置上的程式碼(比如說，CPU microcode, GPU 執行的渲染
    程式碼, 或 FPGA / CPLD 資料……）部分韌體包是作為自由軟體存在，但是
    很多韌體包由於包含有沒有原始碼的資料，二進位制不是作為自由軟體存
    在。

      * firmware-linux-free (main)

      * firmware-linux-nonfree (non-free)

      * firmware-linux-* (non-free)
   
      * *-firmware (non-free)

      * intel-microcode (non-free)

      * amd64-microcode (non-free)

    請注意 non-free 和 contrib 的軟體包不是 Debian 系統的一部分。啟用
    和禁用 non-free 和 contrib 區域的配置，在第 2.1.4 节 “Debian 檔案
    庫基礎” 裡描述。你應當注意到第 2.1.5 节 “Debian 是100% 的自由軟體
    ” 裡的描述，使用 non-free 和 contrib 軟體包會有負面影響。

%

9.10. 虛擬化系統

    通過使用虛擬系統，我們能在單個機器上同時執行多個系統。

    提示
   
    參見 http://wiki.debian.org/SystemVirtualization.

%

9.10.1. 虛擬化工具

    除了簡單的 chroot 工具外，Debian上還有一些有關係統虛擬化及模擬的
    軟體包。這些軟體包能夠幫你建立虛擬系統。

    表 9.26. 虛擬化工具列表

    +---------------------------------------------------------------+
    |    軟體包     |流行 | 大小 |               說明               |
    |               | 度  |      |                                  |
    |---------------+-----+------+----------------------------------|
    |schroot        |V:7, |2708  |在 chroot 下執行 Debian 二進位制包|
    |               |I:10 |      |的特異工具                        |
    |---------------+-----+------+----------------------------------|
    |sbuild         |V:1, |286   |從 Debian 原始碼構建 Debian 二進位|
    |               |I:4  |      |制包的工具                        |
    |---------------+-----+------+----------------------------------|
    |pbuilder       |V:2, |966   |Debian 軟體包的打包軟體           |
    |               |I:16 |      |                                  |
    |---------------+-----+------+----------------------------------|
    |debootstrap    |V:6, |298   |搭建一個基本的 Debian 系統 (用 sh |
    |               |I:63 |      |寫的)                             |
    |---------------+-----+------+----------------------------------|
    |cdebootstrap   |V:0, |116   |搭建一個 Debian 系統 (用 C 寫的)  |
    |               |I:3  |      |                                  |
    |---------------+-----+------+----------------------------------|
    |virt-manager   |V:10,|2298  |虛擬機器管理器: 用於管理虛擬機器的|
    |               |I:42 |      |桌面應用                          |
    |---------------+-----+------+----------------------------------|
    |libvirt-clients|V:43,|1167  |libvirt 的庫程式                  |
    |               |I:62 |      |                                  |
    |---------------+-----+------+----------------------------------|
    |bochs          |V:0, |7194  |Bochs: IA-32 PC 模擬器            |
    |               |I:1  |      |                                  |
    |---------------+-----+------+----------------------------------|
    |qemu           |I:34 |94    |QEMU: 快速的通用處理器模擬器      |
    |---------------+-----+------+----------------------------------|
    |qemu-system    |I:21 |95    |QEMU: 全功能系統的模擬二進位制    |
    |---------------+-----+------+----------------------------------|
    |qemu-user      |V:0, |89671 |QEMU: 使用者模式的模擬二進位制    |
    |               |I:13 |      |                                  |
    |---------------+-----+------+----------------------------------|
    |qemu-utils     |V:11,|6083  |QEMU: 工具集                      |
    |               |I:107|      |                                  |
    |---------------+-----+------+----------------------------------|
    |qemu-kvm       |V:10,|107   |KVM: x86 硬體上有硬體輔助虛擬化的 |
    |               |I:61 |      |全虛擬化                          |
    |---------------+-----+------+----------------------------------|
    |virtualbox     |V:12,|106495|VirtualBox:i386 和 amd64 上 x86 的|
    |               |I:16 |      |虛擬化解決方案                    |
    |---------------+-----+------+----------------------------------|
    |xen-tools      |V:0, |727   |用於管理 debian XEN 虛擬伺服器的工|
    |               |I:4  |      |具                                |
    |---------------+-----+------+----------------------------------|
    |wine           |V:19,|192   |Wine: Windows 應用程式程式設計介面|
    |               |I:82 |      |實現（標準套件）                  |
    |---------------+-----+------+----------------------------------|
    |               |V:2, |      |DOSBox:有 Tandy/Herc/CGA/EGA/VGA/ |
    |dosbox         |I:18 |2742  |SVGA 顯示卡,聲音和 DOS 的 x86 模擬|
    |               |     |      |器                                |
    |---------------+-----+------+----------------------------------|
    |dosemu         |V:0, |4891  |DOSEMU: Linux DOS 模擬器          |
    |               |I:2  |      |                                  |
    |---------------+-----+------+----------------------------------|
    |vzctl          |V:0, |1112  |OpenVZ 伺服器虛擬化解決方案 - 控制|
    |               |I:1  |      |工具                              |
    |---------------+-----+------+----------------------------------|
    |vzquota        |V:0, |236   |OpenVZ 伺服器虛擬化解決方案 - 份額|
    |               |I:1  |      |工具                              |
    |---------------+-----+------+----------------------------------|
    |lxc            |V:10,|18761 |Linux 容器使用者層工具            |
    |               |I:15 |      |                                  |
    +---------------------------------------------------------------+


    參見維基百科 Comparison of platform virtual machines 來獲得不同平
    臺的虛擬化解決方案的詳細比較資訊。

%

9.10.2. 虛擬化工作流

    注意
   
    這裡所描述的功能只在 squeeze 或以後的版本中是可用的。

    注意
   
    自從 lenny 之後，預設的 Debian 核心就是支援 KVM 的。

    典型的虛擬化工作流涉及以下幾個步驟。

      * 建立空檔案系統 (目錄樹或磁碟映像)。

          + 目錄樹可以通過 "mkdir -p /path/to/chroot" 建立。

          + 原始的磁碟映像檔案能夠使用 dd(1) 建立 (參見第 9.6.1 节 “
            製作磁碟映像檔案” 和第 9.6.5 节 “製作空的磁碟映像檔案”).

          + qemu-img(1) 能夠建立和轉化 QEMU 支援的磁碟映像檔案.

          + 原始的格式和 VMDK 檔案格式,能夠作為虛擬化工具的通用格式.

      * 使用 mount(8) 掛載磁碟映像到檔案系統 (可選).

          + 對於原始磁碟映像檔案,把它作為迴環裝置或裝置對映裝置掛載.
            (參見第 9.6.3 节 “掛載磁碟映像檔案”).

          + 對於 QEMU 支援的磁碟映像,把它們作為 network block device
            網路塊裝置掛載 (參見第 9.10.3 节 “掛載虛擬磁碟映像檔案”).

      * 在目標檔案系統上部署需要的系統資料。

          + 使用 debootstrap 和 cdebootstrap 之類的程式來協助處理這個
            過程(參見第 9.10.4 节 “Chroot 系統”).

          + 在全功能系統模擬器下使用作業系統安裝器。

      * 在虛擬化環境下執行一個程式。

          + chroot 提供基本的虛擬化環境,足夠能在裡面編譯程式,執行控制
            檯應用,執行後臺守護程式 daemon.

          + QEMU 提供跨平臺的 CPU 模擬器.

          + QEMU 和 KVM 通過 hardware-assisted virtualization硬體輔助
            虛擬化來提供全功能系統的模擬.

          + VirtualBox 可以在 i386 和 amd64 上,使用或者不使用
            hardware-assisted virtualization硬體輔助虛擬化來提供全功
            能系統模擬.

%

9.10.3. 掛載虛擬磁碟映像檔案

    對於原始磁碟映像檔案,參見第 9.6 节 “磁碟映像”.

    對於其它虛擬磁碟映像檔案,你能夠用使用 network block device網路塊
    裝置協議的 qemu-nbd(8) 來匯出他們,並使用核心模組 nbd 來掛載它們.

    qemu-nbd(8) 支援 QEMU 所支援的磁碟格式: QEMU 支援下列磁碟格式:
    raw, qcow2, qcow, vmdk, vdi, bochs, cow (user-mode Linux
    copy-on-write), parallels, dmg, cloop, vpc, vvfat (virtual VFAT)
    和主機裝置.

    網路塊裝置能夠用和迴環裝置一樣的方式支援分割槽 (參見第 9.6.3 节 “
    掛載磁碟映像檔案”). 你能夠按下面的方式掛載 "disk.img" 的第一個分
    割槽.

    # modprobe nbd max_part=16
    # qemu-nbd -v -c /dev/nbd0 disk.img
    ...
    # mkdir /mnt/part1
    # mount /dev/nbd0p1 /mnt/part1

    提示
   
    你可以給 qemu-nbd(8) 使用 "-P 1" 選項來匯出"disk.img"的第一個分割
    槽.

%

9.10.4. Chroot 系統

    chroot(8) 提供最基本的方式來執行一個不同的 GNU/Linux 系統例項，並
    且不需要重啟原有的系統。

    小心
   
    下面的列子假設根源系統和 chroot 系統都共享相同的 CPU 架構。

    你可以按下面的方式學會怎樣建立和使用 chroot(8)，通過在 script(1)
    下執行 pbuilder(8) 程式。

    $ sudo mkdir /sid-root
    $ sudo pbuilder --create --no-targz --debug --buildplace /sid-root

    你能夠看到 debootstrap(8) 或 cdebootstrap(1) 是如何在 "/sid-root"
    下部署 sid 環境的系統資料.

    提示

    這些 debootstrap(8) 或 cdebootstrap(1) 是 Debian 安裝器用來安裝
    Debian 的.這些也可以用來在不使用 Debian 安裝盤的情況下，給一個系
    統安裝 Debian，也可以替代安裝其它 GNU/Linux 發行版。

    $ sudo pbuilder --login --no-targz  --debug --buildplace /sid-root

    你可以看到一個 sid 環境的系統 shell 是如何按下面的方式建立的。

     1. 拷貝本地配置 ("/etc/hosts", "/etc/hostname", "/etc/
        resolv.conf")

     2. 掛載 "/proc" 檔案系統
   
     3. 掛載 "/dev/pts" 檔案系統

     4. 建立 "/usr/sbin/policy-rc.d" 的過程，總是 101 退出

     5. 執行 "chroot /sid-root bin/bash -c 'exec -a -bash bin/bash'"

    注意

    一些在 chroot 下的程式，需要訪問比根源系統上的 pbuilder 能夠提供
    的檔案之外更多的檔案.例如，"/sys", "/etc/passwd", "/etc/group", "
    /var/run/utmp", "/var/log/wtmp"等等.也許需要使用 bind-mounted 或
    拷貝.

    注意
   
    "/usr/sbin/policy-rc.d" 檔案阻止在 Debian 系統上自動啟動後臺守護
    程式。參見 "/usr/share/doc/sysv-rc/README.policy-rc.d.gz".

    提示

    專用的 chroot 軟體包 pbuilder 的原始用途,是構建一個 chroot 系統，
    並在 chroot 裡面打包軟體包。它是一個理想的系統，可以用來檢查軟體
    包的安裝依賴性是否正確，確保不需要的和錯誤的安裝依賴在最終的軟體
    包中不存在。

    提示
   
    類似的 schroot 軟體包可以給你一個這樣的主意，在 amd64 根源系統上
    執行 i386 chroot 系統。

%

9.10.5. 多桌面系統

    我建議在 Debian 穩定版上使用 QEMU 或者 VirtualBox，這些軟體應用虛
    擬化技術安全的執行多桌面系統。這能讓你執行 Debian 不穩定版和測試
    版上的桌面應用並且沒有與之相關的通常意義上的風險。

    因為單純的 QEMU 工具是非常慢的，當主機系統支援 KVM 的時候，建議使
    用它來加速。

    按下面的方法，能夠建立一個可以用於QEMU 的包含有 Debian 系統的虛擬
    磁碟映像 "virtdisk.qcow2"，這個 Debian 系統使用 debian 安裝器:小
    CD安裝。

    $ wget http://cdimage.debian.org/debian-cd/5.0.3/amd64/iso-cd/debian-503-amd64-netinst.iso
    $ qemu-img create -f qcow2 virtdisk.qcow2 5G
    $ qemu -hda virtdisk.qcow2 -cdrom debian-503-amd64-netinst.iso -boot d -m 256
    ...

    在 Debian wiki: QEWU 可以檢視更多資訊。

    VirtualBox 自帶的 Qt 圖形介面工具是相當直觀的。關於它的圖形介面和
    命令列工具的解釋可以在 VisualBox 使用者手冊和 VirtualBox 使用者手
    冊(PDF) 中檢視。

    提示

    在虛擬化下執行 Ubuntu 和 Fedora 之類的其它 GNU/Linux 發行版，是一
    個不錯的學習其配置技巧的方法。其它專有作業系統也可以在這個 GNU/
    Linux 虛擬化下很好的執行。

第 10 章 資料管理

    以下是關於在 Debian 系統上管理二進位制和文字資料的工具及其相關提
    示。

%

10.1. 共享，拷貝和存檔

    警告
   
    為避免競爭情況，不應當對正在進行寫操作的裝置和檔案，多個程序進行
    不協調的寫操作。採用flock(1) 的檔案鎖定機制可用於避免這種情況。

    資料的安全和它的受控共享有如下幾個方面。

      * 存檔檔案的建立

      * 遠端儲存訪問

      * 複製

      * 跟蹤修改歷史

      * 促進資料共享

      * 防止未經授權的檔案訪問

      * 檢測未經授權的檔案修改

    這些可以通過使用工具集來實現。

      * 存檔和壓縮工具

      * 複製和同步工具

      * 網路檔案系統

      * 移動儲存媒介
   
      * 安全 shell

      * 認證體系

      * 版本控制系統工具

      * 雜湊演算法和加密工具

%

10.1.1. 存檔和壓縮工具

    以下是 Debian 系統上可用的存檔和壓縮工具的預覽。

    表 10.1. 存檔和壓縮工具列表

    +---------------------------------------------------------------+
    |  軟體包  |流行度|大小|副檔 | 命令  |           描述           |
    |          |      |    | 名  |       |                          |
    |----------+------+----+-----+-------+--------------------------|
    |tar       |V:905,|3098|.tar |tar(1) |標準的歸檔工具（預設）    |
    |          |I:999 |    |     |       |                          |
    |----------+------+----+-----+-------+--------------------------|
    |cpio      |V:412,|1136|.cpio|cpio(1)|Unix System V 風格的歸檔器|
    |          |I:998 |    |     |       |，與 find(1) 一起使用     |
    |----------+------+----+-----+-------+--------------------------|
    |binutils  |V:164,|97  |.ar  |ar(1)  |建立靜態庫的歸檔工具      |
    |          |I:678 |    |     |       |                          |
    |----------+------+----+-----+-------+--------------------------|
    |fastjar   |V:2,  |183 |.jar |fastjar|Java 歸檔工具（類似 zip） |
    |          |I:29  |    |     |(1)    |                          |
    |----------+------+----+-----+-------+--------------------------|
    |pax       |V:13, |170 |.pax |pax(1) |新的 POSIX 歸檔工具，介於 |
    |          |I:26  |    |     |       |tar 和 cpio 之間          |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:883,|    |     |gzip(1)|                          |
    |gzip      |I:999 |245 |.gz  |, zcat |GNU LZ77 壓縮工具（預設） |
    |          |      |    |     |(1), … |                          |
    |----------+------+----+-----+-------+--------------------------|
    |          |      |    |     |bzip2  |Burrows-Wheeler           |
    |          |V:157,|    |     |(1),   |block-sorting 壓縮工具有著|
    |bzip2     |I:970 |122 |.bz2 |bzcat  |比 gzip(1) 更高的壓縮率   |
    |          |      |    |     |(1), … |(跟 gzip 有著相似的語法但 |
    |          |      |    |     |       |速度比它慢)               |
    |----------+------+----+-----+-------+--------------------------|
    |lzma      |V:2,  |149 |.lzma|lzma(1)|LZMA 壓縮工具有著比 gzip  |
    |          |I:29  |    |     |       |(1) 更高的壓縮率（不推薦) |
    |----------+------+----+-----+-------+--------------------------|
    |          |      |    |     |xz(1), |XZ 壓縮工具有著比 bzip2(1)|
    |xz-utils  |V:454,|612 |.xz  |xzdec  |更高的壓縮率（壓縮速度慢於|
    |          |I:977 |    |     |(1), … |gzip 但是比 bzip2 快; LZMA|
    |          |      |    |     |       |壓縮工具的替代品)         |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:89, |    |     |7zr(1),|有著更高壓縮率的 7-zip 檔 |
    |p7zip     |I:464 |987 |.7z  |p7zip  |案歸檔器（LZMA 壓縮）     |
    |          |      |    |     |(1)    |                          |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:113,|    |     |7z(1), |有著更高壓縮率的 7-Zip 檔 |
    |p7zip-full|I:486 |4664|.7z  |7za(1) |案歸檔器（LZMA 壓縮和其他 |
    |          |      |    |     |       |）                        |
    |----------+------+----+-----+-------+--------------------------|
    |          |      |    |     |       |LZO 壓縮工具有著比 gzip(1)|
    |lzop      |V:9,  |164 |.lzo |lzop(1)|更高的壓縮和解壓縮速度 (跟|
    |          |I:76  |    |     |       |gzip 有著相似的語法但壓縮 |
    |          |      |    |     |       |率比它低)                 |
    |----------+------+----+-----+-------+--------------------------|
    |zip       |V:51, |608 |.zip |zip(1) |InfoZip：DOS 歸檔器和壓縮 |
    |          |I:432 |    |     |       |工具                      |
    |----------+------+----+-----+-------+--------------------------|
    |unzip     |V:154,|566 |.zip |unzip  |InfoZIP：DOS 解檔器和解壓 |
    |          |I:798 |    |     |(1)    |縮工具                    |
    +---------------------------------------------------------------+


    警告
   
    除非你知道將會發生什麼，否則不要設定 "$TAPE" 變數。它會改變 tar
    (1) 的行為。

    注意
   
    gzipped tar(1) 歸檔器用於副檔名是 ".tgz" 或者 ".tar.gz" 的檔案。

    注意
   
    xz-compressed tar(1) 歸檔器用於副檔名是 ".txz" 或者 ".tar.xz" 的
    檔案。

    注意
   
    FOSS 工具，例如 tar(1)，中的主流壓縮方法已經按如下所示的遷移:
    gzip → bzip2 → xz

    注意
   
    cp(1),scp(1) 和 tar(1) 工具可能並不適用於一些特殊的檔案。cpio(1)
    工具的適用範圍是最廣的。

    注意
   
    cpio(1) 是被設計為與 find(1) 和其它命令一起使用，適合於建立備份指
    令碼的場景，因此，指令碼的檔案選擇部分能夠被獨立測試。

    注意
   
    Libreoffice 資料檔案的內部結構是 ".jar" 檔案，它也可以使用 unzip
    工具來開啟。

    注意

    事實上跨平臺支援最好的存檔工具是 zip。按照“zip -rX”的方式呼叫可以
    獲得最大的相容性。如果最大檔案大小需要納入考慮範圍，請同時配合
    “-s”選項使用。

%

10.1.2. 複製和同步工具

    以下是 Debian 系統上的可用的簡單複製和備份工具的預覽。

    表 10.2. 複製和同步工具列表

    +---------------------------------------------------------------+
    |    軟體包    |流行度 |大小 |工具|            功能             |
    |--------------+-------+-----+----+-----------------------------|
    |coreutils     |V:891, |17478|GNU |複製本地檔案和目錄("-a" 引數 |
    |              |I:999  |     |cp  |實現遞迴）                   |
    |--------------+-------+-----+----+-----------------------------|
    |openssh-client|V:803, |4298 |scp |複製遠端檔案和目錄（客戶端， |
    |              |I:996  |     |    |"-r" 引數實現遞迴)           |
    |--------------+-------+-----+----+-----------------------------|
    |openssh-server|V:690, |1567 |sshd|複製遠端檔案和目錄（遠端伺服 |
    |              |I:834  |     |    |器）                         |
    |--------------+-------+-----+----+-----------------------------|
    |rsync         |V:281, |677  |-   |單向遠端同步和備份           |
    |              |I:560  |     |    |                             |
    |--------------+-------+-----+----+-----------------------------|
    |unison        |V:4,   |14   |-   |雙向遠端同步和備份           |
    |              |I:17   |     |    |                             |
    +---------------------------------------------------------------+


    在複製檔案的時候， rsync(8) 比其他工具提供了更多的特性。

      * 差分傳輸演算法只會傳送原始檔與已存在的目標檔案之間的差異部分

      * 快速檢查演算法 (預設) 會查詢大小或者最後的修改時間有變化的檔
        案
   
      * "--exclude" 和 "--exclude-from" 選項類似於 tar(1)

      * 在源目錄中新增反斜槓的語法能夠避免在目標檔案中建立額外的目錄
        級別。

    提示

    在 cron(8) 下使用"-gl"選項執行在第 10.2.3 节 “用於備份資料的複製
    指令碼”裡提到的 bkup 指令碼，將提供一個和 Plan9（譯註：Plan9 也是
    一種檔案系統，又稱 v9fs, 可以用 apt-cache show 9mount 命令獲取相
    關資訊）的 dumpfs 靜態資料歸檔非常相似的功能。

    提示
   
    在表 10.11 “版本控制系統工具列表” 中的版本控制系統 (VCS) 可以被認
    為是多路拷貝和同步工具。

%

10.1.3. 歸檔語法

    以下是用不同的工具壓縮和解壓縮整個 "./source" 目錄中的內容。

    GNU tar(1):

    $ tar -cvJf archive.tar.xz ./source
    $ tar -xvJf archive.tar.xz

    或者，如下所示。

    $ find ./source -xdev -print0 | tar -cvJf archive.tar.xz --null -F -

    cpio(1):

    $ find ./source -xdev -print0 | cpio -ov --null > archive.cpio; xz archive.cpio
    $ zcat archive.cpio.xz | cpio -i

%

10.1.4. 複製語法

    如下是用不同的工具複製整個 "./source" 目錄中的內容。

      * 本地複製: "./source" 目錄 → "/dest" 目錄
   
      * 遠端複製：本地主機上的 "./source" 目錄 → "user@host.dom" 主機
        上的 "/dest" 目錄

    rsync(8):

    # cd ./source; rsync -aHAXSv . /dest
    # cd ./source; rsync -aHAXSv . user@host.dom:/dest

    你能夠選擇使用“源目錄上的反斜槓”語法。

    # rsync -aHAXSv ./source/ /dest
    # rsync -aHAXSv ./source/ user@host.dom:/dest

    或者，如下所示。

    # cd ./source; find . -print0 | rsync -aHAXSv0 --files-from=- . /dest
    # cd ./source; find . -print0 | rsync -aHAXSv0 --files-from=- . user@host.dom:/dest

    GNU cp(1) 和 openSSH scp(1):

    # cd ./source; cp -a . /dest
    # cd ./source; scp -pr . user@host.dom:/dest

    GNU tar(1):

    # (cd ./source && tar cf - . ) | (cd /dest && tar xvfp - )
    # (cd ./source && tar cf - . ) | ssh user@host.dom '(cd /dest && tar xvfp - )'

    cpio(1):

    # cd ./source; find . -print0 | cpio -pvdm --null --sparse /dest

    你能夠在所有包含 "." 的例子裡用 "foo" 替代 "."，這樣就可以從 "./
    source/foo" 目錄複製檔案到 "/dest/foo" 目錄。

    在所有包含 "." 的列子裡，你能夠使用絕對路徑 "/path/to/source/foo"
    來代替 "."，這樣可以去掉 "cd ./source;". 如下所示，這些檔案會根據
    工具的不同，拷貝到不同的位置。

      * "/dest/foo": rsync(8), GNU cp(1), 和 scp(1)
   
      * "/dest/path/to/source/foo": GNU tar(1), 和 cpio(1)

    提示
   
    rsync(8) 和 GNU cp(1) 可以用 "-u" 選項來忽略接受端上更新的檔案。

%

10.1.5. 查詢檔案的語法

    find(1) 被用作從歸檔中篩選檔案也被用作拷貝命令 (參見第 10.1.3 节
    “歸檔語法”和第 10.1.4 节 “複製語法”) 或者用於 xargs(1) (參見第
     9.3.9 节 “使用檔案迴圈來重複一個命令”)。通過 find 的命令列引數能
    夠使其功能得到加強。

    以下是 find(1)基本語法的總結。

      * find 條件引數的運算規則是從左到右。

      * 一旦輸出是確定的，那麼運算就會停止。

      * “邏輯 OR" （由條件之間的 "-o" 引數指定的）優先順序低於 "邏輯 
        AND" （由 "-a" 引數指定或者條件之間沒有任何引數）。

      * ”邏輯 NOT" (由條件前面的 "!" 指定) 優先順序高於 “邏輯 AND”。

      * "-prune" 總是返回邏輯 TRUE 並且如果這個目錄是存在的，將會搜尋
        除這個目錄以外的檔案。

      * "-name" 選項匹配帶有 shell 萬用字元 (參見第 1.5.6 节 “Shell
        萬用字元”) 的檔名但也匹配帶有類似 "*" 和 "?" 元字元的 ."。(新
        的 POSIX 特性)

      * "-regex" 匹配整個檔案路徑，預設採用 emacs 風格的 BRE (參見第
         1.6.2 节 “正則表達式”)。

      * "-size" 根據檔案大小來匹配 (值前面帶有 "+" 號匹配更大的檔案，
        值前面帶有 "-" 號匹配更小的檔案)

      * "-newer" 引數匹配比引數名中指定的檔案還要新的檔案。

      * "-print0" 引數總是返回邏輯 TRUE 並將完整檔名 (null
        terminated) 列印到標準輸出裝置上。

    如下是 find(1) 語法格式。

    # find /path/to \
        -xdev -regextype posix-extended \
        -type f -regex ".*\.cpio|.*~" -prune -o \
        -type d -regex ".*/\.git" -prune -o \
        -type f -size +99M -prune -o \
        -type f -newer /path/to/timestamp -print0

    這些命令會執行如下動作。

     1. 查詢 "/path/to" 下的所有檔案

     2. 限定全域性查詢的檔案系統並且使用的是 ERE (參見第 1.6.2 节 “正
        則表達式”)

     3. 通過停止處理的方式來排除匹配 ".*\.cpio" 或 ".*~" 正則表示式的
        檔案
   
     4. 通過停止處理的方式來排除匹配 ".*/\.git" 正則表示式的目錄

     5. 通過停止處理的方式來排除比 99MB (1048576位元組單元) 更大的檔
        案

     6. 顯示檔名，滿足以上搜索條件並且比 "/path/to/timestamp" 新的檔
        案

    請留心以上例子中的 "-prune -o" 排除檔案的習慣用法。

    注意

    對於非 Debian 系的 Unix-like 系統，有些引數可能不被 find(1) 命令
    所支援。在這種情況下，應該考慮調整匹配方法並用 "-print" 替代
    "-print0"。你可能同樣需要更改其他相關的命令。

%

10.1.6. 歸檔媒體

    為重要的資料存檔尋找儲存裝置時，你應該注意它們的侷限性。對於小型
    的個人資料備份，我使用品牌公司的 CD-R 和 DVD-R 然後把它放在陰涼、
    乾燥、清潔的地方。(專業的一般使用磁帶存檔介質)

    注意
   
    防火安全是對於紙質文件來說的，大多數的計算機資料儲存媒介耐熱性比
    紙差。我經常依賴儲存在多個安全地點的加密拷貝。

    網上（主要是來源於供應商資訊）可以檢視儲存介質的最大使用壽命。

      * 大於100年：用墨水的無酸紙

      * 100年：光碟儲存（CD/DVD，CD/DVD-R）
   
      * 30年：磁帶儲存（磁帶，軟盤)

      * 20年：相變光碟儲存（CD-RW）

    這不包括由於人為導致的機械故障等等。

    網上（主要來源於供應商資訊）可以檢視儲存介質的最大的寫次數。

      * 大於250,000次：硬碟驅動器

      * 大於10,000次：快閃記憶體
   
      * 1,000次：CD/DVD-RW

      * 1次：CD/DVD-R，紙

    小心
   
    這裡的儲存壽命和寫次數的資料不應該被用來決定任何用於關鍵資料的儲
    存媒介，請翻閱製造商提供的特定產品的說明。

    提示
   
    因為 CD/DVD-R 和紙只能寫一次，它們從根本上阻止了因為重寫導致的資
    料意外丟失。這是優點！

    提示
   
    如果你需要更快更頻繁的進行大資料備份，那麼通過高速網路連線的遠端
    主機上的硬碟來實現備份，可能是唯一可行的方法。

%

10.1.7. 可移動儲存裝置

    可移動儲存裝置可能是以下的任何一種。

      * USB 快閃記憶體盤

      * 硬碟驅動器

      * 光碟驅動器

      * 數碼相機

      * 數字音樂播放器

    它們可以通過以下的方式來進行連線。

      * USB

      * IEEE 1394 / FireWire

      * PC 卡

    像 GNOME 和 KDE 這樣的現代桌面環境能夠在 "/etc/fstab" 檔案中沒有
    匹配條目的時候，自動掛載這些可移動裝置。

      * udisks 包提供了守護程序和相關的實用程式來掛載和解除安裝這些裝
        置。
   
      * D-bus 建立事件來觸發自動處理。

      * PolicyKit 提供了所需的特權。

    提示
   
    umount(8) 在自動掛載裝置的時候可能會帶有 "uhelper=" 引數。

    提示
   
    只有當這些可移動裝置沒有在 "/etc/fstab" 檔案中列出時，桌面環境下
    才會自動掛載。

    現代桌面環境下的掛載點被選為 "/media/<disk_label>"，它可以被如下
    所示的來定製。

      * FAT 格式的檔案系統使用 mlabel(1) 命令

      * ISO9660 檔案系統使用帶有 "-V" 選項的 genisoimage(1) 命令

      * ext2/ext3/ext4 檔案系統使用帶有 "-L" 選項的 tune2fs(1) 命令

    提示
   
    掛載時可能需要提供編碼選項（參見第 8.4.6 节 “檔名編碼”）。

    提示

    在圖形介面選單上移除檔案系統，可能會移除它的動態裝置節點例如 "/
    dev/sdc"。如果你想要保留它的裝置節點，你應該在命令列提示符上輸入 
    umount(8) 命令來解除安裝它。

%

10.1.8. 選擇用於分享資料的檔案系統

    當你通過可移動儲存裝置與其他系統分享資料的時候，你應該先把它格式
    化為被兩種作業系統都支援的通用的檔案系統。下面是檔案系統的列表。

    表 10.3. 典型使用場景下可移動儲存裝置可選擇的檔案系統列表

    +---------------------------------------------------------------+
    |檔案系 |                   典型使用場景描述                    |
    |  統   |                                                       |
    |-------+-------------------------------------------------------|
    |FAT12  |軟盤（<32MiB）上跨平臺的資料分享                       |
    |-------+-------------------------------------------------------|
    |FAT16  |在小硬碟(<2GiB)上的跨平臺的資料分享                    |
    |-------+-------------------------------------------------------|
    |FAT32  |在大硬碟（<8TiB，被 MS Windows95 OSR2 以上的作業系統所 |
    |       |支援) 上的跨平臺的資料分享                             |
    |-------+-------------------------------------------------------|
    |       |在大硬碟類裝置上的跨平臺共享資料 (在 MS Windows NT 和後|
    |NTFS   |續版本原生支援；在 Linux 上，通過使用 FUSE 的 NTFS-3G  |
    |       |支援。)                                                |
    |-------+-------------------------------------------------------|
    |ISO9660|在 CD-R 和 DVD+/-R 上的跨平臺的靜態資料分享            |
    |-------+-------------------------------------------------------|
    |UDF    |CD-R 和 DVD+/-R (新)上的增量資料寫入                   |
    |-------+-------------------------------------------------------|
    |MINIX  |                                                       |
    |檔案系 |軟盤上磁碟空間高利用率的 unix 檔案資料儲存             |
    |統     |                                                       |
    |-------+-------------------------------------------------------|
    |ext2 檔|在裝有老舊 linux 系統的硬碟上的資料分享                |
    |案系統 |                                                       |
    |-------+-------------------------------------------------------|
    |ext3 檔|在裝有老舊 linux 系統的硬碟上的資料分享                |
    |案系統 |                                                       |
    |-------+-------------------------------------------------------|
    |ext4 檔|在裝有較新的 linux 系統的硬碟上的資料分享              |
    |案系統 |                                                       |
    +---------------------------------------------------------------+


    提示
   
    檢視第 9.8.1 节 “使用 dm-crypt/LUKS 加密移動磁碟”來獲得關於使用裝
    置級加密的跨平臺的資料共享的資訊。

    FAT 檔案系統被絕大多數的現代作業系統支援，它對於通過可行動硬碟進
    行的資料交換是非常有用的。

    當格式化像裝有 FAT 檔案系統的跨平臺資料共享的可移動裝置時，以下應
    該是保險的選擇。

      * 用 fdisk(8)，cfdisk(8) 或者 parted(8) 命令（參見第 9.5.2 节 “
        硬碟分割槽配置”）把它們格式化為單個的主分割槽並對把它做如下標
        記。

          + 標記小於 2GB 的 FAT 裝置為字元"6"。

          + 標記更大的 FAT32 裝置為字元 "c"。

      * 如下所示是用 mkfs.vfat(8) 命令格式化主分割槽的。

          + 它的裝置名字，例如 "/dev/sda1" 用於 FAT16 裝置

          + 明確的選項和它的裝置名，例如 "-F 32 /dev/sda1" 用於 FAT32
            裝置

    當使用 FAT 或 ISO9660 檔案系統分享資料時，如下是需要注意的安全事
    項。

      * 用 tar(1)，或cpio(1)命令壓縮檔案，目地是為了保留檔名，符號連
        結，原始的檔案許可權和檔案所有者資訊。

      * 用 split(1) 命令把壓縮檔案分解成若干小於 2GiB的小檔案，使其免
        受檔案大小限制。

      * 加密壓縮檔案保護其內容免受未經授權的訪問。

    注意

    因為 FAT 檔案系統的設計，最大的檔案大小為 (2^32 - 1) bytes =
    (4GiB -1 byte)。對於一些老舊的 32 位系統上的應用程式而言，最大的
    檔案大小甚至更小(2^31 -1) bytes = (2GiB -1 byte)。Debian 沒有遇到
    後者的問題。

    注意

    微軟系統本身並不建議在超過 200MB 的分割槽或者驅動器上使用 FAT。他
    們的 " Overview of FAT, HPFS, and NTFS File Systems 這篇文章突出
    顯示了微軟系統的缺點，例如低效的磁碟空間利用。當然了，我們在
    Linux 系統上還是應該使用 ext4 檔案系統。

    提示
   
    有關檔案系統和訪問檔案系統的更多資訊，請參考 "Filesystems HOWTO"
    。

%

10.1.9. 網路上的資料分享

    當使用網路來分享資料的時候，你應該使用通用的服務。這裡有一些提示
    。

    表 10.4. 典型使用場景下可選擇的網路服務列表

    +---------------------------------------------------------------+
    |  網路服務   |                典型使用場景描述                 |
    |-------------+-------------------------------------------------|
    |SMB/CIFS 用  |通過 “Microsoft Windows 網路” 分享檔案，參見     |
    |Samba 掛載網 |smb.conf(5) 和官方 Samba 3.x.x 指導和參考手冊（  |
    |路檔案系統   |The Official Samba 3.x.x HOWTO and Reference     |
    |             |Guide）或 samba-doc 軟體包                       |
    |-------------+-------------------------------------------------|
    |NFS 用 Linux |通過 “Unix/Linux 網路" 分享檔案，參見 exports(5) |
    |核心掛載網路 |和 Linux NFS-HOWTO                               |
    |檔案系統     |                                                 |
    |-------------+-------------------------------------------------|
    |HTTP 服務    |在 web 伺服器/客戶端之間分享檔案                 |
    |-------------+-------------------------------------------------|
    |HTTPS 服務   |在有加密的安全套接層 (SSL) 或者安全傳輸層 (TLS)  |
    |             |的網路伺服器/客戶端中分享檔案                    |
    |-------------+-------------------------------------------------|
    |FTP 服務     |在 FTP 伺服器/客戶端之間分享檔案                 |
    +---------------------------------------------------------------+


    儘管對於檔案分享來說，通過網路掛載檔案系統和傳輸檔案是相當方便的
    ，但這可能是不安全的。它們的網路連線必須通過如下所示的加強安全性
    。

      * 用 SSL/TLS 加密

      * 建立 SSH 通道
   
      * 建立 VPN 通道

      * 網路之間需要有安全的防火牆

    參見第 6.10 节 “其它網路應用服務” 和第 6.11 节 “其它網路應用客戶
    端”。

%

10.2. 備份和恢復

    我們都熟知計算機有時會出問題，或者由於人為的錯誤導致系統和資料損
    壞。備份和恢復操作是成功的系統管理中非常重要的一部分。可能有一天
    你的電腦就會出問題。

    提示
   
    保持你的備份系統簡潔並且經常備份你的系統，有備份資料比你採用的備
    份方法的技術先進要重要的多。

    有3個關鍵的因素決定實際的備份和恢復策略。

     1. 知道要備份和恢復什麼。

          + 你自己建立的資料檔案：在 "~/" 下的資料

          + 你使用的應用程式建立的資料檔案：在 "/var/" 下的資料（除了
            "/var/cache/"，"/var/run/" 和 "/var/tmp/")

          + 系統配置檔案：在 "/etc/” 下的資料

          + 本地軟體：在 "/usr/local/" 或 "/opt/" 下的資料

          + 系統安裝資訊：關鍵步驟 (分割槽,...) 的純文字備忘錄

          + 驗證資料結果：通過實驗性的恢復操作來預先驗證

     2. 知道怎樣去備份和恢復。

          + 安全的資料儲存：保護其免於覆蓋和系統故障

          + 經常備份：有計劃的備份

          + 冗餘備份：資料映象

          + 傻瓜式操作：單個簡單命令備份

     3. 評估涉及的風險和成本。

          + 評估資料丟失的損失

          + 備份所需的資源：人力，硬體，軟體，…

          + 資料丟失的方式及其可能性

    注意

    除非你知道自己做的是什麼，否則不要備份 /proc, /sys, /tmp, 和 /run
    目錄下的偽檔案系統（參見第 1.2.12 节 “procfs 和 sysfs” 和第
     1.2.13 节 “tmpfs”)。它們是龐大且無用的資料。

    至於安全的資料儲存，資料至少是應該在不同的磁碟分割槽上最好是在不
    同的磁碟和機器上，來承受檔案系統發生的損壞。重要的資料最好儲存在
    只能寫一次的媒介上例如 CD/DVD-R 來防止覆蓋事故。（參見第 9.7 节 “
    二進位制資料” 怎樣在 shell 命令列寫入儲存媒介。GNOME 桌面圖形環境
    可以讓你輕鬆的通過選單：“位置 → CD/DVD 燒錄”來實現寫入操作。）

    注意
   
    當備份資料的時候，你可能希望停止一些應用程式的守護程序例如 MTA（
    參見第 6.3 节 “郵件傳輸代理 (MTA)”）。

    注意

    你應該格外小心地備份和恢復身份認證相關的資料檔案例如 "/etc/ssh/
    ssh_host_dsa_key", "/etc/ssh/ssh_host_rsa_key", "~/.gnupg/*", "~
    /.ssh/*", /etc/passwd", "/etc/shadow", "/etc/fetchmailrc",
    "popularity-contest.conf", "/etc/ppp/pap-secrets" 和 "/etc/exim4/
    passwd.client/"。這些資料中的有一些檔案是不能通過向系統輸入同樣的
    字串來再生的。

    注意

    如果你以使用者程序的方式執行 cron job，你必須儲存檔案到 "/var/
    spool/cron/crontabs" 目錄並且重啟 cron(8)。參見第 9.3.14 节 “定時
    任務安排”來獲得關於 cron(8) 和 crontab(1) 的資訊。

%

10.2.1. 實用備份套件

    以下是 Debian 系統上值得注意的實用備份程式套件的列表。

    表 10.5. 實用備份程式套件列表

    +---------------------------------------------------------------+
    |    軟體包    |流行 |大小 |                說明                |
    |              | 度  |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |dump          |V:1, |352  |4.4 BSD dump(8) 和 restore(8) 命令用|
    |              |I:6  |     |於 ext2/ext3/ext4 檔案系統          |
    |--------------+-----+-----+------------------------------------|
    |              |V:0, |     |在 GNU/Linux 和 IRIX 上用 xfsdump(8)|
    |xfsdump       |I:9  |854  |和 xfsrestore(8) 命令來備份和恢復   |
    |              |     |     |XFS 檔案系統                        |
    |--------------+-----+-----+------------------------------------|
    |backupninja   |V:4, |355  |輕量的可擴充套件的 meta-backup 系統 |
    |              |I:5  |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |bacula-common |V:10,|2158 |Bacula: 網路資料備份，恢復和核查-常 |
    |              |I:15 |     |見的支援檔案                        |
    |--------------+-----+-----+------------------------------------|
    |bacula-client |I:3  |183  |Bacula: 網路資料備份，恢復和核查-客 |
    |              |     |     |戶端元軟體包                        |
    |--------------+-----+-----+------------------------------------|
    |bacula-console|V:1, |107  |Bacula: 網路資料備份，恢復和核查-文 |
    |              |I:5  |     |字終端                              |
    |--------------+-----+-----+------------------------------------|
    |bacula-server |I:1  |183  |Bacula: 網路資料備份，恢復和核查-伺 |
    |              |     |     |服器端元軟體包                      |
    |--------------+-----+-----+------------------------------------|
    |amanda-common |V:0, |10031|Amanda: 馬里蘭大學開發的高階自動化網|
    |              |I:2  |     |路磁碟歸檔器（庫）                  |
    |--------------+-----+-----+------------------------------------|
    |amanda-client |V:0, |1089 |Amanda: 馬里蘭大學開發的高階自動化網|
    |              |I:2  |     |路磁碟歸檔器（客戶端）              |
    |--------------+-----+-----+------------------------------------|
    |amanda-server |V:0, |1076 |Amanda: 馬里蘭大學開發的高階自動化網|
    |              |I:0  |     |路磁碟歸檔器（伺服器端）            |
    |--------------+-----+-----+------------------------------------|
    |backup-manager|V:1, |572  |命令列備份工具                      |
    |              |I:2  |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |backup2l      |V:0, |114  |用於可掛載媒介 (基於磁碟的) 的低維護|
    |              |I:1  |     |的備份/恢復工具                     |
    |--------------+-----+-----+------------------------------------|
    |backuppc      |V:3, |3182 |BackupPC 是用於備份 PC 機資料（基於 |
    |              |I:3  |     |磁碟）的高效能的企業級工具          |
    |--------------+-----+-----+------------------------------------|
    |duplicity     |V:7, |1761 |(遠端) 增量備份                     |
    |              |I:15 |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |flexbackup    |V:0, |243  |(遠端) 增量備份                     |
    |              |I:0  |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |rdiff-backup  |V:7, |733  |(遠端) 增量備份                     |
    |              |I:15 |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |restic        |V:1, |20595|(遠端) 增量備份                     |
    |              |I:3  |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |rsnapshot     |V:5, |462  |(遠端) 增量備份                     |
    |              |I:11 |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |slbackup      |V:0, |151  |(遠端) 增量備份                     |
    |              |I:0  |     |                                    |
    +---------------------------------------------------------------+


    備份工具有各自的專用的用途。

      * Mondo Rescue 是一個備份系統，它能夠方便的從備份 CD/DVD 等裝置
        中快速恢復整個系統，而不需要經過常規的系統安裝過程。

      * 定期備份使用者資料,可以通過一個簡單的指令碼（第 10.2.2 节 “一
        個系統備份的指令碼例子”）和 cron(8) 來實現。

      * Bacula，Amanda 和 BackupPC 是全功能的備份實用套件，主要用於聯
        網的定期備份。

    第 10.1.1 节 “存檔和壓縮工具” 和第 10.1.2 节 “複製和同步工具” 描
    述的基礎工具能夠通過自定義指令碼來幫助系統備份。這些指令碼的功能
    可以通過如下的工具來增強。

      * restic 軟體包能夠增量備份（遠端）。

      * rdiff-backup 軟體包能夠增量備份（遠端）。

      * dump 軟體包用於高效增量的歸檔和恢復整個檔案系統。

    提示
   
    參見 "/usr/share/doc/dump/" 和 "Is dump really deprecated?" 來了
    解 dump 程式。

%

10.2.2. 一個系統備份的指令碼例子

    對於執行 unstable 套件的個人 Debian 桌面系統來說，只需要保護個人
    資料和關鍵資料。我不管怎樣每年都會重新安裝一次系統。因此沒理由去
    備份整個系統或者安裝全功能的備份實用程式。

    我使用簡單的指令碼來製作用於備份的壓縮檔案並用 GUI 介面把它燒寫到
    CD/DVD 裡。以下是關於這個的指令碼例子。

    #!/bin/sh -e
    # Copyright (C) 2007-2008 Osamu Aoki <osamu@debian.org>, Public Domain
    BUUID=1000; USER=osamu # UID and name of a user who accesses backup files
    BUDIR="/var/backups"
    XDIR0=".+/Mail|.+/Desktop"
    XDIR1=".+/\.thumbnails|.+/\.?Trash|.+/\.?[cC]ache|.+/\.gvfs|.+/sessions"
    XDIR2=".+/CVS|.+/\.git|.+/\.svn|.+/Downloads|.+/Archive|.+/Checkout|.+/tmp"
    XSFX=".+\.iso|.+\.tgz|.+\.tar\.gz|.+\.tar\.bz2|.+\.cpio|.+\.tmp|.+\.swp|.+~"
    SIZE="+99M"
    DATE=$(date --utc +"%Y%m%d-%H%M")
    [ -d "$BUDIR" ] || mkdir -p "BUDIR"
    umask 077
    dpkg --get-selections \* > /var/lib/dpkg/dpkg-selections.list
    debconf-get-selections > /var/cache/debconf/debconf-selections

    {
    find /etc /usr/local /opt /var/lib/dpkg/dpkg-selections.list \
         /var/cache/debconf/debconf-selections -xdev -print0
    find /home/$USER /root -xdev -regextype posix-extended \
      -type d -regex "$XDIR0|$XDIR1" -prune -o -type f -regex "$XSFX" -prune -o \
      -type f -size  "$SIZE" -prune -o -print0
    find /home/$USER/Mail/Inbox /home/$USER/Mail/Outbox -print0
    find /home/$USER/Desktop  -xdev -regextype posix-extended \
      -type d -regex "$XDIR2" -prune -o -type f -regex "$XSFX" -prune -o \
      -type f -size  "$SIZE" -prune -o -print0
    } | cpio -ov --null -O $BUDIR/BU$DATE.cpio
    chown $BUUID $BUDIR/BU$DATE.cpio
    touch $BUDIR/backup.stamp

    這是一個用 root 許可權執行的指令碼例子。

    我建議你按照如下所示的去更改和執行這個指令碼。

      * 編輯這個指令碼使其能夠覆蓋到你所有的重要資料（參見第 10.1.5 
        节 “查詢檔案的語法” 和第 10.2 节 “備份和恢復”）。

      * 用 "find ...-newer $BUDIR/backup.stamp -print0" 替代 "find
        ...-print0" 來實現增量備份。

      * 為保險起見，使用 scp(1) 或 rsync(1) 命令來備份檔案到遠端或者
        把它們燒寫到 CD/DVD 裡。（我使用 GNOME 桌面 GUI 來燒寫 CD/DVD
        。參見第 12.1.8 节 “zenity 的 shell 指令碼案例” 來獲得更多的
        資訊。）

    把事情簡單化！

    提示

    你能夠用 "debconf-set-selections debconf-selections" 命令恢復
    debconf 配置資料，可以用 "dpkg --set-selection
    <dpkg-selections.list" 命令恢復 dpkg 篩選資料。

%

10.2.3. 用於備份資料的複製指令碼

    對於目錄樹下面的資料集，"cp -a" 命令可以實現常規備份。

    對於類似 "/var/cache/apt/packages/" 目錄下面的大量不可覆蓋的靜態
    資料集,使用 "cp -al" 命令來建立硬連結是一種替代常規備份的方式，這
    樣可以高效的利用磁碟空間。

    以下是一個用於資料備份的名為 bkup 的複製指令碼。它把當前目錄下的
    所有 (non-VCS) 檔案複製到父目錄下的指定目錄中或者遠端主機上。

    #!/bin/sh -e
    # Copyright (C) 2007-2008 Osamu Aoki <osamu@debian.org>, Public Domain
    fdot(){ find . -type d \( -iname ".?*" -o -iname "CVS" \) -prune -o -print0;}
    fall(){ find . -print0;}
    mkdircd(){ mkdir -p "$1";chmod 700 "$1";cd "$1">/dev/null;}
    FIND="fdot";OPT="-a";MODE="CPIOP";HOST="localhost";EXTP="$(hostname -f)"
    BKUP="$(basename $(pwd)).bkup";TIME="$(date  +%Y%m%d-%H%M%S)";BU="$BKUP/$TIME"
    while getopts gcCsStrlLaAxe:h:T f; do case $f in
    g)  MODE="GNUCP";; # cp (GNU)
    c)  MODE="CPIOP";; # cpio -p
    C)  MODE="CPIOI";; # cpio -i
    s)  MODE="CPIOSSH";; # cpio/ssh
    t)  MODE="TARSSH";; # tar/ssh
    r)  MODE="RSYNCSSH";; # rsync/ssh
    l)  OPT="-alv";; # hardlink (GNU cp)
    L)  OPT="-av";;  # copy (GNU cp)
    a)  FIND="fall";; # find all
    A)  FIND="fdot";; # find non CVS/ .???/
    x)  set -x;; # trace
    e)  EXTP="${OPTARG}";; # hostname -f
    h)  HOST="${OPTARG}";; # user@remotehost.example.com
    T)  MODE="TEST";; # test find mode
    \?) echo "use -x for trace."
    esac; done
    shift $(expr $OPTIND - 1)
    if [ $# -gt 0 ]; then
      for x in $@; do cp $OPT $x $x.$TIME; done
    elif [ $MODE = GNUCP ]; then
      mkdir -p "../$BU";chmod 700 "../$BU";cp $OPT . "../$BU/"
    elif [ $MODE = CPIOP ]; then
      mkdir -p "../$BU";chmod 700 "../$BU"
      $FIND|cpio --null --sparse -pvd ../$BU
    elif [ $MODE = CPIOI ]; then
      $FIND|cpio -ov --null | ( mkdircd "../$BU"&&cpio -i )
    elif [ $MODE = CPIOSSH ]; then
      $FIND|cpio -ov --null|ssh -C $HOST "( mkdircd \"$EXTP/$BU\"&&cpio -i )"
    elif [ $MODE = TARSSH ]; then
      (tar cvf - . )|ssh -C $HOST "( mkdircd \"$EXTP/$BU\"&& tar xvfp - )"
    elif [ $MODE = RSYNCSSH ]; then
      rsync -aHAXSv ./ "${HOST}:${EXTP}-${BKUP}-${TIME}"
    else
      echo "Any other idea to backup?"
      $FIND |xargs -0 -n 1 echo
    fi

    如上只是一個範例。在你自己使用指令碼之前，請閱讀此指令碼並且修改
    它。

    提示
   
    我把 bkup 儲存在我的 "/usr/local/bin" 目錄。我假定當需要臨時快照
    備份的時候，能夠在工作目錄不帶任何引數執行 bkup 命令。

    提示
   
    如果是要製作原始檔樹或者配置檔案樹的快照歷史的話，使用 git(7) (參
    見第 10.6.5 节 “記錄配置歷史的 Git”) 是更簡便並且也是空間高效的。

%

10.3. 資料安全基礎

    資料安全基礎設施是資料加密，訊息摘要和簽名工具的結合。

    表 10.6. 資料安全基礎工具列表

    +---------------------------------------------------------------+
    |    軟體包    |流行度 |大小 |   命令   |         說明          |
    |--------------+-------+-----+----------+-----------------------|
    |gnupg         |V:531, |787  |gpg(1)    |GNU 隱私衛士 - OpenPGP |
    |              |I:950  |     |          |加密和簽名工具         |
    |--------------+-------+-----+----------+-----------------------|
    |gpgv          |V:880, |859  |gpgv(1)   |GNU 隱私衛士 - 簽名驗證|
    |              |I:999  |     |          |工具                   |
    |--------------+-------+-----+----------+-----------------------|
    |paperkey      |V:1,   |58   |paperkey  |從 OpenPGP 私鑰裡面，僅|
    |              |I:13   |     |(1)       |僅匯出私密資訊         |
    |--------------+-------+-----+----------+-----------------------|
    |cryptsetup    |V:29,  |402  |cryptsetup|dm-crypto 塊裝置加密支 |
    |              |I:78   |     |(8), …    |援 LUKS 工具           |
    |--------------+-------+-----+----------+-----------------------|
    |ecryptfs-utils|V:3,   |460  |ecryptfs  |ecryptfs 堆疊檔案系統加|
    |              |I:5    |     |(7), …    |密工具                 |
    |--------------+-------+-----+----------+-----------------------|
    |coreutils     |V:891, |17478|md5sum(1) |計算與校驗 MD5 訊息摘要|
    |              |I:999  |     |          |                       |
    |--------------+-------+-----+----------+-----------------------|
    |coreutils     |V:891, |17478|sha1sum(1)|計算與校驗 SHA1 訊息摘 |
    |              |I:999  |     |          |要                     |
    |--------------+-------+-----+----------+-----------------------|
    |openssl       |V:794, |1465 |openssl   |使用 "openssl dgst"    |
    |              |I:993  |     |(1ssl)    |(OpenSSL)計算資訊摘要  |
    +---------------------------------------------------------------+


    參見第 9.8 节 “資料加密提示” 的 dm-crypto 和 ecryptfs，它們通過
    Linux 核心模組實現了自動資料加密架構。

%

10.3.1. GnuPG 金鑰管理

    如下是 GNU 隱私衛士基本的金鑰管理命令。

    表 10.7. GNU 隱私衛士金鑰管理命令的列表

    +---------------------------------------------------------------+
    |          命令          |                 說明                 |
    |------------------------+--------------------------------------|
    |gpg --gen-key           |生成一副新的金鑰對                    |
    |------------------------+--------------------------------------|
    |gpg --gen-revoke        |生成 my_user_ID 的一份吊銷證書        |
    |my_user_ID              |                                      |
    |------------------------+--------------------------------------|
    |gpg --edit-key user_ID  |互動式的編輯金鑰，輸入 "help" 來獲得幫|
    |                        |助資訊                                |
    |------------------------+--------------------------------------|
    |gpg -o file --export    |把所有的金鑰輸出到檔案                |
    |------------------------+--------------------------------------|
    |gpg --import file       |從檔案匯入金鑰                        |
    |------------------------+--------------------------------------|
    |gpg --send-keys user_ID |傳送 user_ID 的公鑰到公鑰伺服器       |
    |------------------------+--------------------------------------|
    |gpg --recv-keys user_ID |從公鑰伺服器下載 user_ID 的公鑰       |
    |------------------------+--------------------------------------|
    |gpg --list-keys user_ID |列出 user_ID 的所有金鑰               |
    |------------------------+--------------------------------------|
    |gpg --list-sigs user_ID |列出 user_ID 的簽字                   |
    |------------------------+--------------------------------------|
    |gpg --check-sigs user_ID|檢查 user_ID 金鑰簽字                 |
    |------------------------+--------------------------------------|
    |gpg --fingerprint       |檢查 user_ID 的指紋                   |
    |user_ID                 |                                      |
    |------------------------+--------------------------------------|
    |gpg --refresh-keys      |更新本地金鑰                          |
    +---------------------------------------------------------------+


    信任碼含義.

    表 10.8. 信任碼含義列表

    +----------------------------------+
    |程式碼|         信任描述          |
    |------+---------------------------|
    |-     |沒有所有者信任簽名/沒有計算|
    |------+---------------------------|
    |e     |信任計算失敗               |
    |------+---------------------------|
    |q     |沒有足夠的資訊用於計算     |
    |------+---------------------------|
    |n     |從不信任這個鍵             |
    |------+---------------------------|
    |m     |最低限度的信任             |
    |------+---------------------------|
    |f     |完全信任                   |
    |------+---------------------------|
    |u     |最終信任                   |
    +----------------------------------+


    如下命令上傳我的 "1DD8D791" 公鑰到主流的公鑰伺服器 "hkp://
    keys.gnupg.net"。

    $ gpg --keyserver hkp://keys.gnupg.net --send-keys 1DD8D791

    預設良好的公鑰伺服器在 "~/.gnupg/gpg.conf" （舊的位置在 "~/.gnupg
    /options"）檔案中設定，此檔案包含了以下資訊。

    keyserver hkp://keys.gnupg.net

    從鑰匙伺服器獲取無名鑰匙。

    $ gpg --list-sigs --with-colons | grep '^sig.*\[User ID not found\]' |\
      cut -d ':' -f 5| sort | uniq | xargs gpg --recv-keys

    有一個錯誤在 OpenPGP 公鑰伺服器 (先前的版本 0.9.6)，會將鍵中斷為
    2 個以上的子鍵。新的 gnupg (>1.2.1-2) 軟體包能夠處理這些中斷的子
    鍵。參見 gpg(1) 下的 "--repair-pks-subkey-bug" 選項.

%

10.3.2. 在檔案上使用 GnuPG

    這裡有一些在檔案上使用 GNU 隱私衛士命令的例子。

    表 10.9. 在檔案上使用的 GNU 隱私衛士的命令列表

    +---------------------------------------------------------------+
    |            命令             |              說明               |
    |-----------------------------+---------------------------------|
    |gpg -a -s file               |ASCII 封裝的簽名檔案 file.asc    |
    |-----------------------------+---------------------------------|
    |gpg --armor --sign file      |同上                             |
    |-----------------------------+---------------------------------|
    |gpg --clearsign file         |生成明文簽字資訊                 |
    |-----------------------------+---------------------------------|
    |gpg --clearsign file|mail    |傳送一份明文簽字到               |
    |foo@example.org              |foo@example.org                  |
    |-----------------------------+---------------------------------|
    |gpg --clearsign              |明文簽名的補丁檔案               |
    |--not-dash-escaped patchfile |                                 |
    |-----------------------------+---------------------------------|
    |gpg --verify file            |驗證明文檔案                     |
    |-----------------------------+---------------------------------|
    |gpg -o file.sig -b file      |生成一份分離的簽字               |
    |-----------------------------+---------------------------------|
    |gpg -o file.sig --detach-sig |同上                             |
    |file                         |                                 |
    |-----------------------------+---------------------------------|
    |gpg --verify file.sig file   |使用 file.sig 驗證檔案           |
    |-----------------------------+---------------------------------|
    |gpg -o crypt_file.gpg -r name|公鑰加密，從檔案裡面獲取名字，生 |
    |-e file                      |成二進位制的 crypt_file.gpg      |
    |-----------------------------+---------------------------------|
    |gpg -o crypt_file.gpg        |                                 |
    |--recipient name --encrypt   |同上                             |
    |file                         |                                 |
    |-----------------------------+---------------------------------|
    |gpg -o crypt_file.asc -a -r  |公鑰加密，從檔案中獲取名字，生成 |
    |name -e file                 |ASCII 封裝的 crypt_file.asc      |
    |-----------------------------+---------------------------------|
    |gpg -o crypt_file.gpg -c file|將檔案對稱加密到 crypt_file.gpg  |
    |-----------------------------+---------------------------------|
    |gpg -o crypt_file.gpg        |同上                             |
    |--symmetric file             |                                 |
    |-----------------------------+---------------------------------|
    |gpg -o crypt_file.asc -a -c  |對稱加密，從檔案到 ASCII 封裝的  |
    |file                         |crypt_file.asc                   |
    |-----------------------------+---------------------------------|
    |gpg -o file -d crypt_file.gpg|解密                             |
    |-r name                      |                                 |
    |-----------------------------+---------------------------------|
    |gpg -o file --decrypt        |同上                             |
    |crypt_file.gpg               |                                 |
    +---------------------------------------------------------------+


%

10.3.3. 在 Mutt 中使用 GnuPG

    增加下面內容到 "~/.muttrc"，在自動啟動時，避免一個慢的 GnuPG，在
    索引選單中按 "S" 來允許它使用。

    macro index S ":toggle pgp_verify_sig\n"
    set pgp_verify_sig=no

%

10.3.4. 在 vim 中使用 GnuPG

    gnupg 外掛可以讓你對副檔名為 ".gpg", ".asc", 和 ".ppg"的檔案可靠
    的執行 GnuPG.

    # aptitude install vim-scripts vim-addon-manager
    $ vim-addons install gnupg

%

10.3.5. MD5 校驗和

    md5sum(1) 提供了製作摘要檔案的一個工具,它使用 rfc1321 裡的方式製
    作摘要檔案.

    $ md5sum foo bar >baz.md5
    $ cat baz.md5
    d3b07384d113edec49eaa6238ad5ff00  foo
    c157a79031e1c40f85931829bc5fc552  bar
    $ md5sum -c baz.md5
    foo: OK
    bar: OK

    注意

    MD5 校驗和的 CPU 計算強度是比 GNU Privacy Guard (GnuPG) 加密簽名
    要少的.在通常情況下,只有頂級的摘要檔案才需要加密簽名來確保資料完
    整性.

%

10.4. 原始碼合併工具

    這裡有許多原始碼合併工具。如下的是我感興趣的工具。

    表 10.10. 原始碼合併工具列表

    +---------------------------------------------------------------+
    |  軟體包  |流行度|大小|   命令    |            說明            |
    |----------+------+----+-----------+----------------------------|
    |diffutils |V:871,|1598|diff(1)    |逐行比較兩個檔案            |
    |          |I:991 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |diffutils |V:871,|1598|diff3(1)   |逐行比較和合並三個檔案      |
    |          |I:991 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |vim       |V:106,|3231|vimdiff(1) |在 vim 中並排比較兩個檔案   |
    |          |I:398 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |patch     |V:99, |248 |patch(1)   |給原檔案打補丁              |
    |          |I:725 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |dpatch    |V:0,  |191 |dpatch(1)  |管理 Debian 軟體包的系列補丁|
    |          |I:11  |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |diffstat  |V:16, |73  |diffstat(1)|通過 diff 生成一個改變柱狀圖|
    |          |I:154 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |combinediff|從兩個增量補丁建立一個積累補|
    |          |I:150 |    |(1)        |丁                          |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |dehtmldiff |從一個 HTML 頁面提取出一個  |
    |          |I:150 |    |(1)        |diff                        |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |filterdiff |從一個 diff 檔案裡面提取或者|
    |          |I:150 |    |(1)        |排除 diff 檔案              |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |fixcvsdiff |修復由 CVS patch(1) 錯誤建立|
    |          |I:150 |    |(1)        |的 diff 檔案                |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |flipdiff(1)|交換兩個補丁的順序          |
    |          |I:150 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |grepdiff(1)|顯示哪些檔案是由匹配正則表示|
    |          |I:150 |    |           |式的補丁修改                |
    |----------+------+----+-----------+----------------------------|
    |          |V:18, |    |interdiff  |顯示在兩個統一格式 diff 檔案|
    |patchutils|I:150 |232 |(1)        |（基於同一個檔案的兩個不同  |
    |          |      |    |           |diff 檔案）之間的差異       |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |lsdiff(1)  |顯示哪些檔案由補丁修改      |
    |          |I:150 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |recountdiff|重新計算通用內容 diff 檔案的|
    |          |I:150 |    |(1)        |數量和偏移                  |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |rediff(1)  |修復手工編輯 diff 檔案的數量|
    |          |I:150 |    |           |和偏移                      |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |splitdiff  |隔離出增量補丁              |
    |          |I:150 |    |(1)        |                            |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |unwrapdiff |識別已經被分詞的補丁        |
    |          |I:150 |    |(1)        |                            |
    |----------+------+----+-----------+----------------------------|
    |wiggle    |V:0,  |174 |wiggle(1)  |應用被拒絕的補丁            |
    |          |I:0   |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |quilt     |V:3,  |788 |quilt(1)   |管理系列補丁                |
    |          |I:33  |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |meld      |V:14, |2972|meld(1)    |比較和移植檔案(GTK)         |
    |          |I:39  |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |dirdiff   |V:0,  |166 |dirdiff(1) |顯示目錄樹之間的不同並移植改|
    |          |I:2   |    |           |變                          |
    |----------+------+----+-----------+----------------------------|
    |docdiff   |V:0,  |555 |docdiff(1) |逐詞逐字的比較兩個檔案      |
    |          |I:0   |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |imediff   |V:0,  |157 |imediff(1) |全屏互動式兩路/三路合併工具 |
    |          |I:0   |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |makepatch |V:0,  |102 |makepatch  |生成擴充套件補丁檔案        |
    |          |I:0   |    |(1)        |                            |
    |----------+------+----+-----------+----------------------------|
    |makepatch |V:0,  |102 |applypatch |應用擴充套件補丁檔案        |
    |          |I:0   |    |(1)        |                            |
    |----------+------+----+-----------+----------------------------|
    |wdiff     |V:9,  |644 |wdiff(1)   |在文字檔案中，顯示單詞的不同|
    |          |I:72  |    |           |                            |
    +---------------------------------------------------------------+


%

10.4.1. 從原始碼檔案匯出差異

    下面的操作，匯出兩個原始檔的不同，並根據檔案的位置，建立通用 diff
    檔案"file.patch0" 或 "file.patch1".

    $ diff -u file.old file.new > file.patch0
    $ diff -u old/file new/file > file.patch1

%

10.4.2. 原始碼檔案移植更新

    diff 檔案（通常被叫作 patch 補丁檔案），用於傳送一個程式更新。通
    過下面的方式，接收到的部分，應用這個更新到其它檔案。

    $ patch -p0 file < file.patch0
    $ patch -p1 file < file.patch1

%

10.4.3. 通過三方移植進行更新

    如果一個原始碼，你有三個版本，你可以通過下面的方式，使用 diff3(1)
    高效執行三方移植。

    $ diff3 -m file.mine file.old file.yours > file

%

10.5. 版本控制系統

    如下是 Debian 系統上可用的版本控制系統(VCS) 的摘要。

    注意
   
    如果是剛接觸版本控制系統，你應該從 git 入門，git 人氣日益高漲。

    表 10.11. 版本控制系統工具列表

    +---------------------------------------------------------------+
    |          |      |     |          |VCS|                        |
    |  軟體包  |流行度|大小 |   工具   |型 |          描述          |
    |          |      |     |          |別 |                        |
    |----------+------+-----+----------+---+------------------------|
    |cssc      |V:0,  |2044 |CSSC      |本 |Unix SCCS (過時)的克隆  |
    |          |I:2   |     |          |地 |                        |
    |----------+------+-----+----------+---+------------------------|
    |rcs       |V:3,  |562  |RCS       |本 |"比 Unix SCCS 做的好"   |
    |          |I:19  |     |          |地 |                        |
    |----------+------+-----+----------+---+------------------------|
    |cvs       |V:5,  |4609 |CVS       |遠 |以前的遠端 VCS 標準     |
    |          |I:41  |     |          |端 |                        |
    |----------+------+-----+----------+---+------------------------|
    |subversion|V:20, |4858 |Subversion|遠 |”比 CVS 做的好“，遠端   |
    |          |I:109 |     |          |端 |VCS 的新標準            |
    |----------+------+-----+----------+---+------------------------|
    |          |V:305,|     |          |分 |用 C 寫的快速 DVCS (被  |
    |git       |I:478 |35040|Git       |散 |Linux 核心和其他專案使  |
    |          |      |     |          |式 |用)                     |
    |----------+------+-----+----------+---+------------------------|
    |          |V:8,  |     |          |分 |mercurial 主要是用      |
    |mercurial |I:48  |1053 |Mercurial |散 |Python 寫的還有一部分是 |
    |          |      |     |          |式 |C 寫的                  |
    |----------+------+-----+----------+---+------------------------|
    |          |V:2,  |     |          |分 |受 tla 啟發並且是用     |
    |bzr       |I:16  |28   |Bazaar    |散 |Python 寫的 DVCS (被    |
    |          |      |     |          |式 |Ubuntu 使用)            |
    |----------+------+-----+----------+---+------------------------|
    |          |V:0,  |     |          |分 |有智慧代數補丁的 DVCS（ |
    |darcs     |I:7   |23159|Darcs     |散 |慢）                    |
    |          |      |     |          |式 |                        |
    |----------+------+-----+----------+---+------------------------|
    |          |V:0,  |     |          |分 |主要由 Tom Lord 寫的    |
    |tla       |I:2   |1011 |GNU arch  |散 |DVCS (成為歷史的)       |
    |          |      |     |          |式 |                        |
    |----------+------+-----+----------+---+------------------------|
    |          |V:0,  |     |          |分 |                        |
    |monotone  |I:0   |5815 |Monotone  |散 |用 C++ 寫的 DVCS        |
    |          |      |     |          |式 |                        |
    |----------+------+-----+----------+---+------------------------|
    |tkcvs     |V:0,  |1498 |CVS, …    |遠 |VCS (CVS,Subversion,RCS)|
    |          |I:1   |     |          |端 |儲存庫樹的圖形介面顯示  |
    |----------+------+-----+----------+---+------------------------|
    |          |V:6,  |     |          |分 |VCS (Git) 儲存庫樹的圖形|
    |gitk      |I:42  |1723 |Git       |散 |介面顯示                |
    |          |      |     |          |式 |                        |
    +---------------------------------------------------------------+


    VCS 有時被認為是修訂控制系統 (RCS), 或者是軟體配置管理程式 (SCM)
    。

    像 Git 這樣的分散式 VCS 是現在正在使用的工具。參加那些已經存在的
    開源軟體的開發活動，掌握 CVS 和 Subversion 仍然是有用的。

    透過 Debian Salsa 服務，Debian 能夠提供免費的 Git 服務。在 https:
    //wiki.debian.org/Salsa 能找到它的說明文件。

    小心
   
    Debian 已經停止了其舊有的 alioth 服務，舊的 alioth 服務資料可以在
    alioth-archive 站點上以 tar 壓縮包的形式獲取。

    這裡有一些關於建立共享訪問 VCS 歸檔的基礎知識。

      * 使用 "umask 002" (參見第 1.2.4 节 “控制新建檔案的許可權：
        umask”)

      * 使得所有的 VCS 歸檔檔案屬於一個相關的組
   
      * 能夠在所有的 VCS 歸檔目錄設定組 ID（類似 BSD 的檔案建立方案，
        參見第 1.2.3 节 “文件系統權限”)

      * 使得屬於這個組的使用者能夠共享 VCS 歸檔

%

10.5.1. VCS 命令的比較

    這裡有原生 VCS 命令的簡單比較來提供大圖概要。典型的命令序列需要選
    項和引數。

    表 10.12. 本地 VCS 命令比較

    +---------------------------------------------------------------+
    |       Git        |  CVS  |Subversion|          功能           |
    |------------------+-------+----------+-------------------------|
    |git init          |cvs    |svn create|建立(本地)儲存庫         |
    |                  |init   |          |                         |
    |------------------+-------+----------+-------------------------|
    |-                 |cvs    |-         |登入遠端儲存庫           |
    |                  |login  |          |                         |
    |------------------+-------+----------+-------------------------|
    |git clone         |cvs co |svn co    |簽出遠端儲存庫到本地工作 |
    |                  |       |          |目錄樹                   |
    |------------------+-------+----------+-------------------------|
    |git pull          |cvs up |svn up    |通過合併遠端儲存庫來更新 |
    |                  |       |          |工作目錄樹               |
    |------------------+-------+----------+-------------------------|
    |git add .         |cvs add|svn add   |把工作目錄樹中的檔案新增 |
    |                  |       |          |到 VCS                   |
    |------------------+-------+----------+-------------------------|
    |git rm            |cvs rm |svn rm    |從 VCS 中移除工作目錄樹中|
    |                  |       |          |的檔案                   |
    |------------------+-------+----------+-------------------------|
    |-                 |cvs ci |svn ci    |提交改變到遠端儲存庫     |
    |------------------+-------+----------+-------------------------|
    |git commit -a     |-      |-         |提交改變到本地儲存庫     |
    |------------------+-------+----------+-------------------------|
    |git push          |-      |-         |通過本地儲存庫來更新遠端 |
    |                  |       |          |儲存庫                   |
    |------------------+-------+----------+-------------------------|
    |git status        |cvs    |svn status|從 VCS 中顯示工作目錄樹的|
    |                  |status |          |狀態                     |
    |------------------+-------+----------+-------------------------|
    |git diff          |cvs    |svn diff  |比較<參考儲存庫>和<工作目|
    |                  |diff   |          |錄樹>的差異              |
    |------------------+-------+----------+-------------------------|
    |git repack -a -d; |-      |-         |重新打包本地倉庫到一個單 |
    |git prune         |       |          |獨的包                   |
    |------------------+-------+----------+-------------------------|
    |gitk              |tkcvs  |tkcvs     |VCS 儲存庫樹的圖形介面顯 |
    |                  |       |          |示                       |
    +---------------------------------------------------------------+


    小心
   
    從命令列通過 "git-xyz" 直接呼叫 git 子命令的方式，從 2006 年早期
    開始就被取消。

    提示

    如果有一個可執行檔案 git-foo 在路徑環境變數 $PATH 裡面,在命令列輸
    入沒有中劃線的 "git foo"，則將呼叫 git-foo.這是 git 命令的一個特
    性.

    提示

    例如 tkcvs(1) 和 gitk(1) 這樣的圖形介面工具有助於追蹤檔案的修改歷
    史。許多公共的歸檔提供的用於瀏覽它們的儲存庫的 web 介面同樣是很有
    用的。

    提示

    Git 能夠直接在不同的 VCS 倉庫上工作，比如說 CVS 和 Subversion 提
    供的倉庫, 通過 git-cvs 和 git-svn 軟體包提供本地倉庫的本地改變.參
    見用於 CVS 使用者的 git 和第 10.6.4 节 “用於 Subversion 倉庫的
    Git”.

    提示
   
    Git 中的有些命令在 CVS 和 Subversion 中並沒有對應的命令：
    "fetch","rebase","cherry-pick", …

%

10.6. Git

    Git 可以用來做本地和遠程源代碼管理的任何事情。這意味着，你能夠在
    本地記錄源代碼修改，而不是必須要和遠程倉庫有網路連接。

%

10.6.1. 配置 Git 客戶端

    你可以在 "~/.gitconfig" 裏面設置幾個 Git 接下來需要使用的全局配置
    ，比如說你的名字和電子郵件地址。

    $ git config --global user.name "姓名"
    $ git config --global user.email 電子郵件地址

    如果你習慣使用 CVS 或 Subversion 命令，你也許希望設置如下幾個命令
    別名。

    $ git config --global alias.ci "commit -a"
    $ git config --global alias.co checkout

    你能夠通過如下方式檢查你的整體組態。

    $ git config --global --list

%

10.6.2. Git 參考

    看下面。

      * man 手冊： git(1) (/usr/share/doc/git-doc/git.html)

      * Git 用戶手冊 (/usr/share/doc/git-doc/user-manual.html)

      * git 介紹教程 (/usr/share/doc/git-doc/gittutorial.html)

      * git 介紹教程：第二部 (/usr/share/doc/git-doc/
        gittutorial-2.html)

      * GIT 每一天 20個左右的命令 (/usr/share/doc/git-doc/
        everyday.html)

      * CVS 用戶用 git (/usr/share/doc/git-doc/gitcvs-migration.html)

          + 描述了怎樣搭建服務，以及如何把老的數據從 CVS 遷移到 Git。

      * 其它在互聯網上存在的 git 資源

          + Git - SVN 碰撞課程

          + Git 魔術 (/usr/share/doc/gitmagic/html/index.html)

    git-gui(1) 和 gitk(1) 命令使 Git 變得非常容易使用。

    警告
   
    不要使用帶空格的標簽字符串。即使一些工具，如 gitk(1) 允許你使用它
    ，但會阻礙其它 git 命令。

%

10.6.3. Git 命令

    即使你的上游使用不同的版本控制系統，使用 git(1) 作爲本地活動的版
    本控制系統，仍然是一個好的主意，因爲 git 可以讓你在沒有上遊網路連
    接的情況下，管理你的本地源代碼樹拷貝。這裏有一些 git(1) 使用的包
    和命令。

    表 10.13. git 相關包和命令列表

    +---------------------------------------------------------------+
    |     軟體包     |流行度|大小 |       命令        |    說明     |
    |----------------+------+-----+-------------------+-------------|
    |git-doc         |I:15  |11762|N/A                |Git 官方文檔 |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |"Git 魔術"， |
    |gitmagic        |I:1   |721  |N/A                |易於理解的   |
    |                |      |     |                   |Git 手冊     |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |Git 快速、可 |
    |git             |V:305,|35040|git(7)             |擴展、分佈式 |
    |                |I:478 |     |                   |的版本控制系 |
    |                |      |     |                   |統           |
    |----------------+------+-----+-------------------+-------------|
    |                |V:6,  |     |                   |有歷史功能的 |
    |gitk            |I:42  |1723 |gitk(1)            |Git 圖形倉庫 |
    |                |      |     |                   |瀏覽器       |
    |----------------+------+-----+-------------------+-------------|
    |                |V:2,  |     |                   |Git 圖形界面 |
    |git-gui         |I:24  |2317 |git-gui(1)         |（無歷史功能 |
    |                |      |     |                   |）           |
    |----------------+------+-----+-------------------+-------------|
    |                |V:1,  |     |                   |從 Subversion|
    |git-svn         |I:22  |1144 |git-svnimport(1)   |導出數據，導 |
    |                |      |     |                   |入到 Git     |
    |----------------+------+-----+-------------------+-------------|
    |                |V:1,  |     |                   |在 Subversion|
    |git-svn         |I:22  |1144 |git-svn(1)         |和 Git 之間提|
    |                |      |     |                   |供雙向操作   |
    |----------------+------+-----+-------------------+-------------|
    |                |V:0,  |     |                   |從 CVS 導出數|
    |git-cvs         |I:10  |1279 |git-cvsimport(1)   |據，導入到   |
    |                |      |     |                   |Git          |
    |----------------+------+-----+-------------------+-------------|
    |                |V:0,  |     |git-cvsexportcommit|從 Git 中檢出|
    |git-cvs         |I:10  |1279 |(1)                |一個 CVS 的提|
    |                |      |     |                   |交           |
    |----------------+------+-----+-------------------+-------------|
    |git-cvs         |V:0,  |1279 |git-cvsserver(1)   |Git 的 CVS 服|
    |                |I:10  |     |                   |務模擬器     |
    |----------------+------+-----+-------------------+-------------|
    |                |V:0,  |     |                   |從 Git 用電子|
    |git-email       |I:11  |966  |git-send-email(1)  |郵件發送收集 |
    |                |      |     |                   |到的補丁     |
    |----------------+------+-----+-------------------+-------------|
    |stgit           |V:0,  |603  |stg(1)             |封裝的 git   |
    |                |I:0   |     |                   |(Python)     |
    |----------------+------+-----+-------------------+-------------|
    |git-buildpackage|V:2,  |4193 |git-buildpackage(1)|用 Git 自動製|
    |                |I:12  |     |                   |作 Debian 包 |
    |----------------+------+-----+-------------------+-------------|
    |                |V:0,  |     |                   |封裝的 git   |
    |guilt           |I:0   |146  |guilt(7)           |(SH/AWK/SED/ |
    |                |      |     |                   |…)           |
    +---------------------------------------------------------------+


    提示

    在 git(1) 下,你在本地分支下進行了許多提交，稍後你可以使用 "git
    rebase -i master" 之類的命令來重新組織改變歷史。這可以使你製作一
    個乾淨的改變歷史。參見 git-rebase(1) 和 git-cherry-pick(1).

    提示
   
    當你想要回到一個乾淨的工作目錄，並且不丟失工作目錄當前的狀態，你
    可以使用 "git stash".參見 git-stash(1).

%

10.6.4. 用於 Subversion 倉庫的 Git

    你可以把 "svn+ssh://svn.example.org/project/module/trunk" 的
    Subversion 典藏所檢出到在地 Git 典藏所的 "./dest" 並把修改提交回
    Subversion 典藏所。例如：

    $ git svn clone -s -rHEAD svn+ssh://svn.example.org/project dest
    $ cd dest
    ... 進行修改
    $ git commit -a
    ... 繼續在本地用 git 工作
    $ git svn dcommit

    提示
   
    使用 "-rHEAD" 能夠避免克隆從 Subversion 倉庫來的整個歷史內容。

%

10.6.5. 記錄配置歷史的 Git

    你可以使用 Git 工具來手工記錄按時間先後順序的配置歷史。這裏是一個
    例子，讓你練習記錄"/etc/apt/" 內容。

    $ cd /etc/apt/
    $ sudo git init
    $ sudo chmod 700 .git
    $ sudo git add .
    $ sudo git commit -a

    提交配置，描述此次提交。

    對配置文件進行修改。

    $ cd /etc/apt/
    $ sudo git commit -a

    提交配置，說明提交，繼續你的工作。

    $ cd /etc/apt/
    $ sudo gitk --all

    你有全部的配置歷史。

    注意
   
    sudo(8) 是需要用於配置數據文件，任意文件權限的情況。對於普通用戶
    的配置數據，你需要省略 sudo。

    注意
   
    在上面例子裏的 "chmod 700 .git" 命令，是用來保護文檔數據不被未經
    授權的讀訪問。

    提示
   
    要更加完整的建立配置歷史記錄，請參閱 etckeeper 包：第 9.2.10 节 “
    記錄配置檔案的變更” 。

%

10.7. CVS

    CVS 是一個古老的版本控制系統，它的出現早於 Subversion 和 Git。

    小心
   
    下面例子裡給出的 CVS 相關的連結許多已不存在。

    看下面。

      * cvs(1)

      * "/usr/share/doc/cvs/html-cvsclient"

      * "/usr/share/doc/cvs/html-info"

      * "/usr/share/doc/cvsbook"

      * "info cvs"

%

10.7.1. CVS 儲存庫的配置

    如下的配置將只允許 "src" 組的成員向 CVS 儲存庫提交修改，只允許
    "staff" 組的成員管理 CVS，這樣可以減少出錯的機會。

    # cd /var/lib; umask 002; mkdir cvs
    # export CVSROOT=/srv/cvs/project
    # cd $CVSROOT
    # chown root:src .
    # chmod 2775 .
    # cvs -d $CVSROOT init
    # cd CVSROOT
    # chown -R root:staff .
    # chmod 2775 .
    # touch val-tags
    # chmod 664 history val-tags
    # chown root:src history val-tags

    提示
   
    你可以改變 "$CVSROOT" 目錄為 "root:staff" 並把它的許可權設定為
    "3775"，這樣就可以限制建立新的專案。

%

10.7.2. 本地訪問 CVS

    預設的 CVS 儲存庫由 "$CVSROOT" 指定。如下將建立用於本地訪問的
    "$CVSROOT"。

    $ export CVSROOT=/srv/cvs/project

%

10.7.3. 使用 pserver 遠端訪問 CVS

    許多公共 CVS 伺服器可以透過 pserver 服務用 "anonymous" 賬戶遠端只
    讀訪問。例如，Debian 網站的內容曾經使用名為 webwml project 的倉庫
    經由 Debian alioth 服務的 CVS 服務進行維護。如下命令曾被用來建立
    用於遠端訪問該舊 CVS 倉庫的 "$CVSROOT"。

    $ export CVSROOT=:pserver:anonymous@anonscm.debian.org:/cvs/webwml
    $ cvs login

    注意
   
    因為 pserver 容易被竊聽攻擊並且是不安全的，所以寫訪問通常是被伺服
    器管理員禁用的。

%

10.7.4. 使用 ssh 遠端訪問 CVS

    如下所示的命令曾被用來配置“$CVS_RSH”和“$CVSROOT”變數，以此實現使
    用 SSH 遠端訪問舊的 Debian webwml 專案所使用的 CVS 倉庫。

    $ export CVS_RSH=ssh
    $ export CVSROOT=:ext:account@cvs.alioth.debian.org:/cvs/webwml

    你也可以使用 SSH 的公鑰認證，這能夠去除遠端密碼提示。

%

10.7.5. 往 CVS 匯入新的源

    按如下所示建立 "~/path/to/module1" 路徑下的新的本地源目錄樹。

    $ mkdir -p ~/path/to/module1; cd ~/path/to/module1

    把檔案新增到 "~/path/to/module1" 下的新的本地源目錄樹。

    使用如下的引數把檔案匯入到 CVS。

      * 模組名: "module1"

      * 提供商標籤： "Main-branch" （用於整個分支的標籤）

      * 釋出標籤： "Release-initial" （用於特定釋出版本的標籤）

    $ cd ~/path/to/module1
    $ cvs import -m "Start module1" module1 Main-branch Release-initial
    $ rm -Rf . # optional

%

10.7.6. CVS 儲存庫中的檔案許可權

    CVS 不會覆蓋當前的儲存庫檔案，只是用另外的檔案來替代它。因此，儲
    存庫目錄的寫許可權是很重要的。儲存庫位於 "/srv/cvs/project" 的
    "module1"，對於其下的每一個新模組而言，如果需要的話執行如下所示的
    來確保這種情況。

    # cd /srv/cvs/project
    # chown -R root:src module1
    # chmod -R ug+rwX   module1
    # chmod    2775     module1

%

10.7.7. CVS 工作流

    這裡有一個 CVS 典型工作流的例子。

    按如下所示檢視 "$CVSROOT" 所指的 CVS 專案上所有可用的模組。

    $ cvs rls
    CVSROOT
    module1
    module2
    ...

    按如下所示簽出 "module1" 到預設的目錄 "./module1"。

    $ cd ~/path/to
    $ cvs co module1
    $ cd module1

    按需修改裡面的內容。

    通過如下所示的命令來檢查改變，其作用相當於使用 "diff -u
    [repository] [local]"。

    $ cvs diff -u

    你發現自己改壞了 "file_to_undo" 檔案，而其他的檔案都是好的。

    按如下所示用 CVS 中的原始副本覆蓋 "file_to_undo" 檔案。

    $ cvs up -C file_to_undo

    按如下所示把更新了的本地源目錄樹儲存到 CVS。

    $ cvs ci -m "Describe change"

    按如下建立並新增 "file_to_add" 檔案到 CVS。

    $ vi file_to_add
    $ cvs add file_to_add
    $ cvs ci -m "Added file_to_add"

    按如下所示合併 CVS 中的最新版本。

    $ cvs up -d

    當心以 "C filename" 開頭的行，這意味著衝突的改變。

    檢視 ".#filename.version" 中未經修改的程式碼。

    查詢檔案中的 "<<<<<<<" 和 ">>>>>>>" 來獲得衝突的改變的資訊。

    按需更改檔案來解決衝突。

    按如下所示新增一個釋出標籤 "Release-1"。

    $ cvs ci -m "last commit for Release-1"
    $ cvs tag Release-1

    繼續編輯檔案。

    按如下所示移除釋出分支 "Release-1"。

    $ cvs tag -d Release-1

    按如下所示把改變簽入到 CVS。

    $ cvs ci -m "real last commit for Release-1"

    按如下所示給已經更新了的 CVS 主幹中的 HEAD 重新新增 "Release-1"
    釋出標籤。

    $ cvs tag Release-1

    按如下所示從 "Release-initial" 標籤指向的初始版本中建立一個帶有粘
    性標籤的 "Release-initial-bugfixes" 分支，並把它簽出到 "~/path/to
    /old" 目錄。

    $ cvs rtag -b -r Release-initial Release-initial-bugfixes module1
    $ cd ~/path/to
    $ cvs co -r Release-initial-bugfixes -d old module1
    $ cd old

    提示
   
    使用 "-D 2005-12-20" (ISO 8601 日期格式) 而不是 "-r
    Release-initial" 來指定某個特定日期作為分支點。

    在基於原始版本的有 "Release-initial-bugfixes" 粘性標籤的本地源目
    錄樹上工作。

    獨自在 "Release-initial-bugfixes" 分支上工作...直到有其他人加入到
    此分支。

    當要建立新的目錄時，按如下所示同步其他人在此分支上對檔案所做的修
    改。

    $ cvs up -d

    按需更改檔案來解決衝突。

    按如下所示把改變簽入到 CVS。

    $ cvs ci -m "checked into this branch"

    按如下所示更新本地目錄樹為主幹的最新版本，同時移除粘性標籤 ("-A")
    並且不使用關鍵字擴充套件 ("-kk")。

    $ cvs up -d -kk -A

    按如下所示通過合併 "Release-initial-bugfixes" 分支並且不使用關鍵
    字擴充套件的方式來更新本地目錄樹 (內容為主幹中的最新版本)。

    $ cvs up -d -kk -j Release-initial-bugfixes

    用編輯器來解決衝突。

    按如下所示把改變簽入到 CVS。

    $ cvs ci -m "merged Release-initial-bugfixes"

    按如下所示建立歸檔。

    $ cd ..
    $ mv old old-module1-bugfixes
    $ tar -cvzf old-module1-bugfixes.tar.gz old-module1-bugfixes
    $ rm -rf old-module1-bugfixes

    提示
   
    "cvs up" 命令能夠使用 "-d" 選項來建立新目錄並且可以使用 "-P" 選項
    來刪除空目錄。

    提示
   
    你可以通過形如 "cvs co module1/subdir" 這樣的列出其名的方式，來簽
    出 "module1" 的一個子目錄。

    表 10.14. 值得注意的 CVS 命令選項 (用作 cvs(1) 的第一個選項)

    +----------------------------+
    |選項|         說明          |
    |----+-----------------------|
    |-n  |測試，沒有影響         |
    |----+-----------------------|
    |-t  |顯示 cvs 活動步驟的資訊|
    +----------------------------+


%

10.7.8. CVS 中最新的檔案

    按如下所示使用 "tomorrow" 選項，就能得到 CVS 中的最新檔案。

    $ cvs ex -D tomorrow module_name

%

10.7.9. CVS 的管理

    按如下所示往 CVS 專案 (本地伺服器) 裡新增 "mx" 模組別名。

    $ export CVSROOT=/srv/cvs/project
    $ cvs co CVSROOT/modules
    $ cd CVSROOT
    $ echo "mx -a module1" >>modules
    $ cvs ci -m "Now mx is an alias for module1"
    $ cvs release -d .

    按如下所示，你可以從 CVS 中籤出 "module1" (別名為: "mx") 到 "new"
    目錄。

    $ cvs co -d new mx
    $ cd new

    注意
   
    為了執行上述步驟，你應當有合適的檔案許可權。

%

10.7.10. 用於 CVS 簽出時的可執行位

    當你從 CVS 中籤出文件時，它們的可執行許可權是保留的。

    當你發現在簽出的形如 "filename" 這樣的檔案中，可執行許可權有問題
    時，按如下所示在相應的 CVS 儲存庫中改變檔案的許可權來解決這個問題
    。

    # chmod ugo-x filename

%

10.8. Subversion

    Subversion 是在 Git 之前出現的舊的版本控制系統，但它出現在 CVS 之
    後。它缺少 CVS 和 Git 中的標籤和分支功能。

    你需要安裝 subversion，libapache2-mod-svn 和 subversion-tools 軟
    體包來搭建 Subversion 伺服器。

%

10.8.1. Subversion 儲存庫的配置

    subversion 軟體包通常不會自動建立儲存庫，所以你必須手動搭建它。儲
    存庫可能的位置是在 "/srv/svn/project"。

    按如下所示建立目錄。

    # mkdir -p        /srv/svn/project

    按如下所示建立儲存庫資料庫。

    # svnadmin create /srv/svn/project

%

10.8.2. 通過 Apache2 伺服器訪問 Subversion

    如果只是用 Apache2 伺服器訪問 Subversion 儲存庫，你只需按如下所示
    的使儲存庫只是對於 WWW 伺服器是可寫的。

    # chown -R www-data:www-data /srv/svn/project

    在 "/etc/apache2/mods-available/dav_svn.conf" 中新增 (或取消註釋)
    如下所示的來允許通過使用者認證訪問儲存庫。

    <Location /project>
      DAV svn
      SVNPath /srv/svn/project
      AuthType Basic
      AuthName "Subversion repository"
      AuthUserFile /etc/subversion/passwd
    <LimitExcept GET PROPFIND OPTIONS REPORT>
        Require valid-user
    </LimitExcept>
    </Location>

    用如下所示的命令建立使用者認證檔案。

    # htpasswd2 -c /etc/subversion/passwd some-username

    重啟 Apache2。

    通過 "http://localhost/project" 和 "http://example.com/project"
    URL 來訪問 svn(1) 中的 Subversion 儲存庫(假設你的 web 伺服器的
    URL 為 "http://example.com/")。

%

10.8.3. 按組本地訪問 Subversion

    如下所示將建立使用者組，例如 project，可以本地訪問的 Subversion
    儲存庫。

    # chmod  2775     /srv/svn/project
    # chown -R root:src /srv/svn/project
    # chmod -R ug+rwX   /srv/svn/project

    屬於 project 組的本地使用者可以訪問在 "file:///localhost/srv/svn/
    project" 或 file:///srv/svn/project" 下 svn(1) 中的新 Subversion
    儲存庫。你必須在 "umask 002" 下執行諸如 svn, svnserve, svnlook 和
    svnadmin 命令，來確保使用者組可以訪問。

%

10.8.4. 通過 SSH 遠端訪問 Subversion

    使用者組可以訪問的 Subversion 儲存庫的 URL 為 "example.com:/srv/
    svn/project"。至於 SSH 訪問，你能夠在 svn(1) 中的 "svn+ssh://
    example.com:/srv/svn/project" URL 訪問它。

%

10.8.5. Subversion 目錄結構

    對於 Subversion 來說，許多專案使用類似如下的目錄樹來彌補它的分支
    和標籤的不足。

      ----- module1
        |   |-- branches
        |   |-- tags
        |   |   |-- release-1.0
        |   |   `-- release-2.0
        |   |
        |   `-- trunk
        |       |-- file1
        |       |-- file2
        |       `-- file3
        |
        `-- module2

    提示
   
    你必須使用 "svn copy …" 命令來標記分支和標籤。這確保 Subversion
    正確的記錄檔案的修改歷史同時節省儲存空間。

%

10.8.6. 往 Subversion 裡匯入一個新的源

    按如下所示建立 "~/path/to/module1" 路徑下的新的本地源目錄樹。

    $ mkdir -p ~/path/to/module1; cd ~/path/to/module1

    把檔案新增到 "~/path/to/module1" 下的新的本地源目錄樹。

    把它匯入到 Subversion 的時候帶有以下的引數。

      * 模組名: "module1"

      * Subversion 位置 URL: "file:///srv/svn/project"
   
      * Subversion 目錄: "module1/trunk"

      * Subversion 標籤: "module1/tags/Release-initial"

    $ cd ~/path/to/module1
    $ svn import file:///srv/svn/project/module1/trunk -m "Start module1"
    $ svn cp file:///srv/svn/project/module1/trunk file:///srv/svn/project/module1/tags/Release-initial

    或者，如下所示。

    $ svn import ~/path/to/module1 file:///srv/svn/project/module1/trunk -m "Start module1"
    $ svn cp file:///srv/svn/project/module1/trunk file:///srv/svn/project/module1/tags/Release-initial

    提示
   
    你能夠用像 "http://…" 和 "svn+ssh://..." 這樣格式的 URL 來替代
    "file:///…" URL。

%

10.8.7. Subversion 工作流

    這裡給出使用 Subversion 及其原生客戶端的典型工作流示例。

    提示

    git-svn 軟體包提供的客戶端命令，可以作為使用 git 命令的
    Subversion 工作流的一個另外選擇。參見第 10.6.4 节 “用於
    Subversion 倉庫的 Git”.

    檢視如下所示的 URL "file:///srv/svn/project" 指向的 Subversion 專
    案上所有可用的模組。

    $ svn list file:///srv/svn/project
    module1
    module2
    ...

    按如下所示的檢出 "module1/trunk" 到 "module1" 目錄。

    $ cd ~/path/to
    $ svn co file:///srv/svn/project/module1/trunk module1
    $ cd module1

    按需修改裡面的內容。

    通過如下所示的命令來檢查改變，其作用相當於使用 "diff -u
    [repository] [local]"。

    $ svn diff

    你發現自己改壞了 "file_to_undo" 檔案，而其他的檔案都是好的。

    按如下所示的用 Subversion 中的乾淨副本來覆蓋 "file_to_undo" 檔案
    。

    $ svn revert file_to_undo

    按如下所示的把已經更新了的本地源目錄樹儲存到 Subversion。

    $ svn ci -m "Describe change"

    按如下所示的建立 "file_to_add" 檔案並把它新增到 Subversion。

    $ vi file_to_add
    $ svn add file_to_add
    $ svn ci -m "Added file_to_add"

    按如下所示更新工作拷貝到 Subversion 中的最新版本。

    $ svn up

    當心以 "C filename" 開頭的行，這意味著衝突的改變。

    檢視檔案中未經修改的程式碼，例如 "filename.r6", "filename.r9" 和
    "filename.mine" 檔案。

    查詢檔案中的 "<<<<<<<" 和 ">>>>>>>" 來獲得衝突的改變的資訊。

    按需更改檔案來解決衝突。

    按如下所示新增一個釋出標籤 "Release-1"。

    $ svn ci -m "last commit for Release-1"
    $ svn cp file:///srv/svn/project/module1/trunk file:///srv/svn/project/module1/tags/Release-1

    繼續編輯檔案。

    按如下所示移除釋出分支 "Release-1"。

    $ svn rm file:///srv/svn/project/module1/tags/Release-1

    按如下所示把改變簽入到 Subversion。

    $ svn ci -m "real last commit for Release-1"

    按如下所示在最新的 Subversion 主幹的基礎上重新添加發布分支
    "Release-1"。

    $ svn cp file:///srv/svn/project/module1/trunk file:///srv/svn/project/module1/tags/Release-1

    按如下所示在 "module1/tags/Release-initial" 路徑指定的最初版本的
    基礎上再建立一個路徑為 "module1/branches/
    Release-initial-bugfixes" 的分支，並把它簽出到 "~/path/to/old" 目
    錄。

    $ svn cp file:///srv/svn/project/module1/tags/Release-initial file:///srv/svn/project/module1/branches/Release-initial-bugfixes
    $ cd ~/path/to
    $ svn co file:///srv/svn/project/module1/branches/Release-initial-bugfixes old
    $ cd old

    提示
   
    使用 "module1/trunk@{2005-12-20}" (ISO 8601 日期格式) 而不是
    "module1/tags/Release-initial" 來指定分支建立時候的日期。

    在基於原始版本的 "Release-initial-bugfixes" 分支的本地源目錄樹上
    工作。

    獨自在 "Release-initial-bugfixes" 分支上工作...直到有其他人加入到
    此分支。

    按如下所示同步其他人在此分支上改動的檔案。

    $ svn up

    按需更改檔案來解決衝突。

    按如下所示把改變簽入到 Subversion。

    $ svn ci -m "checked into this branch"

    按如下所示更新本地目錄樹為主幹的最新版本。

    $ svn switch file:///srv/svn/project/module1/trunk

    按如下所示通過合併 "Release-initial-bugfixes" 分支的方式來更新本
    地目錄樹 (內容為主幹的最新版本)。

    $ svn merge file:///srv/svn/project/module1/branches/Release-initial-bugfixes

    用編輯器來解決衝突。

    按如下所示把改變簽入到 Subversion。

    $ svn ci -m "merged Release-initial-bugfixes"

    按如下所示建立歸檔。

    $ cd ..
    $ mv old old-module1-bugfixes
    $ tar -cvzf old-module1-bugfixes.tar.gz old-module1-bugfixes
    $ rm -rf old-module1-bugfixes

    提示
   
    你能夠用像 "http://…" 和 "svn+ssh://..." 這樣格式的 URL 來替代
    "file:///…" URL。

    提示
   
    通過 "svn co file:///srv/svn/project/module1/trunk/subdir module1
    /subdir" 等命令，你可以只簽出 "module1" 的一個子目錄。

    表 10.15. 值得注意的 Subversion 命令選項 (使用時作為 svn(1) 的第
    一個引數)

    +---------------------------------+
    |  選項   |         說明          |
    |---------+-----------------------|
    |--dry-run|測試，沒有影響         |
    |---------+-----------------------|
    |-v       |顯示 svn 活動的詳細資訊|
    +---------------------------------+


第 11 章 資料轉換

    下面是關於Debian 系統上可用的格式轉化工具及其相關提示的資訊。

    基於標準的工具，是非常好用的，但支援的專有資料格式有限.

%

11.1. 文字資料轉換工具

    如下是文字資料轉換工具。

    表 11.1. 文字資料轉化工具列表

    +---------------------------------------------------------------+
    | 軟體包 |流行度|大小 |關鍵 |               說明                |
    |        |      |     | 詞  |                                   |
    |--------+------+-----+-----+-----------------------------------|
    |        |V:935,|     |字符 |使用 iconv(1) 的不同語言環境（     |
    |libc6   |I:999 |12771|集   |locale）之間的文字編碼轉換器 (基礎 |
    |        |      |     |     |的)                                |
    |--------+------+-----+-----+-----------------------------------|
    |        |V:3,  |     |字符 |不同語言環境（locale）之間的文字編 |
    |recode  |I:25  |603  |集+換|碼轉換器（多功能的，更多別名和特性 |
    |        |      |     |行   |）                                 |
    |--------+------+-----+-----+-----------------------------------|
    |konwert |V:1,  |134  |字符 |不同語言環境（locale）之間的文字編 |
    |        |I:54  |     |集   |碼轉換器（高檔的）                 |
    |--------+------+-----+-----+-----------------------------------|
    |nkf     |V:0,  |358  |字符 |日語字符集翻譯                     |
    |        |I:11  |     |集   |                                   |
    |--------+------+-----+-----+-----------------------------------|
    |tcs     |V:0,  |518  |字符 |字符集翻譯                         |
    |        |I:0   |     |集   |                                   |
    |--------+------+-----+-----+-----------------------------------|
    |unaccent|V:0,  |29   |字符 |代替重音字元，使用和它們相當的非重 |
    |        |I:0   |     |集   |音字元                             |
    |--------+------+-----+-----+-----------------------------------|
    |tofrodos|V:1,  |55   |換行 |在 DOS 和 Unix 之間的文字格式轉換: |
    |        |I:25  |     |     |fromdos(1) 和 todos(1)             |
    |--------+------+-----+-----+-----------------------------------|
    |macutils|V:0,  |298  |換行 |在 Macintosh 和 Unix 之間的文字格式|
    |        |I:1   |     |     |轉換: frommac(1) 和 tomac(1)       |
    +---------------------------------------------------------------+


%

11.1.1. 用 iconv 命令來轉換文字檔案

    提示
   
    iconv(1) 是 libc6 軟體包的一部分並且它可以在類 Unix 的系統上轉換
    字元的編碼。

    你能夠通過如下的命令用 iconv(1) 來轉換文字檔案的編碼。

    $ iconv -f encoding1 -t encoding2 input.txt >output.txt

    編碼值是大小寫不敏感的，且會在匹配時忽略“-”和“_”。可以使用“iconv
    -l”命令檢查支援的編碼。

    表 11.2. 編碼值和用法的列表

    +---------------------------------------------------------------+
    |  編碼值   |                       用法                        |
    |-----------+---------------------------------------------------|
    |ASCII      |美國資訊交換標準程式碼，7位程式碼不帶重音符號      |
    |-----------+---------------------------------------------------|
    |UTF-8      |用於所有現代作業系統的多語言標準                   |
    |-----------+---------------------------------------------------|
    |ISO-8859-1 |舊的西歐語言標準，ASCII + 重音符號                 |
    |-----------+---------------------------------------------------|
    |ISO-8859-2 |舊的東歐語言標準，ASCII + 重音符號                 |
    |-----------+---------------------------------------------------|
    |ISO-8859-15|舊的帶有歐元符號的西歐語言標準（ISO-8859-1）       |
    |-----------+---------------------------------------------------|
    |CP850      |code page 850，用於西歐語言的微軟 DOS 的帶有圖形的 |
    |           |字元，ISO-8859-1 的變體                            |
    |-----------+---------------------------------------------------|
    |CP932      |code page 932, 日語 Microsoft Windows 的 Shift-JIS |
    |           |變體                                               |
    |-----------+---------------------------------------------------|
    |CP936      |code page 936，用於簡體中文的微軟作業系統風格的    |
    |           |GB2312，GBK 或者 GB18030 的變體                    |
    |-----------+---------------------------------------------------|
    |CP949      |code page 949，用於韓語的微軟作業系統風格的 EUC-KR |
    |           |或者 Unified Hangul Code 的變體                    |
    |-----------+---------------------------------------------------|
    |CP950      |code page 950，用於繁體中文的微軟作業系統風格的    |
    |           |Big5 的變體                                        |
    |-----------+---------------------------------------------------|
    |CP1251     |code page 1251，用於西裡爾字母的微軟作業系統風格的 |
    |           |編碼                                               |
    |-----------+---------------------------------------------------|
    |CP1252     |code page 1252，用於西歐語言的微軟作業系統風格的   |
    |           |ISO-8859-15 的變體                                 |
    |-----------+---------------------------------------------------|
    |KOI8-R     |用於西裡爾字母的舊俄語 UNIX 標準                   |
    |-----------+---------------------------------------------------|
    |ISO-2022-JP|日文郵件的標準編碼，只使用 7 位位元組              |
    |-----------+---------------------------------------------------|
    |eucJP      |老的日文 UNIX 標準的 8 位位元組，和 Shift-JIS 完全 |
    |           |不同                                               |
    |-----------+---------------------------------------------------|
    |Shift-JIS  |日文 JIS X 0208 附錄 1 標準 (參見 CP932)           |
    +---------------------------------------------------------------+


    注意
   
    一些編碼只支援資料轉換，它不能作為語言環境的值 (第 8.4.1 节 “編碼
    的基礎知識”)。

    像 ASCII 和 ISO-8859 這樣適用於單位元組的字符集，字元編碼和字符集
    幾乎指的是同一件事情。

    對於多字元的字符集，比如說，用於日文的 JIS X 0213，或用於差不多所
    有語言的 Universal Character Set (UCS, Unicode, ISO-10646-1) , 有
    多種編碼方案來序列化它們的位元組資料。

      * 日文的 EUC 和 ISO/IEC 2022 (也被稱為 JIS X 0202)
   
      * Unicode 的 UTF-8、UTF-16/UCS-2 和 UTF-32/UCS-4 編碼

    對於以上這些，字符集和字元編碼之間有著明顯的區別。

    對某些計算機廠家而言，code page 是作為字元編碼表的同義詞來使用。

    注意

    請注意，大部分編碼系統共享 ASCII 的 7 位字元的同樣編碼，但也有一
    些列外。如果你從通常所說的 shift-JIS 編碼格式，轉化老的日文 C 語
    言程式和 URL 資料，到 UTF-8 格式,你需要使用 "CP932" 作為編碼名來
    代替 "shift-JIS" 來得到期望的結果： 0x5C → "\" 和 0x7E → "~".否則
    ，這些將被轉化為錯誤的字元。

    提示

    recode(1) 也可能被使用並且不僅僅是 iconv(1)，fromdos(1)，todos(1)
    ，frommac(1) 和 tomac(1) 功能的結合。想要獲得更多資訊，請參見
    "info recode"。

%

11.1.2. 用 iconv 檢查檔案是不是 UTF-8 編碼

    你能夠通過如下命令用 iconv(1) 來檢查一個文字檔案是不是用 UTF-8 編
    碼的。

    $ iconv -f utf8 -t utf8 input.txt >/dev/null || echo "non-UTF-8 found"

    提示
   
    在上面的例子中使用 "--verbose" 引數來找到第一個 non-UTF-8 字元。

%

11.1.3. 使用 iconv 轉換檔名

    這裡是一個示例腳步，在同一目錄下，將在老的作業系統系統下建立的檔
    名編碼，轉換為現代 UTF-8.

    #!/bin/sh
    ENCDN=iso-8859-1
    for x in *;
     do
     mv "$x" "$(echo "$x" | iconv -f $ENCDN -t utf-8)"
    done

    "$ENCDN" 變數定義了在老的作業系統下，檔名使用的原始編碼，見表
     11.2 “編碼值和用法的列表”.

    對於更加複雜的情況，請使用適當的編碼作為 mount(8) 的選項(參見第
     8.4.6 节 “檔名編碼”) 來掛載包含有這樣檔名的檔案系統（比如說，磁
    碟上的一個分割槽），使用 "cp -a" 命令來拷貝它的整個內容到另外一個
    使用 UTF-8 掛載的檔案系統上。

%

11.1.4. 換行符轉換

    文字檔案的格式，特別是行尾（換行符）編碼，有平臺獨立性。

    表 11.3. 不同平臺的換行符樣式列表

    +-----------------------------------------------------+
    |      平臺      |換行符編碼|控制碼|十進位制|16 進位制|
    |----------------+----------+------+--------+---------|
    |Debian (unix)   |LF        |^J    |10      |0A       |
    |----------------+----------+------+--------+---------|
    |MSDOS 和 Windows|CR-LF     |^M^J  |13 10   |0D 0A    |
    |----------------+----------+------+--------+---------|
    |蘋果的 Macintosh|CR        |^M    |13      |0D       |
    +-----------------------------------------------------+


    換行符轉換程式, fromdos(1), todos(1), frommac(1), 和 tomac(1), 是
    相當方便. recode(1) 也是有用的。

    注意

    在 Debian 系統上的一些資料，如 python-moinmoin 軟體包的 wiki 頁面
    資料，使用 MSDOS 式樣的 CR-LF 作為換行符編碼。所以，上面的規則僅
    僅是一個通用規則。

    注意
   
    大部分編輯器 (比如： vim, emacs, gedit, …) 能夠透明處理 MSDOS 式
    樣的換行符檔案。

    提示

    對於混合 MSDOS 和 Unix 式樣的檔案，統一到 MSDOS 換行符式樣，使用
    "sed -e '/\r$/!s/$/\r/'" 代替 todos(1) 比較好。 (例如，在使用 
    diff3(1)移植兩個 MSDOS 式樣的檔案後.)這是因為 todos 給所有的行增
    加 CR.

%

11.1.5. TAB 轉換

    這裡有一些轉換 TAB 程式碼的專業工具。

    表 11.4. bsdmainutils 和 coreutils 包中的用於轉換 TAB 的命令列表

    +-----------------------------------------------+
    |          功能          |bsdmainutils|coreutils|
    |------------------------+------------+---------|
    |把製表符擴充套件成空格  |"col -x"    |expand   |
    |------------------------+------------+---------|
    |不把空格擴充套件成製表符|"col -h"    |unexpand |
    +-----------------------------------------------+


    indent 包中的 indent(1) 命令能夠重新格式化 C 程式中的空格。

    例如 vim 和 emacs 這樣的編輯軟體可以被用來擴充套件 TAB。就拿 vim
    來說，你能夠按順序輸入 ":set expandtab" 和 ":%retab" 命令來擴充套
    件 TAB。你也可以按順序輸入 :%set noexpandtab" 和 ":%retab" 命令來
    複原。

%

11.1.6. 帶有自動轉換功能的編輯器

    像 vim 這樣的現代智慧編輯器軟體是相當聰明的並且能夠處理任何編碼系
    統以及任何檔案格式。你應該在支援 UTF-8 編碼的控制檯上並在 UTF-8
    環境下使用這些編輯器來獲得最好的相容性。

    以 latin1（iso-8859-1）編碼儲存的舊西歐語言的 Unix 文字檔案，
    “u-file.txt”，能通過如下所示的用 vim 輕易的編輯。

    $ vim u-file.txt

    這是可能的因為 vim 的檔案編碼自動檢測機制先假定檔案是 UTF-8 編碼
    ，如果失敗了，則假定它是 latin1 編碼。

    以 latin2（iso-8859-2）編碼儲存的舊波蘭語的 Unix 文字檔案，
    “pu-file.txt”，能通過如下所示的用 vim 編輯。

    $ vim '+e ++enc=latin2 pu-file.txt'

    以 eucJP 編碼儲存的舊日語的 Unix 文字檔案，"ju-file.txt"，能通過
    如下所示的用 vim 編輯。

    $ vim '+e ++enc=eucJP ju-file.txt'

    以所謂的 shift-JIS 編碼 (更確切的說法是：CP932) 儲存的舊日語
    MS-Windows 文字檔案，"jw-file.txt"，能通過如下所示的用 vim 編輯。

    $ vim '+e ++enc=CP932 ++ff=dos jw-file.txt'

    當一個檔案用 vim 開啟的時候帶有 "++enc" 和 "++ff" 選項，在 Vim 命
    令列輸入 ":w" 命令會以原格式儲存檔案並且會覆蓋原檔案。你也可以在
    Vim 命令列指定儲存檔名及其格式，例如，":w ++enc=utf8 new.txt"。

    請查閱 vim 線上幫助中的 mbyte.txt，"多位元組文字支援"和表 11.2 “
    編碼值和用法的列表”來獲得 "++enc" 使用的本地值的資訊。

    emacs 家族的程式能夠實現同樣的功能。

%

11.1.7. 提取純文字

    如下所示讀入 web 頁面並把它轉化成文字檔案。當從 Web 中拷貝配置或
    者是在 web 頁面中應用類似 grep(1) 的基礎 Unix 文字工具時，以下命
    令是非常有用的。

    $ w3m -dump http://www.remote-site.com/help-info.html >textfile

    同樣，你可以使用如下所示的工具從其他格式提取純文字資料。

    表 11.5. 用於提取純文字資料的工具列表

    +---------------------------------------------------------------+
    | 軟體包  |流行度|大小|    關鍵詞     |          功能           |
    |---------+------+----+---------------+-------------------------|
    |w3m      |V:31, |2289|html→text      |用 "w3m -dump" 命令把    |
    |         |I:284 |    |               |HTML 轉化為文字的轉換器  |
    |---------+------+----+---------------+-------------------------|
    |html2text|V:3,  |274 |html→text      |高階的 HTML 到文字檔案的 |
    |         |I:33  |    |               |轉換器 (ISO8859-1)       |
    |---------+------+----+---------------+-------------------------|
    |lynx     |V:13, |1948|html→text      |用 "lynx -dump" 命令把   |
    |         |I:98  |    |               |HTML 轉化為文字的轉化器  |
    |---------+------+----+---------------+-------------------------|
    |elinks   |V:6,  |1767|html→text      |用 "elinks -dump" 命令把 |
    |         |I:28  |    |               |HTML 轉化為文字的轉換器  |
    |---------+------+----+---------------+-------------------------|
    |links    |V:6,  |2249|html→text      |用 "links -dump" 命令把  |
    |         |I:39  |    |               |HTML 轉化為文字的轉換器  |
    |---------+------+----+---------------+-------------------------|
    |links2   |V:1,  |5417|html→text      |用 "links2 -dump" 命令把 |
    |         |I:15  |    |               |HTML 轉化為文字的轉換器  |
    |---------+------+----+---------------+-------------------------|
    |antiword |V:2,  |589 |MSWord→text,ps |轉化 MSWord 檔案到純文字 |
    |         |I:10  |    |               |或 ps 檔案               |
    |---------+------+----+---------------+-------------------------|
    |catdoc   |V:27, |675 |MSWord→text,TeX|轉化 MSWord 檔案到純文字 |
    |         |I:127 |    |               |或 TeX檔案               |
    |---------+------+----+---------------+-------------------------|
    |pstotext |V:1,  |126 |ps/pdf→text    |從 PostScript 和 PDF 檔案|
    |         |I:3   |    |               |裡匯出文字               |
    |---------+------+----+---------------+-------------------------|
    |unhtml   |V:0,  |43  |html→text      |從一個 HTML 檔案裡面刪除 |
    |         |I:0   |    |               |標記標籤                 |
    |---------+------+----+---------------+-------------------------|
    |odt2txt  |V:1,  |60  |odt→text       |從開放文件格式到文字格式 |
    |         |I:7   |    |               |的轉化器                 |
    +---------------------------------------------------------------+


%

11.1.8. 高亮並格式化純文字資料

    你可以通過如下所示的來高亮並格式化純文字資料。

    表 11.6. 高亮純文字資料的工具列表

    +---------------------------------------------------------------+
    |     軟體包     |流行 | 大小 | 關鍵詞  |         說明          |
    |                | 度  |      |         |                       |
    |----------------+-----+------+---------+-----------------------|
    |                |     |      |         |用 ":source $VIMRUNTIME|
    |vim-runtime     |V:19,|31723 |高亮     |/syntax/html.vim" Vim  |
    |                |I:435|      |         |巨集命令轉化原始碼到   |
    |                |     |      |         |HTML                   |
    |----------------+-----+------+---------+-----------------------|
    |cxref           |V:0, |1193  |c→html   |從 C 程式到 latex 和   |
    |                |I:0  |      |         |HTML 的轉換器（C語言） |
    |----------------+-----+------+---------+-----------------------|
    |src2tex         |V:0, |622   |高亮     |轉換許多原始碼到 TeX（C|
    |                |I:0  |      |         |語言）                 |
    |----------------+-----+------+---------+-----------------------|
    |                |     |      |         |轉換原始碼到帶有高亮顯 |
    |                |V:0, |      |         |示的 HTML, XHTML,      |
    |source-highlight|I:7  |1992  |高亮     |LaTeX, Texinfo, ANSI 顏|
    |                |     |      |         |色轉義序列和 DocBook 檔|
    |                |     |      |         |案 (C++)               |
    |----------------+-----+------+---------+-----------------------|
    |                |     |      |         |轉化許多原始碼到帶有高 |
    |highlight       |V:1, |1083  |高亮     |亮顯示的 HTML, XHTML,  |
    |                |I:12 |      |         |RTF, LaTeX, TeX or     |
    |                |     |      |         |XSL-FO 檔案。(C++)     |
    |----------------+-----+------+---------+-----------------------|
    |grc             |V:0, |190   |text→有顏|用於任何文字的通用顏色 |
    |                |I:3  |      |色的     |生成器 (Python)        |
    |----------------+-----+------+---------+-----------------------|
    |txt2html        |V:0, |259   |text→html|文字到 HTML 轉換器（   |
    |                |I:3  |      |         |Perl）                 |
    |----------------+-----+------+---------+-----------------------|
    |markdown        |V:0, |57    |text→html|markdown 文字文件到 (X)|
    |                |I:8  |      |         |HTML (Perl)            |
    |----------------+-----+------+---------+-----------------------|
    |asciidoc        |I:13 |81    |text→any |AsciiDoc 文字文件到 XML|
    |                |     |      |         |/HTML (Python)         |
    |----------------+-----+------+---------+-----------------------|
    |pandoc          |V:8, |151714|text→any |通用標記轉化器         |
    |                |I:47 |      |         |(Haskell)              |
    |----------------+-----+------+---------+-----------------------|
    |python-docutils |V:12,|1771  |text→any |重構文字文件到 XML     |
    |                |I:133|      |         |(Python)               |
    |----------------+-----+------+---------+-----------------------|
    |                |     |      |         |轉化文字到 HTML, SGML, |
    |txt2tags        |V:0, |342   |text→any |LaTeX, man page,       |
    |                |I:1  |      |         |MoinMoin, Magic Point  |
    |                |     |      |         |and PageMaker (Python) |
    |----------------+-----+------+---------+-----------------------|
    |udo             |V:0, |583   |text→any |通用的文字檔案轉化工具 |
    |                |I:0  |      |         |(C 語言)               |
    |----------------+-----+------+---------+-----------------------|
    |stx2any         |V:0, |264   |text→any |結構化純文字到其他格式 |
    |                |I:0  |      |         |的文件轉化器 (m4)      |
    |----------------+-----+------+---------+-----------------------|
    |rest2web        |V:0, |527   |text→html|重構文字到 html 的文件 |
    |                |I:0  |      |         |轉化器 (Python)        |
    |----------------+-----+------+---------+-----------------------|
    |aft             |V:0, |235   |text→any |"自由格式"的檔案準備系 |
    |                |I:0  |      |         |統 (Perl)              |
    |----------------+-----+------+---------+-----------------------|
    |yodl            |V:0, |610   |text→any |用預文件語言工具來處理 |
    |                |I:0  |      |         |檔案 (C 語言)          |
    |----------------+-----+------+---------+-----------------------|
    |sdf             |V:0, |1445  |text→any |簡單的文件剖析器 (Perl)|
    |                |I:0  |      |         |                       |
    |----------------+-----+------+---------+-----------------------|
    |sisu            |V:0, |5344  |text→any |文件組織、排版、搜尋框 |
    |                |I:0  |      |         |架 (Ruby)              |
    +---------------------------------------------------------------+


%

11.2. XML 資料

    擴充套件標記語言 Extensible Markup Language (XML) 是一種標記語言
    ，用於含有結構化資訊的文件。

    在 XML.COM 檢視介紹資訊.

      * "什麼是 XML?"

      * "什麼是 XSLT?"
   
      * "什麼是 XSL-FO?"

      * "什麼是 XLink?"

%

11.2.1. XML 的基本提示

    XML 文字看起來有些像 HTML.它能夠使我們管理一個文件的多個格式。一
    個簡單的 XML 系統是 docbook-xsl 軟體包，在這裡使用。

    每一個 XML 檔案使用下面的標準 XML 宣告開始。

    <?xml version="1.0" encoding="UTF-8"?>

    XML 元素的基本語法是按下面的方式標記。

    <name attribute="value">content</name>

    內容為空的 XML 元素，使用下面的短格式標記。

    <name attribute="value"/>

    上面列子中的 "attribute="value"" 是可選的。

    XML 裡面的註釋部分，是按下面的方式標記。

    <!-- comment -->

    不同於增加標記，XML 至少要求使用預定義實體裡的內容來轉化下列字元
    。

    表 11.7. XML 預定義實體列表

    +---------------------+
    |預定義實體|轉化的字元|
    |----------+----------|
    |&quot;    |" : 引號  |
    |----------+----------|
    |&apos;    |' : 撇號  |
    |----------+----------|
    |&lt;      |< : 小於號|
    |----------+----------|
    |&gt;      |> : 大於號|
    |----------+----------|
    |&amp;     |& :＆號   |
    +---------------------+


    小心
   
    “<”或“&”不能在屬性（attributes）或元素（elements）中使用。

    注意

    當 SGML 式樣的使用者定義實體，比如 "&some-tag:", 被使用的時候，第
    一個定義會覆蓋其它的。實體定義在 "<!ENTITY some-tag "entity
    value">"裡表示.

    注意

    只要 XML 標記是一致使用某一標籤名集合（一些資料作為內容或屬性值）
    ，使用 Extensible Stylesheet Language Transformations (XSLT) 來轉
    換到另外一個 XML，是一個微不足道的任務。

%

11.2.2. XML 處理

    有許多工具可以用於處理 XML 檔案，比如說：可擴充套件樣式表語言
    Extensible Stylesheet Language (XSL).

    一旦你建立了一個好的成形的 XML 檔案，基本上來講，你就可以使用可擴
    充套件樣式表語言轉換 Extensible Stylesheet Language
    Transformations (XSLT)，將其轉換成任何格式。

    格式化物件的可擴充套件樣式表語言 Extensible Stylesheet Language
    for Formatting Objects (XSL-FO) 是用來作為格式化的解決方案. fop
    軟體包比 Debian main 檔案庫要新，因為它依賴 Java 程式語言. LaTeX
    程式碼通常是從 XML 使用 XSLT 生成，LaTeX 系統是用來建立 DVI,
    PostScript 和 PDF 這類可列印的檔案。

    表 11.8. XML 工具列表

    +---------------------------------------------------------------+
    |  軟體包   |流行度|大小 |關鍵詞|             說明              |
    |-----------+------+-----+------+-------------------------------|
    |docbook-xml|V:15, |2133 |xml   |DocBook 的 XML 文件型別定義（  |
    |           |I:280 |     |      |DTD）                          |
    |-----------+------+-----+------+-------------------------------|
    |xsltproc   |V:15, |160  |xslt  |XSLT 命令列處理器 (XML→ XML,   |
    |           |I:104 |     |      |HTML, 純文字，等等)            |
    |-----------+------+-----+------+-------------------------------|
    |docbook-xsl|V:13, |14870|xml/  |使用 XSLT 將 DocBook XML 處理成|
    |           |I:165 |     |xslt  |各種輸出格式的 XSL 樣式表      |
    |-----------+------+-----+------+-------------------------------|
    |xmlto      |V:1,  |130  |xml/  |使用 XSLT 將 XML 轉換到任意格式|
    |           |I:23  |     |xslt  |的轉換器                       |
    |-----------+------+-----+------+-------------------------------|
    |dbtoepub   |V:0,  |37   |xml/  |DocBook XML 到 .epub 轉換      |
    |           |I:0   |     |xslt  |                               |
    |-----------+------+-----+------+-------------------------------|
    |dblatex    |V:3,  |4643 |xml/  |使用 XSLT 將 Docbook 檔案轉換為|
    |           |I:16  |     |xslt  |DVI, PostScript, PDF 文件      |
    |-----------+------+-----+------+-------------------------------|
    |fop        |V:1,  |291  |xml/  |轉換 Docbook XML 檔案到 PDF    |
    |           |I:24  |     |xsl-fo|                               |
    +---------------------------------------------------------------+


    由於 XML 是標準通用標記語言 Standard Generalized Markup Language
    (SGML)的一個子集,用於處理 SGML 的擴充套件工具，也能夠處理 XML，比
    如說文件式樣語言和規範語言 Document Style Semantics and
    Specification Language (DSSSL).

    表 11.9. DSSSL 工具列表

    +---------------------------------------------------------------+
    |   軟體包    |流行|大小|關鍵 |              說明               |
    |             | 度 |    | 詞  |                                 |
    |-------------+----+----+-----+---------------------------------|
    |openjade     |V:2,|1019|dsssl|ISO/IEC 10179:1996 標準 DSSSL 處 |
    |             |I:38|    |     |理器 (最新的)                    |
    |-------------+----+----+-----+---------------------------------|
    |docbook-dsssl|V:1,|2604|xml/ |使用 DSSSL 處理 DocBook XML 到各 |
    |             |I:23|    |dsssl|種輸出格式的 DSSSL 樣式表        |
    |-------------+----+----+-----+---------------------------------|
    |             |    |    |     |DocBook 檔案的工具包，包括使用   |
    |docbook-utils|V:0,|281 |xml/ |DSSSL 的轉換成其它格式 (HTML,    |
    |             |I:16|    |dsssl|RTF, PS, man, PDF)的 docbook2* 命|
    |             |    |    |     |令                               |
    |-------------+----+----+-----+---------------------------------|
    |sgml2x       |V:0,|90  |SGML/|SGML 和 XML 使用 DSSSL 樣式表的轉|
    |             |I:0 |    |dsssl|換器                             |
    +---------------------------------------------------------------+


    提示
   
    GNOME 的 yelp 往往能夠方便的直接讀取 DocBook XML 檔案，這是因為它
    可以從 X 獲得適當的渲染。

%

11.2.3. XML 資料提取

    使用下面的方法，你能夠從其它格式提取 HTML 或 XML 資料。

    表 11.10. XML 資料提取工具列表

    +---------------------------------------------------------------+
    | 軟體包  |流行|大小|   關鍵詞   |             說明             |
    |         | 度 |    |            |                              |
    |---------+----+----+------------+------------------------------|
    |wv       |V:0,|717 |MSWord→任何 |從微軟 Word 格式到 HTML,      |
    |         |I:7 |    |格式        |LaTeX, 等格式的檔案轉換器。   |
    |---------+----+----+------------+------------------------------|
    |texi2html|V:0,|1833|texi→html   |從 Texinfo 到 HTML 的轉換器   |
    |         |I:8 |    |            |                              |
    |---------+----+----+------------+------------------------------|
    |man2html |V:0,|138 |man 手冊頁  |從 man 手冊頁到 HTML 的轉換器 |
    |         |I:2 |    |→html       |(支援 CGI)                    |
    |---------+----+----+------------+------------------------------|
    |unrtf    |V:0,|148 |rtf→html    |從 RTF 到 HTML 等的轉換器     |
    |         |I:4 |    |            |                              |
    |---------+----+----+------------+------------------------------|
    |info2www |V:1,|76  |info→html   |從 GNU info 到 HTML 的轉換器  |
    |         |I:3 |    |            |(支援 CGI)                    |
    |---------+----+----+------------+------------------------------|
    |ooo2dbk  |V:0,|217 |sxw→xml     |從 OpenOffice.org SXW 文件到  |
    |         |I:0 |    |            |DocBook XML 的轉換器          |
    |---------+----+----+------------+------------------------------|
    |wp2x     |V:0,|202 |WordPerfect→|WordPerfect 5.0 和 5.1 檔案到 |
    |         |I:0 |    |任意格式    |TeX, LaTeX, troff, GML 和 HTML|
    |---------+----+----+------------+------------------------------|
    |doclifter|V:0,|451 |troff→xml   |troff 到 DocBook XML 的轉換器 |
    |         |I:0 |    |            |                              |
    +---------------------------------------------------------------+


    對於非 XML 的 HTML 檔案，你能夠轉換它們為 XHTML，XHTML 是一個相當
    成型的 XML 例項。XHTML 能夠被 XML 工具處理.

    表 11.11. XML 美化列印工具列表

    +---------------------------------------------------------------+
    |   軟體包    |流行 |大 |    關鍵詞    |          說明          |
    |             | 度  |小 |              |                        |
    |-------------+-----+---+--------------+------------------------|
    |             |V:22,|   |              |使用 xmllint(1) 的 XML  |
    |libxml2-utils|I:246|182|xml↔html↔xhtml|命令列工具 (語法檢查，重|
    |             |     |   |              |新格式化，梳理, …)      |
    |-------------+-----+---+--------------+------------------------|
    |tidy         |V:2, |84 |xml↔html↔xhtml|HTML 語法檢查和重新格式 |
    |             |I:14 |   |              |化                      |
    +---------------------------------------------------------------+


    一旦適當的 XML 生成，基於標記的內容等，你能夠使用 XSLT 技術提取資
    料。

%

11.3. 排版

    Unix上的 troff 程式最初是由 AT&T 公司開發的，可以被用做簡單排版。
    現在被用來建立手冊頁。

    Donald Knuth 發明的 Tex 是非常強大的排版工具也是實際上的標準。最
    初是由 Leslie Lamport 開發的 LaTex 使得使用者可以更為方便的利用
    Tex 的強大功能。

    表 11.12. 排版工具的列表

    +---------------------------------------------------------------+
    |軟體包 | 流行度  |大小 |關鍵詞 |             說明              |
    |-------+---------+-----+-------+-------------------------------|
    |texlive|V:3, I:50|71   |(La)TeX|用於排版、預覽和列印的 TeX 系統|
    |-------+---------+-----+-------+-------------------------------|
    |groff  |V:3, I:64|11838|troff  |GNU troff 文字格式化系統       |
    +---------------------------------------------------------------+


%

11.3.1. roff 排版

    傳統意義上，roff 是 Unix 上主要的文字處理系統。參見 roff(7), 
    groff(7), groff(1), grotty(1), troff(1), groff_mdoc(7), groff_man
    (7), groff_ms(7), groff_me(7), groff_mm(7) 和 "info groff"。

    安裝好 groff 軟體包以後，你輸入 "-me" 巨集指令就能看到一份不錯的
    指導手冊，它的位置是 "/usr/share/doc/groff/"。

    提示

    "groff -Tascii -me -" 輸出帶有 ANSI 轉義碼的純文字。如果你想要
    manpage 的輸出帶有許多 "^H" 和 "_"，那麼使用替代命令
    "GROFF_NO_SGR=1 groff -Tascii -me -"。

    提示
   
    如果想要移除 groff 生成的文字檔案中的 "^H" 和 "_"，使用 "col -b
    -x" 來過濾它。

%

11.3.2. TeX/LaTeX

    Tex Live 軟體提供了全部的 TeX 系統。texlive 元包只是 TeX Live 中
    的一部分，但是它足夠應付日常任務。

    這裡有許多可用的 TeX 和 LaTeX 的參考資料。

      * The teTeX HOWTO: The Linux-teTeX Local Guide

      * tex(1)

      * latex(1)

      * texdoc(1)

      * texdoctk(1)

      * "The TeXbook", 作者 Donald E. Knuth, (Addison-Wesley)

      * "LaTeX - A Document Preparation System", 作者 Leslie Lamport,
        (Addison-Wesley)

      * "The LaTeX Companion", 作者 Goossens, Mittelbach, Samarin,
        (Addison-Wesley)

    這是最強大的排版環境。許多 SGML 處理器把它作為其後臺字處理工具。
    lyx 軟體包提供的 Lyx 和 texmacs 軟體包提供的 GNU TeXmacs 都為
    LaTeX 提供了非常不錯的所見即所得的編輯環境，然而許多人使用 Emacs
    和 Vim 作為其原始碼編輯器。

    有許多線上資源存在。

      * TEX Live Guide - TEX Live 2007 ("/usr/share/doc/
        texlive-doc-base/english/texlive-en/live.html")
        (texlive-doc-base 包)

      * Latex/Lyx 的一個簡單指引

      * 使用 LaTeX 進行文書處理

      * teTeX/LaTeX 的本地使用者指引

    當文件變得更大時，TeX 有時會出錯。你必須在 "/etc/texmf/texmf.cnf"
    中增加 pool 的大小 (更確切的說話是編輯是 "/etc/texmf/texmf.d/
    95NonPath" 並且執行 update-texmf(8)) 來修復此問題。

    注意

    "The TeXbook" 的 TeX 原始碼可以從 http://tug.ctan.org/tex-archive
    /systems/knuth/dist/tex/texbook.tex 上下載。此檔案包含了絕大多數
    所需的巨集指令。我聽說把文件中的第7到第10行註釋了並且新增 "\input
    manmac \proofmodefalse"，就可以用 tex(1) 來處理此文件。我強烈建議
    去購買這本書 (還有 Donald E. Knuth 寫的其他書) 而不是使用線上版本
    ，但是線上版本中的原始碼確實是學習 Tex 輸入很好的例子！

%

11.3.3. 漂亮的列印手冊頁

    你能夠用如下任意一個命令在印表機上漂亮的列印手冊頁。

    $ man -Tps some_manpage | lpr

%

11.3.4. 建立手冊頁

    儘管用純 troff 格式寫手冊頁（manpage）是可能的，這裡還是有一些輔
    助的程式包用於建立手冊頁。

    表 11.13. 建立手冊頁的工具列表

    +---------------------------------------------------------------+
    |    軟體包    |流行 |大 | 關鍵詞  |            說明            |
    |              | 度  |小 |         |                            |
    |--------------+-----+---+---------+----------------------------|
    |docbook-to-man|V:0, |191|SGML→man |從 DocBook SGML 到 roff 手冊|
    |              |I:13 |   |手冊頁   |頁巨集指令的轉換器          |
    |--------------+-----+---+---------+----------------------------|
    |help2man      |V:0, |498|text→man |通過 --help 引數自動生成手冊|
    |              |I:10 |   |手冊頁   |頁的工具                    |
    |--------------+-----+---+---------+----------------------------|
    |info2man      |V:0, |134|info→man |轉換 GNU info 到 POD 或手冊 |
    |              |I:0  |   |手冊頁   |頁的轉換器                  |
    |--------------+-----+---+---------+----------------------------|
    |txt2man       |V:0, |114|text→man |把純粹的 ASCII 文字轉化為手 |
    |              |I:1  |   |手冊頁   |冊頁格式                    |
    +---------------------------------------------------------------+


%

11.4. 可印刷的資料

    在 Debian 系統中，可列印的資料是 PostScript 格式的。對於非
    PostScript 印表機，通用 Unix 列印系統 (CUPS) 使用 Ghostscript 作
    為其後臺光柵處理程式。

%

11.4.1. Ghostscript

    處理可印刷的資料的核心是 Ghostscript PostScript 直譯器，它能夠生
    成光柵影象。

    來自 Artifex 的最新上游 Ghostscript 軟體包的許可從 AFPL 變成 GPL
    ，並且釋出的是合併版本，其中合併了最新的 ESP 版本的改變，例如
    CUPS 8.60版本。

    表 11.14. Ghostscript PostScript 直譯器列表

    +---------------------------------------------------------------+
    |     軟體包     | 流行度 |大小 |             說明              |
    |----------------+--------+-----+-------------------------------|
    |ghostscript     |V:252,  |231  |GPL Ghostscript PostScript/PDF |
    |                |I:598   |     |直譯器                         |
    |----------------+--------+-----+-------------------------------|
    |ghostscript-x   |V:15,   |223  |GPL Ghostscript PostScript/PDF |
    |                |I:65    |     |直譯器-X 顯示支援              |
    |----------------+--------+-----+-------------------------------|
    |libpoppler95    |I:3     |4172 |PDF 渲染庫 (xpdf PDF 瀏覽器的分|
    |                |        |     |支)                            |
    |----------------+--------+-----+-------------------------------|
    |libpoppler-glib8|V:217,  |449  |PDF 渲染庫（基於 Glib 的共享庫)|
    |                |I:481   |     |                               |
    |----------------+--------+-----+-------------------------------|
    |poppler-data    |V:111,  |13090|用於 PDF 渲染庫的 CMaps (CJK 支|
    |                |I:637   |     |援：Adobe-*)                   |
    +---------------------------------------------------------------+


    提示
   
    "gs -h" 能夠顯示 Ghostscript 的配置資訊。

%

11.4.2. 合併兩個 PS 或 PDF 檔案

    你能夠使用 Ghostscript 中的 gs(1) 來合併兩個 PostScript(PS) 或可
    移植文件格式（PDF）檔案。

    $ gs -q -dNOPAUSE -dBATCH -sDEVICE=pswrite -sOutputFile=bla.ps -f foo1.ps foo2.ps
    $ gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=bla.pdf -f foo1.pdf foo2.pdf

    注意
   
    PDF 是用途很廣的跨平臺可印刷的資料格式，它本質上是帶有一些額外特
    性和擴充套件的壓縮了的 PS 格式。

    提示

    對於命令列來說，psmerge(1) 和 psutils 包中的其他命令在處理
    PostScript 文件時是很有用的。pdftk 包中的 pdftk(1) 在處理 PDF 文
    件的時候同樣是很好用的。

%

11.4.3. 處理可印刷資料的工具

    如下是處理可印刷資料的工具列表。

    表 11.15. 處理可印刷資料的工具列表

    +---------------------------------------------------------------+
    |   軟體包    |流行度|大小|   關鍵詞    |         說明          |
    |-------------+------+----+-------------+-----------------------|
    |             |V:241,|    |             |PDF 工具：pdftops,     |
    |poppler-utils|I:434 |689 |pdf→ps,text,…|pdfinfo, pdfimages,    |
    |             |      |    |             |pdftotext, pdffonts    |
    |-------------+------+----+-------------+-----------------------|
    |psutils      |V:6,  |219 |ps→ps        |PostScript 檔案轉換工具|
    |             |I:105 |    |             |                       |
    |-------------+------+----+-------------+-----------------------|
    |poster       |V:0,  |58  |ps→ps        |用 PostScript 頁製作大 |
    |             |I:5   |    |             |型海報                 |
    |-------------+------+----+-------------+-----------------------|
    |             |V:1,  |    |text→ps,     |轉化 ASCII 文字到      |
    |enscript     |I:20  |2132|html, rtf    |PostScript, HTML, RTF  |
    |             |      |    |             |或 Pretty-Print        |
    |-------------+------+----+-------------+-----------------------|
    |             |V:1,  |    |             |'任何文字到 PostScript'|
    |a2ps         |I:15  |3651|text→ps      |的轉換器並且也是相當不 |
    |             |      |    |             |錯的列印程式           |
    |-------------+------+----+-------------+-----------------------|
    |pdftk        |I:51  |28  |pdf→pdf      |PDF 文件轉換工具：pdftk|
    |-------------+------+----+-------------+-----------------------|
    |html2ps      |V:0,  |249 |html→ps      |從 HTML 到 PostScript  |
    |             |I:3   |    |             |的轉換器               |
    |-------------+------+----+-------------+-----------------------|
    |gnuhtml2latex|V:0,  |27  |html→latex   |從 html 到 latex 的轉換|
    |             |I:1   |    |             |器                     |
    |-------------+------+----+-------------+-----------------------|
    |             |V:0,  |    |             |轉換 LaTeX 文件到能被  |
    |latex2rtf    |I:6   |480 |latex→rtf    |Microsoft Word 讀取的  |
    |             |      |    |             |RTF 格式的文件         |
    |-------------+------+----+-------------+-----------------------|
    |             |V:3,  |    |             |從 PostScript 到 EPS（ |
    |ps2eps       |I:68  |98  |ps→eps       |Encapsulated PostScript|
    |             |      |    |             |）的轉換器             |
    |-------------+------+----+-------------+-----------------------|
    |e2ps         |V:0,  |109 |text→ps      |帶有日文編碼支援的文字 |
    |             |I:0   |    |             |到 PostScript 轉換器   |
    |-------------+------+----+-------------+-----------------------|
    |impose+      |V:0,  |119 |ps→ps        |PostScript 工具        |
    |             |I:0   |    |             |                       |
    |-------------+------+----+-------------+-----------------------|
    |             |      |    |             |漂亮的列印許多源程式（ |
    |             |V:0,  |    |             |C, C++, Java, Pascal,  |
    |trueprint    |I:0   |146 |text→ps      |Perl, Pike, Sh, 和     |
    |             |      |    |             |Verilog）到 PostScript |
    |             |      |    |             |。(C 語言)             |
    |-------------+------+----+-------------+-----------------------|
    |pdf2svg      |V:0,  |30  |ps→svg       |PDF 到可升級的向量圖形 |
    |             |I:4   |    |             |格式的轉換器           |
    |-------------+------+----+-------------+-----------------------|
    |pdftoipe     |V:0,  |71  |ps→ipe       |從 PDF 到 IPE‘s XML 格 |
    |             |I:0   |    |             |式的轉換器             |
    +---------------------------------------------------------------+


%

11.4.4. 用 CUPS 列印

    Unix 通用列印系統（CUPS）中的 lp(1) 和 lpr(1) 命令都提供了自定義
    列印資料的選項。

    你可以使用下列命令中的一個來列印 3 份有裝訂頁碼的檔案。

    $ lp -n 3 -o Collate=True filename

    $ lpr -#3 -o Collate=True filename

    你能夠通過 "-o number-up=2", "-o page-set=even", "-o page-set=
    odd", "-o scaling=200", "-o natural-scaling=200" 等等印表機選項來
    進一步定製印表機操作，詳細的文件參見命令列列印和選項。

%

11.5. 郵件資料轉換

    下列郵件資料轉換軟體包捕獲了我的眼球。

    表 11.16. 有助於郵件資料轉換的軟體包列表

    +---------------------------------------------------------------+
    | 軟體包  |流行|大小|關鍵詞 |               說明                |
    |         | 度 |    |       |                                   |
    |---------+----+----+-------+-----------------------------------|
    |sharutils|V:4,|1421|郵件   |shar(1), unshar(1), uuencode(1),   |
    |         |I:55|    |       |uudecode(1)                        |
    |---------+----+----+-------+-----------------------------------|
    |mpack    |V:1,|106 |MIME   |編碼和解碼 MIME 資訊: mpack(1) 和  |
    |         |I:18|    |       |munpack(1)                         |
    |---------+----+----+-------+-----------------------------------|
    |tnef     |V:1,|110 |ms-tnef|解包 MIME 附件型別 "application/   |
    |         |I:10|    |       |ms-tnef"，該格式僅由微軟使用       |
    |---------+----+----+-------+-----------------------------------|
    |         |V:0,|    |       |下列格式的編碼器和解碼器: uuencode,|
    |uudeview |I:5 |109 |郵件   |xxencode, BASE64, quoted printable |
    |         |    |    |       |和 BinHex                          |
    +---------------------------------------------------------------+


    提示

    如果郵件客戶端可以配置使用 IMAP4 伺服器，網際網路訊息訪問協議版本
    4 (IMAP4) 伺服器 (參見第 6.7 节 “POP3/IMAP4 伺服器”) 可以用來把郵
    件從專有郵件系統裡面移出來。

%

11.5.1. 郵件資料基礎

    郵件 (SMTP) 資料需要被限制為 7 位資料序列。二進位制資料和 8 位文
    字資料使用 Multipurpose Internet Mail Extensions (MIME) 網際網路
    多用途郵件擴充套件和選擇的字符集編碼到 7 位格式。(參見第 8.4.1 节
    “編碼的基礎知識”).

    標準的郵件儲存格式是 mbox，它是依據 RFC2822 (由 RFC822 更新) 來的
    格式. 參見 mbox(5) (由 mutt 軟體包提供).

    對於歐洲語言,由於沒有什麼 8 位字元，"Content-Transfer-Encoding:
    quoted-printable" 加 ISO-8859-1 字符集通常被用於郵件。如果歐洲文
    字是被編碼為 UTF-8,由於幾乎全是 7 位資料，使用
    "Content-Transfer-Encoding: quoted-printable" 也是合適的。

    對於日語，傳統的 "Content-Type: text/plain; charset=ISO-2022-JP"
    通常被用於郵件來保持文字在 7 位。但是老的微軟系統會在沒有宣告的情
    況下使用 Shift-JIS 來發送郵件。如果日語文字是用 UTF-8 編碼, 由於
    含有許多 8 位資料，使用 Base64 是合適的。其它亞洲語言也是類似情形
    。

    注意

    如果你的非 Unix 郵件資料可以通過一個具備和 IMAP4 服務通訊的非
    Debian 客戶端訪問，你可以通過執行你的 IMAP4 服務來將郵件資料移出
    。(參見第 6.7 节 “POP3/IMAP4 伺服器”).

    注意
   
    如果你使用其它郵件儲存格式，第一步把它們移動到 mbox 格式比較好。
    像 mutt(1) 這樣多功能的客戶端程式可以便捷的完成這類操作。

    你可以使用 procmail(1) 和 formail(1) 把郵箱內容分開成每一封郵件.

    每一封郵件能夠使用來自 mpack 軟體包的 munpack(1) 命令（或其它特異
    的工具）來獲得 MIME 編碼內容。

%

11.6. 圖形資料工具

    如下是關於圖形資料轉換、編輯和管理的工具包。

    表 11.17. 圖形資料工具列表

    +----------------------------------------------------------------------+
    |         軟體包         |流行度|大小 |     關鍵詞      |     說明     |
    |------------------------+------+-----+-----------------+--------------|
    |gimp                    |V:68, |22313|圖形(點陣圖）    |GNU 圖形處理程|
    |                        |I:341 |     |                 |式            |
    |------------------------+------+-----+-----------------+--------------|
    |imagemagick             |I:400 |218  |圖形(點陣圖）    |圖形處理程式  |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:3,  |     |                 |影象處理程式（|
    |graphicsmagick          |I:17  |5224 |圖形(點陣圖）    |imagemagick派 |
    |                        |      |     |                 |生出來的)     |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |用於 SANE 的基|
    |                        |V:17, |     |                 |於 GTK+ 的前端|
    |xsane                   |I:173 |2346 |圖形(點陣圖）    |圖形介面 (現在|
    |                        |      |     |                 |訪問掃描器就很|
    |                        |      |     |                 |簡單了)       |
    |------------------------+------+-----+-----------------+--------------|
    |netpbm                  |V:32, |4302 |圖形(點陣圖）    |圖形介面的轉換|
    |                        |I:409 |     |                 |工具          |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |MS Windows 符 |
    |                        |      |     |                 |號和游標轉化為|
    |icoutils                |V:21, |221  |png↔ico(bitmap)  |PNG 格式，或者|
    |                        |I:127 |     |                 |從 PNG 格式轉 |
    |                        |      |     |                 |化為點陣圖格式|
    |                        |      |     |                 |(favicon.ico) |
    |------------------------+------+-----+-----------------+--------------|
    |scribus                 |V:2,  |30375|ps/pdf/SVG/…     |Scribus DTP 編|
    |                        |I:23  |     |                 |輯器          |
    |------------------------+------+-----+-----------------+--------------|
    |libreoffice-draw        |V:177,|14600|圖形（向量）     |LibreOffice 辦|
    |                        |I:434 |     |                 |公套件-繪畫   |
    |------------------------+------+-----+-----------------+--------------|
    |inkscape                |V:55, |84823|圖形（向量）     |SVG（可升級向 |
    |                        |I:209 |     |                 |量圖形)編輯器 |
    |------------------------+------+-----+-----------------+--------------|
    |dia                     |V:5,  |3727 |圖形（向量）     |圖表編輯器（  |
    |                        |I:31  |     |                 |Gtk）         |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:2,  |     |                 |在圖形介面下，|
    |xfig                    |I:15  |1793 |圖形（向量）     |互動式的生成影|
    |                        |      |     |                 |象變得方便    |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |PostScript 和 |
    |pstoedit                |V:4,  |988  |ps/pdf→image(向  |PDF 檔案到可編|
    |                        |I:98  |     |量)              |輯的向量圖形的|
    |                        |      |     |                 |轉換器（SVG） |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:10, |     |Windows/image(向 |Windows 元檔案|
    |libwmf-bin              |I:211 |113  |量)              |(向量圖形資料)|
    |                        |      |     |                 |轉換工具      |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |轉換 XFig 檔案|
    |fig2sxd                 |V:0,  |149  |fig→sxd(向量)    |為            |
    |                        |I:0   |     |                 |OpenOffice.org|
    |                        |      |     |                 |繪畫格式      |
    |------------------------+------+-----+-----------------+--------------|
    |unpaper                 |V:2,  |460  |image→image      |後處理 OCR 掃 |
    |                        |I:19  |     |                 |描頁面的工具  |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:8,  |     |                 |基於惠普的商業|
    |tesseract-ocr           |I:37  |1500 |image→text       |OCR 引擎的免費|
    |                        |      |     |                 |OCR 軟體      |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |OCR 引擎資料：|
    |tesseract-ocr-eng       |V:7,  |4032 |image→text       |用於英文文字的|
    |                        |I:37  |     |                 |tesseract-ocr |
    |                        |      |     |                 |語言檔案      |
    |------------------------+------+-----+-----------------+--------------|
    |gocr                    |V:1,  |531  |image→text       |免費 OCR 軟體 |
    |                        |I:13  |     |                 |              |
    |------------------------+------+-----+-----------------+--------------|
    |ocrad                   |V:0,  |303  |image→text       |免費 OCR 軟體 |
    |                        |I:5   |     |                 |              |
    |------------------------+------+-----+-----------------+--------------|
    |eog                     |V:71, |10189|影象(Exif)       |Eye of GNOME  |
    |                        |I:264 |     |                 |影象瀏覽程式  |
    |------------------------+------+-----+-----------------+--------------|
    |gthumb                  |V:5,  |5475 |影象(Exif)       |影象瀏覽器（  |
    |                        |I:22  |     |                 |GNOME）       |
    |------------------------+------+-----+-----------------+--------------|
    |geeqie                  |V:6,  |14643|影象(Exif)       |基於 GTK+ 的影|
    |                        |I:21  |     |                 |象瀏覽器      |
    |------------------------+------+-----+-----------------+--------------|
    |shotwell                |V:19, |6451 |影象(Exif)       |數碼相片管理器|
    |                        |I:223 |     |                 |（GNOME）     |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:0,  |     |                 |從數碼照相機中|
    |gtkam                   |I:6   |1154 |影象(Exif)       |檢索多媒體資料|
    |                        |      |     |                 |的應用 (GTK+) |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |gphoto2 軟體是|
    |gphoto2                 |V:1,  |955  |影象(Exif)       |命令列方式的管|
    |                        |I:12  |     |                 |理數碼相機的工|
    |                        |      |     |                 |具            |
    |------------------------+------+-----+-----------------+--------------|
    |gwenview                |V:28, |10570|影象(Exif)       |圖片瀏覽器（  |
    |                        |I:97  |     |                 |KDE）         |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |KDE 上的支援數|
    |kamera                  |I:97  |798  |影象(Exif)       |碼相機的應用軟|
    |                        |      |     |                 |體            |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:2,  |     |                 |用於 KDE 桌面 |
    |digikam                 |I:13  |2646 |影象(Exif)       |環境的數字照片|
    |                        |      |     |                 |管理應用      |
    |------------------------+------+-----+-----------------+--------------|
    |exiv2                   |V:3,  |321  |影象(Exif)       |EXIF/IPTC 元資|
    |                        |I:44  |     |                 |料處理工具    |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:1,  |     |                 |改變數碼照相機|
    |exiftran                |I:21  |70   |影象(Exif)       |的 jpeg 影象格|
    |                        |      |     |                 |式            |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |處理相容 JPEG |
    |jhead                   |V:1,  |109  |影象(Exif)       |檔案 (數碼相機|
    |                        |I:11  |     |                 |圖片) 的 Exif |
    |                        |      |     |                 |中的非圖形部分|
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:1,  |     |                 |顯示 JPEG 檔案|
    |exif                    |I:12  |339  |影象(Exif)       |中的 EXIF 資訊|
    |                        |      |     |                 |的命令列工具  |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |從數碼相機的  |
    |exiftags                |V:0,  |292  |影象(Exif)       |JPEG 檔案讀取 |
    |                        |I:5   |     |                 |Exif 標籤的實 |
    |                        |      |     |                 |用工具        |
    |------------------------+------+-----+-----------------+--------------|
    |exifprobe               |V:0,  |499  |影象(Exif)       |從數碼圖片中讀|
    |                        |I:4   |     |                 |取元資料      |
    |------------------------+------+-----+-----------------+--------------|
    |dcraw                   |V:2,  |535  |image(原始的)→ppm|解碼原始的數碼|
    |                        |I:19  |     |                 |相機圖片      |
    |------------------------+------+-----+-----------------+--------------|
    |findimagedupes          |V:0,  |79   |image→fingerprint|找到相似或重複|
    |                        |I:1   |     |                 |的影象        |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:0,  |     |                 |合併影象來增加|
    |ale                     |I:0   |839  |image→image      |保真度或者用於|
    |                        |      |     |                 |建立馬賽克    |
    |------------------------+------+-----+-----------------+--------------|
    |imageindex              |V:0,  |145  |image(Exif)→html |從圖形中建立靜|
    |                        |I:2   |     |                 |態 HTML 相簿  |
    |------------------------+------+-----+-----------------+--------------|
    |                        |V:0,  |     |                 |通用的        |
    |outguess                |I:2   |261  |jpeg,png         |Steganographic|
    |                        |      |     |                 |工具          |
    |------------------------+------+-----+-----------------+--------------|
    |librecad                |V:4,  |8205 |DXF              |CAD 資料編輯器|
    |                        |I:18  |     |                 |（KDE）       |
    |------------------------+------+-----+-----------------+--------------|
    |blender                 |V:4,  |79166|blend, TIFF,     |用於動畫的 3D |
    |                        |I:38  |     |VRML, …          |編輯器        |
    |------------------------+------+-----+-----------------+--------------|
    |mm3d                    |V:0,  |3778 |ms3d, obj, dxf, …|基於 OpenGL 的|
    |                        |I:0   |     |                 |3D 模型編輯器 |
    |------------------------+------+-----+-----------------+--------------|
    |open-font-design-toolkit|I:0   |10   |ttf, ps, …       |用於開放字型設|
    |                        |      |     |                 |計的元包      |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |用於 PS，     |
    |fontforge               |V:0,  |4191 |ttf, ps, …       |TrueType 和   |
    |                        |I:8   |     |                 |OpenType 的字 |
    |                        |      |     |                 |型編輯器      |
    |------------------------+------+-----+-----------------+--------------|
    |                        |      |     |                 |用於TrueType  |
    |xgridfit                |V:0,  |806  |ttf              |字型的網格擬合|
    |                        |I:0   |     |                 |和小字還原技術|
    |                        |      |     |                 |的程式        |
    +----------------------------------------------------------------------+


    提示
   
    在 aptitude(8) （參考第 2.2.6 节 “aptitude 搜尋方式選項”）中用正
    則表示式 "~Gworks-with::image" 來查詢更多的影象工具。

    雖然像 gimp(1) 這樣的圖形介面程式是非常強大的，但像 imagemagick
    (1) 這樣的命令列工具在用指令碼自動化處理影象時是很有用的。

    實際上的數碼相機的影象是可交換的影象檔案格式(EXIF)，這種格式是在
    JPEG 影象檔案格式上新增一些元資料標籤。它能夠儲存諸如日期、時間和
    相機設定的資訊。

    The Lempel-Ziv-Welch (LZW)無損資料壓縮專利已經過期了。使用 LZW 壓
    縮方式的圖形互動格式（GIF）工具現在可以在 Debian 系統上自由使用了
    。

    提示

    任何帶有可移動記錄介質的數碼相機或掃描器都可以在 Linux 上通過 USB
    儲存讀取器來工作，因為它遵循相機檔案系統設計規則並且使用 FAT 檔案
    系統，參考第 10.1.7 节 “可移動儲存裝置”。

%

11.7. 不同種類的資料轉換工具

    這裡有許多其他用於資料轉換的工具。在 aptitude(8)（參考第 2.2.6 节
    “aptitude 搜尋方式選項”）裡用正則表示式 "~Guse::converting"" 來查
    詢如下的軟體包。

    表 11.18. 不同種類的資料轉換工具列表

    +---------------------------------------------------------------+
    | 軟體包  |流行|大小 | 關鍵詞  |              說明              |
    |         | 度 |     |         |                                |
    |---------+----+-----+---------+--------------------------------|
    |alien    |V:2,|161  |rpm/     |把外來的軟體包轉換為 Debian 軟體|
    |         |I:34|     |tgz→deb  |包                              |
    |---------+----+-----+---------+--------------------------------|
    |         |V:0,|     |         |把 "電子書" (在日本流行) 變成單 |
    |freepwing|I:0 |421  |EB→EPWING|一的 JIS X 4081 格式 (EPWING V1 |
    |         |    |     |         |的子集）                        |
    |---------+----+-----+---------+--------------------------------|
    |calibre  |V:9,|54876|any→EPUB |電子書轉換器和庫管理            |
    |         |I:36|     |         |                                |
    +---------------------------------------------------------------+


    你能夠通過如下的命令從 RPM 格式的包中提取資料。

    $ rpm2cpio file.src.rpm | cpio --extract

第 12 章 編程

    這裡我給出一些 Debian 系統中的資訊，幫助學習程式設計的人找出打包
    的原始碼。下面是值得關注的軟體包和與之對應的文件。

    表 12.1. 幫助程式設計的軟體包清單

    +---------------------------------------------------------------+
    |    軟體包     |流行度 |大小 |               包                |
    |---------------+-------+-----+---------------------------------|
    |autoconf       |V:41,  |1846 |由 autoconf-doc 包提供的“info    |
    |               |I:282  |     |autoconf”                        |
    |---------------+-------+-----+---------------------------------|
    |automake       |V:42,  |1830 |由 automake1.10-doc 包提供的“info|
    |               |I:279  |     |automake”                        |
    |---------------+-------+-----+---------------------------------|
    |bash           |V:791, |6469 |由 bash-doc 包提供的“info bash”  |
    |               |I:999  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |bison          |V:9,   |2815 |由 bison-doc 包提供的“info bison”|
    |               |I:103  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |cpp            |V:319, |42   |由 cpp-doc 包提供的“info cpp”    |
    |               |I:770  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |ddd            |V:0,   |4184 |由 ddd-doc 包提供的“info ddd”    |
    |               |I:10   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |exuberant-ctags|V:5,   |341  |exuberant-ctags(1)               |
    |               |I:37   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |flex           |V:9,   |1279 |由 flex-doc 包提供的“info flex”  |
    |               |I:93   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |gawk           |V:368, |2558 |由 gawk-doc 包提供的“info gawk”  |
    |               |I:454  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |gcc            |V:165, |45   |由 gcc-doc 包提供的“info gcc”    |
    |               |I:604  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |gdb            |V:13,  |9789 |由 gdb-doc 包提供的“info gdb”    |
    |               |I:114  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |gettext        |V:48,  |5843 |由 gettext-doc 包提供的“info     |
    |               |I:312  |     |gettext”                         |
    |---------------+-------+-----+---------------------------------|
    |gfortran       |V:11,  |16   |由 gfortran-doc 包提供的“info    |
    |               |I:98   |     |gfortran”（Fortran 95）          |
    |---------------+-------+-----+---------------------------------|
    |fpc            |I:3    |121  |fpc(1) 和由 fp-docs 包提供的 html|
    |               |       |     |文檔（Pascal）                   |
    |---------------+-------+-----+---------------------------------|
    |glade          |V:0,   |1730 |通過 UI Builder 菜單提供的文檔   |
    |               |I:8    |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |               |V:935, |     |通過 glibc-doc 和                |
    |libc6          |I:999  |12771|glibc-doc-reference 提供的“info  |
    |               |       |     |libc”                            |
    |---------------+-------+-----+---------------------------------|
    |make           |V:157, |1592 |通過 make-doc 包提供的“info make”|
    |               |I:609  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |xutils-dev     |V:1,   |1466 |imake(1)，xmkmf(1) 等。          |
    |               |I:12   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |mawk           |V:372, |242  |mawk(1)                          |
    |               |I:997  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |perl           |V:610, |705  |perl(1) 以及通過 perl-doc 和     |
    |               |I:992  |     |perl-doc-html 提供的 html 文檔   |
    |---------------+-------+-----+---------------------------------|
    |python         |V:293, |68   |python(1) 以及通過 python-doc 包 |
    |               |I:923  |     |提供的 html 文檔                 |
    |---------------+-------+-----+---------------------------------|
    |tcl            |V:31,  |22   |tcl(3) 以及通過 tcl-doc 包提供的 |
    |               |I:414  |     |更詳細的手冊頁文件               |
    |---------------+-------+-----+---------------------------------|
    |tk             |V:30,  |22   |tk(3) 以及通過 tk-doc 包提供的更 |
    |               |I:406  |     |詳細的手冊頁文件                 |
    |---------------+-------+-----+---------------------------------|
    |ruby           |V:137, |35   |ruby(1) 以及通過 ri 包提供的交互 |
    |               |I:318  |     |式參考手冊                       |
    |---------------+-------+-----+---------------------------------|
    |vim            |V:106, |3231 |通過 vim-doc 包提供的幫助（F1）菜|
    |               |I:398  |     |單                               |
    |---------------+-------+-----+---------------------------------|
    |susv2          |I:0    |16   |通過“單一UNIX規範（版本2）”獲取（|
    |               |       |     |英語文檔）                       |
    |---------------+-------+-----+---------------------------------|
    |susv3          |I:0    |16   |通過“單一UNIX規範（版本3）”獲取（|
    |               |       |     |英語文檔）                       |
    +---------------------------------------------------------------+


    安裝 manpages 和 manpages-dev 包之後，可以通過運行“man 名稱”查看
    手冊頁中的參考信息。安裝了 GNU 工具的相關文檔包之後，可以通過運行
    “info 程序名稱”查看參考文檔。某些 GFDL 協議的文檔與 DFSG 並不兼容
    ，所以你可能需要在 main 倉庫中包含 contrib 和 non-free 才能下載並
    安裝它們。

    警告
   
    不要用“test”作爲可執行的測試文件的名字，因爲 shell 中內建有“test”
    命令。

    小心
   
    你可以把從源代碼編譯得到的程序直接放到“/usr/local”或“/opt”目錄，
    這樣可以避免與系統程序撞車。

    提示
   
    “歌曲：99瓶啤酒”的代碼示例可以給你提供實踐各種語言的好範本。

%

12.1. Shell 腳本

    Shell 腳本是指包含有下面格式的可執行的文本文件。

    #!/bin/sh
    …… 命令

    第一行指明瞭讀取並執行這個文件的 shell 解釋器。

    讀懂 shell 腳本的最好辦法是先理解類 UNIX 系統是如何工作的。這裏有
    一些 shell 編程的提示。看看“Shell 錯誤”（http://
    www.greenend.org.uk/rjk/2001/04/shell.html），可以從錯誤中學習。

    不像 shell 交互模式（參見第 1.5 节 “簡單 shell 命令” 和第 1.6 节
    “類 Unix 的文本處理”），shell 腳本會頻繁使用參數、條件和循環等。

%

12.1.1. POSIX shell 兼容性

    系統中的許多腳本都可以通過任意 POSIX shell（參見表 1.13 “shell 程
    式列表”）來執行。系統的默認 shell 是“/bin/sh”，它是某個實際 shell
    程序的連結。

      * 對 lenny 或更老的系統來說，它是 bash(1)
   
      * dash(1) 供 squeeze 或更新的版本

    避免編寫具有 bashisms（bash 化）或者 zshisms（zsh 化）語法的
    shell 指令碼，確保指令碼在所有 POSIX shell 之間具有可移植性。你可
    以使用 checkbashisms(1) 對其進行檢查。

    表 12.2. 典型 bashism 語法列表

    +---------------------------------------------------------------+
    |          好的：POSIX          |      應該避免的：bashism      |
    |-------------------------------+-------------------------------|
    |if [ "$foo" = "$bar" ] ; then …|if [ "$foo" == "$bar" ] ; then |
    |                               |…                              |
    |-------------------------------+-------------------------------|
    |diff -u file.c.orig file.c     |diff -u file.c{.orig,}         |
    |-------------------------------+-------------------------------|
    |mkdir /foobar /foobaz          |mkdir /foo{bar,baz}            |
    |-------------------------------+-------------------------------|
    |funcname() { … }               |function funcname() { … }      |
    |-------------------------------+-------------------------------|
    |八進位制格式："\377"           |十六進位制格式："\xff"         |
    +---------------------------------------------------------------+


    使用 "echo" 命令的時候需要注意以下幾個方面，因為根據內建 shell 和
    外部命令的不同，它的實現也有差別。

      * 避免使用除“-n”以外的任何命令列選項。
   
      * 避免在字串中使用轉義序列，因為根據 shell 不同，計算後的結果也
        不一樣。

    注意
   
    儘管“-n”選項並不是 POSIX 語法，但它已被廣泛接受。

    提示
   
    如果你想要在輸出字串中嵌入轉義序列，用 "printf" 命令替代 "echo"
    命令。

%

12.1.2. Shell 引數

    特殊的 shell 引數經常在 shell 腳本里面被用到。

    表 12.3. shell 引數列表

    +--------------------------------------+
    |shell 引數|            值             |
    |----------+---------------------------|
    |$0        |shell 或 shell 指令碼的名稱|
    |----------+---------------------------|
    |$1        |第一個 shell 引數          |
    |----------+---------------------------|
    |$9        |第 9 個 shell 引數         |
    |----------+---------------------------|
    |$#        |位置引數數量               |
    |----------+---------------------------|
    |"$*"      |"$1 $2 $3 $4 … "           |
    |----------+---------------------------|
    |"$@"      |"$1" "$2" "$3" "$4" …      |
    |----------+---------------------------|
    |$?        |最近一次命令的退出狀態碼   |
    |----------+---------------------------|
    |$$        |這個 shell 指令碼的 PID    |
    |----------+---------------------------|
    |$!        |最近開始的後臺任務 PID     |
    +--------------------------------------+


    如下所示是需要記憶的基本的引數展開。

    表 12.4. shell 引數展開列表

    +---------------------------------------------------------------+
    |引數表示式形 |如果 var 變數已設定那|如果 var 變數沒有被設定那麼|
    |     式      |       麼值為        |           值為            |
    |-------------+---------------------+---------------------------|
    |$            |"$var"               |"string"                   |
    |{var:-string}|                     |                           |
    |-------------+---------------------+---------------------------|
    |$            |"string"             |"null"                     |
    |{var:+string}|                     |                           |
    |-------------+---------------------+---------------------------|
    |${var:=      |"$var"               |"string" (並執行 "var=     |
    |string}      |                     |string")                   |
    |-------------+---------------------+---------------------------|
    |${var:?      |"$var"               |在 stderr 中顯示 "string"  |
    |string}      |                     |(出錯退出)                 |
    +---------------------------------------------------------------+


    以上這些操作中 ":" 實際上都是可選的。

      * 有 ":" 等於測試的 var 值是存在且非空
   
      * 沒有 ":" 等於測試的 var 值只是存在的，可以為空

    表 12.5. 重要的 shell 引數替換列表

    +------------------------------------------------------+
    | 引數替換形式 |                 結果                  |
    |--------------+---------------------------------------|
    |${var%suffix} |刪除位於 var 結尾的 suffix 最小匹配模式|
    |--------------+---------------------------------------|
    |${var%%suffix}|刪除位於 var 結尾的 suffix 最大匹配模式|
    |--------------+---------------------------------------|
    |${var#prefix} |刪除位於 var 開頭的 prefix 最小匹配模式|
    |--------------+---------------------------------------|
    |${var##prefix}|刪除位於 var 開頭的 prefix 最大匹配模式|
    +------------------------------------------------------+


%

12.1.3. Shell 條件語句

    每個命令都會返回退出狀態，這可以被條件語句使用。

      * 成功：0 ("True")
   
      * 失敗：非0 ("False")

    注意
   
    "0" 在 shell 條件語句中的意思是 "True"，然而 "0" 在 C 條件語句中
    的含義為 "False"。

    注意
   
    "[" 跟 test 命令是等價的，它評估到 "]" 之間的引數來作為一個條件表
    示式.

    如下所示是需要記憶的基礎條件語法。

      * "<command> && <if_success_run_this_command_too> || true"

      * "<command> || <if_not_success_run_this_command_too> || true"

      * 如下所示是多行指令碼片段

    if [ <conditional_expression> ]; then
     <if_success_run_this_command>
    else
     <if_not_success_run_this_command>
    fi

    這裡末尾的“|| true”是需要的，它可以保證這個 shell 指令碼在不小心
    使用了“-e”選項而被呼叫時不會在該行意外地退出。

    表 12.6. 在條件表示式中進行檔案比較

    +---------------------------------------------------------------+
    |    表示式     |             返回邏輯真所需的條件              |
    |---------------+-----------------------------------------------|
    |-e <file>      |<file> 存在                                    |
    |---------------+-----------------------------------------------|
    |-d <file>      |<file> 存在並且是一個目錄                      |
    |---------------+-----------------------------------------------|
    |-f <file>      |<file> 存在並且是一個普通檔案                  |
    |---------------+-----------------------------------------------|
    |-w <file>      |<file> 存在並且可寫                            |
    |---------------+-----------------------------------------------|
    |-x <file>      |<file> 存在並且可執行                          |
    |---------------+-----------------------------------------------|
    |<file1> -nt    |<file1> 是否比 <file2> 新                      |
    |<file2>        |                                               |
    |---------------+-----------------------------------------------|
    |<file1> -ot    |<file1> 是否比 <file2> 舊                      |
    |<file2>        |                                               |
    |---------------+-----------------------------------------------|
    |<file1> -ef    |<file1> 和 <file2> 位於相同的裝置上並且有相同的|
    |<file2>        |inode 編號                                     |
    +---------------------------------------------------------------+


    表 12.7. 在條件表示式中進行字串比較

    +------------------------------------------------------------+
    |     表示式     |           返回邏輯真所需的條件            |
    |----------------+-------------------------------------------|
    |-z <str>        |<str> 的長度為零                           |
    |----------------+-------------------------------------------|
    |-n <str>        |<str> 的長度不為零                         |
    |----------------+-------------------------------------------|
    |<str1> = <str2> |<str1> 和 <str2> 相等                      |
    |----------------+-------------------------------------------|
    |<str1> != <str2>|<str1> 和 <str2> 不相等                    |
    |----------------+-------------------------------------------|
    |<str1> < <str2> |<str1> 排列在 <str2> 之前（取決於語言環境）|
    |----------------+-------------------------------------------|
    |<str1> > <str2> |<str1> 排列在 <str2> 之後（取決於語言環境）|
    +------------------------------------------------------------+


    算術整數的比較在條件表示式中為 "-eq"，"-ne"，"-lt"，"-le"，"-gt"
    和 "-ge"。

%

12.1.4. shell 迴圈

    這裡有幾種可用於 POSIX shell 的迴圈形式。

      * "for x in foo1 foo2 … ; do command ; done"，該迴圈會將 "foo1
        foo2 …" 賦予變數 "x" 並執行 "command"。

      * "while condition ; do command ; done"，當 "condition" 為真時
        ，會重複執行 "command"。
   
      * "until condition ; do command ; done"，當 "condition" 為假時
        ，會重複執行 "command"。

      * "break" 可以用來退出迴圈。

      * "continue" 可以用來重新開始下一次迴圈。

    提示
   
    C 語言中的數值迭代可以用 seq(1) 實現來生成 "foo1 foo2 ..."。

    提示
   
    參見第 9.3.9 节 “使用檔案迴圈來重複一個命令”。

%

12.1.5. shell 命令列的處理順序

    shell 大致以下列的順序來處理一個指令碼。

      * shell 讀取一行。

      * 如果該行包含有"…" 或 '…'，shell 對該行各部分進行分組作為一個
        標識（one token）（譯註：one token 是指 shell 識別的一個結構
        單元）.

      * shell 通過下列方式將行中的其它部分分隔進標識（tokens）。

          + 空白字元：<空格> <tab> <換行符>

          + 元字元：< > | ; & ( )

      * shell 會檢查每一個不位於 "…" 或 '...' 的 token 中的保留字來調
        整它的行為。

          + 保留字：if then elif else fi for in while unless do done
            case esac

      * shell 展開不位於 "…" 或 '...' 中的別名。

      * shell 展開不位於 "…" 或 '...' 中的波浪線。

          + "~" → 當前使用者的家目錄

          + "~<user>" → <user> 的家目錄

      * shell 將不位於 '...' 中的變數展開為它的值。

          + 變數："$PARAMETER" 或 "${PARAMETER}"

      * shell 展開不位於 '...' 中的命令替換。

          + "$( command )" → "command" 的輸出

          + "` command `" → "command" 的輸出

      * shell 將不位於 "…" 或 '...' 中的 glob 路徑展開為匹配的檔名。

          + * → 任何字元

          + ? → 一個字元

          + […] → 任何位於 "…" 中的字元

      * shell 從下列幾方面查詢命令並執行。

          + 函式定義

          + 內建命令

          + “$PATH” 中的可執行檔案

      * shell 前往下一行，並按照這個順序從頭再次進行處理。

    雙引號中的單引號是沒有效果的。

    在 shell 中執行 “set -x” 或使用 “-x” 選項啟動 shell 可以讓 shell
    顯示出所有執行的命令。這對除錯來說是非常方便的。

%

12.1.6. 用於 shell 指令碼的應用程式

    為了使你的 shell 程式在 Debian 系統上儘可能地具有可移植性，你應該
    只使用必要的軟體包所提供的應用程式。

      * "aptitude search ~E"，列出必要的軟體包。
   
      * "dpkg -L <package_name> |grep '/man/man.*/'"，列出
        <package_name> 軟體包所提供的 man 手冊。

    表 12.8. 包含用於 shell 指令碼的小型應用程式的軟體包

    +-----------------------------------------------------------+
    |   軟體包   |   流行度   |大小 |           說明            |
    |------------+------------+-----+---------------------------|
    |coreutils   |V:891, I:999|17478|GNU 核心工具               |
    |------------+------------+-----+---------------------------|
    |debianutils |V:925, I:999|230  |用於 Debian 的各種工具     |
    |------------+------------+-----+---------------------------|
    |bsdmainutils|V:60, I:996 |26   |來自 FreeBSD 更多的工具集合|
    |------------+------------+-----+---------------------------|
    |bsdutils    |V:673, I:999|393  |來自 4.4BSD-Lite 的基礎工具|
    |------------+------------+-----+---------------------------|
    |moreutils   |V:11, I:35  |237  |額外的 Unix 工具           |
    +-----------------------------------------------------------+


    提示

    儘管 moreutils 可能不存在 Debian 之外，但它提供了一些有趣的小程式
    。最值得注意的一個是 sponge(8)，當你項覆蓋原來的檔案時，它會非常
    好用。

%

12.1.7. shell 指令碼對話方塊

    一個簡單的 shell 程式的使用者介面中，echo 和 read 命令的互動性較
    為一般，你可以使用對話程式等來提升互動性。

    表 12.9. 使用者介面程式列表

    +---------------------------------------------------------------+
    | 軟體包  |流行度 |大小|                  說明                  |
    |---------+-------+----+----------------------------------------|
    |x11-utils|V:180, |712 |xmessage(1)：在一個視窗中顯示一條訊息或 |
    |         |I:599  |    |疑問（X）                               |
    |---------+-------+----+----------------------------------------|
    |whiptail |V:87,  |71  |從 shell 指令碼中顯示使用者友好的對話方 |
    |         |I:995  |    |塊（newt）                              |
    |---------+-------+----+----------------------------------------|
    |dialog   |V:15,  |1222|從 shell 指令碼中顯示使用者友好的對話方 |
    |         |I:123  |    |塊（ncurses）                           |
    |---------+-------+----+----------------------------------------|
    |zenity   |V:87,  |384 |從 shell 指令碼中顯示圖形對話方塊（     |
    |         |I:409  |    |gtk2.0）                                |
    |---------+-------+----+----------------------------------------|
    |ssft     |V:0,   |75  |Shell 指令碼前端工具 (zenity, kdialog,  |
    |         |I:0    |    |and 帶有 gettext 的 dialog 封裝)        |
    |---------+-------+----+----------------------------------------|
    |gettext  |V:48,  |5843|“/usr/bin/gettext.sh”：翻譯資訊         |
    |         |I:312  |    |                                        |
    +---------------------------------------------------------------+


%

12.1.8. zenity 的 shell 指令碼案例

    下面是一個簡單的指令碼，它通過 dvdisaster(1) 建立了帶有 RS02 補充
    資料的 ISO 映像。

    #!/bin/sh -e
    # gmkrs02 : Copyright (C) 2007 Osamu Aoki <osamu@debian.org>, Public Domain
    #set -x
    error_exit()
    {
      echo "$1" >&2
      exit 1
    }
    # Initialize variables
    DATA_ISO="$HOME/Desktop/iso-$$.img"
    LABEL=$(date +%Y%m%d-%H%M%S-%Z)
    if [ $# != 0 ] && [ -d "$1" ]; then
      DATA_SRC="$1"
    else
      # Select directory for creating ISO image from folder on desktop
      DATA_SRC=$(zenity --file-selection --directory  \
        --title="Select the directory tree root to create ISO image") \
        || error_exit "Exit on directory selection"
    fi
    # Check size of archive
    xterm -T "Check size $DATA_SRC" -e du -s $DATA_SRC/*
    SIZE=$(($(du -s $DATA_SRC | awk '{print $1}')/1024))
    if [ $SIZE -le 520 ] ; then
      zenity --info --title="Dvdisaster RS02" --width 640  --height 400 \
        --text="The data size is good for CD backup:\\n $SIZE MB"
    elif [ $SIZE -le 3500 ]; then
      zenity --info --title="Dvdisaster RS02" --width 640  --height 400 \
        --text="The data size is good for DVD backup :\\n $SIZE MB"
    else
      zenity --info --title="Dvdisaster RS02" --width 640  --height 400 \
        --text="The data size is too big to backup : $SIZE MB"
      error_exit "The data size is too big to backup :\\n $SIZE MB"
    fi
    # only xterm is sure to have working -e option
    # Create raw ISO image
    rm -f "$DATA_ISO" || true
    xterm -T "genisoimage $DATA_ISO" \
      -e genisoimage -r -J -V "$LABEL" -o "$DATA_ISO" "$DATA_SRC"
    # Create RS02 supplemental redundancy
    xterm -T "dvdisaster $DATA_ISO" -e  dvdisaster -i "$DATA_ISO" -mRS02 -c
    zenity --info --title="Dvdisaster RS02" --width 640  --height 400 \
      --text="ISO/RS02 data ($SIZE MB) \\n created at: $DATA_ISO"
    # EOF

    你可能想要在桌面建立一個啟動器，其中的命令設定為類似 “/usr/local/
    bin/gmkrs02 %d” 的形式。

%

12.2. make

    Make 是一個維護程式組的工具。一旦執行 make(1)，make 會讀取規則檔
    案 Makefile，自從上次目標檔案被修改後，如果目標檔案依賴的相關檔案
    發生了改變，那麼就會更新目標檔案，或者目標檔案不存在，那麼這些檔
    案更新可能會同時發生。

    規則檔案的語法如下所示。

    目標：[相關檔案 ...]
    [TAB] 命令1
    [TAB] -命令2 # 忽略錯誤
    [TAB] @命令3 # 禁止回顯

    這裡面的 "[TAB]" 是一個 TAB 程式碼。每一行在進行變數替換以後會被
    shell 解釋。在行末使用 "\" 來繼續此指令碼。使用 "$$" 輸入 "$" 來
    獲得 shell 指令碼中的環境變數值。

    目標跟相關檔案也可以通過隱式規則給出，例如，如下所示。

    %.o: %.c header.h

    在這裡，目標包含了 "%" 字元 (只是它們中確切的某一個）。"%" 字元能
    夠匹配實際的目標檔案中任意一個非空的子串。相關檔案同樣使用 "%" 來
    表明它們是怎樣與目標檔案建立聯絡的。

    表 12.10. 自動變數的列表

    +-------------------------------------------------+
    |自動變數|                   值                   |
    |--------+----------------------------------------|
    |$@      |當前目標                                |
    |--------+----------------------------------------|
    |$<      |首個相關檔案                            |
    |--------+----------------------------------------|
    |$?      |所有較新的相關檔案                      |
    |--------+----------------------------------------|
    |$^      |所有相關檔案                            |
    |--------+----------------------------------------|
    |$*      |目標模式中，$* 指代匹配符 "%" 匹配的部分|
    +-------------------------------------------------+


    表 12.11. 變數擴充套件的列表

    +---------------------------+
    |變數擴充套件|     說明     |
    |------------+--------------|
    |foo1 := bar |一次性擴充套件|
    |------------+--------------|
    |foo2 = bar  |遞迴擴充套件  |
    |------------+--------------|
    |foo3 += bar |增加          |
    +---------------------------+


    執行 "make -p -f/dev/null" 命令來檢視內部自動化的規則。

%

12.3. C

    你可以通過下列方法設定適當的環境來編譯使用 C 程式語言編寫的程式。

    # apt-get install glibc-doc manpages-dev libc6-dev gcc build-essential

    libc6-dev 軟體包，即 GNU C 庫，提供了 C 標準庫，它包含了 C 程式語
    言所使用的標頭檔案和庫例程。

    參考資訊如下。

      * “info libc”（C 庫函式參考）

      * gcc(1) 和 “info gcc”
   
      * each_C_library_function_name(3)

      * Kernighan & Ritchie，“C 程式設計語言”，第二版（Prentice Hall
        ）

%

12.3.1. 簡單的 C 程式（gcc）

    一個簡單的例子 “example.c” 可以通過如下方式和 “libm” 庫一起編譯為
    可執行程式 “run_example”。

    $ cat > example.c << EOF
    #include <stdio.h>
    #include <math.h>
    #include <string.h>

    int main(int argc, char **argv, char **envp){
            double x;
            char y[11];
            x=sqrt(argc+7.5);
            strncpy(y, argv[0], 10); /* prevent buffer overflow */
            y[10] = '\0'; /* fill to make sure string ends with '\0' */
            printf("%5i, %5.3f, %10s, %10s\n", argc, x, y, argv[1]);
            return 0;
    }
    EOF
    $ gcc -Wall -g -o run_example example.c -lm
    $ ./run_example
            1, 2.915, ./run_exam,     (null)
    $ ./run_example 1234567890qwerty
            2, 3.082, ./run_exam, 1234567890qwerty

    為了使用 sqrt(3)，必須使用 “-lm” 連結來自 libc6 軟體包的庫 “/usr/
    lib/libm.so”。實際的庫檔案位於 “/lib/”，檔名為 “libm.so.6”，它是
    指向 “libm-2.7.so” 的一個連結。

    請看一下輸出文字的最後一段。即使指定了 “%10s”，它依舊超出了 10 個
    字元。

    使用沒有邊界檢查的指標記憶體操作函式，比如 sprintf(3) 和 strcpy
    (3), 是不建議使用，是為防止快取溢位洩露而導致上面的溢位問題。請使
    用 snprintf(3) 和 strncpy(3) 來替代.

%

12.4. 除錯

    除錯是程式中很重要的一部分。知道怎樣去除錯程式使得作為 Debian 使
    用者的你, 能夠做出有意義的錯誤報告。

%

12.4.1. 基本的 gdb 使用命令

    Debian 上原始的偵錯程式是 gdb(1), 它能讓你在程式執行的時候檢查程
    式。

    讓我們通過如下所示的命令來安裝 gdb 及其相關程式。

    # apt-get install gdb gdb-doc build-essential devscripts

    gdb 的好的教程由 "info gdb" 提供或者可以在網上的其他地方找到。如
    下是用 gdb(1) 在"程式"帶有 "-g" 選項編譯的時候來產生除錯資訊。

    $ gdb program
    (gdb) b 1                # 在第一行設定斷點
    (gdb) run args           # 帶引數執行程式
    (gdb) next               # 執行下一步
    ...
    (gdb) step               # 單步進入
    ...
    (gdb) p parm             # 列印 parm 的值
    ...
    (gdb) p parm=12          # 把值設為 12
    ...
    (gdb) quit

    提示
   
    許多 gdb(1) 命令都能被縮寫。Tab 擴充套件跟在 shell 一樣都能工作。

%

12.4.2. 除錯 Debian 軟體包

    因為在 Debian 系統上預設所有已安裝的二進位制程式都是精簡的，絕大
    多數的除錯符號已經從常規的軟體包中移除了。為了能用 gdb(1) 除錯
    Debian 軟體包，相對應的 *-dbg 軟體包或 *-dbgsym 軟體包需要被安裝
    (例如 libc6 需要安裝 libc6-dbg，coreutils 需要安裝
    coreutils-dbgsym)。

    老式的軟體包將提供相應的 *-dbg 軟體包。它將和原始軟體包一起，直接
    放在 Debian main 檔案庫。對於新的軟體包，當它們編譯時，將會自動產
    生 *-dbgsym 軟體包，那些除錯軟體包將被獨立放在 debian-debug 檔案
    庫. 更多資訊請參閱 Debian Wiki 文件 .

    如果一個需要被除錯的軟體包沒有提供其 *-dbg 軟體包或 *-dbgsym 軟體
    包，你需要按如下所示的從原始碼中重構並且安裝它。

    $ mkdir /path/new ; cd /path/new
    $ sudo apt-get update
    $ sudo apt-get dist-upgrade
    $ sudo apt-get install fakeroot devscripts build-essential
    $ apt-get source package_name
    $ cd package_name*
    $ sudo apt-get build-dep ./

    按需修改 bug。

    軟體包除錯版本跟它的官方 Debian 版本不衝突，例如當重新編譯已存在
    的軟體包版本產生的 "+debug1" 字尾，如下所示是編譯未發行的軟體包版
    本產生的 "~pre1" 字尾。

    $ dch -i

    如下所示編譯並安裝帶有除錯符號的軟體包。

    $ export DEB_BUILD_OPTIONS=nostrip noopt
    $ debuild
    $ cd ..
    $ sudo debi package_name*.changes

    你需要檢查軟體包的構建指令碼並確保編譯二進位制的時候使用了
    "CFLAGS=-g -Wall" 選項。

%

12.4.3. 獲得棧幀

    當你碰到程式崩潰的時候，報告 bug 時附上棧幀資訊是個不錯的注意。

    如下所示的步驟就可以取得棧幀資訊。

      * 在 gdb(1) 中執行程式。

      * 重現崩潰。
   
          + 它使得你重新回到 gdb 提示符。

      * 在 gdb 提示符後輸入 "bt"。

    程式在終端中的 gdb 環境執行時，如果它沒反應，你可以按下 Ctrl-C來
    中止程式來取得 gdb 提示符。

    提示

    通常，你會看到堆疊頂部有一行或者多行有 "malloc()" 或 "g_malloc()
    ".當這個出現的時候，你的堆疊不是非常有用的。找到一些有用資訊的一
    個簡單方法是設定環境變數 "$MALLOC_CHECK_" 的值為 2 (malloc(3)).你
    可以通過下面的方式在執行 gdb 時設定。

     $ MALLOC_CHECK_=2 gdb hello

%

12.4.4. 高階 gdb 命令

    表 12.12. 高階 gdb 命令列表

    +---------------------------------------------------------------+
    |          命令          |            命令用途的描述            |
    |------------------------+--------------------------------------|
    |(gdb) thread apply all  |得到多執行緒程式的所有執行緒棧幀      |
    |bt                      |                                      |
    |------------------------+--------------------------------------|
    |(gdb) bt full           |檢視函式呼叫棧中的引數資訊            |
    |------------------------+--------------------------------------|
    |(gdb) thread apply all  |和前面的選項一起得到堆疊和引數        |
    |bt full                 |                                      |
    |------------------------+--------------------------------------|
    |(gdb) thread apply all  |得到前10個呼叫的棧幀和引數資訊，以此來|
    |bt full 10              |去除不相關的輸出                      |
    |------------------------+--------------------------------------|
    |(gdb) set logging on    |把 gdb 的日誌輸出到檔案 (預設的是     |
    |                        |"gdb.txt")                            |
    +---------------------------------------------------------------+


%

12.4.5. 除錯與 X 相關的錯誤

    如果一個 GNOME 程式 preview1 收到了一個 X 錯誤，您應當看見一條下
    面這樣的資訊。

    'preview1' 程式出現 X 桌面系統錯誤。

    如果就是這種情況，你可以嘗試在執行程式的時候加上 "--sync" 選項，
    並且在 "gdk_x_error" 函式處設定中斷來獲得棧幀資訊。

%

12.4.6. 檢查庫依賴性

    按如下所示使用 ldd(1) 來找出程式的庫依賴性。

    $ ldd /bin/ls
            librt.so.1 => /lib/librt.so.1 (0x4001e000)
            libc.so.6 => /lib/libc.so.6 (0x40030000)
            libpthread.so.0 => /lib/libpthread.so.0 (0x40153000)
            /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)

    因為 ls(1) 執行在 `chroot`ed 環境，以上的庫在 `chroot`ed 環境也必
    須是可用的。

    參見第 9.3.6 节 “跟蹤程式活動”。

%

12.4.7. 記憶體洩漏檢測工具

    Debian 上有一些可用的記憶體洩漏檢測工具。

    表 12.13. 記憶體洩漏檢測工具的列表

    +---------------------------------------------------------------+
    |    軟體包    |  流行度   |大小 |             說明             |
    |--------------+-----------+-----+------------------------------|
    |libc6-dev     |V:249,     |14357|mtrace(1)：除錯 glibc 中的    |
    |              |I:620      |     |malloc                        |
    |--------------+-----------+-----+------------------------------|
    |valgrind      |V:6, I:46  |80378|記憶體偵錯程式和分析器        |
    |--------------+-----------+-----+------------------------------|
    |electric-fence|V:0, I:5   |70   |malloc(e) 偵錯程式            |
    |--------------+-----------+-----+------------------------------|
    |leaktracer    |V:0, I:3   |57   |C++ 程式記憶體洩露跟蹤器      |
    |--------------+-----------+-----+------------------------------|
    |libdmalloc5   |V:0, I:3   |393  |記憶體分配庫除錯              |
    +---------------------------------------------------------------+


%

12.4.8. 靜態程式碼分析工具

    如下是類似 lint 的靜態程式碼分析工具。

    表 12.14. 靜態程式碼分析工具的列表

    +---------------------------------------------------------------+
    |   軟體包    | 流行度  |大小|               說明               |
    |-------------+---------+----+----------------------------------|
    |splint       |V:0, I:4 |2315|靜態檢查 C 程式 bug 的工具        |
    |-------------+---------+----+----------------------------------|
    |flawfinder   |V:0, I:0 |181 |檢查 C/C++ 原始碼和查詢安全漏洞的 |
    |             |         |    |工具                              |
    |-------------+---------+----+----------------------------------|
    |perl         |V:610,   |705 |帶有內部靜態程式碼檢測的直譯器：  |
    |             |I:992    |    |B::Lint(3perl)                    |
    |-------------+---------+----+----------------------------------|
    |pylint       |V:2, I:13|1371|Python 程式碼靜態檢查器           |
    |-------------+---------+----+----------------------------------|
    |weblint-perl |V:0, I:1 |32  |用於 HTML 的小巧的語法檢查器      |
    |-------------+---------+----+----------------------------------|
    |linklint     |V:0, I:0 |344 |快速的網站維護工具及連結檢查器    |
    |-------------+---------+----+----------------------------------|
    |libxml2-utils|V:22,    |182 |使用 xmllint(1) 來檢查 XML 檔案   |
    |             |I:246    |    |                                  |
    +---------------------------------------------------------------+


%

12.4.9. 反彙編二進位制程式

    你可以使用下面的方式通過 objdump(1) 反編譯二進位制程式碼。

    $  objdump -m i386 -b binary -D /usr/lib/grub/x86_64-pc/stage1

    注意
   
    gdb(1) 可以用來互動式反彙編程式碼。

%

12.5. Flex — 一個更好的 Lex

    Flex 是相容 Lex 的快速語法分析程式生成器。

    可以使用 “info flex” 檢視 flex(1) 的教程。

    你需要提供你自己的 "main()" 和 "yywrap()".否則，你的 flex 程式，
    看起來像這樣的，編譯的時候將不會帶庫。這是因為 "yywrap" 是一個巨
    集， "%option main" 隱性打開了 "%option noyywrap".

    %option main
    %%

    .|\n    ECHO ;
    %%


    另外一種方法，在你的 cc(1) 命令列結尾，你可以使用編譯連結器選項，
    "-lfl"。(像使用 "-ll" 的 AT&T-Lex ). 在這種情況下，不需要
    "%option".

%

12.6. Bison — 一個更好的 Yacc

    在 Debian 裡，有幾個軟體包提供 Yacc相容的前瞻性的 LR 解析或 LALR
    解析的生成器。

    表 12.15. 相容 Yacc 的 LALR 解析器生成器列表

    +----------------------------------------------------------+
    |軟體包|  流行度  |大小|               說明                |
    |------+----------+----+-----------------------------------|
    |bison |V:9, I:103|2815|GNU LALR 解析器生成器              |
    |------+----------+----+-----------------------------------|
    |byacc |V:0, I:6  |160 |伯克利（Berkeley）LALR 解析器生成器|
    |------+----------+----+-----------------------------------|
    |btyacc|V:0, I:0  |243 |基於 byacc 的回溯解析生成器        |
    +----------------------------------------------------------+


    可以使用 “info bison” 檢視 bison(1) 的教程。

    你需要提供你自己的的 "main()" 和 "yyerror()".通常，Flex 建立的
    "main()" 呼叫 "yyparse()"，它又呼叫了 "yylex()".


%

12.7. Autoconf

    autoconf 是一種用於自動生成軟體原始碼包配置 shell 指令碼的工具，
    以適應使用完整 GNU 構建系統的各種類 Unix 系統。

    autoconf(1) 生成配置指令碼 “configure”。“configure” 使用
    “Makefile.in” 模板自動生成一個自定義的 “Makefile”。

%

12.7.1. 編譯並安裝程式

    警告
   
    當你安裝編譯好的程式的時候，注意不要覆蓋系統檔案。

    Debian 不會在 "/usr/local" 或 "/opt" 目錄下建立檔案。如果你想要原
    始碼編譯程式，把它安裝到 "/usr/local/" 目錄下，因為這並不會影響到
    Debian。

    $ cd src
    $ ./configure --prefix=/usr/local
    $ make
    $ make install # 這一步是把檔案安裝到系統上

%

12.7.2. 解除安裝程式

    如果你有原始碼並且它使用 autoconf(1)/automake(1)，如果你能記得你
    是怎樣配置它的話，執行如下的命令來解除安裝程式。

    $ ./configure "all-of-the-options-you-gave-it"
    # make uninstall

    或者，如果你十分確信安裝程序把檔案都放在了 "/usr/local/" 下並且這
    裡沒什麼重要的東西，你可以通過如下的命令來清除它所有的內容。

    # find /usr/local -type f -print0 | xargs -0 rm -f

    如果你不確定檔案被安裝到了哪裡，你可以考慮使用 checkinstall 軟體
    包中的 checkinstall(8)，它將會提供一個清晰的解除安裝路徑。現在，
    它支援建立帶有 “-D” 選項的 Debian 軟體包。

%

12.8. Perl 短指令碼的瘋狂

    雖然任何 AWK 指令碼都可以通過 a2p(1) 轉換成 Perl，但單行的 AWK 指
    令碼最好還是手動轉換為單行的 Perl 指令碼。

    讓我們來看看下面這個 AWK 指令碼片段。

    awk '($2=="1957") { print $3 }' |

    這等價於下列的任意一行。

    perl -ne '@f=split; if ($f[1] eq "1957") { print "$f[2]\n"}' |

    perl -ne 'if ((@f=split)[1] eq "1957") { print "$f[2]\n"}' |

    perl -ne '@f=split; print $f[2] if ( $f[1]==1957 )' |

    perl -lane 'print $F[2] if $F[1] eq "1957"' |

    perl -lane 'print$F[2]if$F[1]eq+1957' |

    最後一個簡直就是個迷。它用上了下面列出的這些 Perl 的特性。

      * 空格為可選項。
   
      * 存在從數字到字串的自動轉換。

    更多的命令列選項參見 perlrun(1)。想要更瘋狂的 Perl 指令碼，可以使
    用 Perl Golf。

%

12.9. Web

    基本的動態互動網頁可由如下方法制作。

      * 呈現給瀏覽器使用者的是 HTML 形式。

      * 填充並點選表單條目將會從瀏覽器向 web 伺服器傳送帶有編碼引數的
        下列 URL 字串之一。

          + "http://www.foo.dom/cgi-bin/program.pl?VAR1=VAL1&VAR2=
            VAL2&VAR3=VAL3"

          + "http://www.foo.dom/cgi-bin/program.py?VAR1=VAL1&VAR2=
            VAL2&VAR3=VAL3"

          + "http://www.foo.dom/program.php?VAR1=VAL1&VAR2=VAL2&VAR3=
            VAL3"

      * 在 URL 裡面 "%nn" 是使用一個 16 進位制字元的 nn 值代替。

      * 環境變數設定為: "QUERY_STRING="VAR1=VAL1 VAR2=VAL2 VAR3=
        VAL3"".

      * Web伺服器上的CGI程式 (任何一個 "program.*")在執行時，都會使用
        "$QUERY_STRING"環境變數.

      * CGI 程式的 stdout傳送到瀏覽器，作為互動式的動態 web 頁面展示
        。

    出於安全考慮，最好不要自己從頭編寫解析CGI引數的手藝. 在Perl和
    Python中有現有的模組可以使用. PHP 中包含這些功能. 當需要客戶端資
    料儲存時, 可使用HTTP cookies . 當需要處理客戶端資料時, 通常使用
    Javascript.

    更多資訊，參見通用閘道器介面, Apache 軟體基金會, 和 JavaScript.

    直接在瀏覽器地址中輸入 http://www.google.com/search?hl=en&ie=
    UTF-8&q=CGI+tutorial 就可以在 Google 上搜索 “CGI tutorial”。這是
    在 Google 伺服器上檢視 CGI 指令碼執行的好方法。

%

12.10. 原始碼轉換

    原始碼轉換程式。

    表 12.16. 原始碼轉換工具列表

    +---------------------------------------------------------------+
    | 軟體包  | 流行度 |大 | 關鍵詞  |             說明             |
    |         |        |小 |         |                              |
    |---------+--------+---+---------+------------------------------|
    |perl     |V:610,  |705|AWK→PERL |把原始碼從 AWK 轉換為 PERL:   |
    |         |I:992   |   |         |a2p(1)                        |
    |---------+--------+---+---------+------------------------------|
    |f2c      |V:0, I:6|442|FORTRAN→C|把原始碼從 FORTRAN 77 轉換成 C|
    |         |        |   |         |/C++: f2c(1)                  |
    |---------+--------+---+---------+------------------------------|
    |intel2gas|V:0, I:0|178|intel→gas|從 NASM (Intel 格式)轉換成 GNU|
    |         |        |   |         |彙編程式(GAS)                 |
    +---------------------------------------------------------------+


%

12.11. 製作 Debian 包

    如果你想製作一個 Debian 包，閱讀下面內容。

      * 第 2 章 Debian 軟體包管理理解基本的包管理系統

      * 第 2.7.13 节 “移植一個軟體包到 stable 系統” 理解基本的移植過
        程

      * 第 9.10.4 节 “Chroot 系統” 理解基本的 chroot 技術

      * debuild(1), pbuilder(1) 和 pdebuild(1)
   
      * 第 12.4.2 节 “除錯 Debian 軟體包” 編譯和除錯

      * Debian 新維護者指引作為一個教程(maint-guide 包)

      * Debian 開發者參考手冊 (developers-reference 包)

      * Debian 策略手冊 (debian-policy 包)

      * Debian 維護者指引 (debmake-doc 包)

    debmake, dh-make, dh-make-perl 等軟體包，對軟體包打包過程，也有幫
    助。

附录 A. 附錄

    本文檔背景。

A.1. Debian 迷宮

    Linux 系統是一個面向網路計算機的功能強大的計算平臺。然而，學習使
    用它的全部功能並非易事。使用非 PostScript 的打印機配置 LPR 打印機
    隊列，就是個好例子。（自從使用新 CUPS 系統的新的安裝系統出現後，
    就不再會有問題。）

    有一張完整而詳盡的地圖叫做“SOURCE CODE”，它非常準確但極難理解。還
    有一些參考書叫 HOWTO 和 mini-HOWTO，它們易於理解，但給出了太多細
    節反而讓人忘記了大方向。爲了使用某個命令，我有時得在長長的 HOWTO
    中找上半天。

    我希望這個“Debian 參考手冊（版本 2.77）”（2021-01-10 06:32:51 UTC
    ）能幫助在 Debian 迷宮裡面徘徊的人們，為他們提供一個好的出發方向
    。

A.2. 版權歷史

    Debian 參考手冊由我（Osamu Aoki<osamu at debian dot org>）發起，
    將其作爲一個個人系統管理筆記。其中的許多內容都是我從Debian 用戶郵
    件列表和其他 Debian 相關資源獲得的積累。

    在採納了來自 Josip Rodin 的建議之後（Josip Rodin 在Debian 文檔項
    目（DDP）中非常活躍）,“Debian 參考手冊（第一版，2001-2007）”成爲
    了 DDP 文檔的一員。

    6年後，我意識到原來的“Debian 參考手冊（第一版）”內容陳舊，便開始
    重新很多內容。新的“Debian 參考手冊（第二版）”在 2008 年發佈。

    教程的起源和靈感，可以通過下面的內容來追溯。

      * "Linux 使用者手冊" Larry Greenfield (1996年12月)

          + 該文件被後來的《Debian 教程》取代

      * "Debian 教程" Havoc Pennington (1998年12月11日)

          + 部分由 Oliver Elphick, Ole Tetlie, James Treacy, Craig
            Sawyer 和 Ivan E. Moore II 書寫

          + 該文件被後來的《Debian GNU/Linux: 安裝和使用手冊》取代

      * "Debian GNU/Linux: 安裝和使用手冊" John Goerzen 和 Ossama
        Othman (1999)

          + 該文件被《Debian 參考手冊（第一版）》取代

    軟體包和文件描述的一些起源和靈感，能夠通過下面的內容來追溯。

      * "Debian FAQ" (March 2002 年 3 月版本，當時是由 Josip Rodin 維
        護)

    其它內容的一些起源和靈感，能夠通過下面的內容來追溯。

      * "Debian 參考手冊 (第一版)" Osamu Aoki (2001–2007)
   
          + 於 2008 年被這個新的 "Debian 參考手冊 (第二版)" 取代。

    先前的“Debian 參考手冊 (第一版)”由許多貢獻者創建。

      * Thomas Hood 是網路配置主題的主要內容貢獻者

      * Brian Nelson 突出貢獻了關於 X 和 VCS 的相關主題

      * Jens Seidel 對構建腳本和許多內容的更正提供了幫助

      * David Sewell 進行了大量的校對

      * 來自翻譯者、貢獻者和 bug 報告者的許多貢獻

    Debian系統中許多的幫助頁面和信息頁面被用來作爲這個文檔的主要參考.
    在一些修正的程序上也考慮了公平使用, 它們中的許多地方, 尤其是命令
    的定義, 被經過精心的編輯, 以適應這些樣式和作爲本文檔的短語部分.

    gdb調試器的描述使用了擴展Debian 維基內容的回溯系統, 這是被Ari
    Pollak, Loïc Minier, 和Dafydd Harries 同意的.

    除了上面提到的部分之外，“Debian 參考手冊（版本 2.77）（2021-01-10
    06:32:51 UTC）”的大部分內容是我自己的工作。一些貢獻者也會對內容進
    行更新。

    作者 Osamu Aoki 在此感謝所有在文檔寫作過程中曾給予幫助的人。

A.3. 文檔格式

    英文原始文檔的源文件目前是使用 AsciiDoc 文本文件來書寫。AsciiDoc
    使用起來非常便利，因爲它比起整齊的 XML，鍵入比較少，並且用非常直
    觀的方式支持表格。你可以認爲 XML 和 PO 文件是真正的源文件。通過構
    建腳本，他們被轉換成 DocBook XML 格式，自動產生的數據會被插入，並
    形成一個最終的 Docbook XML 源。這個最終的 Docbook XML 源文件能夠
    被轉換成 HTML, epub, 純文本, PostScript, 和 PDF. (發佈的時候，會
    省略部分格式。)

