Debian リファレンス

                           [FAMILY Given]

製作著作 © 2013-2021 Osamu Aoki

    本 Debian リファレンス (第2.77版) (2021-01-10 06:32:51 UTC) はシ
    ステムインストール後のユーザー案内書として、Debian システムの広範
    な概論を提供します。本書は非開発者を対象にシェルコマンド例を通し
    てシステム管理の多くの局面を説明します。

概要

This book is free; you may redistribute it and/or modify it under the
terms of the GNU General Public License of any version compliant to
the Debian Free Software Guidelines (DFSG). (日本語による参考説明: 本
書はフリーです； Debian フリーソフトウェアーガイドライン (DFSG) に適
合するいかなるバージョンの GNU General Public License の条件の下でで
も再配布や改変をすることを許可します。)

---------------------------------------------------------------------

このDebian リファレンス (第2.77版) (2021-01-10 06:32:51 UTC) はシステ
ムインストール後のユーザー向け案内書として Debian のシステム管理に関
する概論の提供を目指しています。

本書が対象とする読者は、 GNU/Linux システムがどう機能するかを理解する
のに、シェルスクリプトぐらいは学ぶ気はあるが、全ての C のソースまで読
む気がない人です。

インスト─ルの方法は、以下を参照ください:

  * 現行安定システム用 Debian GNU/Linux インストールガイド

  * 現行テスティング(testing)システム用 Debian GNU/Linux インストール
    ガイド


1. 免責事項

    一切保証は致しません。全ての商標はそれぞれの商標の所有者の財産で
    す。

    Debian システム自体は動く標的です。このため最新状況を反映した正確
    な記述は困難です。現行の不安定版の Debian システムを用いて本書は
    記していますが、皆様が読まれる時点ではすでに記載内容が古くなって
    いるでしょう。

    本書はあくまで二次的参考文献として扱って下さい。本書は正式の案内
    書を置き換えません。著者及び本書への貢献者は本書中の誤謬や欠落や
    曖昧さが引き起こす結果に一切責任を負いません。


2. Debian とはなにか

    Debian プロジェクトはフリーなオペレーティングシステムを作ろうとい
    う共通目的を持った個人の集団です。そのディストリビューションは次
    の特徴があります。

      * ソフトウェアの自由へのコミットメント: Debian 社会契約と
        Debian フリーソフトウエアーガイドライン (DFSG)

      * インターネット上の分散型の無償ボランティア活動: https://
        www.debian.org

      * 多数のプリコンパイルされた高品質のソフトウエアーパッケージ
   
      * セキュリティーアップデートへの平易なアクセス提供による、安定
        性とセキュリティーの重視

      * 不安定版 unstable やテスト版 testing アーカイブによる、最新の
        ソフトウエアーへの円滑なアップグレードの重視

      * 多数のサポートされたハードウエアーアーキテクチャー

    Debian の中のフリーソフトウエアー構成要素は、GNU や Linux や BSD
    や X や ISC や Apache や Ghostscript や Common Unix Printing
    System や Samba や GNOME や KDE や Mozilla や LibreOffice や Vim
    や TeX や LaTeX や DocBook や Perl や Python や Tcl や Java や
    Ruby や PHP や Berkeley DB や MariaDB や PostgreSQL や Exim や
    Postfix や Mutt や FreeBSD や OpenBSD や Plan 9 やその他の多くの
    独立のフリーソフトウエアーのプロジェクトに由来します。Debian はこ
    の多種多様なフリーソフトウエアーを 1つのシステムにまとめ上げます
    。

3. 本書について


3.1. 編集指針

    本書の作成にあたり次の編集指針を守りました。

      * 概論を提供し枝葉末節は省略します。(全体像)

      * 簡潔を心がけました。(KISS)

      * 車輪の再発明をしません。(既存の参考文献へのポインターの利用)

      * 非 GUI ツールとコンソールを重視します。(シェル例示を使用)

      * 客観的であるようにします。(ポプコン等の利用)

    ヒント
   
    私はシステムの階層的側面やシステムの低レベルを明らかにしようとし
    ました。

%

3.2. 前提条件

    警告
   
    本文書だけに頼らず自分で答えを見出す努力をしっかりすることを期待
    します。本文書は効率的なスタートポイントを提供するだけです。

    一義的情報源から自分自身で解決策を探し出すべきです。

      * The Debian Administrator's Handbook

      * 一般的情報は https://www.debian.org にある Debian サイト

      * "/usr/share/doc/<package_name>" ディレクトリー下にある文書

      * Unix スタイルのマンページ: "dpkg -L <package_name> |grep '/
        man/man.*/'"

      * GNU スタイルの info ページ: "dpkg -L <package_name> |grep '/
        info/'"

      * バグレポート: http://bugs.debian.org/<package_name>

      * 変化中の事や特定案件に関しては、https://wiki.debian.org/ にあ
        る Debian の Wiki

      * http://tldp.org/ にある Linux 文書プロジェクト (TLDP) の
        HOWTO 文書

      * http://www.unix.org/ にある Open Group の The UNIX System
        Home Page 中の Single UNIX Specification

      * https://www.wikipedia.org/ にある Wikipedia のフリーの百科事
        典

    注記
   
    詳細な文書を読むには、"-doc" をサフィクスとする対応する文書パッケ
    ージをインストールする必要があるかもしれません。

%

3.3. 文書様式

    bash(1) シェルコマンドの例示をする次のような簡略化した表現スタイ
    ルで本書は情報を提供します。

    # <root アカウントからのコマンド>
    $ <ユーザーアカウントからのコマンド>

    これらのシェルプロンプトは使われるアカウントを区別します。これは
    ちょうど環境変数として: "PS1='\$'" と "PS2=' '" を設定した場合に
    相当します。これらの環境変数値はあくまで本書の読みやすさのためで
    、実際のインストール済みシステではほとんど見かけません。

    注記
   
    "PS1='\$'" と "PS2=' '" という環境変数値の意味は bash(1) を参照下
    さい。

    システム管理者が行うべきアクションは命令文で書かれています: 例え
    ば、「シェルに各コマンド文字列をタイプ後毎にエンターキーをタイプ
    します。」 (必ずしも「〜しましょう。」とはせず簡潔に訳しています
    。)

    英語では、テーブル中の説明や類似のコラムには、パッケージ説明の慣
    習に従い、定冠詞抜も不定冠詞も抜きの名詞句が入ります。これらには
    、マンページのコマンドの短い説明の慣習に従った頭の "to" 抜きの不
    定詞句が代わりに名詞句として入ることもあります。変だなとお考えの
    方もあるとは存じますが、これは本文書をできるだけ簡潔にするための
    著者の恣意的な文体の選択です。(対応部分を文切り型の名詞句的表現に
    訳しています。)

    注記
   
    コマンド名を含めて固有名詞はその位置によらず大文字・小文字の区別
    を保持します。

    本文中に引用されるコマンドの断片はダブルクォーテションマーク間に
    タイプライターフォントで書き "aptitude safe-upgrade" のように表現
    されます。

    本文中に設定ファイルから引用された文字データーはダブルクォーテシ
    ョンマーク間にタイプライターフォントで書き "deb-src" のように表現
    されます。

    コマンドはその名前をタイプライターフォントで書き、場合によっては
    その後ろにマンページのセクション番号を括弧中に入れて書き bash(1)
    のように表現されます。読者は次の様にタイプして情報を得るように心
    がけて下さい。

    $ man 1 bash

    マンページはその名前をタイプライターフォントで書き、その後ろにマ
    ンページのセクション番号を括弧中に入れて書き sources.list(5) のよ
    うに表現されます。読者は次の様にタイプして情報を得るように心がけ
    て下さい。

    $ man 5 sources.list

    info ページはダブルクォーテションマーク間にタイプライターフォント
    というコマンドの断片形式で書き "info make" のように表現されます。
    読者は次の様にタイプして情報を得るように心がけて下さい。

    $ info make

    ファイル名はダブルクォーテションマーク間にタイプライターフォント
    で書き "/etc/passwd" のように表現されます。読者は次の様にタイプし
    て情報を得るように心がけて下さい。

    $ sensible-pager "/etc/passwd"

    ディレクトリー名はダブルクォーテションマーク間にタイプライターフ
    ォントで書き "/etc/apt/" のように表現されます。読者は次の様にタイ
    プして情報を得るように心がけて下さい。

    $ mc "/etc/apt/"

    パッケージ名はその名をタイプライターフォントで書き "vim" のように
    表現されます。読者は次の様にタイプして情報を得るように心がけて下
    さい。

    $ dpkg -L vim
    $ apt-cache show vim
    $ aptitude show vim

    文書は、その場所のファイル名でダブルクォーテションマーク間にタイ
    プライターフォントで書き "/usr/share/doc/base-passwd/
    users-and-groups.txt.gz" や "/usr/share/doc/base-passwd/
    users-and-groups.html" のように表現されたり、その場所の URL で
    https://www.debian.org のように表現されます。読者は次の様にタイプ
    して情報を得るように心がけて下さい。

    $ zcat "/usr/share/doc/base-passwd/users-and-groups.txt.gz" | sensible-pager
    $ sensible-browser "/usr/share/doc/base-passwd/users-and-groups.html"
    $ sensible-browser "https://www.debian.org"

    環境変数は、頭に "$" がついた名前をダブルクォーテションマーク間に
    タイプライターフォントで書き、"$TERM" のように表現されます。読者
    は次の様にタイプして情報を得るように心がけて下さい。

    $ echo "$TERM"

%

3.4. ポプコン

    ポプコンのデーターは各パッケージの客観的人気の指標として提示され
    います。それがダウンロードされた日付は 2021-01-10 06:32:17 UTC で
    、 178828 を越すバイナリーパッケージ数と 26 のアーキテクチャーに
    またがる 197967 つの提出レポートからなります。

    注記

    amd64 の不安定版 unstable アーカイブは現在高々 62716 つのパッケー
    ジしか含みません。ポプコンデーターは多くの旧式設置システムからの
    レポートを含みます。

    "votes" を意味する "V:" が前についたポプコンの数は "1000 * (PC で
    最近実行されたパッケージに関するポプコン提出)/(全ポプコン提出)"
    として計算される。

    "installs" を意味する "I:" が前についたポプコンの数は "1000 * (PC
    にインストールされているパッケージに関するポプコン提出)/(全ポプコ
    ン提出)" として計算される。

    注記

    Popcon の数字はパッケージの重要性の絶対指標と考えるべきでません。
    統計を曲げる多くの因子があります。例えば、Popcon に参加しているシ
    ステムの一部は "/bin" などのディレクトリーをシステム性能向上のた
    めに "noatime" オプションでマウントすることで当該システムから
    "vote" することを実質的に禁止しているかもしれません。

%

3.5. パッケージサイズ

    各パッケージの客観的指標としてパッケージサイズデーターも提供され
    ます。それは "apt-cache show" や "aptitude show" コマンドが ( 現
    在の amd64 アーキテクチャー上の unstable リリース上で) 表示する
    "Installed-Size:" です。サイズは KiB (Kibibyte = 1024 バイト単位)
    で表示されます。

    注記

    小さなパッケージサイズのパッケージは unstable リリース中の当該パ
    ッケージが内容のある他パッケージを依存関係でインストールするため
    のダミーパッケージだからかもしれません。

    注記

    "(*)" が後ろについたパッケージのサイズは、unstable リリース中にパ
    ッケージが無く experimental リリース中のパッケージサイズが代用さ
    れたことを示します。

%

3.6. 本書へのバグ報告

    何かこの文書に問題を発見した場合には、debian-reference パッケージ
    に対して reportbug(1) を用いてバグ報告をして下さい。プレーンテキ
    ストバージョンかソースに対する "diff -u" による修正提案を含めて下
    さい。

%

4. 新規ユーザーへのリマインダー

    新規ユーザーへのリマインダーを以下に記します:

      * データをバックアップしましょう

      * パスワードとセキュリティーキーを保護する

      * KISS (keep it simple stupid、簡潔性尊重原則)

          + システムを過剰にエンジニアリングしてはいけません

      * ログファイルを読みましょう

          + 最初のエラーが大事なエラーです

      * RTFM (read the fine manual、良く書かれているマニュアルを読み
        ましょう)
   
      * 質問する前にインターネットを検索しましょう

      * 必要もないのに root になってはいけません

      * パッケージ管理システムを改変してはいけません

      * 自分が理解していないことを入力してはいけません

      * (全セキュリティレビューを受ける前に) ファイルのパーミッション
        を変更してはいけません

      * あなたの変更をテストするまでrootシェルを離れてはいけません

      * 常に代替ブートメディア (USB メモリースティック、CD、 …) を確
        保しましょう

%

5. 新規ユーザーへの引用文

    新規ユーザーを啓蒙する Debian のメーリングリストで見つけた興味深
    い引用文を記します。

      * "This is Unix. It gives you enough rope to hang yourself." 「
        これは Unix です。首を括るのに十分なロープをあてがってくれま
        すよ。」 --- Miquel van Smoorenburg <miquels at cistron.nl>
   
      * "Unix IS user friendly... It's just selective about who its
        friends are." 「 Unix はユーザーフレンドリー ( 使う人に優し
        い) です... 誰にフレンドリー ( 優しく) にするかの人見知りする
        だけです。」 --- Tollef Fog Heen <tollef at add.no>

    ウイキペディアの "Unix philosophy" という記事に、おもしろい格言集
    があります。

第1章 GNU/Linux チュートリアル

    コンピューターシステムを学ぶことは新しい外国語を学ぶことに似てい
    ると考えます。チュートリアルブックは有用ですが、実際に自ら使って
    学ぶことが必要です。円滑なスタートが出きるように、いくつかの基本
    的なポイントを説明します。

    Debian GNU/Linux の強力なデザインはマルチユーザー、マルチタスクと
    いう Unix オペレーティングシステムに由来します。これら Unix と
    GNU/Linux の特徴や類似点の強力さを活用することを覚えましょう。

    Unix 対象の文書を避けたり、GNU/Linux に関する文書だけに頼ることは
    、有用な情報を見逃すことになるので止めましょう。

    注記

    Unix 的システムをコマンドラインツールで少々使った経験があれば、私
    がここで説明することはすべてご存知でしょう。リアリティーチェック
    と記憶を呼び戻すのにこれを使って下さい。

1.1. コンソールの基礎

%

1.1.1. シェルプロンプト

    X Window システムを gdm3 等のディスプレーマネージャーとともにイン
    ストールした場合以外には、システム起動の際に文字の login スクリー
    ンが現れます。あなたのホスト名が foo と仮定すると、login プロンプ
    トは次に示すような見えます。

    foo login:

    GNOME や KDE のような GUI 環境をインストールした場合には、
    Ctrl-Alt-F1 とすることで login プロンプトが出て、Alt-F7 とするこ
    とで GUI 環境に戻れます (詳細は下記の「仮想コンソール」参照下さ
    い)。

    login プロンプトであなたのユーザー名 (例えば penguin) を打鍵し
    Enter キーを押します。さらにあなたのパスワードを打鍵し Enter キー
    を再び押します。

    注記

    Unix の伝統に従い、Debian システムではユーザー名とパスワードに関
    して大文字小文字の区別をします。ユーザー名は通常小文字のみから選
    ばれます。最初のユーザーアカウントは通常インストールの際に作られ
    ます。追加のユーザーアカウントは root によって adduser(8) を用い
    て作られます。

    "/etc/motd" (本日のメッセージ: Message Of The Day) に保存されてい
    る歓迎メッセージとコマンドプロンプトを表示しシステムが起動されま
    す。

    Debian GNU/Linux jessie/sid foo tty1
    foo login: penguin
    Password:
    Last login: Mon Sep 23 19:36:44 JST 2013 on tty3
    Linux snoopy 3.11-1-amd64 #1 SMP Debian 3.11.6-2 (2013-11-01) x86_64

    The programs included with the Debian GNU/Linux system are free software;
    the exact distribution terms for each program are described in the
    individual files in /usr/share/doc/*/copyright.

    Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
    permitted by applicable law.
    foo:~$

    これであなたはシェルの中にいます。シェルはあなたからのコマンドを
    解釈します。

%

1.1.2. X の下でのシェルプロンプト

    インストールの際に "Desktop environment" タスクを選定し GNOME の
    gdm3 とともに X Window システムをインストールした場合には、システ
    ムの起動するとグラフィカルな login プロンプトのスクリーンが表示さ
    れます。あなたのユーザー名とパスワードを入力することで非特権ユー
    ザーアカウントに login できます。タブ (tab) を用いたりマウスの第
    一クリックを用いるとユーザー名とパスワードの間を行き来できます。

    gnome-terminal(1) や rxvt(1) や xterm(1) のような
    x-terminal-emulator プログラムを X の下で起動するとシェルプロンプ
    トが得られます。GNOME デスクトップ環境下では、"Applications" →
    "Accessories" → "Terminal" とクリックしてもうまくいきます。

    次の「仮想コンソール」も参照下さい。

    デスクトップ環境 (例えば fluxbox) 次第ではメニューの起点がよく分
    からないことがあります。そんな時はデスクトップスクリーンの背景を
    (右)クリックしてメニューが表示されることを期待しましょう。

%

1.1.3. root アカウント

    root アカウントはスーパーユーザーとか特権ユーザーとも呼ばれます。
    このアカウントからは次のようなシステム管理活動ができます。

      * ファイルパーミッションによらずシステム上の任意ファイルに関し
        ての、読出し・書込み・削除

      * システム上のいかなるファイルに関して、ファイルの所有者やパー
        ミッション設定

      * システム上の非特権ユーザーのパスワードを設定

      * パスワード無しに任意アカウントへの login

    root アカウントの権限を使うには、この無制限の権限ゆえ配慮と責任あ
    る行動が求められます。

    警告
   
    root のパスワードを他人に決して教えてはいけません。

    注記

    ファイル (Debian システムにとってはファイルの一種である CD-ROM 等
    のハードウエアーデバイスも含む) パーミッションは、非 root ユーザ
    ーによるそのファイルの使用やアクセスをできなくなくすることがあり
    ます。この様な状況の下では root アカウントを使うことが簡便なテス
    ト法ですが、問題解決はファイルパーミッションとユーザーのグループ
    のメンバーシップを適正に設定する必要があります (「ファイルシステ
    ムのパーミッション」参照下さい)。

%

1.1.4. root シェルプロンプト

    root のパスワードを使って root のシェルプロンプトを使えるようにす
    る基本的な方法を次に記します。

      * 文字ベースのログインプロンプトに root と入力します。

      * GNOME デスクトップ環境下で、"Applications" → "Accessories" →
        "Root Terminal" とクリックします。

      * どのユーザーシェルプロンプトからでも "su -l" と入力します。

          + 現ユーザーの環境を一切引き継がません。

      * どのユーザーシェルプロンプトからでも "su" と入力します。

          + 現ユーザーの環境を一部引き継ぐ。

%

1.1.5. GUI のシステム管理ツール

    デスクトップのメニューが GUI のシステム管理ツールを適切な権限とと
    もに自動的に起動しない場合、gnome-terminal(1) や rxvt(1) や xterm
    (1) のような X ターミナルエミュレーターの root シェルプロンプトか
    ら起動できます。「root シェルプロンプト」 and 「X クライアントを
    root で実行」を参照下さい。

    警告

    gdm3(1) 等のディスプレーマネージャーのプロンプトに root と入力し
    て、X ディスプレー / セッションマネージャーを root アカウントのも
    とで決して起動してはいけません。

    警告

    クリチカルな情報が表示されている際には、あなたの X スクリーンを覗
    き見られるかもしれないのでリモートの信頼できない GUI プログラムを
    決して実行してはいけません。

%

1.1.6. 仮想コンソール

    デフォールトの Debian システムでは、6つの切り替え可能な VT100 様
    の文字コンソールが利用でき、Linux ホスト上で直接コマンドシェルを
    起動できます。GUI 環境下でない場合は、Left-Alt-key と F1 — F6 の
    中の一つのキーを同時に押すことで仮想コンソール間の切り替えができ
    ます。仮想ターミナルそれぞれに独立したアカウントでログインするこ
    とができ、。マルチユーザー環境を提供します。このマルチユーザー環
    境は Unix の偉大な機能で、癖になります。

    X Window システムの下では、Ctrl-Alt-F1 キーを押す、つまり
    left-Ctrl-key と left-Alt-key と F1-key キーを同時に押すと文字コ
    ンソール1にアクセスできます。通常仮想コンソール7で実行されている
    X Window システムへは Alt-F7 を押すことにより戻れます。

    これとは別の方法で、例えば仮想ターミナル1という今とは違う仮想ター
    ミナルへの変更がコマンドラインから出来ます。

    # chvt 1

%

1.1.7. コマンドプロンプトからの退出方法

    コマンドプロンプトで Ctrl-D、つまり left-Ctrl-key と d-key の同時
    押しをするとシェルでのアクティビティーを終了できます。文字コンソ
    ールの場合は、こうすると login プロンプト戻ります。これらのコント
    ロール文字は通常 "control D" と大文字を使って表記されますが、
    Shift キーを押す必要はありません。また Ctrl-D に関する簡略表記 ^D
    も使われます。この代わりに "exit" とタイプすることができます。

    x-terminal-emulator(1) にあっては、このようにすることで
    x-terminal-emulator のウィンドウが閉じることができます。

%

1.1.8. システムをシャットダウンする方法

    ファイル操作の際にパーフォーマンス向上のためにメモリーへのデータ
    ーのキャッシュがされる他の現代的な OS と同様に、Debian システムで
    も電源を安全に切る前に適正なシャットダウン手順を取る必要がありま
    す。これはすべてのメモリー上の変更を強制的にディスクに書き出しす
    ことで、ファイルの完全性を維持するためです。ソフトウエアー電源コ
    ントロールが利用できる場合、シャットダウン手続きはシステムの電源
    を自動的に落とします。(これがうまくいかない時には、シャットダウン
    手続きの後で数秒間電源ボタンを押す必要があるかもしれません。)

    通常のマルチユーザーモードからのシステムのシャットダウンがコマン
    ドラインから出来ます。

    # shutdown -h now

    シングルユーザーモードからのシステムのシャットダウンがコマンドラ
    インから出来ます。

    # poweroff -i -f

    この他に、"/etc/inittab" に "ca:12345:ctrlaltdel:/sbin/shutdown
    -t1 -a -h now" と書かれていれば、Ctrl-Alt-Delete (left-Ctrl-key
    と left-Alt-Key と Delete の同時押し) を入力するシャットダウン方
    法もあります。

    「SSH 上のリモートシステムをシャットダウンする方法」を参照下さい
    。

%

1.1.9. まともなコンソールの復元

    例えば "cat <some-binary-file>" のような変な事をした後でスクリー
    ンが無茶苦茶になった場合、コマンドプロンプトに "reset" と入力して
    下さい。このときコマンドを入力してもスクリーンには読み取れる表示
    がされないかもしれません。"clear" とすればスクリーンが消去できま
    す。

%

1.1.10. 初心者向け追加パッケージの提案

    デスクトップ環境タスク抜きの最小限インストレーション Debian シス
    テムですら基本的な Unix 機能は提供されますが、コマンドラインや
    curses に基づく mc や vim 等のいくつかの文字ターミナルパッケージ
    を apt-get(8) を使って次のように追加インストールすることから始め
    ることを初心者にお薦めします。

    # apt-get update
     ...
    # apt-get install mc vim sudo
     ...

    既にこれらのパッケージがインストールされている場合には、新しいパ
    ッケージはインストールされません。

    表1.1 興味あるテキストモードのプログラムパッケージのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプコ|サイ |                  説明                  |
    |   ジ    |  ン  | ズ  |                                        |
    |---------+------+-----+----------------------------------------|
    |mc       |V:59, |1482 |テキストモードの全画面ファイルマネージャ|
    |         |I:236 |     |ー                                      |
    |---------+------+-----+----------------------------------------|
    |sudo     |V:563,|4555 |ユーザーに限定的な root 権限を与えるプロ|
    |         |I:806 |     |グラム                                  |
    |---------+------+-----+----------------------------------------|
    |         |V:106,|     |Unix テキストエディター Vi IMproved (改 |
    |vim      |I:398 |3231 |良版 Vi)、プログラマーのためのテキストエ|
    |         |      |     |ディター (標準版)                       |
    |---------+------+-----+----------------------------------------|
    |         |V:62, |     |Unix テキストエディター Vi IMproved (改 |
    |vim-tiny |I:970 |1553 |良版 Vi)、プログラマーのためのテキストエ|
    |         |      |     |ディター (軽量版)                       |
    |---------+------+-----+----------------------------------------|
    |emacs-nox|V:4,  |18364|GNU project Emacs, the Lisp based       |
    |         |I:17  |     |extensible text editor                  |
    |---------+------+-----+----------------------------------------|
    |w3m      |V:31, |2289 |テキストモード WWW ブラウザー           |
    |         |I:284 |     |                                        |
    |---------+------+-----+----------------------------------------|
    |gpm      |V:11, |530  |テキストコンソール上の Unix 式のカットア|
    |         |I:17  |     |ンドペースト (daemon)                   |
    +---------------------------------------------------------------+


    いくつかの参考資料を読むのも良いことです。

    表1.2 有用な文書パッケージのリスト

    +---------------------------------------------------------------+
    |     パッケージ     |ポプコ|サイ|             説明             |
    |                    |  ン  | ズ |                              |
    |--------------------+------+----+------------------------------|
    |doc-debian          |I:854 |166 |Debian プロジェクトの文書、   |
    |                    |      |    |(Debian FAQ) 他               |
    |--------------------+------+----+------------------------------|
    |debian-policy       |I:36  |4306|Debian ポリシーマニュアルと関 |
    |                    |      |    |連文書                        |
    |--------------------+------+----+------------------------------|
    |developers-reference|I:6   |1917|Debian 開発者のためのガイドラ |
    |                    |      |    |インと情報                    |
    |--------------------+------+----+------------------------------|
    |maint-guide         |I:4   |987 |Debian 新メンテナ向けガイド   |
    |--------------------+------+----+------------------------------|
    |debian-history      |I:1   |4285|Debian プロジェクトの歴史     |
    |--------------------+------+----+------------------------------|
    |debian-faq          |I:849 |817 |Debian FAQ (よくある質問集)   |
    +---------------------------------------------------------------+


    これらのパッケージの一部を次のようにしてインストールします。

    # apt-get install package_name

%

1.1.11. 追加のユーザーアカウント

    次の練習のためにあなたのメインのユーザーアカウントを使いたくない
    場合には、例えば fish という追加のユーザーアカウントを作成できま
    す。root シェルプロンプトで次のように入力します。

    # adduser fish

    すべての質問に返事をします。

    こうすることで fish という名前の新規アカウントが作られます。練習
    の後で、このユーザーとそのホームディレクトリーは次のようのすれば
    削除できます。

    # deluser --remove-home fish

%

1.1.12. sudo の設定

    ラップトップ PC 上のデスクトップの Debian システム等のような典型
    的単一ユーザーワークステーションでは次のような単純な sudo(8) の設
    定をして、非特権ユーザー (例えば penguin) に管理者権限を (root パ
    スワードではなく) ユーザー自身のパスワードで与えることがよくあり
    ます。

    # echo "penguin  ALL=(ALL) ALL" >> /etc/sudoers

    これに代え、次のようにして非特権ユーザー penguin にパスワード一切
    無しに管理者権限を与えることもよくあります。

    # echo "penguin  ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

    このトリックの使用は、単一ユーザーワークステーション上であなた自
    身が管理者でユーザーである際のみに限るべきです。

    警告

    システムセキュリティー上非常に悪い事態を招くので、マルチユーザー
    ワークステーション上の通常ユーザーアカウントに対してこの様な設定
    をしてはいけません。

    注意
   
    上記例のような penguin のパスワードとアカウントは root パスワード
    や root アカウント同様の保護が必要です。

    注意

    この文脈上の管理者権限はワークステーションに関するシステム管理業
    務をする権限を与えられた人に属します。そのような権限と能力を持っ
    ていなければ、あなたの会社の管理部門の管理職や上司とはいえこのよ
    うな権限を与えてはいけません。

    注記

    特定デバイスや特定ファイルへのアクセスの権限を与えるには、sudo(8)
    をつかって得た root 権限を用いるのではなく、group を使って限定的
    アクセス与えることを考えるべきです。

    注記

    sudo(8) を使ってもう少し工夫された注意深い設定をすれば、共有シス
    テム上の他のユーザーに root パスワードを教えること無く限定的管理
    権限を許可することができます。こうすることは、誰が何をしたかを明
    らかにするので、複数の管理者がいるホストにおける責任の所在を明ら
    かにします。ただ、誰にもそんな権限を与えたく無いかもしれません。

%

1.1.13. お遊びの時間

    非特権ユーザーアカウントを使う限り全くリスク無く Debian システム
    でお遊びをする準備万端です。

    何故なら、たとえデフォールトのインストール後ですら Debian システ
    ムは非特権ユーザーがシステムに損害を与えられないように適正なファ
    イルパーミッションが設定されているからです。もちろん悪用可能な穴
    が残っているかもしれませんが、こんな問題まで心配する人はこのセク
    ションを読んでいるべきではなく、Securing Debian Manual を読むべき
    です。

    Debian システムを Unix 的システムとして次に学びましょう:

      * 「Unix-like ファイルシステム」 (基本コンセプト)

      * 「ミッドナイトコマンダー (MC)」 (サバイバル手法)

      * 「基本の Unix 的作業環境」 (基本手法)

      * 「シェルプロンプト」 (シェルのメカニズム)

      * 「Unix 的テキスト処理」 (文字処理手法)

%

1.2. Unix-like ファイルシステム

    GNU/Linux や他の Unix 的オペレーティングシステムでは、ファイルは
    ディレクトリーに整理されています。すべてのファイルやディレクトリ
    ーは、"/"を根 (root) に持つ一本の大きな木 (ツリー) のようにアレン
    ジされています。

    このようなファイルやディレクトリーはいくつかのデバイスに展開する
    ことができます。あるデバイス上にあるファイルシステムを大きなファ
    イルツリーにマウントするのに mount(8) が使われます。その逆に、そ
    れを切り離すのに umount(8) が使われます。最近の Linux カーネルで
    は、mount(8) をオプションとともに用いると、ファイルツリーの一部を
    別のところと結びつけたり、共有・非共有・従属・バインド不可として
    ファイルシステムをマウントもできます。各ファイルシステムごとの利
    用可能なマウントオプションは "/usr/share/doc/linux-doc-*/
    Documentation/filesystems/" にあります。

    Unix システム上のディレクトリーは、一部の他システム上ではフォルダ
    と呼ばれます。Unix システム上では "A:" のようなドライブというコン
    セプトが無いこと覚えておいて下さい。単一のファイルシステムがあっ
    て、そこにすべてが含まれています。これは Windows と比べた際の大き
    な利点です。

%

1.2.1. Unix ファイルの基礎

    Unix ファイルの基礎は以下です。

      * ファイル名は大文字と小文字を区別します。"MYFILE" と "MyFile"
        は異なるファイルです。

      * ルートディレクトリーはフィルシステムの根 (ルート、root) を意
        味して、単に "/" と記載されます。これを root ユーザーのホーム
        ディレクトリー "/root" とは混同しないで下さい。

      * 全てのディレクトリーには "/" 以外の文字・記号からなる名前がつ
        いています。ルートディレクトリーは例外で、その名前は "/" ("ス
        ラッシュ" とか "ルートディレクトリー" と読まれます) でその名
        前を変えることはできません。

      * 各ファイルやディレクトリーは、たどっていくとファイルに到達す
        るディレクトリーの列が示される、完全に記述したファイル名とか
        絶対ファイル名とかパスにより指定されます。これらの3つの表現は
        同義語です。

      * 全ての完全に記述したファイル名は "/" ディレクトリーで始まり、
        ファイル名中の各ディレクトリーやファイル名の間には "/" がはさ
        まります。最初の "/" はディレクトリー名です。その他の "/" は
        、次のサブディレクトリーとの区別をします。そして最後には実際
        のファイルの名前がきます。ちょっと混乱しそうですので、次の完
        全に記述したファイル名の例をご覧下さい: "/usr/share/keytables
        /us.map.gz"。一方このベース名である、"us.map.gz" だけをファイ
        ル名と呼ぶ人もあります。

      * ルートファイルシステムは "/etc/" や "/usr/" のような複数の枝
        を持ちます。これらのサブディレクトリーもまた "/etc/init.d/"
        や "/usr/local/" のように、さらにサブディレクトリーに枝別れし
        ます。これらの全体をまとめてディレクトリーツリーと呼びます。
        絶対ファイル名はツリーの根元 ("/") から枝の先 (ファイル) まで
        の経路として考えることもできます。また、あたかもディレクトリ
        ーツリーをルートディレクトリー ("/") という単一人物の全直系に
        広がる家系図のように人が話すのを聞いたことがあるでしょう。あ
        たかもそれぞれのサブディレクトリーに親があるとし、パスはファ
        イルの完全な祖先の系図のように表現します。ルートディレクトリ
        ーではない他の場所から始まる相対パスもあります。ディレクトリ
        ー "../" は親ディレクトリーを参照していることを覚えておきまし
        ょう。このような呼び方はディレクトリーのような構造を持つ他の
        階層的ツリー状のデーター構造体でもよく使われます。

      * ハードディスクのような物理デバイスに対応したパス名の要素は存
        在しません。ここが、パス名に "C:\" のようなデバイス名が含まれ
        る RT-11 や CP/M や OpenVMS や MS-DOS や AmigaOS や Microsoft
        Windows と違う点です。(但し、通常のファイルシステム中に物理デ
        バイスを示すディレクトリー項目はあります。「ファイルシステム
        の内側」参照下さい。)

    注記

    ほとんど全ての文字や記号をファイル名中に使えますが、実際そうする
    ことは賢明ではありません。スペースやタブや改行や他の特殊文字: { }
    ( ) [ ] ' ` " \ / > < | ; ! # & ^ * % @ $ はコマンドラインで特別
    な意味を持つので避けるべきです。名前の中の単語間には、ピリオドや
    ハイフンや下線を選んで区別します。各語頭を "LikeThis" のように語
    頭を大文字にすることもできます。経験を積んだ Linux のユーザーはフ
    ァイル名中にスペースが入ることを避けます。

    注記

    "root" (ルート) と言う言葉は "root ユーザー" と言う意味でも "ルー
    トディレクトリー" と言う意味でも使われます。それがいずれかは使わ
    れている文脈から明かです。

    注記

    パスと言う言葉は上述の完全に記述したファイル名に関して使われるば
    かりではなくコマンドサーチパスにも使われます。どちらの意味かは文
    脈から明かです。

    ファイル階層について詳細に学ぶ最も良い方法は、Filesystem
    Hierarchy Standard ("/usr/share/doc/debian-policy/fhs/
    fhs-2.3.txt.gz" や hier(7)) に記述されています。手始めとして次の
    事実を覚えるべきです。

    表1.3 重要ディレクトリーの使い方のリスト

    +---------------------------------------------------------+
    |ディレクトリー|           ディレクトリーの用途           |
    |--------------+------------------------------------------|
    |/             |ルートディレクトリー                      |
    |--------------+------------------------------------------|
    |/etc/         |システム全体の設定ファイル                |
    |--------------+------------------------------------------|
    |/var/log/     |システムのログファイル                    |
    |--------------+------------------------------------------|
    |/home/        |全ての非特権ユーザーのホームディレクトリー|
    +---------------------------------------------------------+


%

1.2.2. ファイルシステムの内側

    Unix の伝統に従い、Debian/Linux システムはハードディスクや他のス
    トレージデバイス上に存在する物理データーを表すファイルシステムを
    提供し、コンソールスクリーンやリモートのシリアルコンソールなどの
    ハードウェアデバイスとの相互作用が "/dev/" の下に統一された形式で
    表されています。

    Debian/Linux システム上の、各々のファイルやディレクトリーや名前付
    きパイプ (2つのプログラムがデーターを共有する方法) や物理デバイス
    は、それぞれの所有者 (owner) やデーターが所属するグループ (group)
    や最終アクセス時間などの付帯属性 (attribute) を記述する inode と
    呼ばれるデーター構造を持ちます。ほとんど全てをファイルシステム表
    現しようというアイデアは Unix の発明でしたし、現代的な Linux カー
    ネルはこのアイデアを一歩進めています。コンピューター上で実行され
    ているプロセス情報さえファイルシステム中に見つけられます。

    このような物理的実体と内部プロセスの抽象的かつ統一された表現は非
    常にパワフルなので、多くの全く異なるデバイスに同じコマンドを使用
    して同種の操作が行えます。実行中のプロセスに繋がった特殊なファイ
    ルにデーターを書き込むことでカーネルが如何に動作するかまで変更で
    きます。

    ヒント
   
    ファイルツリーや物理的実体の間の関係を確認する必要がある際には、
    mount(8) を引数無しで実行して下さい。

%

1.2.3. ファイルシステムのパーミッション

    Unix 的システムのファイルシステムのパーミッションは次の3つの影響
    されるユーザーのカテゴリーのために定義されています。

      * ファイルを所有するユーザー (user) (u)

      * ファイルが所属するグループ (group) 中の他ユーザー (g)

      * "世界" や "全員" とも呼ばれる、全他ユーザー (other) (o)

    ファイルでは、それぞれに対応するパーミッションは次のようになりま
    す。

      * 読出し (read) (r) パーミッションはファイル内容確認を可能にし
        ます。

      * 書込み (write) (w) パーミッションはファイル内容変更を可能にし
        ます。

      * 実行 (execute) (x) パーミッションはファイルをコマンド実行を可
        能にします。

    ディレクトリーでは、対応するパーミッションはそれぞれ次のようにな
    ります。

      * 読出し (read) (r) パーミッションはディレクトリー内容リストを
        可能にします。

      * 書込み (write) (w) パーミッションはディレクトリーへのファイル
        の追加削除を可能にします。

      * 実行 (execute) (x) パーミッションはディレクトリー内のファイル
        へのアクセスを可能にします。

    ここで、ディレクトリーに関する実行 (execute) パーミッションとはデ
    ィレクトリー内のファイルへの読出しを許可するのみならず、サイズや
    変更時間のようなアトリビュート閲覧を許可します。

    ファイルやディレクトリーのパーミッション情報他を表示するには、ls
    (1) が使われます。"-l" オプション付きでこれを実行すると、次の情報
    がこの順序で表示されます。

      * ファイルのタイプ (最初の文字)

      * ファイルのアクセスパーミッション (次の9文字。ユーザーとグルー
        プと他者の順にそれぞれに対して3文字から構成されている)

      * ファイルへのハードリンク数

      * ファイルを所有するユーザー (user) の名前

      * ファイルが所属するグループ (group)

      * ファイルのサイズ (文字数、バイト)

      * ファイルの日時 (mtime)

      * ファイルの名前

    表1.4 "ls -l" の出力の最初の文字のリスト

    +-----------------------+
    |文字|       意味       |
    |----+------------------|
    |-   |通常ファイル      |
    |----+------------------|
    |d   |ディレクトリー    |
    |----+------------------|
    |l   |シムリンク        |
    |----+------------------|
    |c   |文字デバイス名    |
    |----+------------------|
    |b   |ブロックデバイス名|
    |----+------------------|
    |p   |名前付きパイプ    |
    |----+------------------|
    |s   |ソケット          |
    +-----------------------+


    root アカウントから chown(1) を使用することでファイルの所有者を変
    更します。ファイルの所有者又は root アカウントから chgrp(1) を使
    用することでファイルのグループを変更します。ファイルの所有者又は
    root アカウントから chmod(1) を使用することでファイルやディレクト
    リーのアクセスパーミッションを変更します。foo ファイルの操作の基
    本的文法は次の通り。

    # chown <newowner> foo
    # chgrp <newgroup> foo
    # chmod  [ugoa][+-=][rwxXst][,...] foo

    例えば次のようにするとディレクトリーツリーの所有者をユーザー foo
    に変更しグループ bar で共有できます。

    # cd /some/location/
    # chown -R foo:bar .
    # chmod -R ug+rwX,o=rX .

    更に特殊なパーミッションビットが3つ存在します。

      * セットユーザー ID ビット (ユーザーの x に代えて s か S)

      * セットグループ ID ビット (グループの x に代えて s か S)

      * スティッキビット (他ユーザーの x に代えて t か T)

    ここで、これらのビットの "ls -l" のアウトプットはこれらの出力によ
    ってかくされた実行ビットが非設定 (unset) の場合大文字となります。

    セットユーザー ID を実行ファイルにセットすると、ユーザーはファイ
    ルの所有者 ID (例えば、root) を使って実行ファイルを実行することを
    許可されます。同様に、セットグループ ID を実行ファイルにセットす
    ると、ユーザーはファイルのグループ ID (例えば、root) を使って実行
    ファイルを実行することを許可されます。これらの設定はセキュリティ
    ーを破壊するリスクを引き起こすので、これらのビットを有効にするに
    は特別な注意が必要です。

    セットグループ ID をディレクトリーに対して有効にすると、ディレク
    トリーに作成した全ファイルがディレクトリーのグループに所属すると
    いう BSD 的ファイル生成手法が有効になります。

    スティッキビットをディレクトリーに対して有効にすると、ディレクト
    リーにあるファイルがファイルの所有者以外から削除されるのを防ぎま
    す。"/tmp" のような全員書込み可能ディレクトリーやグループ書込み可
    能なディレクトリーなどのにあるファイルの内容を安全にするためには
    、書込みパーミッションを無効にするだけでなく、ディレクトリーにス
    ティッキビットもセットする必要があります。さもなければ、ディレク
    トリーに書込みアクセスできるユーザーにより、ファイルが削除され、
    同じ名前で新規ファイルが作成されることを許してしまいます。

    ファイルパーミッションの興味ある例を次にいくつか示します。

    $ ls -l /etc/passwd /etc/shadow /dev/ppp /usr/sbin/exim4
    crw------T 1 root root   108, 0 Oct 16 20:57 /dev/ppp
    -rw-r--r-- 1 root root     2761 Aug 30 10:38 /etc/passwd
    -rw-r----- 1 root shadow   1695 Aug 30 10:38 /etc/shadow
    -rwsr-xr-x 1 root root   973824 Sep 23 20:04 /usr/sbin/exim4
    $ ls -ld /tmp /var/tmp /usr/local /var/mail /usr/src
    drwxrwxrwt 14 root root  20480 Oct 16 21:25 /tmp
    drwxrwsr-x 10 root staff  4096 Sep 29 22:50 /usr/local
    drwxr-xr-x 10 root root   4096 Oct 11 00:28 /usr/src
    drwxrwsr-x  2 root mail   4096 Oct 15 21:40 /var/mail
    drwxrwxrwt  3 root root   4096 Oct 16 21:20 /var/tmp

    chmod(1) を用いて、ファイルパーミッションを記述するためのもう一つ
    の数字モードが存在します。この数字モードは8進数を使った3桁から4桁
    の数字を用います。

    表1.5 chmod(1) コマンドで用いられるファイルパーミッションの数字モ
    ード

    +---------------------------------------------------------------+
    | 数字  |                         意味                          |
    |-------+-------------------------------------------------------|
    |1桁目  |セットユーザー ID (=4) とセットグループ ID (=2) とステ |
    |(任意) |ィキービット (=1) の和                                 |
    |-------+-------------------------------------------------------|
    |2桁目  |ユーザーに関する、読出し (read) (=4) と書込み (write)  |
    |       |(=2) と実行 (execute) (=1) のファイルパーミッションの和|
    |-------+-------------------------------------------------------|
    |3桁目  |グループに関して、同上                                 |
    |-------+-------------------------------------------------------|
    |4桁目  |ユーザーに関して、同上                                 |
    +---------------------------------------------------------------+


    これは複雑に聞こえるかもしれませんが、実際は本当にシンプルです。
    "ls -l" コマンドの出力の最初の数列 (2〜10列) を見て、それをファイ
    ルパーミッションのバイナリー表記 (2進数) ("-" を "0"、"rwx" を
    "1") として読むと、この数字モードの値はファイルパーミッションの8
    進数表現として意味を持ちます。

    例えば、次を試してみて下さい:

    $ touch foo bar
    $ chmod u=rw,go=r foo
    $ chmod 644 bar
    $ ls -l foo bar
    -rw-r--r-- 1 penguin penguin 0 Oct 16 21:39 bar
    -rw-r--r-- 1 penguin penguin 0 Oct 16 21:35 foo

    ヒント

    シェルスクリプトから "ls -l" で表示される情報にアクセスする必要が
    ある際には、test(1) や stat(1) や readlink(1) のような適切なコマ
    ンドの使用を考えるべきです。シェル組込みコマンドの "[" や "test"
    を使うのも手です。

%

1.2.4. 新規作成ファイルのパーミッションのコントロール: umask

    新規作成ファイルのやディレクトリーに適用されるパーミッションは
    umask シェル組込みコマンドを使うことにより制限できます。dash(1)
    か bash(1) か builtins(7) をご覧下さい。

    (ファイルパーミッション) = (要求されたパーミッション) & ~(umask 値)

    表1.6 umask 値の例

    +---------------------------------------------------------------+
    |umask|作成されるファイル|作成されるディレクトリ|    使い方     |
    |     |  パーミッション  |   ーパーミッション   |               |
    |-----+------------------+----------------------+---------------|
    |0022 |-rw-r--r--        |-rwxr-xr-x            |ユーザーのみに |
    |     |                  |                      |より書込み可   |
    |-----+------------------+----------------------+---------------|
    |0002 |-rw-rw-r--        |-rwxrwxr-x            |グループにより |
    |     |                  |                      |書込み可       |
    +---------------------------------------------------------------+


    Debian システムはユーザー専用グループ (UPG) 方式がデフォールト方
    式です。新規ユーザーがシステムに追加される毎に UPG は作成されます
    。UPG はそのグループを作成したユーザーと同じ名前を持ち、そのユー
    ザーが UPG の唯一のメンバーです。UPG 方式では、全ユーザーが各自専
    用のグループを持つので umask を 0002 と設定しても安全です。(一部
    Unix 系システムでは全一般ユーザーを1つの users グループに所属させ
    ることがよく行われます。そのような場合には安全のため 0022 と
    umask を設定します。)

    ヒント
   
    ~/.bashrc ファイル中に "umask 002" と書いて UPG を有効にしましょ
    う。

%

1.2.5. ユーザーのグループ (group) のパーミッション

    特定のユーザーにグループ許可を適用するには、/etc/group に関しては
    "sudo vigr" と /etc/gshadow に関しては "sudo vigr -s" を用いて、
    そのユーザーをグループのメンバーにする必要があります。新規のグル
    ープ設定を有効にするにはログアウト後ログイン (もしくは "exec
    newgrp" を実行) する必要があります。

    注記

    もし "auth optional pam_group.so" 行が "/etc/pam.d/common-auth"
    に書き加えれ、"/etc/security/group.conf" に対応する設定がされてい
    れば、実際のユーザーのグループメンバーシップは動的に割り当てられ
    ます。(4章認証参照下さい。)

    ハードウエアーデバイスは Debian システム上では一種のファイルでし
    かありません。CD-ROM や USB メモリースティックのようなデバイスを
    ユーザーアカウントからアクセスするのに問題があった場合にはそのユ
    ーザーを該当するグループのメンバーにします。

    いくつかのシステムが供給するグループはそのメンバーに root 権限無
    しに特定のファイルやデバイスにアクセスすることを可能にします。

    表1.7 ファイルアクセスのためにシステムが供給する特記すべきグルー
    プのリスト

    +---------------------------------------------------------------+
    |グルー |        アクセスできるファイルやデバイスの説明         |
    |  プ   |                                                       |
    |-------+-------------------------------------------------------|
    |dialout|シリアルポート ("/dev/ttyS[0-3]") への全面的かつ直接の |
    |       |アクセス                                               |
    |-------+-------------------------------------------------------|
    |dip    |信頼できるピアーにダイヤルアップ IP 接続をするためのシ |
    |       |リアルポートへの制限付きアクセス                       |
    |-------+-------------------------------------------------------|
    |cdrom  |CD-ROM や DVD+/-RW のドライバー                        |
    |-------+-------------------------------------------------------|
    |audio  |音声デバイス                                           |
    |-------+-------------------------------------------------------|
    |video  |映像デバイス                                           |
    |-------+-------------------------------------------------------|
    |scanner|スキャナー                                             |
    |-------+-------------------------------------------------------|
    |adm    |システムモニターのログ                                 |
    |-------+-------------------------------------------------------|
    |staff  |下級管理業務のためのディレクトリー: "/usr/local"、"/   |
    |       |home"                                                  |
    +---------------------------------------------------------------+


    ヒント

    モデムの設定をしたりどこにでも電話したり等するには dialout グルー
    プに所属する必要があります。もし信頼できるピアーに関する事前定義
    された設定ファイル "/etc/ppp/peers/" が root によって作成されてい
    ると、dip グループに属するだけで pppd(8) や pon(1) や poff(1) コ
    マンドを用いてダイヤルアップ IP 接続が作成できます。

    いくつかのシステムが供給するグループはそのメンバーに root 権限無
    しに特定のコマンドを実行することを可能にします。

    表1.8 特定コマンド実行のためにシステムが供給する特記すべきグルー
    プのリスト

    +---------------------------------------------------------------+
    |グルー |                  実行可能なコマンド                   |
    |  プ   |                                                       |
    |-------+-------------------------------------------------------|
    |sudo   |パスワード無しに sudo を実行                           |
    |-------+-------------------------------------------------------|
    |lpadmin|プリンターのデーターベースからプリンターを追加・変更・ |
    |       |削除するコマンドを実行                                 |
    +---------------------------------------------------------------+


    システムが供給するユーザーやグループの完全なリストは、base-passwd
    パッケージが供給する "/usr/share/doc/base-passwd/
    users-and-groups.html" の中にある最新バージョンの "Users and
    Groups" 文書を参照下さい。

    ユーザーやグループシステムを管理するコマンドは passwd(5) や group
    (5) や shadow(5) や newgrp(1) や vipw(8) や vigr(8) や pam_group
    (8) を参照下さい。

%

1.2.6. タイムスタンプ

    GNU/Linux ファイルのタイムスタンプには3種類あります。

    表1.9 タイムスタンプのタイプのリスト

    +----------------------------------------+
    |タイプ|     意味 (歴史的 Unix 定義)     |
    |------+---------------------------------|
    |mtime |ファイル内容変更時間 (ls -l)     |
    |------+---------------------------------|
    |ctime |ファイル状態変更時間 (ls -lc)    |
    |------+---------------------------------|
    |atime |ファイル最終アクセス時間 (ls -lu)|
    +----------------------------------------+


    注記
   
    ctime はファイル作成日時ではありません。

    注記
   
    GNU/Linux システム上では、実際の atime 値は歴史的 Unix 定義とは異
    なる場合があります。

      * ファイルが上書きされると、ファイルの mtime と ctime と atime
        の属性すべてが変更されます。

      * ファイルの所有者やパーミッションの変更をすると、ファイルの 
        ctime や atime アトリビュートを変えます。

      * 伝統的 Unix システム上ではファイルを読むとファイルの atime 属
        性が変更されます。

      * GNU/Linux システム上では、"strictatime" でファイルシステムを
        マウントした場合にファイルを読むとファイルの atime が変更され
        ます。

      * ファイルを初めて読み込んだときか、1日空けてアクセスした場合、
        ファイルの atime 属性の更新がGNU/Linux (Linux 2.6.30以降) の
        relatime でマウントされているファイルシステムでは生じます。

      * atime 属性は noatime でマウントされているファイルシステムでは
        、読み込み時に更新されることはありません。

    注記

    "noatime" や "relatime" マウントオプションは通常使用状況下でのフ
    ァイルシステムの読み出しパーフォーマンスを向上させるために導入さ
    れました。"strictatime" オプション下の単純なファイル読み出しオペ
    レーションは atime 属性を更新する時間のかかる書き込み操作を引き起
    こします。しかし、 atime 属性は mbox(5) ファイルを除くとほとんど
    使われることはありません。mount(8) を参照下さい。

    既存ファイルのタイムスタンプを変更するには touch(1) コマンドを使
    って下さい。

    タイムスタンプに関して、現代の英語ロケール ("fr_FR.UTF-8") では旧
    来のロケール ("C") と異なる文字列が ls コマンドから出力されます。

    $ LANG=fr_FR.UTF-8  ls -l foo
    -rw-rw-r-- 1 penguin penguin 0 oct. 16 21:35 foo
    $ LANG=C  ls -l foo
    -rw-rw-r-- 1 penguin penguin 0 Oct 16 21:35 foo

    ヒント
   
    "ls -l" の出力のカスタム化は「時間と日付のカスタム化表示」を参照
    下さい。

%

1.2.7. リンク

    "foo" というファイルを異なるファイル名 "bar" に結びつけるのには2
    つの方法があります。

      * ハードリンク

          + 既存ファイルの重複名

          + "ln foo bar"
   
      * シンボリックリンクもしくはシムリンク

          + 他のファイルをその名前で指す特殊ファイル

          + "ln -s foo bar"

    リンク数の変化と rm コマンドの結果の微妙な違いについての次の例を
    ご覧下さい。

    $ umask 002
    $ echo "Original Content" > foo
    $ ls -li foo
    1449840 -rw-rw-r-- 1 penguin penguin 17 Oct 16 21:42 foo
    $ ln foo bar     # hard link
    $ ln -s foo baz  # symlink
    $ ls -li foo bar baz
    1449840 -rw-rw-r-- 2 penguin penguin 17 Oct 16 21:42 bar
    1450180 lrwxrwxrwx 1 penguin penguin  3 Oct 16 21:47 baz -> foo
    1449840 -rw-rw-r-- 2 penguin penguin 17 Oct 16 21:42 foo
    $ rm foo
    $ echo "New Content" > foo
    $ ls -li foo bar baz
    1449840 -rw-rw-r-- 1 penguin penguin 17 Oct 16 21:42 bar
    1450180 lrwxrwxrwx 1 penguin penguin  3 Oct 16 21:47 baz -> foo
    1450183 -rw-rw-r-- 1 penguin penguin 12 Oct 16 21:48 foo
    $ cat bar
    Original Content
    $ cat baz
    New Content

    ハードリンクは同一ファイルシステム内に作れ、ls(1) コマンドに "-i"
    オプションを使って表示される inode 番号が同じです。

    シンボリックリンクは上の例に示したように、常にファイルアクセスパ
    ーミッション "rwxrwxrwx" を持ちますので、シンボリックリンクが指す
    ファイルのアクセスパーミッションが有効ファイルアクセスパーミッシ
    ョンとなります。

    注意

    もし特段の理由がないなら複雑なシンボリックリンクやハードリンクを
    作らない方が一般的には良いでしょう。シンボリックリンクの論理的組
    み合わせがファイルシステム中でループになっているという悪夢を引き
    起こすかもしれません。

    注記
   
    もしハードリンクを使う特段の理由がなければ、ハードリンクよりシン
    ボリックリンクを使う方が一般的には良いでしょう。

    "." ディレクトリーは、それ自身が中にあるディレクトリーとリンクし
    ていますので、新規ディレクトリーのリンク数は2から始まります。".."
    ディレクトリーは親ディレクトリーとリンクしているので、ディレクト
    リーのリンク数は新規サブディレクトリーの増加に伴い増加します。

    もし最近あなたが Windows から Linux に移動してきたなら、Unix のフ
    ァイル名のリンクは Windows 上でもっとも似ている "shortcuts" との
    比較で如何にうまくできているかにすぐ気づくでしょう。ファイルシス
    テム中に実装されているのでアプリケーションからはリンクされたファ
    イルなのかオリジナルなのかの区別がつきません。ハードリンクの場合
    は実際全く違いはありません。

%

1.2.8. 名前付きパイプ (FIFO)

    名前付きパイプは、パイプのように働くファイルです。何かをファイル
    に入れると、もう一方の端からそれが出てきます。こうしてこれは FIFO
    または First-In-First-Out (先入れ先出し) と呼ばれます。つまり、最
    初にパイプに入れられたものが最初にもう一方の端から出てきます。

    名前付きパイプに書き込む場合、パイプに書き込むプロセスは情報がパ
    イプから読出されるまで終了しません。名前付きパイプから読み出す場
    合、読出すプロセス何か読出すものが無くなるまで終了するのを待ちま
    す。パイプのサイズは常に 0 です。 --- 名前付きパイプはデーターを
    保存せず、シェルの "|" というシンタクッスが提供する機能ように2つ
    のプロセスをリンクするだけです。しかし、このパイプは名前を持つの
    で、2つのプロセスは同じコマンドラインになくても良いし、同じユーザ
    ーにより実行される必要さえありません。パイプは Unix の非常に影響
    力ある発明でした。

    例えば、次を試してみて下さい:

    $ cd; mkfifo mypipe
    $ echo "hello" >mypipe & # put into background
    [1] 8022
    $ ls -l mypipe
    prw-rw-r-- 1 penguin penguin 0 Oct 16 21:49 mypipe
    $ cat mypipe
    hello
    [1]+  Done                    echo "hello" >mypipe
    $ ls mypipe
    mypipe
    $ rm mypipe

%

1.2.9. ソケット

    ソケットはインターネットのコミュニケーションやデーターベースやオ
    ペレーティングシステム自身によって頻繁に使われます。ソケットは名
    前つきパイプ (FIFO) に似ており、異なるコンピューター間でさえプロ
    セス間の情報交換を可能にします。ソケットにとって、これらのプロセ
    スは同時に実行する必要も、同じ祖先プロセスの子供である必要もあり
    ません。これはプロセス間通信 (IPC) の終端点です。ネットワーク越し
    で異なるホストの間で情報の交換をすることも可能です。2つの典型的な
    ソケットは、インターネットソケットと Unix ドメインソケットです。

    ヒント
   
    "netstat -an" を実行すると特定のシステム上のソケットの全般状況が
    よく分かります。

%

1.2.10. デバイスファイル

    デバイスファイルは、システム上のハードディスク、ビデオカード、デ
    ィスプレー、キーボードなどの物理デバイス又は仮想デバイス等を意味
    します。仮想デバイスの例として "/dev/console" として表されるコン
    ソールがあります。

    2タイプのデバイスファイルがあります。

      * 文字デバイス

          + 1文字毎にアクセス可能

          + 1文字 = 1 バイト

          + 例: キーボードデバイス、シリアルポート等
   
      * ブロックデバイス

          + 比較的大きなブロック単位でアクセス可能

          + 1 ブロック > 1 バイト

          + 例: ハードディスク等

    デバイスファイルの読出し書込みが可能ですが、人間にとっては意味不
    明のバイナリーデーターがファイル中に多分含まれています。データー
    を直接デバイスファイルに書き込むことは時々ハードウェアの接続に関
    するトラブルシュートに役立ちます。例えば、プリンタデバイス "/dev/
    lp0" にテキストファイルをダンプしたり、適切なシリアルポート "/dev
    /ttyS0" にモデムコマンドを送ることができます。しかし、注意深くや
    らないと、大災害をもたらすことがあります。くれぐれも気をつけて下
    さい。

    注記
   
    通常のプリンターへのアクセスは lp(1) を使います。

    次のように ls(1) を実行するとデバイスノード番号が表示されます。

    $ ls -l /dev/sda /dev/sr0 /dev/ttyS0 /dev/zero
    brw-rw---T  1 root disk     8,  0 Oct 16 20:57 /dev/sda
    brw-rw---T+ 1 root cdrom   11,  0 Oct 16 21:53 /dev/sr0
    crw-rw---T  1 root dialout  4, 64 Oct 16 20:57 /dev/ttyS0
    crw-rw-rw-  1 root root     1,  5 Oct 16 20:57 /dev/zero

      * "/dev/sda" はメジャーデバイス番号8 とマイナーデバイス番号0 を
        持ちます。これは disk グループに所属するユーザーにより、読出
        し / 書込みアクセスが可能です。

      * "/dev/sr0" はメジャーデバイス番号11 とマイナーデバイス番号0
        を持ちます。これは cdrom グループに所属するユーザーにより、読
        出し / 書込みアクセスが可能です。
   
      * "/dev/ttyS0" はメジャーデバイス番号4 とマイナーデバイス番号64
        を持ちます。これは dialout グループに所属するユーザーにより、
        読出し / 書込みアクセスが可能です。

      * "/dev/zero" はメジャーデバイス番号1 とマイナーデバイス番号5
        を持ちます。これは誰によっても読出し / 書込みアクセスが可能で
        す。

    最近の Linux システムでは、"/dev/" の下のファイルは udev(7) メカ
    ニズムで自動的に充足されます。

%

1.2.11. 特別なデバイスファイル

    いくつかの特別なデバイスファイルがあります。

    表1.10 スペシャルなデバイスファイルのリスト

    +---------------------------------------------------------------+
    |デバイスフ|アクシ |              レスポンスの説明              |
    |  ァイル  | ョン  |                                            |
    |----------+-------+--------------------------------------------|
    |/dev/null |読出し |"行末 (EOF) 文字 " を返す                   |
    |----------+-------+--------------------------------------------|
    |/dev/null |書込み |何も返さず (底なしのデーターのゴミ捨て場)   |
    |----------+-------+--------------------------------------------|
    |/dev/zero |読出し |"\0 (NUL) 文字" を返す (ASCII の数字のゼロと|
    |          |       |は違う)                                     |
    |----------+-------+--------------------------------------------|
    |/dev/     |読出し |真の乱数発生機から真のエントロピーのあるラン|
    |random    |       |ダムな文字を返す (遅い)                     |
    |----------+-------+--------------------------------------------|
    |/dev/     |読出し |暗号学的にセキュアーな擬似乱数発生機からラン|
    |urandom   |       |ダムな文字を返す                            |
    |----------+-------+--------------------------------------------|
    |/dev/full |書込み |ディスクフル (ENOSPC) エラーを返す          |
    +---------------------------------------------------------------+


    以上はシェルのリディレクションとともによく使われます。(「典型的な
    コマンドシーケンスとシェルリディレクション」参照下さい)。

%

1.2.12. procfs と sysfs

    procfs と sysfs は "/proc" や "/sys" 上にマウントされる仮想ファイ
    ルシステムであり、カーネルの内部データー構造をユーザー空間にさら
    け出します。言い換えると、オペレーティングシステムのオペレーショ
    ンへの便利なのぞき窓となると言う意味で仮想といえます。

    "/proc" ディレクトリー中には、システム上で実行されている各プロセ
    スに対応したそのプロセス ID (PID) の名前がついたサブディレクトリ
    ー他があります。プロセス情報をアクセスする ps(1) のようなシステム
    ユーティリティーはこのディレクトリー構造からその情報を得ています
    。

    "/proc/sys/" の下のディレクトリーには実行時のカーネル変数を変更す
    るインターフェースがあります。(専用の sysctl(8) コマンドもしくは
    その起動 / 設定ファイル "/etc/sysctl.conf" によっても同様のことが
    できます。)

    特にあるファイル - "/proc/kcore" - に気づくと、パニックになる人が
    よくいます。これは一般に巨大です。これは (おおよそ) コンピュータ
    ーのメモリーの内容のコピーです。これは kernel をデバッグするのに
    用いられます。コンピューターのメモリーを指す仮想ファイルなので、
    そのサイズに関して心配する必要は全くありません。

    "/sys" の下のディレクトリーはカーネルから引き出されたデーター構造
    、その属性、それらの関連を含んでいます。一部カーネル変数を実行時
    に変更する機構もまた含まれたりします。

    linux-doc-* パッケージで供給される Linux カーネル文書 ("/usr/
    share/doc/linux-doc-2.6.*/Documentation/filesystems/*") 中の
    "proc.txt(.gz)" や "sysfs.txt(.gz)" や関連する他の文書を参照下さ
    い。

%

1.2.13. tmpfs

    tmpfs は仮想記憶中にすべてのファイルを保持する一時的なファイルシ
    ステムです。メモリー上のページキャッシュ中にある tmpfs のデーター
    は必要に応じてディスク上の swap 空間へと書き出せます。

    "/run" ディレクトリは初期ブートプロセスに tmpfs としてマウントさ
    れます。こうすることで "/" が読み取り専用でマウントされていてもそ
    こへの書き込みが可能です。これは過渡的な状態ファイルの保管のため
    の新たな場所で、Filesystem Hierarchy Standard のバージョン 2.3に
    規定されたいくつかの場所を置き換えます:

      * "/var/run" → "/run"

      * "/var/lock" → "/run/lock"

      * "/dev/shm" → "/run/shm"

    linux-doc-* パッケージで供給される Linux カーネル文書 ("/usr/
    share/doc/linux-doc-*/Documentation/filesystems/*") 中の
    "tmpfs.txt(.gz)" を参照下さい。

%

1.3. ミッドナイトコマンダー (MC)

    Midnight Commander (MC) は Linux コンソールや他の端末環境のための
    GNU 製 "スイス軍ナイフ" です。標準 Unix コマンドを習うよりもより
    簡単なメニューを使ったコンソール経験が初心者にもできます。

    "mc" と名づけられた Midnight Commander パッケージを次のようにして
    インストールする必要があります。

    $ sudo apt-get install mc

    Debian システムを探検するために mc(1) コマンドを使います。これは
    学習するための最良の方法です。カーソールキーとエンターキーを使う
    だけで興味深い場所をちょっと探検します。

      * "/etc" とサブディレクトリー

      * "/var/log" とサブディレクトリー
   
      * "/usr/share/doc" とサブディレクトリー

      * "/sbin" と "/bin"。

%

1.3.1. MC のカスタム化

    終了時に作業ディレクトリーを MC に変更させそのディレクトリーへ cd
    させるためには、mc パッケージが提供するスクリプトを "~/.bashrc"
    が含むように変更します。

    . /usr/lib/mc/mc.sh

    この理由は mc(1) ("-P" オプション項目) を参照下さい (今言っている
    ことがよく分からないなら、これは後日しても大丈夫です。)

%

1.3.2. MC の始動

    MC は次のようにして起動します。

    $ mc

    MC を使うとメニューを通じた最小限のユーザーの努力で全てのファイル
    操作の面倒が見られます。ヘルプ表示を出すには、ただ F1 を押すだけ
    です。カーソールキーとファンクションキーの操作だけで MC を使えま
    す。

    注記

    gnome-terminal(1) のようなコンソールでは、ファンクションキーのキ
    ーストロークがコンソールプログラムに横取りされる事があります。
    gnome-terminal の場合、"Edit" → "Keyboard Shortcuts" とするとこの
    機能を無効にできます。

    もし文字化け表示がされる文字符号化 (エンコーディング) 問題に出会
    った際には、MC のコマンドラインに "-a" を加えると解消する事があり
    ます。

    これでも MC の表示の問題が解消しない際には、「ターミナルの設定」
    を参照下さい。

%

1.3.3. MC のファイルマネージャー

    2つのディレクトリーパネルがありそれぞれファイルリストを含むのが標
    準です。他の便利なモードとしては、右側のウィンドウを
    "information" とセットしてファイルアクセス権情報などを表示するモ
    ードがあります。次にいくつかの不可欠なキーストロークを示します。
    gpm(8) デーモンを実行すると、Linux の文字ターミナルでマウスも使え
    ます。(MC で通常の挙動のカットアンドペーストをさせるには、shift
    キーを押して下さい。)

    表1.11 MC のキーバインディング

    +---------------------------------------------------------------+
    |      キー      |              キーバインディング              |
    |----------------+----------------------------------------------|
    |F1              |ヘルプメニュー                                |
    |----------------+----------------------------------------------|
    |F3              |内部ファイルビューワー                        |
    |----------------+----------------------------------------------|
    |F4              |内部エディター                                |
    |----------------+----------------------------------------------|
    |F9              |プルダウンメニュー有効                        |
    |----------------+----------------------------------------------|
    |F10             |MC を終了                                     |
    |----------------+----------------------------------------------|
    |Tab             |二つのウィンドウの間を移動                    |
    |----------------+----------------------------------------------|
    |Insert もしくは |コピーのような複数ファイル操作のためにファイル|
    |Ctrl-T          |をマーク                                      |
    |----------------+----------------------------------------------|
    |Del             |ファイルの削除 (気をつけましょう -- MC を安全 |
    |                |削除モードに設定)                             |
    |----------------+----------------------------------------------|
    |カーソールキー  |自明                                          |
    +---------------------------------------------------------------+


%

1.3.4. MC のコマンドライントリック

      * cd コマンドは選択されたスクリーンに表示されたディレクトリーを
        変更します。

      * Ctrl-Enter と Alt-Enter はファイル名をコマンドラインにコピー
        します。コマンドライン編集と一緒に cp(1) や mv(1) コマンドで
        御使用下さい。

      * Alt-Tab はシェルファイル名の自動展開の選択肢を表示します。
   
      * MC の引数で両ウィンドウのスタートディレクトリーを指定できます
        。例えば "mc /etc /root"。

      * Esc + n-key → Fn (つまり、Esc + 1 → F1、等々、Esc + 0 → F10)

      * Esc をキーの前に押すのは Alt をキーと同時に押すのと同様の効果
        があります。つまり、Esc + c は Alt-C と同じです。Esc はメタキ
        ーとよばれ時々 "M-" と表記されます。

%

1.3.5. MC の内部エディター

    MC の内部エディターは興味深いカットアンドペースト機構を持ちます。
    F3 キーを押すと、選択範囲のスタートとマークし、次に F3 を押すと、
    選択範囲のエンドとマークし、選択範囲を強調します。そしてカーソー
    ルを動かすことができます。F6 を押すと、選択範囲はカーソールの位置
    に移動します。F5 を押すと、選択範囲はコピーされ、カーソールの位置
    に挿入されます。F2 を押すとファイルをセーブします。F10 を押すと選
    択範囲はなくなります。ほとんどのカーソールキーは直感的に働きます
    。

    このエディターは次のコマンドの内のひとつを使いファイルに対し直接
    起動できます。

    $ mc -e filename_to_edit

    $ mcedit filename_to_edit

    これはマルチモードエディターではありませんが、複数の Linux コンソ
    ール上で使用すると同じ効果を発揮させされます。ウィンドウ間のコピ
    ーを行うには、 Alt-<n> キーを押して仮想コンソールを切替えて、
    "File→Insert file" や "File→Copy to file" を用いてファイルの一部
    を他のファイルに動かします。

    この内部エディターはお好きな他の外部エディターと置き換えが可能で
    す。

    また、多くのプログラムは使用するエディターを決定するために環境変
    数 "$EDITOR" や "$VISUAL" を使用します。最初 vim(1) や nano(1) が
    使いにくい場合には "~/.bashrc" に次に示す行を追加してエディターを
    "mcedit" に設定するのも一計です。

    export EDITOR=mcedit
    export VISUAL=mcedit

    できればこれは "vim" に設定することを推奨します。

    vim(1) が使いにくい場合には、mcedit(1) をほとんどのシステム管理業
    務のために使い続けられます。

%

1.3.6. MC の内部ビューワー

    MC は非常に賢明なビューワーです。文書内の単語を検索するための素晴
    らしいツールです。私は "/usr/share/doc" ディレクトリー内のファイ
    ルに対していつもこれを使います。これは大量にある Linux 情報を閲覧
    する最速の方法です。このビューワーは次のコマンドの内のひとつを使
    い直接起動できます。

    $ mc -v path/to/filename_to_view

    $ mcview path/to/filename_to_view

%

1.3.7. MC の自動起動機能

    ファイルの上で Enter を押すと、適切なプログラムがファイル内容を処
    理します (「スタートするプログラムのカスタム化」参照下さい)。これ
    は非常に便利な MC の機能です。

    表1.12 enter キー入力への MC の反応

    +---------------------------------------------------------------+
    |     ファイルタイプ      |         enter キーへの反応          |
    |-------------------------+-------------------------------------|
    |実行ファイル             |コマンド実行                         |
    |-------------------------+-------------------------------------|
    |man ファイル             |ビューワーソフトに内容をパイプ       |
    |-------------------------+-------------------------------------|
    |html ファイル            |ウェッブブラウザーに内容をパイプ     |
    |-------------------------+-------------------------------------|
    |"*.tar.gz" や "*.deb" フ |サブディレクトリーであるかのように内 |
    |ァイル                   |容を表示                             |
    +---------------------------------------------------------------+


    これらのビューワーや仮想ファイルの機能を有効にするためには、閲覧
    可能なファイルには実行可能と設定されていてはいけません。chmod(1)
    コマンドを使うか、MC のファイルメニュー経由で状態を変更して下さい
    。

%

1.3.8. MC の FTP 仮想ファイルシステム

    MC を Internet 越しでの FTP を用いたファイルアクセスに使えます。
    F9 を押してメニューに行き、"p" を押して FTP 仮想ファイルシステム
    を有効にします。"username:passwd@hostname.domainname" の形式で
    URL を入力すると、あたかもローカルにあるかのようにリモートディレ
    クトリーを取得します。

    "[deb.debian.org/debian]" を URL として Debian アーカイブを閲覧し
    ます。

%

1.4. 基本の Unix 的作業環境

    MC はほとんど全てのことを可能にしますが、シェルプロンプトから実行
    されるコマンドラインツールの使用方法について学び、Unix 的な作業環
    境に親しむのは非常に重要なことです。

%

1.4.1. login シェル

    ログインシェルは chsh(1) を使えば選択できます。

    表1.13 シェルプログラムのリスト

    +---------------------------------------------------------------+
    |パッケ|ポプコ |サイ| POSIX |               説明                |
    | ージ |  ン   | ズ |シェル |                                   |
    |------+-------+----+-------+-----------------------------------|
    |bash  |V:791, |6469|はい   |Bash: GNU Bourne Again SHell (デフ |
    |      |I:999  |    |       |ァクトスタンダード)                |
    |------+-------+----+-------+-----------------------------------|
    |tcsh  |V:9,   |1316|いいえ |TENEX C Shell: 拡張バージョンの    |
    |      |I:29   |    |       |Berkeley csh                       |
    |------+-------+----+-------+-----------------------------------|
    |dash  |V:907, |221 |はい   |Debian の Almquist シェル、シェルス|
    |      |I:992  |    |       |クリプトに好適                     |
    |------+-------+----+-------+-----------------------------------|
    |zsh   |V:37,  |2442|はい   |Z shell: 多くの拡張された標準シェル|
    |      |I:73   |    |       |                                   |
    |------+-------+----+-------+-----------------------------------|
    |mksh  |V:4,   |1469|はい   |Korn シェルの１バージョン          |
    |      |I:12   |    |       |                                   |
    |------+-------+----+-------+-----------------------------------|
    |csh   |V:2,   |343 |いいえ |OpenBSD の C シェル、Berkeley csh  |
    |      |I:8    |    |       |の派生                             |
    |------+-------+----+-------+-----------------------------------|
    |sash  |V:0,   |1054|はい   |組み込みコマンド付きの独立シェル   |
    |      |I:6    |    |       |(標準の "/bin/sh" には不向き)      |
    |------+-------+----+-------+-----------------------------------|
    |ksh   |V:3,   |3284|はい   |真の AT&T バージョンの Korn シェル |
    |      |I:16   |    |       |                                   |
    |------+-------+----+-------+-----------------------------------|
    |rc    |V:0,   |169 |いいえ |AT&T Plan 9 の rc シェルの実装     |
    |      |I:2    |    |       |                                   |
    |------+-------+----+-------+-----------------------------------|
    |posh  |V:0,   |190 |はい   |ポリシー準拠の通常シェル (pdksh の |
    |      |I:0    |    |       |派生)                              |
    +---------------------------------------------------------------+


    ヒント

    POSIX-ライクなシェルは基本シンタックスはにていますが、シェル変数
    や glob の展開のような基本事項の挙動が異なることがあります。詳細
    に関しては個々の文書を確認してください。

    このチュートリアル章内では、インタラクティブなシェルは常に bash
    です。

%

1.4.2. Bash のカスタム化

    vim(1) の挙動は "~/.vimrc" を使ってカスタム化できます。

    例えば、次を試してみて下さい。

    # enable bash-completion
    if ! shopt -oq posix; then
      if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
      elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
      fi
    fi

    # CD upon exiting MC
    . /usr/lib/mc/mc.sh

    # set CDPATH to a good one
    CDPATH=.:/usr/share/doc:~:~/Desktop:~
    export CDPATH

    PATH="${PATH+$PATH:}/usr/sbin:/sbin"
    # set PATH so it includes user's private bin if it exists
    if [ -d ~/bin ] ; then
      PATH="~/bin${PATH+:$PATH}"
    fi
    export PATH

    EDITOR=vim
    export EDITOR

    ヒント
   
    bash に関する更なるカスタム化方法は、9章システムに関するティップ
    中の「着色化されたコマンド」等にあります。

    ヒント
   
    bash-completion パッケージは bash で入力のプログラムによる補完を
    可能にします。

%

1.4.3. 特別のキーストローク

    Unix 的環境下では、特別の意味を持ったいくつかのキーストロークがあ
    ります。通常の Linux の文字ターミナルでは左側の Ctrl や Alt キー
    のみが期待にそって機能することに配慮下さい。次に特記すべき暗記す
    るべきキーストロークを記します。

    表1.14 Bash のキーバインディングのリスト

    +---------------------------------------------------------------+
    |           キー           |      キーバインディングの説明      |
    |--------------------------+------------------------------------|
    |Ctrl-U                    |カーソールの前の1行を消去           |
    |--------------------------+------------------------------------|
    |Ctrl-H                    |カーソールの前の1文字を削除         |
    |--------------------------+------------------------------------|
    |Ctrl-D                    |入力を終了 (シェルを使用中の場合、シ|
    |                          |ェルを終了)                         |
    |--------------------------+------------------------------------|
    |Ctrl-C                    |実行中のプログラムを終了            |
    |--------------------------+------------------------------------|
    |Ctrl-Z                    |プログラムをバックグラウンドジョブに|
    |                          |移動し一時停止                      |
    |--------------------------+------------------------------------|
    |Ctrl-S                    |スクリーンへの出力を停止            |
    |--------------------------+------------------------------------|
    |Ctrl-Q                    |スクリーンへの出力を再開            |
    |--------------------------+------------------------------------|
    |Ctrl-Alt-Del              |システムをリブート / 停止、inittab  |
    |                          |(5) 参照下さい                      |
    |--------------------------+------------------------------------|
    |Left-Alt キー (もしくは、 |Emacs および同様の UI でのメタキー  |
    |Windows キー)             |                                    |
    |--------------------------+------------------------------------|
    |Up-arrow                  |bash でコマンド履歴検索をスタート   |
    |--------------------------+------------------------------------|
    |Ctrl-R                    |bash でインクリメンタルなコマンド履 |
    |                          |歴検索をスタート                    |
    |--------------------------+------------------------------------|
    |Tab                       |bash のコマンドラインのファイル名入 |
    |                          |力を完結                            |
    |--------------------------+------------------------------------|
    |Ctrl-V Tab                |bash のコマンドラインで Tab を展開す|
    |                          |ることなく入力                      |
    +---------------------------------------------------------------+


    ヒント
   
    ターミナルの Ctrl-S 機能は stty(1) で無効にできます。

%

1.4.4. Unix 流のマウス操作

    Unix 流のマウス操作は3ボタンマウスが基本です。

    表1.15 Unix 流のマウス操作

    +---------------------------------------------------------------+
    |       アクション        |                反応                 |
    |-------------------------+-------------------------------------|
    |マウスの左クリックアンド |選択とクリップボードへのコピー       |
    |ドラッグ                 |                                     |
    |-------------------------+-------------------------------------|
    |左クリック               |選択スタート点の選択                 |
    |-------------------------+-------------------------------------|
    |右クリック               |選択エンド点の選択とクリップボードへ |
    |                         |のコピー                             |
    |-------------------------+-------------------------------------|
    |中クリック               |クリップボードをカーソール位置に挿入 |
    |                         |(ペースト)                           |
    +---------------------------------------------------------------+


    現代的なホイールマウスの真ん中のホイールは中マウスボタンと見なさ
    れ、中クリックに使えます。2ボタンマウス状況では左右のボタンの同時
    押しが中クリックとして使えます。Linux の文字コンソールでマウスを
    使うには gpm(8) をデーモンで実行する必要があります。

%

1.4.5. ページャー

    less(1) は機能拡張されたページャー (ファイル内容のブラウザー) で
    す。コマンドアーギュメントに指定されたファイル、もしくは標準入力
    を読みますless。コマンドで閲覧中にヘルプが必要なら、"h" を押すし
    ましょう。これは、more(1) よりもはるかに高機能で、"eval $
    (lesspipe)" または "eval $(lessfile)" をシェルのスタートスクリプ
    ト中で実行することで更に機能が拡充されます。詳しくは、"/usr/share
    /doc/less/LESSOPEN" を参照下さい。"-R" オプションを用いると、生の
    文字出力やANSI カラーエスケープシーケンスが有効になります。less
    (1) を参照下さい。

%

1.4.6. テキストエディター

    Unix 的システムで人気のある、Vim か Emacs プログラムのいずれかの
    バリアントに習熟するべきです。

    著者としては Vim コマンドに慣れることは正しいことだと考えています
    。なぜなら Vi エディターは Linux/Unix の世界では必ず存在するから
    です。(実際はオリジナルの vi か、新しい nvi がどこででも見つけら
    れるプログラムです。これにもかかわらず Vim を著者が初心者のために
    選んだのは、より強力かつ動作が充分似ているのと、F1 キーを通じてヘ
    ルプが表示されるからです。)

    これとは違い、Emacs か XEmacs をエディターとして選ぶのも、特にプ
    ログラムをするには、非常に良い選択です。Emacs には、ニュースリー
    ダ機能、ディレクトリーの編集機能、メール機能他の、過多な機能があ
    ります。プログラミングやシェルスクリプトの編集に使うときは、作業
    中のフォーマットをインテリジェントに認識し助力をしようとします。
    Linux 上で必要なプログラムは Emacs だけと考える人もいます。Emacs
    を今10分間学ぶことは将来何時間もの節約になります。Emacs を学ぶ際
    には GNU の Emacs マニュアルを持っておくことを高く推薦します。

    これら全てのプログラムには練習しながら学べるようにチュータリング
    プログラムが普通付いてきます。Vim を "vim" とタイプして起動し、F1
    キーを押します。最初の35行を読みます。カーソールを "|tutor|" に移
    動し Ctrl-] を押してオンラインの訓練コースを始めます。

    注記

    Vim や Emacs のような良いエディターは、UTF-8 や他のエギゾチックな
    符号化方式 (エンコーディング) のテキストを正しく扱えます。それに
    はUTF-8ロケール中のX環境で、必要なプログラムとフォントをインスト
    ールをするのが賢明です。マルチバイトテキストに関するそれぞれの文
    書を参照下さい。

%

1.4.7. デフォールトのテキストエディターの設定

    Debian にはいくつかの異なったエディターがあります。上述のように
    vim パッケージをインストールすることを推薦します。

    Debian ではシステムのデフォールトのエディターへの統一されたアクセ
    スを "/usr/bin/editor" コマンドを通じて提供しているので、他のプロ
    グラム (例えば reportbug(1) 等) が起動できます。設定変更は次で出
    来ます。

    $ sudo update-alternatives --config editor

    著者が "/usr/bin/vim.tiny" より "/usr/bin/vim.basic" を初心者に推
    薦するのはシンタクスハイライトをサポートしているからです。

    ヒント

    多くのプログラムは "$EDITOR" か "$VISUAL" という環境変数を使って
    どのエディターを使うかを決めます (「MC の内部エディター」と「スタ
    ートするプログラムのカスタム化」参照下さい)。Debian システムの整
    合性のために、これらを "/usr/bin/editor" と設定しましょう。(歴史
    的には "$EDITOR" は "ed" で、"$VISUAL" は "vi" でした。)

%

1.4.8. Vim のカスタム化

    vim(1) の挙動は "~/.vimrc" を使ってカスタム化できます。

    例えば、次を試してみて下さい:

    " -------------------------------
    " Local configuration
    "
    set nocompatible
    set nopaste
    set pastetoggle=<f2>
    syn on
    if $USER == "root"
     set nomodeline
     set noswapfile
    else
     set modeline
     set swapfile
    endif
    " filler to avoid the line above being recognized as a modeline
    " filler
    " filler

%

1.4.9. シェル活動の記録

    シェルコマンドの出力はスクリーンから押し出されると永久に無くなっ
    てしまうかもしれません。シェルでの活動を後で見直せるようにファイ
    ルに記録しておくのは良いことです。この種の記録は何らかのシステム
    管理作業をする際には非常に重要です。

    シェル活動の記録の基本方法は script(1) の下で実行することです。

    例えば、次を試してみて下さい:

    $ script
    Script started, file is typescript

    script の下で何なりのシェルコマンドを実行します。

    Ctrl-D を押して script から脱出します。

    $ vim typescript

    「シェルの活動を綺麗に記録」を参照下さい。

%

1.4.10. 基本 Unix コマンド

    基本的 Unix コマンドを学びます。ここでは一般的意味で "Unix" を使
    っています。いかなる Unix クローンの OS も等価なコマンドを提供し
    ます。Debian システムも例外ではありません。今一部コマンドが思うよ
    うに機能しなくても心配しないで下さい。エリアスがシェルで使われた
    場合は、対応するコマンドの出力は変わります。次は順番に実行すると
    言う意味の例ではありません。

    非特権ユーザーのアカウントから次のコマンドを全て実行します。

    表1.16 基本の Unix コマンドのリスト

    +---------------------------------------------------------------+
    |  コマンド   |                      説明                       |
    |-------------+-------------------------------------------------|
    |pwd          |カレント / ワーキングディレクトリーの名前を表示  |
    |-------------+-------------------------------------------------|
    |whoami       |現在のユーザー名を表示                           |
    |-------------+-------------------------------------------------|
    |id           |現在のユーザーのアイデンティティ (名前と uid と  |
    |             |gid と関連する group) を表示                     |
    |-------------+-------------------------------------------------|
    |file <foo>   |"<foo>" ファイルのファイルタイプを表示           |
    |-------------+-------------------------------------------------|
    |type -p      |"<commandname>" コマンドのファイルの位置を表示   |
    |<commandname>|                                                 |
    |-------------+-------------------------------------------------|
    |which        |, ,                                              |
    |<commandname>|                                                 |
    |-------------+-------------------------------------------------|
    |type         |"<commandname>" コマンドに関する情報を表示       |
    |<commandname>|                                                 |
    |-------------+-------------------------------------------------|
    |apropos      |"<key-word>" に関連したコマンドを発見            |
    |<key-word>   |                                                 |
    |-------------+-------------------------------------------------|
    |man -k       |, ,                                              |
    |<key-word>   |                                                 |
    |-------------+-------------------------------------------------|
    |whatis       |"<commandname>" コマンドに関する1行の説明を表示  |
    |<commandname>|                                                 |
    |-------------+-------------------------------------------------|
    |man -a       |"<commandname>" コマンドに関する説明を表示 (Unix |
    |<commandname>|スタイル)                                        |
    |-------------+-------------------------------------------------|
    |info         |"<commandname>" コマンドに関する比較的長い説明を |
    |<commandname>|表示 (GNU スタイル)                              |
    |-------------+-------------------------------------------------|
    |ls           |ディレクトリーの内容をリスト (非ドットファイルお |
    |             |よびディレクトリー)                              |
    |-------------+-------------------------------------------------|
    |ls -a        |ディレクトリーの内容をリスト (全ファイルおよびデ |
    |             |ィレクトリー)                                    |
    |-------------+-------------------------------------------------|
    |ls -A        |ディレクトリーの内容をリスト (ほとんど全ファイル |
    |             |およびディレクトリー、".." と "." をスキップ)    |
    |-------------+-------------------------------------------------|
    |ls -la       |ディレクトリーの内容を詳細情報とともにリスト     |
    |-------------+-------------------------------------------------|
    |ls -lai      |ディレクトリーの内容を inode 番号と詳細情報ととも|
    |             |にリスト                                         |
    |-------------+-------------------------------------------------|
    |ls -d        |現ディレクトリーの中の全ディレクトリーをリスト   |
    |-------------+-------------------------------------------------|
    |tree         |ファイルツリーの内容を表示                       |
    |-------------+-------------------------------------------------|
    |lsof <foo>   |"<foo>" ファイルのオープンの状態をリスト         |
    |-------------+-------------------------------------------------|
    |lsof -p <pid>|プロセス ID: "<pid>" によってオープンされたファイ|
    |             |ルをリスト                                       |
    |-------------+-------------------------------------------------|
    |mkdir <foo>  |現ディレクトリー中に "<foo>" という新規ディレクト|
    |             |リー作成                                         |
    |-------------+-------------------------------------------------|
    |rmdir <foo>  |現ディレクトリー中の "<foo>" というディレクトリー|
    |             |を削除                                           |
    |-------------+-------------------------------------------------|
    |             |現ディレクトリー中もしくは "$CDPATH" 変数中にリス|
    |cd <foo>     |トされたディレクトリー中の "<foo>" というディレク|
    |             |トリーにディレクトリーを変更                     |
    |-------------+-------------------------------------------------|
    |cd /         |ディレクトリーをルートディレクトリーに変更       |
    |-------------+-------------------------------------------------|
    |cd           |現在のユーザーのホームディレクトリーにディレクト |
    |             |リーを変更                                       |
    |-------------+-------------------------------------------------|
    |cd /<foo>    |絶対ディレクトリーパス "/<foo>" にディレクトリー |
    |             |を変更                                           |
    |-------------+-------------------------------------------------|
    |cd ..        |親ディレクトリーにディレクトリーを変更           |
    |-------------+-------------------------------------------------|
    |cd ~<foo>    |ユーザー "<foo>" のホームディレクトリーにディレク|
    |             |トリーを変更                                     |
    |-------------+-------------------------------------------------|
    |cd -         |一つ前のディレクトリーにディレクトリーを変更     |
    |-------------+-------------------------------------------------|
    |</etc/motd   |"/etc/motd" の内容をデフォールトのページャーで表 |
    |pager        |示                                               |
    |-------------+-------------------------------------------------|
    |touch        |空ファイル "<junkfile>" を作成                   |
    |<junkfile>   |                                                 |
    |-------------+-------------------------------------------------|
    |cp <foo>     |既存のファイル "<foo>" を新規ファイル "<bar>" に |
    |<bar>        |コピー                                           |
    |-------------+-------------------------------------------------|
    |rm <junkfile>|ファイル "<junkfile>" を削除                     |
    |-------------+-------------------------------------------------|
    |mv <foo>     |既存のファイル "<foo>" の名前を新しい名前 "<bar>"|
    |<bar>        |に変更 (ディレクトリー "<bar>" が存在不可)       |
    |-------------+-------------------------------------------------|
    |mv <foo>     |既存のファイル "<foo>" を新しい場所 "<bar>/<foo>"|
    |<bar>        |に移動 (ディレクトリー "<bar>" が存在しなければい|
    |             |けない)                                          |
    |-------------+-------------------------------------------------|
    |             |既存のファイル "<foo>" を新しい場所の新しい名前の|
    |mv <foo>     |ファイル "<bar>/<baz>" に移動 (ディレクトリー "  |
    |<bar>/<baz>  |<bar>" が存在しなければいけないが、ディレクトリー|
    |             |"<bar>/<baz>" は存在してはいけない)              |
    |-------------+-------------------------------------------------|
    |chmod 600    |既存のファイル "<foo>" を他人から読出し不可かつ書|
    |<foo>        |込み不可 (全員実行不可)                          |
    |-------------+-------------------------------------------------|
    |chmod 644    |既存のファイル "<foo>" を他人からは読出し可だが書|
    |<foo>        |込み不可 (全員実行不可)                          |
    |-------------+-------------------------------------------------|
    |chmod 755    |既存のファイル "<foo>" を他人からは読出し可だが書|
    |<foo>        |込み不可 (全員実行可能)                          |
    |-------------+-------------------------------------------------|
    |find . -name |シェルで "<pattern>" にマッチするファイル名を探索|
    |<pattern>    |(比較的遅い)                                     |
    |-------------+-------------------------------------------------|
    |locate -d .  |シェルで "<pattern>" にマッチするファイル名を探索|
    |<pattern>    |(定期的に生成されるデーターベースを使い比較的早  |
    |             |い)                                              |
    |-------------+-------------------------------------------------|
    |grep -e "    |現ディレクトリーにある ".html" で終わる全ファイル|
    |<pattern>"   |から "<pattern>" のパターンを検索し、該当する全フ|
    |*.html       |ァイルを表示                                     |
    |-------------+-------------------------------------------------|
    |top          |フルスクリーンを用いてプロセス情報を表示し、"q"  |
    |             |と押して終了                                     |
    |-------------+-------------------------------------------------|
    |ps aux |     |起動中の全プロセスの情報を BSD スタイルの出力を用|
    |pager        |いて表示                                         |
    |-------------+-------------------------------------------------|
    |ps -ef |     |起動中の全プロセスの情報を System-V スタイルの出 |
    |pager        |力を用いて表示                                   |
    |-------------+-------------------------------------------------|
    |ps aux | grep|"exim" もしくは "exim4" の起動中の全プロセスを表 |
    |-e "[e]xim4*"|示                                               |
    |-------------+-------------------------------------------------|
    |ps axf |     |起動中の全プロセスの情報を ASCII アート出力を用い|
    |pager        |て表示                                           |
    |-------------+-------------------------------------------------|
    |kill <1234>  |プロセス ID"<1234>" により識別されるプロセスを停 |
    |             |止                                               |
    |-------------+-------------------------------------------------|
    |gzip <foo>   |Lempel-Ziv コーディング (LZ77) を用いて "<foo>"  |
    |             |を圧縮し "<foo>.gz" を作成                       |
    |-------------+-------------------------------------------------|
    |gunzip       |"<foo>.gz" を解凍して "<foo>" を作成             |
    |<foo>.gz     |                                                 |
    |-------------+-------------------------------------------------|
    |             |Burrows-Wheeler ブロックソートテキスト圧縮アルゴ |
    |bzip2 <foo>  |リズムと Huffman コーディングを用いて "<foo>" を |
    |             |圧縮し "<foo>.bz2" を作成 (gzip より高圧縮率)    |
    |-------------+-------------------------------------------------|
    |bunzip2      |"<foo>.bz2" を解凍して "<foo>" を作成            |
    |<foo>.bz2    |                                                 |
    |-------------+-------------------------------------------------|
    |xz <foo>     |Lempel–Ziv–Markov鎖アルゴリズムを用いて "<foo>"  |
    |             |を圧縮し "<foo>.xz" を作成 (bzip2 より高圧縮率)  |
    |-------------+-------------------------------------------------|
    |unxz <foo>.xz|"<foo>.xz" を解凍して "<foo>" を作成             |
    |-------------+-------------------------------------------------|
    |tar -xvf     |"<foo>.tar" アーカイブからファイルを展開         |
    |<foo>.tar    |                                                 |
    |-------------+-------------------------------------------------|
    |tar -xvzf    |gzip 圧縮された "<foo>.tar.gz" アーカイブからファ|
    |<foo>.tar.gz |イルを展開                                       |
    |-------------+-------------------------------------------------|
    |tar -xvjf    |"<foo>.tar.bz2" アーカイブからファイルを展開     |
    |<foo>.tar.bz2|                                                 |
    |-------------+-------------------------------------------------|
    |tar -xvJf    |"<foo>.tar.xz" アーカイブからファイルを展開      |
    |<foo>.tar.xz |                                                 |
    |-------------+-------------------------------------------------|
    |tar -cvf     |フォルダ "<bar>/" の内容を "<foo>.tar" アーカイブ|
    |<foo>.tar    |にアーカイブ                                     |
    |<bar>/       |                                                 |
    |-------------+-------------------------------------------------|
    |tar -cvzf    |フォルダ "<bar>/" の内容を "<foo>.tar.gz" アーカ |
    |<foo>.tar.gz |イブに圧縮アーカイブ                             |
    |<bar>/       |                                                 |
    |-------------+-------------------------------------------------|
    |tar -cvjf    |フォルダ "<bar>/" の内容を "<foo>.tar.bz2" アーカ|
    |<foo>.tar.bz2|イブに圧縮アーカイブ                             |
    |<bar>/       |                                                 |
    |-------------+-------------------------------------------------|
    |tar -cvJf    |フォルダ "<bar>/" の内容を "<foo>.tar.xz" アーカ |
    |<foo>.tar.xz |イブに圧縮アーカイブ                             |
    |<bar>/       |                                                 |
    |-------------+-------------------------------------------------|
    |zcat         |標準のページャーを用いて圧縮された "README.gz" の|
    |README.gz |  |内容を表示                                       |
    |pager        |                                                 |
    |-------------+-------------------------------------------------|
    |zcat         |                                                 |
    |README.gz >  |"README.gz" の内容を解凍してファイル "foo" を作成|
    |foo          |                                                 |
    |-------------+-------------------------------------------------|
    |zcat         |圧縮された "README.gz" の内容をファイル "foo" の |
    |README.gz >> |末尾に追加 (ファイルが存在しない場合は事前に作成)|
    |foo          |                                                 |
    +---------------------------------------------------------------+


    注記
   
    Unix は "." で始まるファイル名を隠す伝統があります。それらは伝統
    的には特定の設定情報やユーザーの嗜好を含むファイルです。

    注記
   
    cd コマンドに関しては builtins(7) を参照下さい。

    注記

    最小限の Debian システムのデフォールトのページャーは more(1) で、
    スクロールバックができません。less パッケージを "apt-get install
    less" と言うコマンドラインでインストールすると、less(1) がデフォ
    ールトのページャーになりカーソールキーでスクロールバック出来るよ
    うになります。

    注記

    上記の "ps aux | grep -e "[e]xim4*"" コマンド中に現れる正規表現中
    の "[" と "]" は grep が自分自身にマッチするのを避けることを可能
    とします。正規表現中の "4*" は数字 "4" の0回以上の繰り返しを意味
    するので、grep が "exim" と "exim4" の両方にマッチすることが可能
    になります。 "*" はシェルのファイルネームのグロブでも正規表現でで
    も使われますが、これらの意味は異なります。grep(1) から正規表現を
    学びましょう。

    上記のコマンドを訓練として用いて、ディレクトリーを渡り歩き、シス
    テムの中を覗き込んで下さい。コンソールのコマンドに関して質問があ
    る場合は、必ずマニュアルページを読んでみて下さい。

    例えば、次を試してみて下さい:

    $ man man
    $ man bash
    $ man builtins
    $ man grep
    $ man ls

    マンページのスタイルは慣れるのに少々大変かもしれません。なぜなら
    特に比較的旧式の非常に伝統的なマンページは比較的言葉が少ないから
    です。しかし一旦慣れるとその簡潔さの良さが分かります。

    GNU や BSD 由来を含む多くの Unix 的なコマンドは次のように (場合に
    よっては一切の引数無しで) 起動すると簡単なヘルプ情報を表示します
    。

    $ <コマンド名> --help
    $ <コマンド名> -h

%

1.5. シェルプロンプト

    Debian システムの使い方が少し分かったでしょう。Debian システム上
    でのコマンド実行のメカニズムを掘り下げます。初心者のためにちょっ
    と簡略化してみました。正確な説明は bash(1) を参照下さい。

    シンプルなコマンドは、次の要素のシーケンスとなります。

     1. 変数代入 (任意)

     2. コマンド名

     3. 引数 (任意)

     4. リダイレクト (任意: > と >> と < と << 等。)

     5. 制御演算子 (任意: && と || と <改行> と ; と & と ( と ))

%

1.5.1. コマンド実行と環境変数

    環境変数の値は Unix コマンドの挙動を変えます。

    環境変数のデフォールト値は PAM システムが初期設定されます。その後
    次のような何らかのアプリケーションプログラムにより再設定されてい
    るかもしれません。

      * gdm3 のようなディスプレーマネージャーは環境変数を再設定します
        。
   
      * "~/.bash_profile" や "~/.bashrc" にあるシェル起動コードの中で
        シェルは環境変数を再設定します。

%

1.5.2. "$LANG" 変数

    "$LANG" 変数に与えられる完全なロケール値は3つの部分からなります:
    "xx_YY.ZZZZ"。

    表1.17 ロケールの値の3つの部分

    +-----------------------------------------------------+
    |ロケールの値|                  意味                  |
    |------------+----------------------------------------|
    |xx          |ISO 639 言語コード (小文字)、例えば "en"|
    |------------+----------------------------------------|
    |YY          |ISO 3166 国コード (大文字)、例えば "US" |
    |------------+----------------------------------------|
    |ZZZZ        |コードセット、常に "UTF-8" と設定       |
    +-----------------------------------------------------+


    言語コードと国コードは "info gettext" 中の該当記述を参照下さい。

    現代的な Debian システム上では、十分な理由と必要な知見をもって歴
    史的なコードセットを特段希望しない限り、常にコードセットを UTF-8
    と設定すべきです。

    ロケールの詳細に関しては、「ロケール」を参照下さい。

    注記
   
    On Debian system, make sure to install the locales-all package to
    use all locales.

    注記

    "LANG=en_US" は、"LANG=C" でも、"LANG=en_US.UTF-8" でもありません
    。それは "LANG=en_US.ISO-8859-1" です (「符号化方式の基本」参照下
    さい)。

    表1.18 推奨ロケールのリスト

    +------------------------------------------+
    |推奨ロケール|         言語 (地域)         |
    |------------+-----------------------------|
    |en_US.UTF-8 |英語 (米国)                  |
    |------------+-----------------------------|
    |en_GB.UTF-8 |英語 (英国)                  |
    |------------+-----------------------------|
    |fr_FR.UTF-8 |フランス語 (フランス)        |
    |------------+-----------------------------|
    |de_DE.UTF-8 |ドイツ語 (ドイツ)            |
    |------------+-----------------------------|
    |it_IT.UTF-8 |イタリア語 (イタリア)        |
    |------------+-----------------------------|
    |es_ES.UTF-8 |スペイン語 (スペイン)        |
    |------------+-----------------------------|
    |ca_ES.UTF-8 |カタラン語 (スペイン)        |
    |------------+-----------------------------|
    |sv_SE.UTF-8 |スウェーデン語 (スウェーデン)|
    |------------+-----------------------------|
    |pt_BR.UTF-8 |ポルトガル語 (ブラジル)      |
    |------------+-----------------------------|
    |ru_RU.UTF-8 |ロシア語 (ロシア)            |
    |------------+-----------------------------|
    |zh_CN.UTF-8 |中国語 (中華人民共和国)      |
    |------------+-----------------------------|
    |zh_TW.UTF-8 |中国語 (台湾 R.O.C.)         |
    |------------+-----------------------------|
    |ja_JP.UTF-8 |日本語 (日本)                |
    |------------+-----------------------------|
    |ko_KR.UTF-8 |韓国語 (大韓民国)            |
    |------------+-----------------------------|
    |vi_VN.UTF-8 |ベトナム語 (ベトナム)        |
    +------------------------------------------+


    典型的なコマンドの実行は次のようなシェルの行シーケンスを用います
    。

    $ date
    Sun Jun  3 10:27:39 JST 2007
    $ LANG=fr_FR.UTF-8 date
    dimanche 3 juin 2007, 10:27:33 (UTC+0900)

    以上で、date(1) プログラムは異なる環境変数 "$LANG" 値で実行されま
    す。

      * 最初のコマンドでは、"$LANG" はシステムでフォルトのロケール値
        "en_US.UTF-8" に設定されます。
   
      * 二番目のコマンドでは、"$LANG" はフランス語の UTF-8 ロケール値
        "fr_FR.UTF-8" に設定されます。

    ほとんどのコマンド実行は頭に環境変数定義をつけないのが普通です。
    上記の例の代わりに次のように実行します。

    $ LANG=fr_FR.UTF-8
    $ date
    dimanche 3 juin 2007, 10:27:33 (UTC+0900)

    ここで確認できるように、コマンドの出力は環境変数に影響されフラン
    ス語の出力となっています。もし環境変数を (例えばシェルスクリプト
    を呼んでいて) サブプロセスに引き継ぎたい際には、次のように環境変
    数を export (エクスポート) しなければいけません。

    $ export LANG

    注記

    典型的なコンソールターミナルを用いる際には、"$LANG" 環境変数は通
    常デスクトップ環境によって export されるように設定されています。
    上記例は export の効果を検証するあまりいい例ではありません。

    ヒント
   
    バグ報告をする際には、非英語環境を使っているなら、プログラムを
    "LANG=en_US.UTF-8" の下で実行し確認することが望ましいです。

    "$LANG" とこれに関連した環境変数に関しては、locale(5) と locale
    (7) を参照下さい。

    注記
   
    特段必要がなければ "$LC_*" 変数を避けて、"$LANG" 変数のみを用いて
    システム環境設定する事をお薦めします。

%

1.5.3. "$PATH" 変数

    シェルにコマンドを打ち込んだ際に、シェルは "$PATH" 環境変数にリス
    トされたディレクトリーのリストから検索します。"$PATH" 環境変数の
    値は、シェルの検索パスとも呼ばれます。

    標準の Debian インストールでは、ユーザーアカウントの "$PATH" 環境
    変数には "/sbin" や "/usr/sbin" が含まれないかもしれません。例え
    ば、ifconfig コマンドは "/sbin/ifconfig" とフルパスを使って実行す
    る必要があります。(類似の ip コマンドは "/bin" にあります。)

    Bash シェルの "$PATH" 環境変数は、"~/.bash_profile" か "~
    /.bashrc" ファイルで変更できます。

%

1.5.4. "$HOME" 変数

    多くのコマンドはユーザー特定の設定をホームディレクトリーに保存し
    、その内容でコマンドの挙動が変わります。ホームディレクトリーは
    "$HOME" 環境変数で指定されます。

    表1.19 "$HOME" の値のリスト

    +---------------------------------------------------------------+
    | "$HOME" の値 |               プログラム実行状況               |
    |--------------+------------------------------------------------|
    |/             |init プロセスが実行するプログラム (デーモン)    |
    |--------------+------------------------------------------------|
    |/root         |通常の root シェルから実行されるプログラム      |
    |--------------+------------------------------------------------|
    |/home/        |通常のユーザーシェルから実行されるプログラム    |
    |<normal_user> |                                                |
    |--------------+------------------------------------------------|
    |/home/        |通常のユーザーの GUI デスクトップメニューから実 |
    |<normal_user> |行されるプログラム                              |
    |--------------+------------------------------------------------|
    |/home/        |"sudo program" を用いて root として実行されるプ |
    |<normal_user> |ログラム                                        |
    |--------------+------------------------------------------------|
    |/root         |"sudo -H program" を用いて root として実行される|
    |              |プログラム                                      |
    +---------------------------------------------------------------+


    ヒント

    シェルは、"~/" を現ユーザーのホームディレクトリーである "$HOME/"
    へと展開します。シェルは、"~foo/" をユーザー foo のホームディレク
    トリーである "/home/foo/" へと展開します。

%

1.5.5. コマンドラインオプション

    プログラムコマンドによっては引数があります。引数は "-" か "--" で
    始まり、オプションと呼ばれ、コマンドの挙動をコントロールします。

    $ date
    Mon Oct 27 23:02:09 CET 2003
    $ date -R
    Mon, 27 Oct 2003 23:02:40 +0100

    上記で、コマンドライン引数 "-R" が date(1) の挙動を RFC2822 準拠
    の日付文字列出力と変えています。

%

1.5.6. シェルグロブ

    ファイル名を全てタイプせずにファイルのグループをコマンド処理した
    いことがよくあります。シェルのグロブ (ワイルドカードとも時々呼ば
    れる) を用いたファイル名のパターン展開を用いるとこのニーズに答え
    られます。

    表1.20 シェルグロブパターン

    +---------------------------------------------------------------+
    |シェルグロブパターン|            マッチルールの説明            |
    |--------------------+------------------------------------------|
    |*                   |"." で始まらないファイル (部分) 名        |
    |--------------------+------------------------------------------|
    |.*                  |"." で始まるファイル (部分) 名            |
    |--------------------+------------------------------------------|
    |?                   |1文字                                     |
    |--------------------+------------------------------------------|
    |[…]                 |括弧中の1文字                             |
    |--------------------+------------------------------------------|
    |[a-z]               |"a" と "z" の範囲間の1文字                |
    |--------------------+------------------------------------------|
    |[^…]                |括弧内 ("^" 以外) に含まれる文字以外の1文 |
    |                    |字                                        |
    +---------------------------------------------------------------+


    例えば、次を試してみて下さい:

    $ mkdir junk; cd junk; touch 1.txt 2.txt 3.c 4.h .5.txt ..6.txt
    $ echo *.txt
    1.txt 2.txt
    $ echo *
    1.txt 2.txt 3.c 4.h
    $ echo *.[hc]
    3.c 4.h
    $ echo .*
    . .. .5.txt ..6.txt
    $ echo .*[^.]*
    .5.txt ..6.txt
    $ echo [^1-3]*
    4.h
    $ cd ..; rm -rf junk

    glob(7) を参照下さい。

    注記

    通常のシェルのファイル名の展開と違い、find(1) が "-name" テスト他
    でシェルパターン "*" をテストする際にはファイル名先頭の "." とも
    マッチします。(新 POSIX 機能)

    注記

    BASH は shopt 組み込みオプションで "dotglob" や "noglob" や
    "nocaseglob" や "nullglob" や "extglob" などとすることでグロブ挙
    動を色々変更できます。bash(1) を参照下さい。

%

1.5.7. コマンドの戻り値

    各コマンドは終了ステータスを戻り値 (変数: "$?") として返します。

    表1.21 コマンドの終了コード

    +----------------------------------------------+
    |コマンドの終了状態|戻り値の数値|戻り値の論理値|
    |------------------+------------+--------------|
    |成功              |ゼロ、0     |真            |
    |------------------+------------+--------------|
    |失敗              |非ゼロ、-1  |偽            |
    +----------------------------------------------+


    例えば、次を試してみて下さい。

    $ [ 1 = 1 ] ; echo $?
    0
    $ [ 1 = 2 ] ; echo $?
    1

    注記

    シェルの論理的な観点では、成功は、0 (ゼロ) の値を持つ論理的真とし
    て扱われることに注意して下さい。少々これは非直感的なのでここで再
    確認する必要があります。

%

1.5.8. 典型的なコマンドシーケンスとシェルリディレクション

    次に挙げるシェルコマンドの一部として一行でタイプするシェルコマン
    ドの慣用句を覚えましょう。

    表1.22 シェルコマンドの慣用句

    +---------------------------------------------------------------+
    |コマンドの |                       説明                        |
    |  慣用句   |                                                   |
    |-----------+---------------------------------------------------|
    |command &  |command をサブシェル中でバックグラウンド実行       |
    |-----------+---------------------------------------------------|
    |command1 | |command1 の標準出力を command2 の標準入力にパイプ (|
    |command2   |同時並行で実行)                                    |
    |-----------+---------------------------------------------------|
    |command1 2>|command1 の標準出力と標準エラー出力を command2 の標|
    |&1 |       |準入力にパイプ (同時進行で実行)                    |
    |command2   |                                                   |
    |-----------+---------------------------------------------------|
    |command1 ; |command1 を実行し、後に続いて command2 を実行      |
    |command2   |                                                   |
    |-----------+---------------------------------------------------|
    |command1 &&|command1 を実行; もし成功したら、後に続いて        |
    |command2   |command2 を実行 (command1 と command2 の両方が成功 |
    |           |したら、正常終了を返す)                            |
    |-----------+---------------------------------------------------|
    |command1 |||command1 を実行; もし成功しなかったら、後に続いて  |
    |command2   |command2 を実行 (command1 か command2 のどちらかが |
    |           |成功したら、正常終了を返す)                        |
    |-----------+---------------------------------------------------|
    |command >  |command の標準出力を foo ファイルにリダイレクト (上|
    |foo        |書き)                                              |
    |-----------+---------------------------------------------------|
    |command 2> |command の標準エラー出力を foo ファイルにリダイレク|
    |foo        |ト (上書き)                                        |
    |-----------+---------------------------------------------------|
    |command >> |command の標準出力を foo ファイルにリダイレクト (追|
    |foo        |記)                                                |
    |-----------+---------------------------------------------------|
    |command 2>>|command の標準エラー出力を foo ファイルにリダイレク|
    |foo        |ト (追記)                                          |
    |-----------+---------------------------------------------------|
    |command >  |command の標準出力と標準エラー出力を foo ファイルに|
    |foo 2>&1   |リダイレクト                                       |
    |-----------+---------------------------------------------------|
    |command <  |command の標準入力を foo ファイルからリダイレクト  |
    |foo        |                                                   |
    |-----------+---------------------------------------------------|
    |command << |command の標準入力を "delimiter" に出会うまでのこれ|
    |delimiter  |に続く行からリダイレクト (ヒアドキュメント)        |
    |-----------+---------------------------------------------------|
    |command <<-|command の標準入力を "delimiter" に出会うまでのこれ|
    |delimiter  |に続く行からリダイレクト (ヒアドキュメント、行頭の |
    |           |タブ文字は入力から削除)                            |
    +---------------------------------------------------------------+


    Debian システムはマルチタスクシステムです。バックグラウンドジョブ
    を使うと単一シェルの下で複数プログラムを実行可能にします。バック
    グラウンドジョブの管理にはシェル内部組み込みコマンドの jobs や fg
    や bg や kill を使います。bash(1) マンページ中の "SIGNALS" と
    "JOB CONTROL" セクションや builtins(1) を参照下さい。

    例えば、次を試してみて下さい:

    $ </etc/motd pager

    $ pager </etc/motd

    $ pager /etc/motd

    $ cat /etc/motd | pager

    4つ全ての例が全く同じ表示をしますが、最後の例は余計な cat コマン
    ドを実行するので理由なくリソースの無駄遣いをします。

    シェルでは exec 組み込みコマンドを任意のファイルディスクリプタと
    ともに使いファイルをオープンすることができます。

    $ echo Hello >foo
    $ exec 3<foo 4>bar  # open files
    $ cat <&3 >&4       # redirect stdin to 3, stdout to 4
    $ exec 3<&- 4>&-    # close files
    $ cat bar
    Hello

    ファイルデスクリプタの 0-2 は事前定義されています。

    表1.23 事前定義されたファイルデスクリプタ

    +--------------------------------------------+
    |デバイス|     説明     |ファイルデスクリプタ|
    |--------+--------------+--------------------|
    |stdin   |標準出力      |0                   |
    |--------+--------------+--------------------|
    |stdout  |標準出力      |1                   |
    |--------+--------------+--------------------|
    |stderr  |標準エラー出力|2                   |
    +--------------------------------------------+


%

1.5.9. コマンドエリアス

    良く使うコマンドにエリアスを設定できます。

    例えば、次を試してみて下さい:

    $ alias la='ls -la'

    こうすると、"la" が "ls -la" の短縮形として機能し、全てのファイル
    を長いリスト形式でリストします。

    既存のエリアスは alias でリストできます (bash(1) の "SHELL
    BUILTIN COMMANDS" 参照下さい)。

    $ alias
    ...
    alias la='ls -la'

    type 内部コマンドを使うと正確なパスやコマンドの正体を識別できます
    (bash(1) の "SHELL BUILTIN COMMANDS" 下参照下さい)。

    例えば、次を試してみて下さい:

    $ type ls
    ls is hashed (/bin/ls)
    $ type la
    la is aliased to ls -la
    $ type echo
    echo is a shell builtin
    $ type file
    file is /usr/bin/file

    上記で、ls は最近探索されましたが "file" は最近探索されていませの
    で、"ls" は "ハッシュされた" つまりシェルには "ls" コマンドの場所
    を高速アクセスのために内部記録していると表示されます。

    ヒント
   
    「着色化されたコマンド」を参照下さい。

%

1.6. Unix 的テキスト処理

    Unix 的作業環境では、テキスト処理はテキストを標準テキスト処理ツー
    ルの連鎖パイプを通す行います。これは決定的な Unix の発明です。

%

1.6.1. Unix テキストツール

    Unix 的システムでしばしば使われる標準テキスト処理ツールがいくつか
    あります。

      * 正規表現無使用:

          + cat(1) はファイルをつなぎ合わせ全てを出力します。

          + tac(1) はファイルをつなぎ合わせ逆順で出力します。

          + cut(1) は行の一部を選択し出力します。

          + head(1) はファイルの最初の部分を選択し出力します。

          + tail(1) はファイルの最後の部分を選択し出力します。

          + sort(1) は行を順番に並び替えます。

          + uniq(1) は順番に並べられたファイルから重複行を削除します
            。

          + tr(1) は文字を変換削除します。

          + diff(1) は1行ごとにファイルを比較します。

      * 基本正規表現 (BRE) 使用:

          + egrep(1) はテキストのパターンマッチをします。
   
          + ed(1) は原始的な行エディター。

          + sed(1) はストリームエディター。

          + vim(1) はスクリーンエディター。

          + emacs(1) はスクリーンエディター。(ちょっと拡張された BRE)

      * 拡張正規表現 (ERE) 使用:

          + egrep(1) はテキストのパターンマッチをします。

          + awk(1) は単純なテキスト処理をします。

          + tcl(3tcl) は考え得る全てのテキスト処理をします: re_syntax
            (3)。時々 tk(3tk) とともに使用されます。

          + perl(1) は考え得る全てのテキスト処理をします。perlre(1).

          + pcregrep パッケージの pcregrep(1) はテキストのパターンマ
            ッチを Perl 互換正規表現 (PCRE) パターンを使ってします。

          + re モジュールとともに使うことで python(1) は考え得る全て
            のテキスト処理をします。"/usr/share/doc/python/html/
            index.html" を参照下さい。

    もしこれらのコマンドが正確にどう動作するかを確認したいなら、"man
    command" を使って自分で見つけましょう。

    注記

    ソート順や範囲表現はロケールに依存します。コマンドの伝統的挙動を
    得たい際には、"LANG=C" をコマンドの前に付けて UTF-8 ロケールでは
    なく C ロケールでコマンドを使います。(「"$LANG" 変数」と「ロケー
    ル」を参照下さい)。

    注記

    Perl 正規表現 (perlre(1)) と Perl 互換正規表現 (PCRE) と re モジ
    ュールで提供される Python 正規表現は ERE に多くの共通の拡張をして
    います。

%

1.6.2. 正規表現

    正規表現は多くのテキスト処理ツールで使われています。シェルグロブ
    に類似していますがより複雑で強力です。

    正規表現はマッチするパターンを表現し、テキスト文字とメタ文字から
    なっています。

    メタ文字は特別な意味を持った文字です。上記のようにテキストツール
    によって、BRE と ERE の2つの主要なスタイルがあります。

    表1.24 BRE と ERE のメタ文字

    +---------------------------------------------------------------+
    |   BRE    |  ERE  |               正規表現の説明               |
    |----------+-------+--------------------------------------------|
    |\ . [ ] ^ |\ . [ ]|共通のメタ文字                              |
    |$ *       |^ $ *  |                                            |
    |----------+-------+--------------------------------------------|
    |\+ \? \(  |       |"\" でエスケープされた、BRE のみで用いるメタ|
    |\) \{ \} \|       |文字                                        |
    ||         |       |                                            |
    |----------+-------+--------------------------------------------|
    |          |+ ? ( )|"\" でエスケープされ無い、ERE のみで用いるメ|
    |          |{ } |  |タ文字                                      |
    |----------+-------+--------------------------------------------|
    |c         |c      |非メタ文字 "c" にマッチ                     |
    |----------+-------+--------------------------------------------|
    |\c        |\c     |c" 自身がメタ文字でも "c" というそのままの文|
    |          |       |字とマッチ                                  |
    |----------+-------+--------------------------------------------|
    |.         |.      |改行を含めた如何なる文字ともマッチ          |
    |----------+-------+--------------------------------------------|
    |^         |^      |文字列の最初とマッチ                        |
    |----------+-------+--------------------------------------------|
    |$         |$      |文字列の最後とマッチ                        |
    |----------+-------+--------------------------------------------|
    |\<        |\<     |単語先頭とマッチ                            |
    |----------+-------+--------------------------------------------|
    |\>        |\>     |単語末尾とマッチ                            |
    |----------+-------+--------------------------------------------|
    |[abc…]    |[abc…] |"abc…" のいずれかの文字にマッチ             |
    |----------+-------+--------------------------------------------|
    |[^abc…]   |[^abc…]|"abc…" 以外の文字にマッチ                   |
    |----------+-------+--------------------------------------------|
    |r*        |r*     |"r" という正規表現の0回以上にマッチ         |
    |----------+-------+--------------------------------------------|
    |r\+       |r+     |"r" という正規表現の1回以上にマッチ         |
    |----------+-------+--------------------------------------------|
    |r\?       |r?     |"r" という正規表現の0回か1回にマッチ        |
    |----------+-------+--------------------------------------------|
    |r1\|r2    |r1|r2  |"r1" か "r2" という正規表現のいずれかにマッ |
    |          |       |チ                                          |
    |----------+-------+--------------------------------------------|
    |\(r1\|r2\)|(r1|r2)|"r1" か "r2" という正規表現のいずれかにマッ |
    |          |       |チし、それを括弧で囲まれた正規表現と見なす  |
    +---------------------------------------------------------------+


    emacs の正規表現は、ERE 同様の "+" と "?" をメタ文字と扱う拡張を
    してはありますが、基本的に BRE です。これら文字を emacs の正規表
    現で "\" でエスケープする必要はありません。

    grep(1) をつかうと正規表現を使って文字列探索ができます。

    例えば、次を試してみて下さい:

    $ egrep 'GNU.*LICENSE|Yoyodyne' /usr/share/common-licenses/GPL
    GNU GENERAL PUBLIC LICENSE
    GNU GENERAL PUBLIC LICENSE
    Yoyodyne, Inc., hereby disclaims all copyright interest in the program

    ヒント
   
    「着色化されたコマンド」を参照下さい。

%

1.6.3. 置換式

    置換式の場合、一部の文字に特別な意味があります

    表1.25 置換式

    +---------------------------------------------------------------+
    |置換式|               置換式を置換する文字の説明               |
    |------+--------------------------------------------------------|
    |&     |正規表現がマッチしたもの (emacs では \& を使用)         |
    |------+--------------------------------------------------------|
    |\n    |n番目の括弧で囲まれた正規表現にマッチしたもの ("n" は数 |
    |      |字)                                                     |
    +---------------------------------------------------------------+


    Perl の代替文字列には"&" に代えて "$&" が使われ、 "\n" に代えて
    "$n" が使われます。

    例えば、次を試してみて下さい:

    $ echo zzz1abc2efg3hij4 | \
    sed -e 's/\(1[a-z]*\)[0-9]*\(.*\)$/=&=/'
    zzz=1abc2efg3hij4=
    $ echo zzz1abc2efg3hij4 | \
    sed -e 's/\(1[a-z]*\)[0-9]*\(.*\)$/\2===\1/'
    zzzefg3hij4===1abc
    $ echo zzz1abc2efg3hij4 | \
    perl -pe 's/(1[a-z]*)[0-9]*(.*)$/$2===$1/'
    zzzefg3hij4===1abc
    $ echo zzz1abc2efg3hij4 | \
    perl -pe 's/(1[a-z]*)[0-9]*(.*)$/=$&=/'
    zzz=1abc2efg3hij4=

    ここで、括弧で囲まれた正規表現のスタイルと、マッチした文字列が異
    なるツール上でテキスト置換処理にどう使われるかとに注目下さい。

    これらの正規表現は一部エディター内でカーソールの動きやテキスト置
    換アクションに対しても使えます。

    シェルコマンドラインの行末のバックスラッシュ "\" は改行をホワイト
    スペース文字としてエスケープするので、シェルコマンドライン入力を
    次行に継続させます。

    これらのコマンドを習うために、関連するマニュアルページを全て読ん
    で下さい。

%

1.6.4. 正規表現を使ったグローバル置換

    ed(1) コマンドは次のようにすると "file" 中に存在する全ての
    "FROM_REGEX" を "TO_TEXT" で置換できます。

    $ ed file <<EOF
    ,s/FROM_REGEX/TO_TEXT/g
    w
    q
    EOF

    sed(1) コマンドは次のようにすると "file" 中に存在する全ての
    "FROM_REGEX" を "TO_TEXT" で置換できます。

    $ sed -i -e 's/FROM_REGEX/TO_TEXT/g' file

    vim(1) コマンドは ex(1) コマンドを使い次のようにすると "file" 中
    に存在する全ての "FROM_REGEX" を "TO_TEXT" で置換できます。

    $ vim '+%s/FROM_REGEX/TO_TEXT/gc' '+w' '+q' file

    ヒント
   
    上記の "c" フラグをにより各置換毎に対話型の確認をします。

    複数ファイル ("file1" と "file2" と "file3") を vim(1) や perl(1)
    で同様に正規表現を用いて処理できます。

    $ vim '+argdo %s/FROM_REGEX/TO_TEXT/ge|update' '+q' file1 file2 file3

    ヒント
   
    上記の "e" フラグをにより "No match" エラーでマッピングが停止する
    ことを防ぎます。

    $ perl -i -p -e 's/FROM_REGEX/TO_TEXT/g;' file1 file2 file3

    perl(1) の例中で、"-i" はその場で各ターゲットファイルの編集、"-p"
    は与えられたすべてのファイルに関する暗黙的なループを意味します。

    ヒント

    "-i" の代わりに "-i.bak" という引数を用いるとオリジナルファイル名
    に ".bak" をつけたファイル名でオリジナルファイルが保管されます。
    複雑な置換のエラーからの復元が簡単にできます。

    注記
   
    ed(1) や vim(1) は BRE です。一方、perl(1) は ERE です。

%

1.6.5. テキストファイルからのデーター抽出

    2004年以前の元 Debian リーダの名前と就任日がスペースで分割された
    フォーマットでリストされている "DPL" と呼ばれるファイルを考えてみ
    ましょう。

    Ian     Murdock   August  1993
    Bruce   Perens    April   1996
    Ian     Jackson   January 1998
    Wichert Akkerman  January 1999
    Ben     Collins   April   2001
    Bdale   Garbee    April   2002
    Martin  Michlmayr March   2003

    ヒント
   
    最新のDebian のリーダーの歴史に関しては、"A Brief History of
    Debian" を参照下さい。

    Awk はこういったタイプのファイルからデーターを抽出するために良く
    使われます。

    例えば、次を試してみて下さい:

    $ awk '{ print $3 }' <DPL                   # month started
    August
    April
    January
    January
    April
    April
    March
    $ awk '($1=="Ian") { print }' <DPL          # DPL called Ian
    Ian     Murdock   August  1993
    Ian     Jackson   January 1998
    $ awk '($2=="Perens") { print $3,$4 }' <DPL # When Perens started
    April 1996

    Bash などのシェルもこれらのファイルを解釈するのに使えます。

    例えば、次を試してみて下さい:

    $ while read first last month year; do
        echo $month
      done <DPL
    ... 最初の Awk 例と同じ出力

    ここで、read 組込みコマンドは "$IFS" (内部フィールドセパレータ)
    を用いて行を単語単位で分割します。

    "$IFS" を ":" に変更すると、"/etc/passwd" をシェルでうまく解読で
    きます。

    $ oldIFS="$IFS"   # save old value
    $ IFS=':'
    $ while read user password uid gid rest_of_line; do
        if [ "$user" = "bozo" ]; then
          echo "$user's ID is $uid"
        fi
      done < /etc/passwd
    bozo's ID is 1000
    $ IFS="$oldIFS"   # restore old value

    (同じことを Awk を使って行うには、フィールドセパレータ設定は "FS=
    ':'" とします。)

    IFS はパラメーター展開、コマンド置換、数式展開の結果を分割するた
    めにもシェルにより使われます。これはダブルクォートやシングルクォ
    ートされた単語内では発生しません。IFS の標準値は <space> と <tab>
    と <newline> の組合せです。

    シェルの IFS トリックを注意深く使って下さい。シェルがスクリプトの
    一部を入力として解釈した場合に、奇妙なことが起きるかもしれません
    。

    $ IFS=":,"                        # use ":" and "," as IFS
    $ echo IFS=$IFS,   IFS="$IFS"     # echo is a Bash builtin
    IFS=  , IFS=:,
    $ date -R                         # just a command output
    Sat, 23 Aug 2003 08:30:15 +0200
    $ echo $(date -R)                 # sub shell --> input to main shell
    Sat  23 Aug 2003 08 30 36 +0200
    $ unset IFS                       # reset IFS to the default
    $ echo $(date -R)
    Sat, 23 Aug 2003 08:30:50 +0200

%

1.6.6. コマンドをパイプするためのスクリプト断片

    次のスクリプトはパイプの一部として素晴らしいことをします。

    表1.26 コマンドをパイプするためのスクリプト断片

    +---------------------------------------------------------------+
    |スクリプト断片 (1行 |              コマンドの効果              |
    |       入力)        |                                          |
    |--------------------+------------------------------------------|
    |find /usr -print    |"/usr" の下の全ファイル発見               |
    |--------------------+------------------------------------------|
    |seq 1 100           |1から100までプリント                      |
    |--------------------+------------------------------------------|
    || xargs -n 1        |パイプからの各項目を引数としてコマンドを反|
    |<command>           |復実行                                    |
    |--------------------+------------------------------------------|
    || xargs -n 1 echo   |パイプからのホワイトスペースで分離された項|
    |                    |目を行に分割                              |
    |--------------------+------------------------------------------|
    || xargs echo        |パイプからの全ての行を1行にマージ         |
    |--------------------+------------------------------------------|
    || grep -e           |<regex_pattern> を含む行を抽出            |
    |<regex_pattern>     |                                          |
    |--------------------+------------------------------------------|
    || grep -v -e        |<regex_pattern> を含まない行を抽出        |
    |<regex_pattern>     |                                          |
    |--------------------+------------------------------------------|
    || cut -d: -f3 -     |":" で区切られた3番目のフィールドを抽出   |
    |                    |(passwd ファイルなど)                     |
    |--------------------+------------------------------------------|
    || awk '{ print $3 }'|ホワイトスペースで区切られた3番目のフィー |
    |                    |ルドを抽出                                |
    |--------------------+------------------------------------------|
    || awk -F'\t' '{     |タブで区切られた3番目のフィールドを抽出   |
    |print $3 }'         |                                          |
    |--------------------+------------------------------------------|
    || col -bx           |バックスペースを削除し、タブをスベースに変|
    |                    |換                                        |
    |--------------------+------------------------------------------|
    || expand -          |タブをスベースに変換                      |
    |--------------------+------------------------------------------|
    || sort| uniq        |入力をソートし重複箇所を削除              |
    |--------------------+------------------------------------------|
    || tr 'A-Z' 'a-z'    |大文字を小文字に変換                      |
    |--------------------+------------------------------------------|
    || tr -d '\n'        |複数行を1行に連結                         |
    |--------------------+------------------------------------------|
    || tr -d '\r'        |キャリッジリターンを削除                  |
    |--------------------+------------------------------------------|
    || sed 's/^/# /'     |各行頭に "#" を追加                       |
    |--------------------+------------------------------------------|
    || sed 's/\.ext//g'  |".ext" を削除                             |
    |--------------------+------------------------------------------|
    || sed -n -e 2p      |2番目の行を表示                           |
    |--------------------+------------------------------------------|
    || head -n 2 -       |最初の2行を表示                           |
    |--------------------+------------------------------------------|
    || tail -n 2 -       |最後の2行を表示                           |
    +---------------------------------------------------------------+


    1行のシェルスクリプトは find(1) や xargs(1) を使って非常に複雑な
    操作を多くのファイルに繰り返し実行できます。「ファイル選択の慣用
    句」と「ファイルに関してループしながらコマンドを反復実行」を参照
    下さい。

    シェルの対話モードを使うのが複雑過ぎるようになったときには、シェ
    ルのスクリプトを書くのも一計です (「シェルスクリプト」参照下さい)
    。

第2章 Debian パッケージ管理

    注記
   
    本章は最新安定版リリースがコード名: bullseye と言う前提で書かれて
    います。

    Debian は、フリーソフトウエアーのコンパイル済みバイナリーパッケー
    ジからなる整合性あるディストリビューションを作り、そのアーカイブ
    を通じてそれらを頒布するボランティア組織です。

    Debian のアーカイブは、HTTP や FTP 法によるアクセスされるための多
    くのリモートのミラーサイトとして提供されています。それは、CD-ROM/
    DVD によっても提供されています。

    Debian のパッケージ管理システムは、適正に使われれば、バイナリーパ
    ッケージの整合性ある組み合わせがアーカイブからシステムにインスト
    ールされるようになっています。現在、amd64 アーキテクチャーでは
    62716 つのパッケージが利用できます。

    Debian のパッケージ管理システムは、多彩な歴史があり、使用されるフ
    ロントエンドのユーザープログラムやバックエンドのアーカイブへのア
    クセス方法に多くの選択肢があります。現在は以下を推薦します。

      * パッケージのインストール・削除や dist-upgrade を含む全ての対
        話的コマンドライン操作を提供する、apt(8)。Debian Jessie
        (Debian 8) から提供。

      * スクリプトから Debian のパッケージ管理をするためによぶ、
        apt-get(8)。(古い Debian システム等で)apt が使えない際の控え
        のオプション。

      * インストールされたパッケージを管理したり、使用可能なパッケー
        ジを探索するためのインタラクティブなテキストインターフェース
        を提供する、aptitude(8)

    表2.1 Debian のパッケージ管理ツールのリスト

    +---------------------------------------------------------------+
    |    パッケージ     |ポプコ|サイ|             説明              |
    |                   |  ン  | ズ |                               |
    |-------------------+------+----+-------------------------------|
    |                   |      |    |アドバンスドパッケージツール   |
    |                   |      |    |(APT)、"http" や "ftp" や      |
    |apt                |V:868,|4299|"file" というアーカイブへのアク|
    |                   |I:999 |    |セス方法を dpkg に提供するフロ |
    |                   |      |    |ントエンド (apt/apt-get/       |
    |                   |      |    |apt-cache コマンドを含む)      |
    |-------------------+------+----+-------------------------------|
    |                   |V:80, |    |aptitude(8) を使うインタラクテ |
    |aptitude           |I:431 |4249|ィブなターミナルベースのパッケ |
    |                   |      |    |ージマネージャー               |
    |-------------------+------+----+-------------------------------|
    |                   |V:36, |    |Debian システムにタスクをインス|
    |tasksel            |I:975 |393 |トールするための選択ツール (APT|
    |                   |      |    |のフロントエンド)              |
    |-------------------+------+----+-------------------------------|
    |                   |V:324,|    |セキュリティーアップデートの自 |
    |unattended-upgrades|I:447 |325 |動インストールを可能にする APT |
    |                   |      |    |の拡張パッケージ               |
    |-------------------+------+----+-------------------------------|
    |                   |      |    |ターミナルベースのパッケージマ |
    |dselect            |V:3,  |2591|ネージャー (過去の標準、APT や |
    |                   |I:32  |    |他の旧式のアクセス法のフロント |
    |                   |      |    |エンド)                        |
    |-------------------+------+----+-------------------------------|
    |dpkg               |V:925,|6856|Debian のためのパッケージ管理シ|
    |                   |I:999 |    |ステム                         |
    |-------------------+------+----+-------------------------------|
    |                   |V:47, |    |グラフィカルなパッケージマネー |
    |synaptic           |I:320 |7873|ジャー (APT の GNOME フロントエ|
    |                   |      |    |ンド)                          |
    |-------------------+------+----+-------------------------------|
    |                   |      |    |APT ユーティリティープログラム:|
    |apt-utils          |V:339,|1162|apt-extracttemplates(1) と     |
    |                   |I:996 |    |apt-ftparchive(1) と           |
    |                   |      |    |apt-sortpkgs(1)                |
    |-------------------+------+----+-------------------------------|
    |apt-listchanges    |V:369,|421 |パッケージ変更履歴の通知ツール |
    |                   |I:851 |    |                               |
    |-------------------+------+----+-------------------------------|
    |apt-listbugs       |V:7,  |465 |APT による各インストール前にク |
    |                   |I:12  |    |リチカルバグをリストする       |
    |-------------------+------+----+-------------------------------|
    |                   |V:18, |    |APT パッケージ探索ユーティリテ |
    |apt-file           |I:78  |90  |ィー -- コマンドラインインター |
    |                   |      |    |フェース                       |
    |-------------------+------+----+-------------------------------|
    |apt-rdepends       |V:0,  |40  |パッケージの依存関係を再帰的に |
    |                   |I:6   |    |リスト                         |
    +---------------------------------------------------------------+


2.1. Debian パッケージ管理の前提条件

%

2.1.1. パッケージ設定

    Debian システム上でのパッケージ設定の要点を次に記します。

      * システム管理者による手動の設定は尊重されます。言い換えれば、
        パッケージ設定システムは利便性のために勝手な設定をしません。

      * 各パッケージは、パッケージの初期インストールプロセスを助ける
        ための debconf(7) と呼ばれる標準化されたユーザーインターフェ
        ースを使用し、それぞれ毎の設定スクリプトとともに提供されます
        。

      * Debian の開発者はパッケージの設定スクリプトによりユーザーのア
        ップグレードが滞りなく進むように最大限の努力を行います。
   
      * システム管理者にはパッケージされたソフトウエアーの全機能が利
        用可能です。ただしセキュリティーリスクのある機能はデフォール
        トのインストール状態では無効にされています。

      * セキュリティーリスクのあるサービスを手動でアクティベートした
        場合は、リスクの封じ込めはあなたの責任です。

      * システム管理者は難解奇異な設定を手動で有効にはできます。ただ
        こんなことをすればポピュラーな一般の補助プログラムと干渉して
        しまうかもしれません。

%

2.1.2. 基本的な注意事項

    警告

    ランダムな混合のスイーツからパッケージをインストールしてはいけま
    せん。コンパイラーの ABI とかライブラリーのバージョンとかインター
    プリターの機能等のシステム管理に関する深い知見が必要なパッケージ
    の整合性がきっと破壊されます。

    初心者の Debian システム管理者は Debian の安定版 stable リリース
    をセキュリティーアップデートを適用しながら使うべきです。Debian シ
    ステムを非常によく理解するまでは、用心として次の有効なアクション
    ですら避けておくべきと考えます。次は留意点です。

      * "/etc/apt/sources.list" の中にテスト版 testing とか不安定版 
        unstable とかを含めません。

      * "/etc/apt/sources.list" の中に標準の Debian と Debian 以外の
        Ubuntu のようなアーカイブを混在させません。

      * "/etc/apt/preferences" を作成しません。

      * パッケージ管理ツールのデフォールトを影響を理解せずに変更しま
        せん。

      * ランダムなパッケージを "dpkg -i <random_package>" でインスト
        ールしません。

      * ランダムなパッケージを "dpkg --force-all -i <random_package>"
        で絶対インストールしません。

      * "/var/lib/dpkg/" の中のファイルを消去や改変しません。

      * ソースから直接コンパイルしたソフトウエアープログラムをインス
        トールする際にシステムファイルを上書きしません。

          + 必要な場合は "/usr/local/" か "/opt/" 中にインストールし
            ます。

    上記のアクションで起きる Debian パッケージシステムへのコンパチブ
    ルでない効果はシステムを使えなくするかもしれません。

    ミッションクリティカルなサーバーを走らせる真剣な Debian システム
    管理者は更なる用心をすべきです。

      * 安全な条件下であなたの特定の設定で徹底的にテストすることなく
        セキュリティーアップデートをも含めた如何なるパッケージもイン
        ストールをしてはいけません。

          + システム管理者のあなたがシステムに対して最終責任がありま
            す。

          + Debian システムの長い安定性の歴史それ自体は何の保証でもあ
            りません。

%

2.1.3. 永遠のアップグレード人生

    私が上記で警告したとはいえ、自分自身で管理するデスクトップ環境で
    は Debian のテスト版 testing や不安定版 unstable のスイーツを自分
    のメインのシステムとして使おうと多くの本書の読者が望むことは分か
    っています。システムは非常に快調に動くし、頻繁に更新されるし、最
    新の機能が提供されるからです。

    注意

    あなたの業務サーバーには、セキュリティーアップデートをした安定版
    stable スイーツを推薦します。管理に限られた時間しか割けないデスク
    トップ PC に関しても同様の事が言えます。

    "/etc/apt/sources.list" の中のディストリビューション文字列を、
    "testing" とか "unstable" というスイーツ名、もしくは "bookworm と
    か "sid" というコード名に単に設定するだけで十分です。

    testing や unstable を使うことは大変楽しいけれど、リスクがついて
    きます。Debian システムの unstable スイーツさえおおむね非常に安定
    に見えますが、Debian システムの testing や unstable スイーツでは
    過去パッケージ上の問題をいくつか経験して来てるし、その一部は簡単
    には解決できないものでした。結構痛い目に会うことになるかもしれま
    せんよ。時々、壊れたパッケージや機能の欠損が数週間続くことが起こ
    ります。

    Debian パッケージのバグからの早急かつ簡単な復元を確実にするいくつ
    かのアイデアがここにあります。

      * Debian システムの安定版 stable スイーツを別のパーティションに
        インストールし、システムをヂュアルブータブル化

      * レスキューブートのためのインストール用 CD を手元に確保

      * apt-listbugs をインストールしてアップグレードの前に Debian バ
        グトラッキングシステム (BTS) をチェックを考慮

      * 問題回避するのに十分なだけのパッケージシステムの基盤を学習

      * chroot か類似の環境を作り事前に最新のシステムを実行 (「仮想化
        システム」参照下さい)

    (これらの用心のための方策の何れもできないなら、テスト版 testing
    や不安定版 unstable スイーツを使うのにはあなたはきっと準備不足で
    す。)

    以下に記すことにより悟りを開けば、アップグレード地獄という果てし
    ない因果応報の葛藤から人は解脱し、Debian の涅槃の境地に到達できま
    す。

%

2.1.4. Debian アーカイブの基本

    Debian アーカイブをシステムユーザーの視点から見てみます。

    ヒント
   
    Debian アーカイブの正式のポリシーは Debian ポリシーマニュアル、第
    2章 - Debian アーカイブに規定されています。

    典型的な HTTP アクセスの場合、現在の安定版 stable=bullseye システ
    ムを例にとると、次の様に "/etc/apt/sources.list" ファイルの中にア
    ーカイブは規定されています。

    deb http://deb.debian.org/debian/ bullseye main contrib non-free
    deb-src http://deb.debian.org/debian/ bullseye main contrib non-free
   
    deb http://security.debian.org/ bullseye/updates main contrib
    deb-src http://security.debian.org/ bullseye/updates main contrib

    上記で、次の安定版 stable がリリースされて驚かされ無いように、私
    はスイート名の "stable" でなくコード名の "bullseye" を使います。

    "/etc/apt/sources.list" の意味は sources.list(5) に記載されていて
    、要点は以下です。

      * "deb" 行がバイナリーパッケージのための定義です。

      * "deb-src" 行がソースパッケージのための定義です。

      * 一番目の引数は、Debian アーカイブの root URL です。
   
      * 二番目の引数は、スイーツ名かコード名のどちらかで与えられるデ
        ィストリビューション名です。

      * 三番目次の引数は、Debian アーカイブの中の有効なアーカイブのエ
        リア名のリストです。

    ソース関連のメタデーターにアクセスしない aptitude のためだけなら
    "deb-src" 行は安全に省略 (もしくは "#" を行頭に挿入してコメントア
    ウト) することができます。こうするとアーカイブのメタデーターの更
    新速度が向上します。URL は "http://" や "ftp://" や "file://" 等
    々の何れも可能です。

    ヒント

    もし上記の例で "bullseye" ではなく "sid" が使われる場合には、セキ
    ュリティーアップデートのための "deb: http://security.debian.org/
    ..." 行は不要です。安定版 stable とテスト版 testing (即ち
    bullseye と bookworm) にのみセキュリティーアップデートがあります
    。 "sid" (不安定版 unstable) のためにはセキュリティーアップデート
    のアーカイブが存在しません。

    次は設定ファイル内に用いられる Debian アーカイブサイトの URL とス
    イーツ名もしくはコード名です。

    表2.2 Debian アーカイブサイトのリスト

    +---------------------------------------------------------------+
    | アーカイブの URL  | スイート名 (コード名) |       目的        |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |安定版 (bullseye)  |
    |deb.debian.org/    |stable (bullseye)      |のリリース         |
    |debian/            |                       |                   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |テスト版 (bookworm)|
    |deb.debian.org/    |testing (bookworm)     |のリリース         |
    |debian/            |                       |                   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |不安定版 (sid) のリ|
    |deb.debian.org/    |unstable (sid)         |リース             |
    |debian/            |                       |                   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |実験的プリリリース |
    |deb.debian.org/    |experimental           |(任意、開発者専用) |
    |debian/            |                       |                   |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |次回安定版ポイント |
    |deb.debian.org/    |stable-proposed-updates|リリース用のアップ |
    |debian/            |                       |デート (任意)      |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |安定版用のセキュリ |
    |security.debian.org|stable/updates         |ティーアップデート |
    |/                  |                       |(重要)             |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |テスト版用のセキュ |
    |security.debian.org|testing/updates        |リティーアップデー |
    |/                  |                       |ト (重要)          |
    |-------------------+-----------------------+-------------------|
    |                   |                       |bullseye のためのス|
    |http://            |                       |パムフィルターや IM|
    |deb.debian.org/    |bullseye-updates       |クライアント他用の |
    |debian/            |                       |コンパチブルなアッ |
    |                   |                       |プデート           |
    |-------------------+-----------------------+-------------------|
    |http://            |                       |bullseye のための新|
    |deb.debian.org/    |bullseye-backports     |しくバックポートさ |
    |debian/            |                       |れたパッケージ (任 |
    |                   |                       |意)                |
    +---------------------------------------------------------------+


    注意

    セキュリティーアップデートされた純粋な安定版 stable リリースのみ
    が最善の安定性を提供します。一部 testing や unstable 由来のパッケ
    ージを混用してほとんど stable リリースを走らせることは、純粋な 
    unstable リリースを走らせるよりリスクがあります。stable リリース
    の下で最新バージョンのいくつかのプログラムが本当に必要なら、
    bullseye-updatesや http://backports.debian.org (「Updates と
    Backports」参照下さい) サービスからのパッケージを使って下さい。こ
    れらのサービスは細心の注意を持って使う必要があります。

    注意

    基本的に、stable か testing か unstable のスイーツの内の1つだけを
    "deb" 行に書くべきです。もし、stable と testing と unstable のス
    イーツの何らかの組み合わせを "deb" 行に書けば、APT プログラムは、
    最新のアーカイブのみが有効であるにもかかわらず、実行速度が低下し
    ます。"/etc/apt/preferences" ファイルがはっきりとした目的を持って
    使われている場合 (「候補バージョンの調整」) のみ複数のリストに意
    味があります。

    ヒント

    stable や testing スイーツの Debian システムでは、上記の例のよう
    にセキュリティーアップデートを有効とするように "/etc/apt/
    sources.list" の中に "http://security.debian.org/" の行を含めるこ
    とはいいことです。

    注記

    stable アーカイブのセキュリティーバグは Debian のセキュリティーチ
    ームにより修正されます。本活動は非常に厳格で信頼できるものです。
    testing アーカイブのセキュリティーバグは Debian の testing セキュ
    リティーチームにより修正されます。諸所の事情で、本活動は stable
    ほどは厳格ではなく、修正された unstable パッケージの移行を待つ必
    要があるかもしれません。unstable アーカイブのセキュリティーバグは
    個別のメンテナにより修正されます。活発にメンテされている unstable
    パッケージはアップストリームのセキュリティー修正を使うことで通常
    比較的良い状態です。Debian がセキュリティーバグへ如何に対応するか
    に関しては Debian security FAQ を参照下さい。

    表2.3 Debian アーカイブエリアのリスト

    +---------------------------------------------------------------+
    | エリア |パッケー|      パッケージ構成要素のクライテリア       |
    |        |  ジ数  |                                             |
    |--------+--------+---------------------------------------------|
    |main    |61595   |DFSG に完全準拠し、non-free のパッケージに非 |
    |        |        |依存 (main = 主要)                           |
    |--------+--------+---------------------------------------------|
    |contrib |349     |DFSG に完全準拠だが、non-free のパッケージに |
    |        |        |依存有り (contrib = 寄与)                    |
    |--------+--------+---------------------------------------------|
    |non-free|772     |非 DFSG 準拠                                 |
    +---------------------------------------------------------------+


    ここで、上記にあるパッケージ数は amd64 アーキテクチャーに関する数
    字です。main エリアのアーカイブのみが Debian システムです(「
    Debian は 100% フリーソフトウェアーです」参照)。

    Debian アーカイブの構成は、各アーカイブの URL の後ろに dists か
    pool をつけた URL にブラウザーを向ければ学習できます。

    ディストリビューションは、スイーツとコード名の2つの方法で言及され
    ます。この他にディストリビューションと言う言葉は多くの文書でスイ
    ーツの同義語としても使われています。スイーツとコード名の関係は次
    のようにまとめられます。

    表2.4 スイーツとコード名の関係

    +---------------------------------------------------------------+
    | タイミング |スイーツ = 安定|スイーツ = テス |スイーツ = 不安定|
    |            |   版 stable   |  ト版 testing  |   版 unstable   |
    |------------+---------------+----------------+-----------------|
    |bullseye リ |コード名 =     |コード名 =      |コード名 = sid   |
    |リース後    |bullseye       |bookworm        |                 |
    |------------+---------------+----------------+-----------------|
    |bookworm リ |コード名 =     |コード名 =      |コード名 = sid   |
    |リース後    |bookworm       |trixie          |                 |
    +---------------------------------------------------------------+


    コード名の歴史は、Debian FAQ: 6.2.1 Which other codenames have
    been used in the past? に記載されています。

    比較的厳格な Debian アーカイブの用語法では、"セクション" という言
    葉はアプリケーションの分野によるパッケージ分類に特化して使われま
    す。(しかし、"main セクション" という言葉は main エリアを提供する
    Debian アーカイブ部分を表現するのにしばしば使われています。)

    Debian デベロッパー (DD) が不安定版 unstable アーカイブに新たなア
    ップロードを (incoming での処理を経由して) する度毎に、アップロー
    ドするパッケージが最新の不安定版 unstable アーカイブの最新のパッ
    ケージ集合とコンパチブルであるようにする義務が DD にはあります。

    重要なライブラリーのアップグレード他の理由で DD がこのコンパチビ
    リティーを壊す際には、debian-devel のメーリングリスト他に通常アナ
    ウンスがされます。

    Debian のアーカイブ管理スクリプトによって非安定版 unstable アーカ
    イブからテスト版 testing アーカイブへパッケージ集合が移動される前
    に、アーカイブ管理スクリプトはパッケージの成熟度 (約10日経過) と
    RC バグレポート状況を確認するばかりでなく、テスト版 testing アー
    カイブの最新パッケージ集合とのコンパチブルであるようにするように
    努めます。このプロセスがあるので、テスト版 testing アーカイブは非
    常に新しくかつ使いやすいのです。

    リリースチームによる徐々のアーカイブ凍結過程を通じて、少々の手動
    の介入を伴いつつテスト版 testing アーカイブは完全に整合性をもった
    バグの無い状態へと徐々に熟成されます。そして、古いテスト版
    testing アーカイブのコード名を新たな安定版 stable アーカイブへと
    割り当て、新たなコード名を新たなテスト版 testing アーカイブへと割
    り当てることで、新たな安定版 stable がリリースされます。新たなテ
    スト版 testing アーカイブの当初の内容は、新たにリリースされた安定
    版 stable アーカイブとまったく同じです。

    不安定版 unstable もテスト版 testing アーカイブもともにいくつかの
    要因で一時的に細かな問題発生があるかもしれません。

      * ブロークンなパッケージのアーカイブへのアップロード (主に
        unstable にて)

      * 新規パッケージをアーカイブに受け入れる際の遅延 (主に unstable
        にて)
   
      * アーカイブの同期のタイミング問題 (testing と unstable の両方
        にて)。

      * パッケージの除去などのアーカイブへの手動の介入 (どちらかとい
        えば testing にて)、等。

    もしこれらのアーカイブを使おうと考えるなら、この種の細かな問題の
    修復や回避は必須技能です。

    注意

    たとえいつも非安定版 unstable やテスト版 testing アーカイブを使っ
    ていようとも、ほとんどのデスクトップユーザーは新たな安定版 stable
    リリースの後約数ヶ月はセキュリティーアップデートされた安定版
    stable アーカイブを使うべきです。この移行期は、非安定版 unstable
    もテスト版 testing アーカイブの何れももほとんどの人に良いものでは
    ありません。非安定版 unstable アーカイブを使おうとすると、核とな
    るパッケージが大アップグレードの嵐に見舞われるので、あなたのシス
    テムをうまく使える状態に保つのは困難です。テスト版 testing アーカ
    イブを使おうとしても、安定版 stable アーカイブとほとんど同じ内容
    でセキュリティーサポートはありません (Debian
    testing-security-announce 2008-12)。1ヶ月ほど経てば、非安定版
    unstable アーカイブなら注意を払えば使えるかもしれません。

    ヒント

    テスト版 testing アーカイブを追跡している際には、除去されたパッケ
    ージによって引き起こされる問題は該当するバグ修正のためにアップロ
    ードされたパッケージを非安定版 unstable アーカイブからインストー
    ルすれば通常回避できます。

    アーカイブの定義は、Debian ポリシーマニュアルを参照下さい。

      * "セクション"

      * "優先度 (priorities)"
   
      * "ベースシステム"

      * "必須パッケージ"

%

2.1.5. Debian は 100% フリーソフトウェアーです

    Debian は以下の理由で 100% フリーソフトウエアーです:

      * Debian はユーザーの自由を尊重すべくデフォルトではフリーソフト
        ウエアーのみをインストールします。

      * Debian は main 中にはフリーソフトウエアーのみを提供します。

      * Debian は main からのフリーソフトウエアーのみを実行することを
        推奨します。

      * main 中のいかなるパッケージも non-free や contrib 中のいずれ
        のパッケージに依存しないし、これらを推薦することもありません
        。

    一部の人は以下の2つの事実が矛盾するのでは無いかとの疑問を持ちます
    。

      * 「Debian は 100% フリーソフトウェアーであり続けます」。Debian
        社会契約の第一項)
   
      * Debian サーバーは non-free や contrib パッケージをホストしま
        す。

    これらは以下の理由で矛盾しません。

      * Debian システムは 100% フリーソフトウエアーでそのパッケージは
        Debian サーバーの main エリア中にホストされます。
   
      * Debian システム外のパッケージは Debian サーバーの non-free と
        contrib エリア中にホストされます。

    これらは Debian 社会契約の第4項と第5項中に正確に説明されています:

      * 私たちはユーザーとフリーソフトウェアーを大切にします

          + 私たちはユーザーとフリーソフトウェアーコミュニティーから
            の要求に従います。彼らの関心を最優先に考えます。私たちは
            さまざまな状況におけるコンピューター利用環境の運用に関し
            て、ユーザーの必要を満たすように行動します。私たちは
            Debian システム上での利用を目的としたフリーではない著作物
            に敵対することはありません。またそのような著作物を作成ま
            たは利用する人々に対して、料金を徴収することはありません
            。私たちは、Debian システムとその他の著作物の両方を含むデ
            ィストリビューションを、第三者が作成することも認めていま
            す。その際、私たちは料金を徴収しません。私たちはこれらの
            目標を増進させるために、これらのシステムの使用を妨げるよ
            うな法的な制約のない、高品質な素材を統合したシステムを提
            供します。
   
      * 私たちのフリーソフトウェアー基準に合致しない著作物について

          + 私たちは、Debian フリーソフトウェアーガイドラインに適合し
            ていない著作物を使わなければならないユーザーがいることを
            認めています。このような著作物のために、私たちはアーカイ
            ブに「contrib」と「non-free」という領域を作りました。これ
            らの領域にあるパッケージは、Debian 上で使用できるよう設定
            されていますが、 Debian システムの一部ではありません。私
            たちは、CD 製造業者がこれらの領域にあるパッケージを彼らの
            CD に収録して配布できるかどうか判断する際に、それぞれのパ
            ッケージのライセンスを読んで決めるよう奨めています。この
            ように、フリーではない著作物は Debian の一部ではありませ
            んが、その使用をサポートし、フリーではないパッケージのた
            めの (バグ追跡システムやメーリングリストのような) インフ
            ラストラクチャーを用意しています。

    ユーザーは non-free や contrib エリア中のパッケージを使用するリス
    クを認識すべきです。

      * そのようなソフトウエアーパッケージに関する自由の欠如

      * そのようなソフトウエアーパッケージに関するDebianからのサポー
        トの欠如 (Debian はソフトウエアーのソースコードに適切なアクセ
        スなしにはソフトウエアーをサポートできません。)

      * あなたの 100% フリーソフトウエアーの Debain システムへの汚染

    Debian フリーソフトウェアーガイドラインは Debian のフリーソフトウ
    エアー基準です。Debian は「ソフトウエアー」に関して、パッケージ中
    の文書、ファームウエアー、ロゴ、アート作品を含む最も広義の解釈を
    します。このことにより Debian のフリーソフトウエアー基準は非常に
    厳格なものとなります。

    main に関するこの厳格なフリーソフトウエアー基準に合致させるため、
    Debian は Firefox や Thunderbird や Seamonkey 等のソフトウエアー
    パッケージからそれらのロゴやアート作品データーを削除した過去ブラ
    ンドを削除された Mozilla ソフトウエアーを、それぞれ Iceweasel や
    Icedove や Iceape として出荷していました。この様な問題が解決した
    Debian Stretch (Debian 9) 以降のリリースで、これらのパッケージは
    それらの元来の名前に戻されました。

    典型的な non-free や contrib パッケージは以下のタイプの自由に頒布
    できるパッケージを含んでいます。

      * GCC や Make 等の変更不可部分付きの GNU フリー文書利用許諾契約
        書に基づく文書パッケージ。 (主に non-free/doc セクション中に
        ある)

      * 「ハードウエアードライバーとファームウエアー」に列記された中
        で non-free とあるソースコード無しのバイナリーデーターを含む
        ファームウエアーパッケージ。 (主に non-free/kernel セクション
        中にある)

      * 商用使用やコンテント変更に関する制約のあるゲームやフォントの
        パッケージ。

    non-free と contrib パッケージの数は main パッケージの数の 2% 以
    下です。non-free や contrib エリアへのアクセスを有効にしてもパッ
    ケージ起源は不明瞭になりません。aptitude(8) をインタラクティブで
    フルスクリーンに使用すると、どのエリアからどのパッケージをインス
    トールするのかを完全に可視化しコントロールできるので、あなたのシ
    ステムをあなたの意向通りの自由の程度に合わせて維持できます。

%

2.1.6. パッケージ依存関係

    Debian システムはコントロールファイル中のバージョン情報付きのバイ
    ナリー依存関係宣言を通して整合性のあるバイナリーパッケージの集合
    を提供します。ここにその少々簡素化し過ぎの定義を示します。

      * "Depends"

          + これは絶対依存を宣言し、このフィールドにリストされた全て
            のパッケージは同時または事前にインストールされていなけれ
            ばいけません。

      * "Pre-Depends"

          + これは、リストされたパッケージが事前にインストールを完了
            している必要がある以外は、Depends と同様です。

      * "Recommends"

          + これは強いが絶対でない依存を宣言します。多くのユーザーは
            このフィールドにリストされたパッケージ全てがインストール
            されていなければ、当該パッケージを望まないでしょう。

      * "Suggests"

          + これは弱い依存を宣言します。このパッケージの多くのユーザ
            ーはこのフィールドにリストされたパッケージをインストール
            すればメリットを享受できるとは言え、それら抜きでも十分な
            機能が得られます。

      * "Enhances"
   
          + これは Suggests 同様の弱い依存を宣言しますが、依存作用の
            方向が逆です。

      * "Breaks"

          + これは通常バージョン制約付きでパッケージのインコンパチビ
            リティーを宣言します。一般的にこのフィールドにリストされ
            た全てのパッケージをアップグレードすることで解決します。

      * "Conflicts"

          + これは絶対的排他関係を宣言します。このフィールドにリスト
            された全てのパッケージを除去しない限り当該パッケージをイ
            ンストールできません。

      * "Replaces"

          + 当該パッケージによりインストールされるファイルがこのフィ
            ールドにリストされたパッケージのファイルを置き換える際に
            これを宣言します。

      * "Provides"

          + 当該パッケージがこのフィールドにリストされたパッケージの
            ファイルと機能の全てを提供する際にこれを宣言します。

    注記

    正常な設定として "Provides" と "Conflicts" と "Replaces" とを単一
    バーチャルパッケージに対し同時宣言することがあります。こうすると
    いかなる時にも当該バーチャルパッケージを提供する実パッケージのう
    ち確実に一つだけがインストールされます。

    ソースの依存関係をも含む正式の定義は the Policy Manual: Chapter 7
    - Declaring relationships between packages にあります。

%

2.1.7. パッケージ管理のイベントの流れ

    パッケージ管理の簡略化されたイベントの流れをまとめると次のように
    なります。

      * 更新 ("apt update" か "aptitude update" か "apt-get update"):

         1. アーカイブメタデーターをリモートアーカイブから取得

         2. APT が使えるようローカルメタデーターの再構築と更新

      * 更新 ("apt upgrade" と "apt full-upgrade"か、"aptitude
        safe-upgrade" と "aptitude full-upgrade" か、"apt-get
        upgrade" と "apt-get dist-upgrade"):

         1. 全てのインストール済みパッケージに関して、通常最新の利用
            可能なバージョンが選ばれる候補バージョンを選択 (例外につ
            いては「候補バージョンの調整」参照下さい)

         2. パッケージ依存関係解決の実行

         3. もし候補バージョンがインストール済みバージョンと異なる際
            には、選ばれたバイナリーパッケージをリモートアーカイブか
            ら取得

         4. 取得バイナリーパッケージの開梱

         5. preinst スクリプトの実行

         6. バイナリーファイルのインストール

         7. postinst スクリプトの実行

      * インストール ("apt install ..." か "aptitude install ..." か
        "apt-get install ..."):

         1. コマンドラインにリストされたパッケージの選択

         2. パッケージ依存関係解決の実行
   
         3. 選ばれたバイナリーパッケージをリモートアーカイブから取得

         4. 取得バイナリーパッケージの開梱

         5. preinst スクリプトの実行

         6. バイナリーファイルのインストール

         7. postinst スクリプトの実行

      * 削除 ("apt remove ..." か "aptitude remove ..." か "apt-get
        remove ..."):

         1. コマンドラインにリストされたパッケージの選択

         2. パッケージ依存関係解決の実行

         3. prerm スクリプトの実行

         4. 設定ファイル以外のインストール済みファイルの削除

         5. postrm スクリプトの実行

      * 完全削除 ("apt purge ..." か "aptitude purge ..." か "apt-get
        purge ..."):

         1. コマンドラインにリストされたパッケージの選択

         2. パッケージ依存関係解決の実行

         3. prerm スクリプトの実行

         4. 設定ファイルを含めたインストール済みファイルの削除

         5. postrm スクリプトの実行

    上記では全体像の理解のためにわざと技術詳細を端折っています。

%

2.1.8. パッケージ管理のトラブルへの応急対処法

    内容が正確な正式文書を読むように心がけるべきです。まず Debian に
    特定のことが記載された "/usr/share/doc/<package_name>/
    README.Debian" を最初に読むべきです。また "/usr/share/doc/
    <package_name>/" の中にある他の文書も参照すべきです。「Bash のカ
    スタム化」に書かれたようなシェル設定がされていれば、次のようにタ
    イプして下さい。

    $ cd <package_name>
    $ pager README.Debian
    $ mc

    さらに詳しい情報を得るには "-doc" というサフィクスを持った対応す
    る文書パッケージをインストールする必要があるかもしれません。

    特定パッケージに関する問題に出会った際には、Debian バグトラッキン
    グシステム (BTS) サイトを必ず確認します。

    表2.5 特定パッケージの問題解決のためのキーとなるウェッブサイトの
    リスト

    +---------------------------------------------------------------+
    |        ウェッブサイト        |            コマンド            |
    |------------------------------+--------------------------------|
    |Debian バグトラッキングシステ |sensible-browser "http://       |
    |ム (BTS) のホームページ       |bugs.debian.org/"               |
    |------------------------------+--------------------------------|
    |既知のパッケージに関するバグレ|sensible-browser "http://       |
    |ポート                        |bugs.debian.org/<package_name>" |
    |------------------------------+--------------------------------|
    |既知のバグ番号に関するバグレポ|sensible-browser "http://       |
    |ート                          |bugs.debian.org/<bug_number>"   |
    +---------------------------------------------------------------+


    "site:debian.org" や "site:wiki.debian.org" や
    "site:lists.debian.org" 等を含む検索語で Google を検索します。

    バグ報告をする際には、reportbug(1) コマンドを使います。

%

2.2. 基本的パッケージ管理操作

    Debian システム上でのレポジトリーを使ったパッケージ管理操作は
    Debian システム上にある多くのAPTを使うパッケージ管理ツールを使い
    できます。ここでは、apt /apt-get / apt-cache や aptitude といった
    3つの基本的なパッケージ管理ツールを説明します。

    パッケージをインストールしたりパッケージのメタデーターを更新する
    ようなパッケージ管理操作には root 権限が必要です。

%

2.2.1. apt と apt-get/apt-cache と aptitude の比較

    aptitude は筆者が主に使う非常に良いインタラクティブツールではあり
    ますが、注意すべき事実があることを知っておくべきです。

      * stable(安定版) Debian システムにおいて、新リリースがあった後
        の新リリースシステムへのアップグレードにaptitude コマンドを使
        用することは推薦されません。

          + それには、"apt full-upgrade" か "apt-get dist-upgrade" を
            使うことが推薦されます。Bug #411280 参照ください。

      * aptitude コマンドは時折testing(試験版) や unstable (不安定版)
        Debian システム上でシステムアップグレードをしようとする際に、
        大量のパッケージ削除を提案することが時々あります。
   
          + この状況は多くのシステム管理者を驚かせて来ました。パニッ
            クしないでください。

          + このようなことは gnome-core の様なメタパッケージにより依
            存・推薦されるパッケージ間のバージョンのずれにより発生す
            るようです。

          + この状況は aptitude コマンドのメニューから "未実行アクシ
            ョンの取り消し" を選択し、aptitude を終了し、"apt
            full-upgrade" を使うことで解決できます。

    apt-get や apt-cache コマンドはAPTを使う最も基本的なパッケージ管
    理ツールです。

      * apt-get/apt-cache はコマンドラインのユーザーインターフェース
        のみを提供します。

      * apt-get はリリース間のような大掛かりなシステムアップグレード
        に最適です。

      * apt-get は頑強で安定なパッケージリゾルバーを提供します。
   
      * apt-getはハードウエアリソースへの要求が楽である。メモリーの消
        費は少なく、実行速度が早い。

      * apt-cache はパッケージ名や説明に関して標準の regex を使った検
        索機能を提供します。

      * apt-get と apt-cache は /etc/apt/preferences を使って複数のバ
        ージョンのパッケージを管理できますが、それはとても面倒です。

    apt コマンドはパッケージ管理のための上位コマンドラインインターフ
    ェースです。基本的に apt-get や apt-cache 等のコマンドのラッパー
    で、インタラクティブな用途に良いオプションをデフォルトで有効にし
    てエンドユーザーインターフェース向けとなっています。

      * apt は、apt install としてパッケージをインストールするとフレ
        ンドリーなプログレスバーを提供します。
   
      * apt は、ダウンロードされたパッケージが上手くインストールされ
        た後、デフォルトでキャッシュされた .deb パッケージを削除しま
        す。

    ヒント

    ユーザーはインタラクティブ用途には apt(8) コマンドを使うことが推
    奨されますし、シェルスクリプト中ではapt-get(8) や apt-cache(8) コ
    マンドを使うことが推奨されます。

    aptitude コマンドは最も多芸なAPTを使うパッケージ管理ツールです。

      * aptitude はフルスクリーンのインタラクティブなテキストユーザー
        インターフェースを提供します。

      * aptitude はコマンドラインのユーザーインターフェースも提供しま
        す。

      * aptitude はインストールされたパッケージを検査したり利用可能な
        パッケージを探索したりするような日常のインタラクティブなパッ
        ケージ管理に最適です。

      * aptitudeはハードウエアリソースへの要求が厳しい。メモリーの消
        費は多く、実行速度も遅い。

      * aptitude はパッケージメタデータ全てに関する拡張されたregex を
        使った探索を提供します。

      * aptitude は /etc/apt/preferences を使わずに複数のバージョンの
        パッケージを管理できますし、それは非常に直感的です。

%

2.2.2. コマンドラインによる基本的なパッケージ管理操作

    apt(8) や aptitude(8) や apt-get(8) /apt-cache(8) を使うコマンド
    ラインによるパッケージ管理操作を次に記します。

    表2.6 apt(8) や aptitude(8) や apt-get(8) /apt-cache(8) を使うコ
    マンドラインによる基本パッケージ管理操作

    +---------------------------------------------------------------+
    |apt シンタッ|aptitude シ |  apt-get/  |                        |
    |    クス    | ンタックス |apt-cache シ|          説明          |
    |            |            | ンタックス |                        |
    |------------+------------+------------+------------------------|
    |apt update  |aptitude    |apt-get     |パッケージアーカイブメタ|
    |            |update      |update      |データー更新            |
    |------------+------------+------------+------------------------|
    |apt install |aptitude    |apt-get     |"foo" パッケージの候補バ|
    |foo         |install foo |install foo |ージョンをその依存関係と|
    |            |            |            |ともにインストール      |
    |------------+------------+------------+------------------------|
    |            |            |            |他のパッケージを削除する|
    |apt upgrade |aptitude    |apt-get     |こと無くインストール済み|
    |            |safe-upgrade|upgrade     |パッケージの候補バージョ|
    |            |            |            |ンをインストール        |
    |------------+------------+------------+------------------------|
    |            |            |            |必要なら他のパッケージを|
    |apt         |aptitude    |apt-get     |削除しながらインストール|
    |full-upgrade|full-upgrade|dist-upgrade|済みパッケージの候補バー|
    |            |            |            |ジョンをインストール    |
    |------------+------------+------------+------------------------|
    |apt remove  |aptitude    |apt-get     |設定ファイルを残したまま|
    |foo         |remove foo  |remove foo  |"foo" パッケージを削除  |
    |------------+------------+------------+------------------------|
    |apt         |N/A         |apt-get     |既に必要なくなっている自|
    |autoremove  |            |autoremove  |動済みパッケージを削除  |
    |------------+------------+------------+------------------------|
    |apt purge   |aptitude    |apt-get     |設定ファイルを含めて    |
    |foo         |purge foo   |purge foo   |"foo" パッケージを完全削|
    |            |            |            |除                      |
    |------------+------------+------------+------------------------|
    |            |aptitude    |apt-get     |収集されローカルに貯蔵さ|
    |apt clean   |clean       |clean       |れたパッケージファイルを|
    |            |            |            |完全消去                |
    |------------+------------+------------+------------------------|
    |            |            |            |収集されローカルに貯蔵さ|
    |apt         |aptitude    |apt-get     |れたパッケージファイルの|
    |autoclean   |autoclean   |autoclean   |うち古くなったパッケージ|
    |            |            |            |を消去                  |
    |------------+------------+------------+------------------------|
    |apt show foo|aptitude    |apt-cache   |"foo"パッケージに関する |
    |            |show foo    |show foo    |詳細情報を表示          |
    |------------+------------+------------+------------------------|
    |apt search  |aptitude    |apt-cache   |<regex> とマッチするパッ|
    |<regex>     |search      |search      |ケージを検索            |
    |            |<regex>     |<regex>     |                        |
    |------------+------------+------------+------------------------|
    |            |aptitude why|            |なぜ <regex> とマッチす |
    |N/A         |<regex>     |N/A         |るパッケージがインストー|
    |            |            |            |ルされるのかを説明      |
    |------------+------------+------------+------------------------|
    |            |aptitude    |            |なぜ <regex> とマッチす |
    |N/A         |why-not     |N/A         |るパッケージがインストー|
    |            |<regex>     |            |ルされないのかを説明    |
    |------------+------------+------------+------------------------|
    |            |aptitude    |apt-mark    |手動インストールされたパ|
    |N/A         |search '~i! |showmanual  |ッケージをリスト        |
    |            |~M'         |            |                        |
    +---------------------------------------------------------------+


    注記

    aptitude コマンドはその拡張されたパッケージリゾルバーのような豊富
    なフィーチャーとともに提供されますが、この複雑さは Bug #411123 や
    Bug #514930 や Bug #570377 のようないくつかのリグレッションを引き
    起こしました (また起こしているかもしれません)。疑義のある場合には
    、aptitude コマンドに代えて apt や apt-get や apt-cache コマンド
    を使ってください。

    注記

    lenny 以降、apt と apt-get と aptitude は自動インストールされたパ
    ッケージ状態を共有しているので (「APT に関するパッケージ状態」参
    照下さい)、これらのツールを特段の問題なく混用できます (Bug #
    594490 参照下さい)。

    "aptitude why <regex>" は "aptitude -v why <regex>" とすることで
    、さらに詳しい情報を表示します。同様の情報は "apt rdepends
    <package>" や "apt-cache rdepends <package>" とすることでも得られ
    ます。

    aptitude コマンドが最初コマンドラインモードで実行されパッケージ間
    のコンフリクトのような問題に直面した場合は、プロンプトがでた際に
    "e" を押すことでフルスクリーンのインタラクティブモードに切り替え
    られます。

    "aptitude" のすぐ後ろにコマンドオプションをつけられます。

    表2.7 aptitude(8) に関する特記すべきコマンドオプション

    +---------------------------------------------------------------+
    |コマンドオプシ |                     説明                      |
    |     ョン      |                                               |
    |---------------+-----------------------------------------------|
    |-s             |コマンド結果のシミュレート                     |
    |---------------+-----------------------------------------------|
    |-d             |インストール / アップグレード無しにダウンロード|
    |               |のみする                                       |
    |---------------+-----------------------------------------------|
    |-D             |自動的なインストールや削除の前に簡単な説明を表 |
    |               |示                                             |
    +---------------------------------------------------------------+


    詳細は aptitude(8) や "/usr/share/doc/aptitude/README" にある
    "aptitude user's manual" を参照下さい。

    ヒント

    現在でも利用可能な dselect パッケージは、過去のリリースでは推薦さ
    れたフルスクリーンのインタラクティブなパッケージ管理ツールでした
    。

%

2.2.3. aptitude のインタラクティブな使用

    インタラクティブなパッケージ管理のためには aptitude をインタラク
    ティブモードでコンソールのシェルプロンプトから次のように立ち上げ
    ます。

    $ sudo aptitude -u
    Password:

    これによりアーカイブ情報のローカルコピーは更新され、フルスクリー
    ンのパッケージリストがメニュー付きで表示されます。Aptitude の設定
    ファイルは "~/.aptitude/config" にあります。

    ヒント

    user の設定ファイルでなく root の設定ファイルを使いたい際には、上
    記の例で "sudo aptitude ..." の代わりに "sudo -H aptitude ..." を
    使います。

    ヒント

    Aptitude はインタラクティブに起動されると次にするアクションを自動
    的に設定します。その設定が好ましくない場合はメニュー:"Action" →
    "Cancel pending actions" からリセットすることができます。

%

2.2.4. aptitude のキーバインディング

    パッケージの状態を閲覧し、"予定のアクション" の設定をこのフルスク
    リーンモードで各パッケージするための重要なキーを次に記します。

    表2.8 aptitude のキーバインディングのリスト

    +---------------------------------------------------------------+
    |        キー        |            キーバインディング            |
    |--------------------+------------------------------------------|
    |F10 もしくくは      |メニュー                                  |
    |Ctrl-t              |                                          |
    |--------------------+------------------------------------------|
    |?                   |(より詳細な) キーの意味のヘルプの表示     |
    |--------------------+------------------------------------------|
    |F10 → ヘルプ → ユー |ユーザーマニュアルの表示                  |
    |ザーマニュアル      |                                          |
    |--------------------+------------------------------------------|
    |u                   |パッケージアーカイブ情報の更新            |
    |--------------------+------------------------------------------|
    |+                   |パッケージをアップグレードまたはインストー|
    |                    |ルするとマーク                            |
    |--------------------+------------------------------------------|
    |-                   |パッケージを削除するとマーク (設定ファイル|
    |                    |は温存)                                   |
    |--------------------+------------------------------------------|
    |_                   |パッケージを完全削除するとマーク (設定ファ|
    |                    |イルも削除)                               |
    |--------------------+------------------------------------------|
    |=                   |パッケージをホールド                      |
    |--------------------+------------------------------------------|
    |U                   |全てのアップグレード可能なパッケージをマー|
    |                    |ク (full-upgrade として機能)              |
    |--------------------+------------------------------------------|
    |g                   |選ばれたパッケージのダウンロードとインスト|
    |                    |ールをスタート                            |
    |--------------------+------------------------------------------|
    |q                   |現在のスクリーンを終了し変更を保存        |
    |--------------------+------------------------------------------|
    |x                   |現在のスクリーンを終了し変更を廃棄        |
    |--------------------+------------------------------------------|
    |Enter               |パッケージに関する情報閲覧                |
    |--------------------+------------------------------------------|
    |C                   |パッケージの変更履歴を閲覧                |
    |--------------------+------------------------------------------|
    |l                   |表示されるパッケージの制限を変更          |
    |--------------------+------------------------------------------|
    |/                   |最初のマッチを検索                        |
    |--------------------+------------------------------------------|
    |\                   |最終検索の反復                            |
    +---------------------------------------------------------------+


    コマンドラインのファイル名の規定や、"l" や "/" を押した後のメニュ
    ープロンプトは次に記す aptitude の regex (正規表現) が使われます
    。aptitude の regex は "~n" で始めそれにパッケージ名を続けた文字
    列を使うことで明示的にパッケージ名とマッチさせられます。

    ヒント

    ビジュアルインターフェースで全てのインストール済みパッケージを候
    補バージョンにアップグレードさせるには "U" を押さなければいけませ
    ん。これをしないと選ばれたパッケージとそれにバージョン付きの依存
    関係のある特定のパッケージのみがアップグレードされます。

%

2.2.5. aptitude の下でのパッケージの表示

    インタラクティブなフルスクリーンモードの aptitude(8) はパッケージ
    リスト中のパッケージは次の例のように表示されます。

    idA   libsmbclient                             -2220kB 3.0.25a-1  3.0.25a-2

    上記の行は左から次に記すような意味です。

      * "現状" フラグ (1番目の文字)

      * "予定のアクション" フラグ (2番目の文字)

      * "自動" フラグ (3番目の文字)

      * パッケージ名

      * "予定のアクション" に帰属されるディスク空間の使用の変化

      * パッケージの現バージョン

      * パッケージの候補バージョン

    ヒント
   
    "?" を押して表示されるヘルプスクリーンの一番下に全フラグのリスト
    があります。

    現在のローカルの環境設定によって候補バージョンは選ばれます (
    apt_preferences(5) と「候補バージョンの調整」を参照下さい)。

    "表示" メニューの下にある数種のパッケージ表示が利用できます。

    表2.9 aptitude の表示のリスト

    +---------------------------------------------------------------+
    |   表示   |状況 |                 ビューの説明                 |
    |----------+-----+----------------------------------------------|
    |パッケージ|良好 |表2.10「標準パッケージ画面の分類」参照 (デフォ|
    |画面      |     |ールト)                                       |
    |----------+-----+----------------------------------------------|
    |          |     |何らかのインストール済みパッケージによって推薦|
    |推奨を監査|良好 |されているがインストールされていないパッケージ|
    |          |     |をリスト                                      |
    |----------+-----+----------------------------------------------|
    |平坦なパッ|     |パッケージを分類せずにリスト (regex とともに使|
    |ケージリス|良好 |用)                                           |
    |ト        |     |                                              |
    |----------+-----+----------------------------------------------|
    |Debtags 表|十分 |パッケージの debtags のエントリーにより分類し |
    |示        |使え |たパッケージをリスト                          |
    |          |る   |                                              |
    |----------+-----+----------------------------------------------|
    |カテゴリー|非推 |パッケージのカテゴリー別に分類してパッケージを|
    |別表示    |奨   |リスト (これに代えて Debtags 表示を利用しまし |
    |          |     |ょう)                                         |
    +---------------------------------------------------------------+


    注記
   
    パッケージの debtags によるタグ付け状況を改善するのにご協力下さい
    ！

    標準 "パッケージ画面" はパッケージを dselect にいくつかの機能を加
    えた感じで分類します。

    表2.10 標準パッケージ画面の分類

    +---------------------------------------------------------------+
    |            分類             |          ビューの説明           |
    |-----------------------------+---------------------------------|
    |更新可能なパッケージ         |section → area → package と整理し|
    |                             |てパッケージをリスト             |
    |-----------------------------+---------------------------------|
    |新規パッケージ               |, ,                              |
    |-----------------------------+---------------------------------|
    |インストール済みのパッケージ |, ,                              |
    |-----------------------------+---------------------------------|
    |インストールされていないパッ |, ,                              |
    |ケージ                       |                                 |
    |-----------------------------+---------------------------------|
    |廃止された、またはローカルで |, ,                              |
    |作成されたパッケージ         |                                 |
    |-----------------------------+---------------------------------|
    |仮想パッケージ               |同一機能のパッケージをリスト     |
    |-----------------------------+---------------------------------|
    |タスク                       |タスクに一般的に必要な機能を持つ |
    |                             |パッケージのリスト               |
    +---------------------------------------------------------------+


    ヒント
   
    Tasks ビューはあなたのタスクに使うパッケージをいいとこ取りするの
    に使えます。

%

2.2.6. aptitude を使った探索方法

    Aptitude はその regex 式機能を通してパッケージを探索する方法をい
    くつか提供します。

      * シェルコマンドライン:

          + マッチするパッケージのインストール状態やパッケージ名や短
            い説明をリストをすには、"aptitude search '
            <aptitude_regex>'"

          + パッケージの詳細説明のリストをするには、"aptitude show '
            <package_name>'"

      * 対話型フルスクリーンモード:

          + マッチするパッケージにパッケージビューを絞る、"l"

          + マッチするパッケージを探す、"/"

          + マッチするパッケージを逆方向に探す、"\"

          + 次を探す、"n"

          + 次を逆方向に探す、"N"

    ヒント
   
    <package_name> という文字列は、"~" で始めて regex 式と明示されて
    いない限り、パッケージ名との完全な一致検索として扱います。

%

2.2.7. aptitude の regex 式

    aptitude の regex 式は mutt 的な拡張 ERE (「正規表現」参照下さい)
    で aptitude に特定なマッチ規則の拡張は次に示すとおりです。

    表2.11 aptitude の regex 式のリスト

    +---------------------------------------------------------------+
    |拡張マッチ規|                     regex 式                     |
    |  則の説明  |                                                  |
    |------------+--------------------------------------------------|
    |パッケージ名|~n<名前のregex>                                   |
    |とのマッチ  |                                                  |
    |------------+--------------------------------------------------|
    |記述とのマッ|~d<記述のregex>                                   |
    |チ          |                                                  |
    |------------+--------------------------------------------------|
    |タスク名との|~t<タスクのregex>                                 |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |debtag との |~G<debtagのregex>                                 |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |メンテナとの|~m<maintainerのregex>                             |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |パッケージセ|                                                  |
    |クションとの|~s<セクションのregex>                             |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |パッケージバ|                                                  |
    |ージョンとの|~V<バージョンのregex>                             |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |アーカイブ  |                                                  |
    |(archive) と|~A{bullseye,bookworm,sid}                         |
    |のマッチ    |                                                  |
    |------------+--------------------------------------------------|
    |オリジン    |                                                  |
    |(origin) と |~O{debian,…}                                      |
    |のマッチ    |                                                  |
    |------------+--------------------------------------------------|
    |優先度      |                                                  |
    |(priority)  |~p{extra,important,optional,required,standard}    |
    |とのマッチ  |                                                  |
    |------------+--------------------------------------------------|
    |必須        |                                                  |
    |(essential) |~E                                                |
    |パッケージと|                                                  |
    |のマッチ    |                                                  |
    |------------+--------------------------------------------------|
    |仮想パッケー|~v                                                |
    |ジとのマッチ|                                                  |
    |------------+--------------------------------------------------|
    |新規パッケー|~N                                                |
    |ジとのマッチ|                                                  |
    |------------+--------------------------------------------------|
    |次のアクショ|~a                                                |
    |ンとのマッチ|{install,upgrade,downgrade,remove,purge,hold,keep}|
    |------------+--------------------------------------------------|
    |インストール|                                                  |
    |済みパッケー|~i                                                |
    |ジとのマッチ|                                                  |
    |------------+--------------------------------------------------|
    |A-マークのつ|                                                  |
    |いたインスト|                                                  |
    |ール済みパッ|                                                  |
    |ケージとマッ|~M                                                |
    |チ (自動イン|                                                  |
    |ストール済み|                                                  |
    |パッケージ) |                                                  |
    |------------+--------------------------------------------------|
    |A-マークのつ|                                                  |
    |いていないイ|                                                  |
    |ンストール済|                                                  |
    |みパッケージ|~i!~M                                             |
    |とマッチ (管|                                                  |
    |理者が選択し|                                                  |
    |たパッケー  |                                                  |
    |ジ)         |                                                  |
    |------------+--------------------------------------------------|
    |インストール|                                                  |
    |済みかつアッ|                                                  |
    |プグレード可|~U                                                |
    |能なパッケー|                                                  |
    |ジとマッチ  |                                                  |
    |------------+--------------------------------------------------|
    |削除済みだが|                                                  |
    |完全削除され|                                                  |
    |ていないパッ|~c                                                |
    |ケージとマッ|                                                  |
    |チ          |                                                  |
    |------------+--------------------------------------------------|
    |削除済みか完|                                                  |
    |全削除済みか|                                                  |
    |削除可能なパ|~g                                                |
    |ッケージとマ|                                                  |
    |ッチ        |                                                  |
    |------------+--------------------------------------------------|
    |壊れた依存関|                                                  |
    |係宣言をした|~b                                                |
    |パッケージと|                                                  |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |<type> の壊 |                                                  |
    |れた依存関係|                                                  |
    |を宣言してい|~B<type>                                          |
    |るパッケージ|                                                  |
    |とマッチ    |                                                  |
    |------------+--------------------------------------------------|
    |<type> の壊 |                                                  |
    |れた依存関係|                                                  |
    |を宣言してい|~D[<type>:]<pattern>                              |
    |る <pattern>|                                                  |
    |パッケージと|                                                  |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |<type> の壊 |                                                  |
    |れた依存関係|                                                  |
    |を宣言してい|~DB[<type>:]<pattern>                             |
    |る <pattern>|                                                  |
    |パッケージと|                                                  |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |<pattern> マ|                                                  |
    |ッチするパッ|                                                  |
    |ケージが    |                                                  |
    |<type> の依 |~R[<type>:]<pattern>                              |
    |存関係を宣言|                                                  |
    |しているパッ|                                                  |
    |ケージとマッ|                                                  |
    |チ          |                                                  |
    |------------+--------------------------------------------------|
    |<pattern> マ|                                                  |
    |ッチするパッ|                                                  |
    |ケージが    |                                                  |
    |<type> の壊 |~RB[<type>:]<pattern>                             |
    |れた依存関係|                                                  |
    |を宣言してい|                                                  |
    |るパッケージ|                                                  |
    |とマッチ    |                                                  |
    |------------+--------------------------------------------------|
    |他のインスト|                                                  |
    |ール済みパッ|                                                  |
    |ケージが依存|~R~i                                              |
    |するパッケー|                                                  |
    |ジとマッチ  |                                                  |
    |------------+--------------------------------------------------|
    |他のインスト|                                                  |
    |ール済みパッ|                                                  |
    |ケージが一切|!~R~i                                             |
    |依存しないパ|                                                  |
    |ッケージとマ|                                                  |
    |ッチ        |                                                  |
    |------------+--------------------------------------------------|
    |他のインスト|                                                  |
    |ール済みパッ|                                                  |
    |ケージが依存|~R~i|~Rrecommends:~i                              |
    |もしくは推薦|                                                  |
    |するパッケー|                                                  |
    |ジとマッチ  |                                                  |
    |------------+--------------------------------------------------|
    |フィルターさ|                                                  |
    |れたバージョ|                                                  |
    |ンの        |~S filter <pattern>                               |
    |<pattern> と|                                                  |
    |マッチ      |                                                  |
    |------------+--------------------------------------------------|
    |常に全てのパ|                                                  |
    |ッケージにマ|~T                                                |
    |ッチ (真)   |                                                  |
    |------------+--------------------------------------------------|
    |どのパッケー|                                                  |
    |ジにもマッチ|~F                                                |
    |しない (偽) |                                                  |
    +---------------------------------------------------------------+


      * regex 部分は、"^" や ".*" や "$" などを使う egrep(1) や awk
        (1) や perl(1) といった典型的な Unix 的テキストツールで使われ
        る ERE と同様です。

      * 依存関係を表す <type> はパッケージの相互関係を指定する
        (depends, predepends, recommends, suggests, conflicts,
        replaces, provides) の内の1つです。

      * デフォールトの依存関係は "depends" です。

    ヒント
   
    <regex_pattern> がヌル文字列の場合は "~T" をコマンドの直後に使っ
    て下さい。

    次がショートカットです。

      * "~P<term>" == "~Dprovides:<term>"

      * "~C<term>" == "~Dconflicts:<term>"

      * "…~W term" == "(…|term)"

    mutt が表現のお手本なので、mutt に慣れているユーザーはすぐ慣れる
    でしょう。"User's Manual" ("/usr/share/doc/aptitude/README") 中の
    "SEARCHING, LIMITING, AND EXPRESSIONS" を参照下さい。

    注記

    lenny バージョンの aptitude(8) では、新規の "?broken" のような長
    形式の regex マッチ形式が、古い "~b" のような短形式のマッチ形式に
    代えて使えます。そのためチルダ文字 "~" に加えてスペース文字 " "
    も regex の終端文字として扱われます。新規の長形式のマッチ形式につ
    いては "User's Manual" を参照下さい。

%

2.2.8. aptitude による依存関係の解決

    aptitude によるパッケージの選択は、"F10 → Options → Preferences →
    Dependency handling" のメニュー設定に従って、"Depends:" リストに
    規定されたパッケージばかりでは無く "Recommends:" リストに規定され
    たパッケージも引き込みます。このような自動的にインストールされた
    パッケージは不要になると aptitude が自動的に削除します。

    aptitude コマンドの"自動インストール" 挙動を制御するフラグは apt
    パッケージ中の apt-mark(8) コマンドを用いても操作できます。

%

2.2.9. パッケージアクティビティーログ

    パッケージアクティビティーの履歴はログファイルで確認できます。

    表2.12 パッケージアクティビティーのログファイル

    +---------------------------------------------------------------+
    |   ファイル    |                     内容                      |
    |---------------+-----------------------------------------------|
    |/var/log/      |全パッケージアクティビティの dpkg レベルのアク |
    |dpkg.log       |ティビティーのログ                             |
    |---------------+-----------------------------------------------|
    |/var/log/apt/  |APT アクティビティのログ                       |
    |term.log       |                                               |
    |---------------+-----------------------------------------------|
    |/var/log/      |aptitude コマンドアクティビティのログ          |
    |aptitude       |                                               |
    +---------------------------------------------------------------+


    これらのログから意味のある理解を迅速に得るのは実際には難しいです
    。より簡単な方法については「設定ファイルの変更記録」を参照下さい
    。

%

2.3. aptitude 操作例

    aptitude(8) 操作例を次に示します。

%

2.3.1. regex にマッチするパッケージ名のパッケージをリスト

    次のコマンドはパッケージの名前が regex にマッチするパッケージをリ
    ストします。

    $ aptitude search '~n(pam|nss).*ldap'
    p libnss-ldap - NSS module for using LDAP as a naming service
    p libpam-ldap - Pluggable Authentication Module allowing LDAP interfaces

    これはパッケージの正確な名前を探すときに非常に便利です。

%

2.3.2. regex マッチをしての閲覧

    "平坦なパッケージリスト" のビューで "l" のプロンプトに regex
    "~dipv6" を入れるとその意味にマッチするパッケージにビューが制限さ
    れ、その情報をインタラクティブに閲覧できます。

%

2.3.3. パッケージの完全削除

    削除したパッケージが残した全ての設定ファイルを次のようにして完全
    削除できます。

    次のコマンドの結果をチェックします。

    # aptitude search '~c'

    もしリストされたパッケージが完全削除されても問題ないなら、次のコ
    マンドを実行します。

    # aptitude purge '~c'

    同様のことをインタラクティブにすればよりきめの細かい結果が得られ
    ます。

    "新規パッケージ画面" のビューで "l" のプロンプトに regex "~c" を
    入れると regex にマッチする "削除されたが完全駆除されていない" パ
    ッケージにビューが制限されます。トップレベルの見出しの上で "[" を
    押すと regex にマッチする全てのパッケージが表示されます。

    次に "インストールされていないパッケージ" 等のトップレベルの見出
    しの上で "_" を押します。その見出しの下の regex にマッチするパッ
    ケージだけが完全削除と設定されます。インタラクティブに個々のパッ
    ケージの上で "=" を押せばそれらのパッケージを完全削除対象から外せ
    ます。

    このテクニックは非常に便利で、他の多くのコマンドキーでも使えます
    。

%

2.3.4. 自動 / 手動インストール状態の整理

    (非 aptitude のパッケージインストーラー等を使った後で) パッケージ
    の自動 / 手動インストールの状態を整理する私の方法を次に記します。

     1. aptitude を root としてインタラクティブに起動します。

     2. "u" と "U" と "f" と "g" とタイプしてパッケージリストを更新し
        パッケージをアップグレードします。

     3. パッケージ表示制限を "~i(~R~i|~Rrecommends:~i)" と入力するた
        めに "l" とタイプし、自動インストールとなるよう "M" と "イン
        ストール済みのパッケージ" の上でタイプします。

     4. パッケージ表示制限を "~prequired|~pimportant|~pstandard|~E"
        と入力するために "l" とタイプし、手動インストールとなるよう
        "m" と "インストール済みのパッケージ" の上でタイプします。

     5. パッケージ表示制限を "~i!~M" と入力するために "l" とタイプし
        、"インストール済みのパッケージ" の上で "[" とタイプしてパッ
        ケージを見えるようにした後で個々のパッケージの上で "-" とタイ
        プして使っていないパッケージを削除します。
   
     6. パッケージ表示制限を "~i" と入力するように "l" とタイプし、そ
        して "タスク" の上で手動インストールとなるよう "m" とタイプし
        ます。

     7. aptitude を終了します。

     8. "apt-get -s autoremove|less" と root から起動して何が使われて
        いないのか確認します。

     9. aptitude とインタラクティブモードで再起動して必要なパッケージ
        を "m" でマークします。

    10. "apt-get -s autoremove|less" と root から再起動して削除対象が
        期待にかなっていることを再確認します。

    11. "apt-get autoremove|less" と root から起動して使用していない
        パッケージを自動削除します。

    "Tasks" の上で "m" を押すのも一案で、大量ファイル除去となる事態が
    回避できます。

%

2.3.5. システム全体のアップグレード

    注記

    新規リリース等への移行は、Debian では下記のようにアップグレードで
    きるのですが、新たなシステムをクリーンインストールすることを考え
    るべきです。こうすると溜めてきたゴミの除去ができる上に最新のパッ
    ケージの最良の組み合わせも分かります。もちろん安全な場所に完全な
    システムのバックアップ (「バックアップと復元」参照下さい) を事前
    にしなくてはいけません。異なったパーティションを使ったデュアルブ
    ート設定をすることをスムーズな移行をするためにお薦めします。

    "/etc/apt/sources.list" ファイルの内容を新規リリースへと向けるよ
    うに変更し、"apt update; apt dist-upgrade"コマンドを実行すること
    でシステム全体のアップグレードができます。

    安定版 stable からテスト版 testing や不安定版 unstable にアップグ
    レードするには、「Debian アーカイブの基本」にある "/etc/apt/
    sources.list" 例の "bullseye" を "bookworm" か "sid" に置き換えま
    す。

    一部のパッケージで移行に関して支障をきたすことが実際には起こるか
    もしれません。これは大体パッケージ依存関係に起因します。アップグ
    レードする差が大きければ大きいほど比較的大きな問題似合う可能性が
    より大きくなります。以前の安定版 stable からリリース後の新規安定
    版 stable への移行では新規リリースノートを読んでそこに記載された
    手続き通りに完全にすれば問題発生を防げます。

    安定版 stable からテスト版 testing へ移行すると決めた時には頼りに
    するリリースノートはありません。前回の安定版 stable のリリースの
    後で安定版 stable とテスト版 testing の差がかなり大きくなっている
    かもしれません。そうだとアップグレードをする状況は複雑になってい
    ます。

    メーリングリストから最新情報を収集するとか常識を使うといった予防
    措置をしながらフルアップグレードをするべきです。

     1. 前回の "リリースノート" を読みます。

     2. 全システム (特にデーターや設定情報) をバックアップします。

     3. ブートローダーが壊れたときのためにブートできるメディアを確保
        します。

     4. システムを使っているユーザーに十分事前に通告します。

     5. script(1) を使ってアップグレード活動を記録します。

     6. 削除をされないように "aptitude unmarkauto vim" 等として、
        "unmarkauto" を重要なパッケージに適用します。

     7. デスクトップタスクにあるパッケージ等を削除して、インストール
        されたパッケージを減らしてパッケージがコンフリクトする可能性
        を減らします。

     8. "/etc/apt/preferences" ファイルを削除します (apt-pinning を無
        効化)。

     9. 段階的にアップグレードしましょう: 旧安定版 oldstable → 安定版
        stable → テスト版 testing → 不安定版 unstable。

    10. "/etc/apt/sources.list" ファイルを更新して新アーカイブ対象に
        "aptitude update" を実行します。

    11. "aptitude install perl" 等として、先に新規の中核的パッケージ
        を必要に応じてインストールします。

    12. "apt-get -s dist-upgrade" コマンドを実行して影響を確認します
        。

    13. 最後に "apt-get dist-upgrade" コマンドを実行します。

    注意
   
    stable リリース間でアップグレードする際に Debian のメジャーリリー
    スを飛ばすのは賢明ではありません。

    注意

    過去の "リリースノート" ではシステム全体のアップグレードをするの
    に GCC や Linux カーネルや initrd-tools や Glibc や Perl や APT
    tool chain 等には特別な配慮が必要でした。

    unstable での毎日のアップグレードは「パッケージ問題からの防御」を
    参照下さい。

2.4. 高度なパッケージ管理操作

%

2.4.1. コマンドラインによる高度なパッケージ管理操作

    aptitude ではハイレベル過ぎるとか必要な機能を欠くという他のパッケ
    ージ管理操作のリストです。

    表2.13 高度なパッケージ管理操作

    +---------------------------------------------------------------+
    |          コマンド          |            アクション            |
    |----------------------------+----------------------------------|
    |COLUMNS=120 dpkg -l <パッケ |バグレポートのためにインストールさ|
    |ージ名パターン>             |れたパッケージの状態をリスト      |
    |----------------------------+----------------------------------|
    |dpkg -L <パッケージ名>      |インストールされたパッケージの内容|
    |                            |をリスト                          |
    |----------------------------+----------------------------------|
    |dpkg -L <パッケージ名> |    |インストールされたパッケージのマン|
    |egrep '/usr/share/man/man.* |ページをリスト                    |
    |/.+'                        |                                  |
    |----------------------------+----------------------------------|
    |dpkg -S <ファイル名パターン>|マッチするファイル名があるインスト|
    |                            |ールされたパッケージをリスト      |
    |----------------------------+----------------------------------|
    |apt-file search <ファイル名 |マッチするファイル名があるアーカイ|
    |パターン>                   |ブ中のパッケージをリスト          |
    |----------------------------+----------------------------------|
    |apt-file list <パッケージ名 |アーカイブ中のマッチするパッケージ|
    |パターン>                   |をリスト                          |
    |----------------------------+----------------------------------|
    |dpkg-reconfigure <パッケージ|特定パッケージを再設定            |
    |名>                         |                                  |
    |----------------------------+----------------------------------|
    |dpkg-reconfigure -p=low <パ |もっとも詳細な質問で特定パッケージ|
    |ッケージ名>                 |を再設定                          |
    |----------------------------+----------------------------------|
    |configure-debian            |フルスクリーンメニューからパッケー|
    |                            |ジを再設定                        |
    |----------------------------+----------------------------------|
    |dpkg --audit                |部分的にインストールされたパッケー|
    |                            |ジに関してシステムを監査          |
    |----------------------------+----------------------------------|
    |dpkg --configure -a         |全ての部分的にインストールされたパ|
    |                            |ッケージを設定                    |
    |----------------------------+----------------------------------|
    |apt-cache policy <バイナリー|バイナリーパッケージに関して利用可|
    |パッケージ名>               |能なバージョンやプライオリティーや|
    |                            |アーカイブ情報を表示              |
    |----------------------------+----------------------------------|
    |apt-cache madison <パッケー |パッケージに関して利用可能なバージ|
    |ジ名>                       |ョンやアーカイブ情報を表示        |
    |----------------------------+----------------------------------|
    |apt-cache showsrc <バイナリ |バイナリーパッケージに関してソース|
    |ーパッケージ名>             |パッケージの情報を表示            |
    |----------------------------+----------------------------------|
    |apt-get build-dep <パッケー |パッケージをビルドするのに必要なパ|
    |ジ名>                       |ッケージをインストール            |
    |----------------------------+----------------------------------|
    |aptitude build-dep          |パッケージをビルドするのに必要なパ|
    |<package_name>              |ッケージをインストール            |
    |----------------------------+----------------------------------|
    |apt-get source <パッケージ  |(標準アーカイブから) ソースをダウ |
    |名>                         |ンロード                          |
    |----------------------------+----------------------------------|
    |dget <dsc ファイルの URL>   |(他のアーカイブから) ソースをダウ |
    |                            |ンロード                          |
    |----------------------------+----------------------------------|
    |dpkg-source -x <パッケージ  |ソースパッケージの組 ("*.tar.gz"  |
    |名>_<バージョン>-<debianバー|と "*.debian.tar.gz" /            |
    |ジョン>.dsc                 |"*.diff.gz") からソースツリーをビ |
    |                            |ルド                              |
    |----------------------------+----------------------------------|
    |debuild binary              |ローカルのソースツリーからパッケー|
    |                            |ジをビルド                        |
    |----------------------------+----------------------------------|
    |make-kpkg kernel_image      |カーネルソースツリーからカーネルパ|
    |                            |ッケージをビルド                  |
    |----------------------------+----------------------------------|
    |make-kpkg --initrd          |カーネルソースツリーから initramfs|
    |kernel_image                |を有効にしてカーネルパッケージをビ|
    |                            |ルド                              |
    |----------------------------+----------------------------------|
    |dpkg -i <パッケージ名>_<バー|ローカルパッケージをシステムにイン|
    |ジョン>-<debian_バージョン>_|ストール                          |
    |<アーキテクチャー名>.deb    |                                  |
    |----------------------------+----------------------------------|
    |apt install /path/to/       |自動的に依存関係を解決しながらロー|
    |<package_filename>.deb      |カルパッケージをシステムにインスト|
    |                            |ールする                          |
    |----------------------------+----------------------------------|
    |debi <パッケージ名>_<バージ |ローカルパッケージ (複数) をシステ|
    |ョン>-<debian_バージョン>_  |ムにインストール                  |
    |<アーキテクチャー名>.dsc    |                                  |
    |----------------------------+----------------------------------|
    |dpkg --get-selections '*' > |dpkg レベルのパッケージ選択状態情 |
    |selection.txt               |報を保存                          |
    |----------------------------+----------------------------------|
    |dpkg --set-selections       |dpkg レベルのパッケージ選択状態情 |
    |<selection.txt              |報を設定                          |
    |----------------------------+----------------------------------|
    |                            |特定パッケージの dpkg レベルのパッ|
    |echo <package_name> hold |  |ケージ選択状態を hold にする      |
    |dpkg --set-selections       |("aptitude hold <package_name>" と|
    |                            |等価)                             |
    +---------------------------------------------------------------+


    注記

    multi-arch 機能のあるパッケージに関して、一部のコマンドはアーキテ
    クチャー名を必要があるかもしれません。例えば、amd64 アーキテクチ
    ャーの libglib2.0-0 パッケージの内容をリストするには "dpkg -L
    libglib2.0-0:amd64" を使います。

    注意

    "dpkg -i …" や "debi …" といった低いレベルのパッケージツールはシ
    ステム管理者によって注意深く使われなければいけません。必要なパッ
    ケージ依存関係を自動的に面倒見てくれません。Dpkg の "--force-all"
    や類似のコマンドラインオプション (dpkg(1) 参照下さい) はエキスパ
    ートだけが使うようにできています。十分にその影響を理解せずに使う
    とシステム全体を壊してしまうかもしれません。

    以下に注意下さい。

      * 全てのシステム設定やインストールコマンドは root から実行なけ
        ればいけません。

      * regex (「正規表現」参照下さい) を使う aptitude と異なり、他の
        パッケージ管理コマンドはシェルグロブ (「シェルグロブ」参照下
        さい) のようなパターンを使います。

      * apt-file パッケージに入っている apt-file(1) は事前に
        "apt-file update" を実行する必要があります。

      * configure-debian パッケージに入っている configure-debian(8)
        はそのバックエンドとして dpkg-reconfigure(8) を実行します。

      * dpkg-reconfigure(8) はそのバックエンドとして debconf(1) を利
        用するパッケージスクリプトを実行します。
   
      * "apt-get build-dep" や "apt-get source" や "apt-cache
        showsrc" コマンドは "/etc/apt/sources.list" の中に "deb-src"
        エントリーが必要です。

      * dget(1) や debuild(1) や debi(1) は devscripts パッケージが必
        要です。

      * "apt-get source" を使った (再)パッケージ化の手続きは「安定版
        システムへのパッケージ移植」を参照下さい。

      * make-kpkg コマンドは kernel-package パッケージが必要です (「
        カーネル」参照下さい)。

      * 一般的なパッケージ化に関しては「Debian パッケージ作成」を参照
        下さい。

%

2.4.2. インストールされたパッケージファイルの検証

    debsums をインストールすると debsums(1) を使って "/var/lib/dpkg/
    info/*.md5sums" ファイル中の MD5sum 値との比較でインストールされ
    たパッケージファイルを検証できます。MD5sum がどのような仕組かは「
    MD5 和」参照下さい。

    注記

    侵入者によって MD5sum のデーターベースが改竄されているかもしれな
    いので debsums(1) はセキュリティーツールとしては限定的有用性しか
    ありません。管理者によるローカルの変更や記憶メディアのエラーによ
    る損傷を点検するぐらいには有用です。

%

2.4.3. パッケージ問題からの防御

    多くのユーザーは新規機能やパッケージを求めて Debian システムの非
    安定版 unstable リリースを追いかけることを好みます。こういうこと
    をするとクリティカルなパッケージのバグにシステムが遭遇しやすくな
    ります。

    apt-listbugs パッケージをインストールすれば、APT システムを使って
    アップグレードする時に Debian の BTS を自動的にクリティカルなバグ
    に関して点検することで、クリティカルなバグからあなたのシステムを
    防御できます。

    apt-listchanges パッケージをインストールすれば、APT システムを使
    ってアップグレードする時に NEWS.Debian 中の重要ニュースを表示しま
    す。

%

2.4.4. パッケージメタデーターの検索

    最近は Debian サイトの https://packages.debian.org/ を訪問すると
    パッケージメタデーターの検索を簡単に出きるようになっていますが、
    より伝統的な方法を見てみます。

    grep-dctrl(1) や grep-status(1) や grep-available(1) コマンドは
    Debian のパッケージコントロールファイルの一般的フォーマットに従う
    いかなるファイルを検索するのにも使えます。

    マッチする名前のファイルを含む dpkg でインストールされたパッケー
    ジ名を探索するのに "dpkg -S <ファイル名パターン>" が使えます。し
    かしメンテナスクリプトで生成されるファイルはこれでは見逃されます
    。

    dpkg のメタデーターに関してより詳細な検索をする必要がある場合、"/
    var/lib/dpkg/info/" ディレクトリーで "grep -e regexパターン *" コ
    マンドを実行しないといけません。こうすることでパッケージスクリプ
    トやインストール時の質問テキスト中の言葉まで検索できます。

    パッケージ依存関係を再帰的に検索したい際には、apt-rdepends(8) を
    使います。

%

2.5. Debian パッケージ管理の内部

    Debian のパッケージ管理システムが内部的のどのように機能するのかを
    学びます。何らかのパッケージ問題が発生した際にあなた自身の解決を
    見出すのに役立つでしょう。

%

2.5.1. アーカイブのメタデーター

    各ディストリビューションのメタデーターのファイルは例えば "http://
    deb.debian.org/debian/" のような各 Debian ミラーサイトの "dist/
    <コード名>" の下に保存されています。そのアーカイブ構造はウェッブ
    ブラウザーで閲覧できます。6つのタイプの重要メタデーターがあります
    。

    表2.14 Debian アーカイブのメタデーターの内容

    +---------------------------------------------------------------+
    | ファイル  |            場所            |         内容         |
    |-----------+----------------------------+----------------------|
    |Release    |ディストリビューションのトッ|アーカイブの説明との整|
    |           |プ                          |合性情報              |
    |-----------+----------------------------+----------------------|
    |           |ディストリビューションのトッ|アーカイブキーで署名さ|
    |Release.gpg|プ                          |れた "Release" ファイ |
    |           |                            |ルに関する署名ファイル|
    |-----------+----------------------------+----------------------|
    |Contents-  |ディストリビューションのトッ|該当アーカイブ中全ての|
    |<アーキテク|プ                          |パッケージに関する全フ|
    |チャー>    |                            |ァイルリスト          |
    |-----------+----------------------------+----------------------|
    |           |各ディストリビューション /  |apt_preferences(5) の |
    |Release    |エリア / アーキテクチャーの |ルールに利用されるアー|
    |           |組み合わせのトップ          |カイブの記述。        |
    |-----------+----------------------------+----------------------|
    |           |各ディストリビューション /  |バイナリーパッケージに|
    |Packages   |エリア / バイナリーアーキテ |関して debian/control |
    |           |クチャーの組み合わせのトップ|を連結                |
    |-----------+----------------------------+----------------------|
    |           |各ディストリビューション /  |ソースパッケージに関し|
    |Sources    |エリア / ソースの組み合わせ |て debian/control を連|
    |           |のトップ                    |結                    |
    +---------------------------------------------------------------+


    最近のアーカイブではネットワークトラフィックを減らすべく圧縮され
    た差分ファイルとしてこれらのメタデーターは保存されています。

%

2.5.2. トップレベルの "Release" ファイルと信憑性

    ヒント
   
    セキュアー APT システムではトップレベルの "Release" ファイルがア
    ーカイブを署名するのに使われています。

    Debian アーカイブの各スイーツには例えば次に示すような "http://
    deb.debian.org/debian/dists/unstable/Release" のようなトップレベ
    ルの "Release" ファイルがあります。

    Origin: Debian
    Label: Debian
    Suite: unstable
    Codename: sid
    Date: Sat, 14 May 2011 08:20:50 UTC
    Valid-Until: Sat, 21 May 2011 08:20:50 UTC
    Architectures: alpha amd64 armel hppa hurd-i386 i386 ia64 kfreebsd-amd64 kfreebsd-i386 mips mipsel powerpc s390 sparc
    Components: main contrib non-free
    Description: Debian x.y Unstable - Not Released
    MD5Sum:
     bdc8fa4b3f5e4a715dd0d56d176fc789 18876880 Contents-alpha.gz
     9469a03c94b85e010d116aeeab9614c0 19441880 Contents-amd64.gz
     3d68e206d7faa3aded660dc0996054fe 19203165 Contents-armel.gz
    ...

    注記

    「Debian アーカイブの基本」の中で "スイーツ (suite)" や "コード名
    (codename)" を使う理由はこれを見れば分かるでしょう。"ディストリビ
    ューション" は "スイーツ" と "コード名" との両方を指したい際に用
    いられます。アーカイブが提供する全アーカイブ "エリア (area)" 名が
    "Components" の下にリストされます。

    トップレベルの "Release" ファイルの整合性はセキュアー apt という
    暗号学手法インフラストラクチャーによって検証されます。

      * 暗号手法による署名ファイル "Release.gpg" は真正のトップレベル
        の "Release" ファイルと秘密の Debian アーカイブキーから作成さ
        れます。

      * 公開の Debian アーカイブキーは "/etc/apt/trusted.gpg" に取り
        込むには次のようにします。

          + 最新の base-files パッケージを用いてキーリングをインスト
            ールすることで自動で取り込む。

          + ftp-master.debian.org に掲示された最新の公開アーカイブキ
            ーを gpg か apt-key ツールを用いて手動で取り込む。

      * セキュアー APT システムはこの "Release.gpg" ファイルと "/etc/
        apt/trusted.gpg" 中の公開アーカイブキーを用いてダウンロードさ
        れたトップレベルの "Release" ファイルの整合性を暗号学手法を用
        いて検証します。

    "全ての Packages" と "Sources ファイルの整合性はそのトップレベル
    の "Release" ファイル中の MD5sum 値を用いて検証します。"パッケー
    ジファイルの整合性は "Packages" や "Sources" ファイル中の MD5sum
    値を用いて検証します。debsums(1) と「インストールされたパッケージ
    ファイルの検証」を参照下さい。

    暗号学手法を用いた署名の検証は MD5sum 値の計算よりも非常に CPU を
    使うプロセスなので、トップレベルの "Release" ファイルには暗号学手
    法を用いた署名を使いつつ各パッケージには MD5sum 値を用いることで
    パーフォーマンスを保ったまま良好なセキュリティーが確保できます (
    「データーセキュリティーのインフラ」参照下さい)。

%

2.5.3. アーカイブレベルの "Release" ファイル

    ヒント
   
    アーカイブレベルの "Release" ファイルが apt_preferences(5) のルー
    ルに使われます。

    "http://deb.debian.org/debian/dists/unstable/main/binary-amd64/
    Release" や "http://deb.debian.org/debian/dists/sid/main/
    binary-amd64/Release" 等の "/etc/apt/sources.list" 中の "deb" 行
    で特定される全てのアーカイブロケーションにはアーカイブレベルの次
    に示すような "Release" ファイルがあります。

    Archive: unstable
    Origin: Debian
    Label: Debian
    Component: main
    Architecture: amd64

    注意

    "Archive:" スタンザには、Debian アーカイブではスイート名
    ("stable" や "testing" や "unstable" 等) が使われますが、Ubuntu
    アーカイブではコード名 ("trusty" や "xenial" や "artful" 等) が使
    われます。

    experimental や bullseye-backports のような自動的にインストールさ
    れるべきでないパッケージを含むような一部アーカイブでは次に示す
    "http://deb.debian.org/debian/dists/experimental/main/
    binary-amd64/Release" のような追加の行があります。

    Archive: experimental
    Origin: Debian
    Label: Debian
    NotAutomatic: yes
    Component: main
    Architecture: amd64

    "NotAutomatic: yes" となっていない通常のアーカイブではデフォール
    トの Pin-Priority 値は 500 ですが、"NotAutomatic: yes" となってい
    る特別なアーカイブではデフォールトの Pin-Priority 値は 1 です (
    apt_preferences(5) と「候補バージョンの調整」参照下さい)。

%

2.5.4. パッケージメタデーターの取得

    aptitude や apt-get や synaptic や apt-file や auto-apt 等の APT
    ツールが使われる際には Debian アーカイブ情報を含むメタデーターの
    ローカルコピーを更新する必要があります。この様なローカルのコピー
    は "/etc/apt/sources.list" 中のディストリビューション
    (distribution) とエリア (area) とアーキテクチャー (architecture)
    の名前に対応する次のファイル名です (「Debian アーカイブの基本」参
    照下さい)。

      * "/var/lib/apt/lists/deb.debian.org_debian_dists_<ディストリビ
        ューション>_Release"

      * "/var/lib/apt/lists/deb.debian.org_debian_dists_<ディストリビ
        ューション>_Release.gpg"

      * "/var/lib/apt/lists/deb.debian.org_debian_dists_<ディストリビ
        ューション>_<エリア>_source_Sources"

      * "/var/lib/apt/lists/deb.debian.org_debian_dists_<ディストリビ
        ューション>_<エリア>_source_Sources"

      * "/var/cache/apt/apt-file/deb.debian.org_debian_dists_<ディス
        トリビューション>_Contents-<アーキテクチャー>.gz" (apt-file
        用)

    最初の4つのタイプのファイルは全ての適切な APT コマンド間で共有さ
    れておりコマンドラインから "apt-get update" や "aptitude update"
    によって更新されます。もし "/etc/apt/sources.list" 中に "deb" 行
    があれば "Packages" メタデーターが更新されます。もし "/etc/apt/
    sources.list" 中に "deb-src" 行があれば "Sources" メタデーターが
    更新されます。

    "Packages" や "Sources" メタデーターはバイナリーやソースパッケー
    ジのファイルの場所を指している "Filename:" スタンザを含んでいます
    。現在、それらのパッケージはリリース間の移行を滞り無くするために
    "pool/" ディレクトリーツリーの下に置かれています。

    "Packages" メタデーターのローカルコピーは aptitude を使ってインタ
    ラクティブに検索できます。grep-dctrl(1) という専用の検索コマンド
    を使うと "Packages" と "Sources" メタデーターのローカルコピーを検
    索できます。

    "Contents-<アーキテクチャー>" メタデーターのローカルコピーは
    "apt-file update" で更新でき、他の4つと異なるところにあります。
    apt-file(1) を参照下さい。(auto-apt では "Contents-<アーキテクチ
    ャー>.gz" のローカルコピーがデフォールトでは異なるところにありま
    す。)

%

2.5.5. APT に関するパッケージ状態

    lenny 以降の APT ツールではリモートから取得したメタデーターに追加
    でローカルで生成されるインストール状態情報を "/var/lib/apt/
    extended_states" に保存して、自動インストールされた全パッケージを
    全ての APT ツールで追跡するのに用います。

%

2.5.6. aptitude に関するパッケージ状態

    aptitude コマンドではリモートから取得したメタデーターに追加でロー
    カルで生成されるインストール状態情報を "/var/lib/aptitude/
    pkgstates" に保存して用いています。

%

2.5.7. 取得したパッケージのローカルコピー

    APT メカニズムでリモートから取得されたパッケージは消去されるまで
    は "/var/cache/apt/archives" に貯蔵されます。

    aptitude では、このキャッシュファイルのクリーニングポリシーは
    "Options" → "Preferences" の下で設定でき、 "Actions" の下の
    "Clean package cache" か "Clean obsolete files" メニューによって
    強制実行できる。

%

2.5.8. Debian パッケージファイル名

    Debian のパッケージファイルには特定の名前の構造があります。

    表2.15 Debian パッケージの名前の構造

    +---------------------------------------------------------------+
    |     パッケージタイプ      |            名前の構造             |
    |---------------------------+-----------------------------------|
    |バイナリーパッケージ (所謂 |<package-name>_<upstream-version>- |
    |deb)                       |<debian-version>_<architecture>.deb|
    |---------------------------+-----------------------------------|
    |Debianインストーラー用のバ |<package-name>_<upstream-version>- |
    |イナリーパッケージ (所謂   |<debian-version>_                  |
    |udeb)                      |<architecture>.udeb                |
    |---------------------------+-----------------------------------|
    |ソースパッケージ (アップス |<package-name>_<upstream-version>- |
    |トリームのソース)          |<debian-version>.orig.tar.gz       |
    |---------------------------+-----------------------------------|
    |1.0 ソースパッケージ       |<package-name>_<upstream-version>- |
    |(Debian の変更部分)        |<debian-version>.diff.gz           |
    |---------------------------+-----------------------------------|
    |3.0 (quilt) ソースパッケー |<package-name>_<upstream-version>- |
    |ジ (Debian の変更部分)     |<debian-version>.debian.tar.gz     |
    |---------------------------+-----------------------------------|
    |ソースパッケージ (内容記述)|<package-name>_<upstream-version>- |
    |                           |<debian-version>.dsc               |
    +---------------------------------------------------------------+


    ヒント
   
    ここでは基本的なパッケージフォーマットのみが記述されています。詳
    細は dpkg-source(1) を参照下さい。

    表2.16 Debian パッケージ名の各部分に使用可能な文字

    +----------------------------------------------------------+
    |          名前の部分          | 使用可能文字 (regex) |存在|
    |------------------------------+----------------------+----|
    |<パッケージ名>                |[a-z,A-Z,0-9,.,+,-]+  |必須|
    |------------------------------+----------------------+----|
    |<エポック>:                   |[0-9]+:               |任意|
    |------------------------------+----------------------+----|
    |<アップストリームのバージョン>|[a-z,A-Z,0-9,.,+,-,:]+|必須|
    |------------------------------+----------------------+----|
    |<debianのバージョン>          |[a-z,A-Z,0-9,.,+,~]+  |任意|
    +----------------------------------------------------------+


    注記

    パッケージバージョンの順位は dpkg(1) を使って、例えば "dpkg
    --compare-versions 7.0 gt 7.~pre1 ; echo $?" とすると確認できます
    。

    注記

    Debian インストーラー (d-i) のバイナリーパッケージには、通常の
    deb ではなく udeb をファイル拡張子として使われます。udeb パッケー
    ジはポリシー条件を緩和しドキュメントのように必須でない内容を削除
    した減量 deb パッケージです。deb と udeb パッケージは同一のパッケ
    ージ構造を共有しています。"u" はマイクロと言う意味で使っています
    。

%

2.5.9. dpkg コマンド

    dpkg(1) は Debian パッケージ管理の最も低レベルのツールです。非常
    に強力ですから気をつけて使う必要があります。

    "<パッケージ名>"というパッケージをインストールする際に、dpkg は次
    に記す順番でパッケージを処理します。

     1. deb ファイルを解凍 ("ar -x" と等価)

     2. debconf(1) を使い "<package_name>.preinst" を実行
   
     3. システムにパッケージ内容をインストール ("tar -x" と等価)

     4. debconf(1) を使い "<package_name>.postinst" を実行

    debconf システムによって I18N と L10N (8章I18N と L10N) のサポー
    トのある標準化されたユーザーとの対話が実現できます。

    表2.17 dpkg が作成する特記すべきファイル

    +---------------------------------------------------------------+
    |       ファイル        |              内容の説明               |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/info/<パ |設定ファイルのリスト。(ユーザー変更可  |
    |ッケージ名>.conffiles  |能)                                    |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/info/<パ |パッケージによりインストールされるファ |
    |ッケージ名>.list       |イルやディレクトリーのリスト           |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/info/<パ |パッケージによりインストールされるファ |
    |ッケージ名>.md5sums    |イルの MD5 ハッシュ値のリスト          |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/info/<パ |パッケージインストールの前に実行するパ |
    |ッケージ名>.preinst    |ッケージスクリプト                     |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/info/<パ |パッケージインストールの後に実行するパ |
    |ッケージ名>.postinst   |ッケージスクリプト                     |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/info/<パ |パッケージ削除の前に実行するパッケージ |
    |ッケージ名>.prerm      |スクリプト                             |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/info/<パ |パッケージ削除の前に実行するパッケージ |
    |ッケージ名>.prerm      |スクリプト                             |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/info/<パ |debconf システムのためのパッケージスク |
    |ッケージ名>.conffiles  |リプト                                 |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/         |update-alternatives コマンドが用いる代 |
    |alternatives/<パッケー |替情報                                 |
    |ジ名>                  |                                       |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/available|すべてのパッケージの入手可能性情報     |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/         |dpkg(1) が利用し、dpkg-divert(8) が設定|
    |diversions             |するする迂回情報                       |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/         |dpkg(1) が利用し、dpkg-statoverride(8) |
    |statoverride           |が設定する状態オーバーライド情報       |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/status   |全パッケージに関する状態情報           |
    |-----------------------+---------------------------------------|
    |/var/lib/dpkg/         |"var/lib/dpkg/status" ファイルの第一世 |
    |status-old             |代のバックアップ                       |
    |-----------------------+---------------------------------------|
    |/var/backups/          |"var/lib/dpkg/status" ファイルの第二世 |
    |dpkg.status*           |代以前のバックアップ                   |
    +---------------------------------------------------------------+


    "status" ファイルは dpkg(1) や "dselect update" や "apt-get -u
    dselect-upgrade" のようなツールによって使われます。

    grep-dctrl(1) という専用の検索コマンドを使うと "status" と
    "available" メタデーターのローカルコピーを検索できます。

    ヒント

    デビアンインストーラー環境下では、udpkg コマンドが udeb パッケー
    ジを開けるのに用いられます。udpkg コマンドはストリップダウンされ
    たバージョンの dpkg コマンドです。

%

2.5.10. update-alternative コマンド

    Debian システムには update-alternatives(8) を用いて何らかの重畳す
    るプログラムを平和裏にインストールするメカニズムがあります。例え
    ば vim と nvi の両方のパッケージがインストールされた状況下で vi
    コマンドが vim を選択して実行するようにできます。

    $ ls -l $(type -p vi)
    lrwxrwxrwx 1 root root 20 2007-03-24 19:05 /usr/bin/vi -> /etc/alternatives/vi
    $ sudo update-alternatives --display vi
    ...
    $ sudo update-alternatives --config vi
      Selection    Command
     ----------------------------------------------
          1        /usr/bin/vim
    *+    2        /usr/bin/nvi

    Enter to keep the default[*], or type selection number: 1

    Debian の代替 (alternatives) システムは、その選択を "/etc/
    alternatives/" の中のシムリンクとして保持します。選択プロセスには
    "/var/lib/dpkg/alternatives/" の中の対応するファイルが使われます
    。

%

2.5.11. dpkg-statoverride コマンド

    dpkg-statoverride(8) コマンドで提供される状態の上書きは、パッケー
    ジをインストールする際にファイルに関して異なる所有者やモードを使
    うよう dpkg(1) に指示する方法です。もし "--update" が指定されファ
    イルが存在すれば、即座に新たな所有者やモードに設定されます。

    注意

    パッケージが所有するファイルの所有者やモードをシステム管理者が
    chmod や chown コマンドを用いて直接変更しても次のパッケージアップ
    グレードがリセットします。

    注記

    ここでファイルと言いましたが、実際には dpkg が扱うディレクトリー
    やデバイス等のいかなるファイルシステムオブジェクトであってもいい
    です。

%

2.5.12. dpkg-divert コマンド

    dpkg-divert(8) コマンドによって提供されるファイル迂回は、ファイル
    をデフォールトの場所ではなく迂回した場所にインストールするように 
    dpkg(1) にさせます。dpkg-divert は本来パッケージメインテナンスス
    クリプトのためのものです。システム管理者がこれを軽々に使うのはお
    薦めできません。

%

2.6. 壊れたシステムからの復元

    非安定 (unstable) システムを動かす時には、管理者には壊れたパッケ
    ージ管理状況から復元できることが望まれます。

    注意
   
    ここで説明するいくつかの方法は非常にリスクが高いアクションです。
    警告しましたよ!

%

2.6.1. 古いユーザーの設定との非互換性

    もしデスクトップ GUI プログラムが上流の大きなバージョンアップグレ
    ードの後に不安定性を経験した際には、そのプログラムが作った古いロ
    ーカル設定ファイルとの干渉を疑うべきです。もし新規作成したユーザ
    ーアカウントでそのプログラムが安定なら、この仮説が裏付けられます
    。(これはパッケージングのバグで、通常パッケージャーによって回避さ
    れます。)

    安定性を復元するには、対応するローカル設定ファイルを移動し GUI プ
    ログラムを再スタートします。後日設定情報を回復するために古い設定
    ファイルの内容を読む必要があるかもしれません。(あまり慌てて消去し
    ないようにしましょう。)

%

2.6.2. 重複するファイルを持つ相異なるパッケージ

    aptitude(8) や apt-get(1) 等の、アーカイブレベルのパッケージ管理
    システムはパッケージの依存関係を使って重複するファイルを持つファ
    イルのインストールしようとさえしません (「パッケージ依存関係」参
    照下さい)。

    パッケージメインテナによるエラーや、システム管理者による不整合な
    混合ソースのアーカイブの採用 (「混合したアーカイブソースからのパ
    ッケージ」参照下さい) があった場合には、パッケージ依存関係が誤っ
    て定義される事態が発生するかもしれません。そういう状況下で重複す
    るファイルを持つパッケージを aptitude(8) や apt-get(1) を使ってイ
    ンストールしようとすると、パッケージを展開する dpkg(1) は既存ファ
    イルを上書きすることなく呼ばれたプログラムにエラーを確実に返しま
    す。

    注意

    第三者が作成したパッケージを使うと、root 権限で実行されるシステム
    に関して何でもできるメンテナスクリプトが実行されるので、システム
    が重大なリスクにさらされます。dpkg(1) はパッケージを展開するする
    さいに上書きする事を防止するだけです。

    そのような壊れたインストール状況は、まず古い問題原因となっている
    パッケージ <old-package> を削除すれば回避できます。

    $ sudo dpkg -P <old-package>

%

2.6.3. 壊れたパッケージスクリプトの修正

    パッケージスクリプト内のコマンドが何らかの理由でエラーを返しスク
    リプトがエラーで終了した場合には、パッケージ管理システムは動作を
    途中終了するので部分的にインストールされたパッケージのある状況が
    生まれます。パッケージがその削除スクリプト内にバグを持つ場合には
    、パッケージが削除不能になりうるので大変厄介です。

    "<パッケージ名>" のパッケージスクリプトの問題に関しては、次のパッ
    ケージスクリプトの内容を確認するべきです。

      * "/var/lib/dpkg/info/<パッケージ名>.preinst"

      * "/var/lib/dpkg/info/<パッケージ名>.postinst"
   
      * /var/lib/dpkg/info/<パッケージ名>.prerm

      * "/var/lib/dpkg/info/<パッケージ名>.prerm"

    スクリプトの問題原因部分を次のようなテクニックを使い root から編
    集します。

      * 行頭に "#" を挿入し問題行を無効にする
   
      * 行末に "|| true" を挿入し成功を強制的に返さす

    全ての部分的にインストールされたパッケージを次のコマンドで設定し
    ます。

    # dpkg --configure -a

%

2.6.4. dpkg コマンドを使っての救済

    dpkg は非常に低レベルのパッケージツールなのでネットワーク接続もな
    いブート不能な非常に劣悪な状況下でも機能します。foo パッケージが
    壊れていて置き換える必要があると仮定します。

    バグの無い古いバージョンの foo パッケージが "/var/cache/apt/
    archives/" にあるパッケージキャッシュの中に見つかるかもしれません
    。(ここにみつからなければ、https://snapshot.debian.org/ アーカイ
    ブからダウンロードしたり、機能している機器のパッケージキャッシュ
    からコピーできます。)

    もしブート不可能な場合には、次のコマンドを使ってインストールする
    こともできます。

    # dpkg -i /path/to/foo_<old_version>_<arch>.deb

    ヒント

    システムがそれほど壊れていないなら、「緊急ダウングレード」に書か
    れているようにして、より高レベルの APT システムを通じてシステム全
    体をダウングレードする手もあります。

    ハードディスクからブートできない場合は、他の方法でのブート方法を
    考えるべきです。

     1. Debian インストーラー (debian-installer) の CD を使ってレスキ
        ューモードでブートします。

     2. ブートできないハードディスク上のシステムを "/target" にマウン
        トします。

     3. 古いバージョンの foo パッケージを次のようにしてインストールし
        ます。

    # dpkg --root /target -i /path/to/foo_<old_version>_<arch>.deb

    この例は、たとえハードディスク上の dpkg コマンドが壊れていても機
    能します。

    ヒント

    ハードディスク上の別のシステムであれ、GNU/Linux のライブ CD であ
    れ、ブート可能な USB キードライブであれ、ネットブートであれ、どの
    ように起動された GNU/Linux システムでも同様にして壊れたシステムを
    救済するのに使えます。

    もしこの方法でパッケージをインストールしようとして何らかの依存関
    係違反のためにうまくいかなくてどうしようもなくなった場合には、
    dpkg の "--ignore-depends" や "--force-depends" や他のオプション
    を使って依存関係をオーバーライドすることができます。こうした場合
    には、後で適正な依存関係を修復するように真剣に取り組む必要があり
    ます。詳細は dpkg(8) を参照下さい。

    注記

    システムがひどく壊れた場合には、システムを安全な場所に完全バック
    アップし (「バックアップと復元」参照下さい)、クリーンインストール
    を実行するべきです。こうすることは時間の節約でもあり最終的に良い
    結果に結びつきます。

%

2.6.5. パッケージセレクションの復元

    もし何らかの理由で "/var/lib/dpkg/status" の内容が腐った場合には
    、Debian システムはパッケージ選択データーが失われ大きな打撃を被り
    ます。古い "/var/lib/dpkg/status" ファイルは、"/var/lib/dpkg/
    status-old" や "/var/backups/dpkg.status.*" としてあるので探しま
    す。

    "/var/backups/" は多くの重要な情報を保持しているので、これを別の
    パーティション上に置くのも良い考えです。

    ひどく壊れた場合には、システムのバックアップをした後フレッシュに
    再インストールすることをお薦めします。たとえ "/var/" ディレクトリ
    ーの中が完全に消去されても、"/usr/share/doc/" ディレクトリー中か
    ら新規インストールのガイドとなる情報を復元できます。

    最低限の (デスクトップ) システムを再インストールします。

    # mkdir -p /path/to/old/system

    "/path/to/old/system/" に古いシステムをマウントします。

    # cd /path/to/old/system/usr/share/doc
    # ls -1 >~/ls1.txt
    # cd /usr/share/doc
    # ls -1 >>~/ls1.txt
    # cd
    # sort ls1.txt | uniq | less

    こうすると、インストールすべきパッケージ名が表示されます。
    ("texmf" のようなパッケージ名以外が一部あるかもしれません。)

2.7. パッケージ管理のヒント

%

2.7.1. Debian パッケージの選択方法

    パッケージの説明や "Tasks" の下のリストを使ってあなたが必要なパッ
    ケージを aptitude で見つけることができます。

    2つ以上の似たパッケージに出会い "試行錯誤" の努力無しにどのパッケ
    ージをインストールするか迷った際には、常識を使って下さい。次に示
    す点は好ましいパッケージの良い指標と考えます。

      * 必須 (essential): yes > no

      * エリア (area): メイン (main) > contrib > non-free

      * 優先度 (priority): 必須 (required) > 重要 (important) > 標準
        (standard) > 任意 (optional) > 特別 (extra)

      * タスク (tasks): "デスクトップ環境" のようなタスクにリストされ
        たパッケージ

      * 依存パッケージにより選ばれたパッケージ (例えば、python による
        python2.4)
   
      * ポプコン: 投票やインストールの数が多い

      * changelog: メンテナによる定期的アップデート

      * BTS: RC bug が無いこと (critical も grave も serious もいずれ
        のバグも無い)

      * BTS: バグレポートに反応の良いメンテナ

      * BTS: 最近修正されたバグの数が多い

      * BTS: wishlist 以外のバグが少ない

    Debian は分散型の開発モデルのボランティアプロジェクトですので、そ
    のアーカイブには目指すところや品質の異なる多くのパッケージがあり
    ます。これらをどうするかは自己判断をして下さい。

%

2.7.2. 混合したアーカイブソースからのパッケージ

    注意

    安定版 (stable) と security updates と bullseye-updates のような
    公式にサポートされた特定の組み合わせ以外は、混合したアーカイブソ
    ースからのパッケージをインストールすることを、公式には Debian デ
    ィストリビューションとしてサポートしていません。

    testing を追跡しながら、unstable にある特定の新規アップストリーム
    バージョンのパッケージを1回だけ取り入れる操作例を次に示します。

     1. "/etc/apt/sources.list" ファイルを変更し、単一の "unstable"
        エントリーのみにします。

     2. "aptitude update" を実行します。

     3. "aptitude install <パッケージ名>"の実行します。

     4. testing のためのオリジナルの "/etc/apt/sources.list" ファイル
        を復元します。

     5. "aptitude update" を実行します。

    この様な手動のアプローチをすると "/etc/apt/preferences" ファイル
    を作ることもないし、また apt-pinning について悩むこともありません
    。でもこれではとても面倒です。

    注意

    混合したアーカイブソースを使うことを Debian が保証していないので
    、その場合にはパッケージ間の互換性は自分自身で確保しなければいけ
    ません。もしパッケージに互換性がないと、システムを壊すことになる
    かもしれません。この様な技術的要件を判断できる必要があります。ラ
    ンダムな混合したアーカイブソースを使うことは全く任意の操作ですが
    、私としてはこの操作はお薦めできません。

    異なるアーカイブからパッケージをインストールするための一般ルール
    は以下です。

      * 非バイナリーパッケージのインストールは比較的安全です。

          + 文書パッケージ: 特段の要件無し

          + インタープリタプログラムパッケージ: 互換性あるインタープ
            リタ環境が利用可能

      * バイナリーパッケージ (非 "Architecture: all") のインストール
        は、通常多くの障害があり、安全ではありません。
   
          + ライブラリー ("libc" 等) のバージョン互換性

          + 関連ユーティリティープログラムのバージョン互換性

          + カーネル ABI 互換性

          + C++ の ABI 互換性

          + …

    注記

    パッケージを比較的安全にインストールできるようにするために、一部
    の商用 non-free バイナリープログラムパッケージは完全に静的にリン
    クされたライブラリーとともに提供される事があります。そんなパッケ
    ージに関しても ABI 互換性等の問題は確認するべきです。

    注記

    壊れたパッケージを短期的に避ける場合以外では、公式にサポートされ
    ていないアーカイブからバイナリーパッケージをインストールするのは
    一般的には賢明ではありません。たとえ apt-pinning (「候補バージョ
    ンの調整」参照下さい) を使った場合にもこれは当てはまります。
    chroot や類似のテクニック (「仮想化システム」参照下さい) 使って、
    他のアーカイブからのプログラムを実行するよう検討するべきです。

%

2.7.3. 候補バージョンの調整

    "/etc/apt/preferences" ファイル無しだと、APT システムはバージョン
    文字列を用いて、最新利用可能バージョンを候補バージョンとします。
    これが通常状態で APT システムの最も推薦される使い方です。全ての公
    式にサポートされたアーカイブの組み合わせは、自動的にアップグレー
    ドするソースとすべきでないアーカイブは NotAutomatic とマークされ
    適正な扱いを受けるので、"/etc/apt/preferences" ファイルを必要とし
    ません。

    ヒント

    バージョン文字列比較ルールは、例えば "dpkg --compare-versions
    ver1.1 gt ver1.1~1; echo $?" とすれば確認できます (dpkg(1) 参照下
    さい)。

    パッケージを混合したアーカイブからのソース (「混合したアーカイブ
    ソースからのパッケージ」参照下さい) から定常的にインストールする
    場合には、apt_preferences(5) に書かれたように適正な項目のある "/
    etc/apt/preferences" ファイルを作り候補バージョンに関するパッケー
    ジ選択ルールを操作することによってこういった複雑な操作を自動化で
    きます。これを apt-pinning と呼びます。

    警告

    初心者のユーザーによる apt-pinning の利用は大トラブル発生を間違い
    なく起こします。本当に必要な時以外は apt-pinning の利用は避けなけ
    ればいけません。

    注意

    apt-pinning を利用する際には、Debian はパッケージの互換性を保証し
    ないので、ユーザー自身がパッケージの互換性を確保しなければいけま
    せん。apt-pinning は全く任意の操作で、著者が使うようにと勧めてい
    るわけではありません。

    注意

    アーカイブレベルの Release ファイル (「アーカイブレベルの
    "Release" ファイル」参照下さい) が apt_preferences(5) のルールに
    使われます。だから、apt-pinning は normal Debian archives や
    security Debian archives ではスイート ("suite") 名を使って機能し
    ます。(これは Ubuntu アーカイブとは異なります)。例えば "/etc/apt/
    preferences" ファイル中で、"Pin: release a=unstable" とはできます
    が、"Pin: release a=sid" とはできません。

    注意

    非 Debian アーカイブを apt-pinning の一部に使う場合には、それが提
    供されている対象の確認とその信頼性の確認をします。例えば、Ubuntu
    と Debian は混合して使うようにはなっていません。

    注記

    "/etc/apt/preferences" ファイルを作成することなしでも、かなり複雑
    なシステム操作 (「dpkg コマンドを使っての救済」と「混合したアーカ
    イブソースからのパッケージ」参照下さい) が apt-pinning を使わずに
    できます。

    単純化した apt-pinning テクニックの説明を次にします。

    APT システムは "/etc/apt/sources.list" ファイル中に規定された利用
    可能なパッケージソースから最高の Pin-Priority でアップグレードす
    るパッケージを候補バージョンパッケージとして選択します。パッケー
    ジの Pin-Priority が1000 より大きい場合には、このアップグレードす
    るというバージョン制約が外れるのでダウングレードできるようになり
    ます (「緊急ダウングレード」参照下さい)。

    各パッケージの Pin-Priority 値は "/etc/apt/preferences" ファイル
    中の "Pin-Priority" 項目にて規定されるか、そのデフォールト値が使
    われます。

    表2.18 apt-pinning テクニックに関する特記すべき Pin-Priority 値を
    リストします。

    +---------------------------------------------------------------+
    |Pin-Priority|       パッケージに関する apt-pinning 効果        |
    |------------+--------------------------------------------------|
    |1001        |パッケージのダウングレードになる場合でもパッケージ|
    |            |をインストールする                                |
    |------------+--------------------------------------------------|
    |990         |ターゲットのリリースアーカイブのデフォルトとして使|
    |            |用                                                |
    |------------+--------------------------------------------------|
    |500         |ノーマルアーカイブのデフォルトとして使用          |
    |------------+--------------------------------------------------|
    |100         |NotAutomatic かつ ButAutomaticUpgrades アーカイブ |
    |            |のデフォルトとして使用                            |
    |------------+--------------------------------------------------|
    |100         |インストール済みパッケージに使用                  |
    |------------+--------------------------------------------------|
    |1           |NotAutomatic アーカイブのデフォルトとして使用     |
    |------------+--------------------------------------------------|
    |-1          |たとえ推奨 (Recommend) されても、パッケージを絶対 |
    |            |にインストールしない                              |
    +---------------------------------------------------------------+


    ターゲットのリリースアーカイブは次のようにして設定できます。

      * "APT::Default-Release "stable";" 行を使う "/etc/apt/apt.conf"
        ファイル
   
      * "apt-get install -t testing some-package" 等の "-t" オプショ
        ンの引数

    アーカイブ中のアーカイブレベルの Release ファイル (「アーカイブレ
    ベルの "Release" ファイル」参照下さい) に "NotAutomatic: yes" や
    "ButAutomaticUpgrades: yes" が含まれると NotAutomatic かつ 
    ButAutomaticUpgrades アーカイブと設定されます。

    複数アーカイブソースの <package> に関する Pin-Priority 値は
    "apt-cache policy <package>" の出力で表示されます。

      * "Package pin:" で始まる行は、<package> のみとの関連付けが
        "Package pin: 0.190" 等と定義されている場合に、pin のパッケー
        ジバージョンを示します。

      * <package> とのみの関連付けが定義されていない場合には、
        "Package pin:" という行はありません。

      * <package> とのみの関連付けが定義されている場合の Pin-Priority
        値は、全バージョン文字列の右側に "0.181 700" 等としてリストさ
        れます。

      * <package> とのみの関連付けが定義されていない場合には、全バー
        ジョン文字列の右側に "0" が"0.181 0" 等としてリストされます。

      * アーカイブの Pin-Priority 値 ("/etc/apt/preferences" ファイル
        中に "Package: *" として定義) はアーカイブへのパスの左側に、
        "100 http://deb.debian.org/debian/ bullseye-backports/main
        Packages" 等としてリストされます。

%

2.7.4. Updates と Backports

    stable のためのアップグレードパッケージを提供する、
    bullseye-updates と backports.debian.org アーカイブがあります。

    これらのアーカイブを使うには、以下に示すように "/etc/apt/
    preferences" ファイル中に全ての必要なアーカイブをリストします。

    deb http://deb.debian.org/debian/ bullseye main contrib non-free
    deb http://security.debian.org/ bullseye/updates main contrib
    deb http://deb.debian.org/debian/ bullseye-updates main contrib non-free
    deb http://deb.debian.org/debian/ bullseye-backports main contrib non-free

    "/etc/apt/preferences" ファイル中に Pin-Priority 値を明示的に設定
    する必要はありません。より新しいパッケージが利用可能となった場合
    はいつも、デフォルトの設定によりもっとも合理的なアップグレードが
    なされます (「アーカイブレベルの "Release" ファイル」参照下さい)
    。

      * 全てのインストールされている古いパッケージが bullseye-updates
        からのより新しいパッケージにアップグレードされます。
   
      * bullseye-backports からインストールしされた古いパッケージのみ
        が bullseye-backports からのより新しいパッケージにアップグレ
        ードされます。

    "<package-name>" という名前のパッケージをその依存関係ともども
    bullseye-backports アーカイブからインストールしたい時には、"-t"
    オプションでターゲットリリースを切り替えながら次のコマンドを使い
    ます。

    $ sudo apt-get install -t bullseye-backports <package-name>

2.7.5. "推奨 (Recommends)" によりパッケージがインストールされるのを阻
止

    たとえ "推奨 (Recommends)" されていても自動的に特定のパッケージが
    引きこまれ無くしたいときには、"/etc/apt/preferences" ファイルを作
    成しその中に全てのパッケージを次のように明示的にリストしなければ
    いけません。

    Package: <package-1>
    Pin: version *
    Pin-Priority: -1
   
    Package: <package-2>
    Pin: version *
    Pin-Priority: -1

%

2.7.6. unstable からのパッケージと共に、testing を追いかける

    testing を追跡しながら、unstable にある特定の新規アップストリーム
    バージョンのパッケージが定常的にアップグレードされる、apt-pinning
    テクニックの例を次に示します。全ての必要なアーカイブを "/etc/apt/
    sources.list" ファイル中に次のようにリストします。

    deb http://deb.debian.org/debian/ testing main contrib non-free
    deb http://deb.debian.org/debian/ unstable main contrib non-free
    deb http://security.debian.org/ testing/updates main contrib

    "/etc/apt/preferences" を次のように設定します。

    Package: *
    Pin: release a=unstable
    Pin-Priority: 100

    "<package-name>" という名前のパッケージとその依存ファイルを
    unstable アーカイブからこの設定の下でインストールしたい場合、"-t"
    オプションを使ってターゲットのリリースを切り替える (unstable の
    Pin-Priority が990 になる) 次のコマンドを実行します。

    $ sudo apt-get install -t unstable <package-name>

    この設定では、通常の "apt-get upgrade" や "apt-get dist-upgrade"
    ("aptitude safe-upgrade" や "aptitude full-upgrade") の実行は、
    testing アーカイブからインストールされたパッケージは最新の
    testing アーカイブを使ってアップグレードし、unstable アーカイブか
    らインストールされたパッケージは最新の unstable アーカイブを使っ
    てアップグレードします。

    注意

    "/etc/apt/sources.list" ファイルから "testing" の項目を削除しない
    ように注意します。"testing" 項目がその中にないと、APT システムは
    最新の unstable アーカイブを使ってアップグレードします。

    ヒント

    著者は上記操作のすぐ後に "/etc/apt/sources.list" ファイルを編集し
    て "unstable" アーカイブ項目をコメントアウトします。こうすること
    で、最新の unstable アーカイブによって unstable からインストール
    されたパッケージをアップグレードしなくなりますが、"/etc/apt/
    sources.list" ファイル中に項目が多すぎてアップデートのプロセスが
    遅くなることをさけられます。

    ヒント

    もし "/etc/apt/preferences" ファイル中で "Pin-Priority: 100" の代
    わりに "Pin-Priority: 1" が用いられた場合は、"/etc/apt/
    sources.list" ファイルの中の "testing" 項目が削除されようと、
    Pin-Priority 値は100 のインストール済みパッケージは unstable アー
    カイブによってアップグレードされる事はありません。

    最初の "-t unstable" によるインストール無しに、unstable の特定パ
    ッケージを自動的に追跡したい場合、"/etc/apt/preferences" ファイル
    を作りそのトップにこれらパッケージを明示的に次のようにリストしま
    す。

    Package: <package-1>
    Pin: release a=unstable
    Pin-Priority: 700
   
    Package: <package-2>
    Pin: release a=unstable
    Pin-Priority: 700

    以上で、各特定パッケージに関して Pin-Priority 値が設定されます。
    例えば最新の unstable バージョンのこの "Debian リファレンス" を英
    語版で追跡するためには、"/etc/apt/preferences" ファイルに次の項目
    を設定します。

    Package: debian-reference-en
    Pin: release a=unstable
    Pin-Priority: 700
   
    Package: debian-reference-common
    Pin: release a=unstable
    Pin-Priority: 700

    ヒント

    この apt-pinning テクニックは stable アーカイブを追跡している際に
    も有効です。著者の経験では、文書パッケージは unstable アーカイブ
    からインストールしても今までいつも安全でした。

%

2.7.7. experimental からのパッケージと共に、unstable を追いかける

    次に unstable を追跡しながら experimental にある特定の新規アップ
    ストリームバージョンのパッケージを取り込む apt-pinning テクニック
    の例を示します。すべての必要なアーカイブを "/etc/apt/
    sources.list" ファイルに次のようにリストします。

    deb http://deb.debian.org/debian/ unstable main contrib non-free
    deb http://deb.debian.org/debian/ experimental main contrib non-free
    deb http://security.debian.org/ testing/updates main contrib

    experimental アーカイブのデフォールトの Pin-Priority 値は、
    NotAutomatic アーカイブ (「アーカイブレベルの "Release" ファイル
    」参照下さい) なので、常に1 (<<100) です。experimental アーカイブ
    にある特定パッケージを次回アップグレード時に自動的に追跡しようと
    しない限り、"/etc/apt/preferences" ファイル中で experimental アー
    カイブを使うために Pin-Priority 値を明示的に設定する必要はありま
    せん。

%

2.7.8. パッケージの自動ダウンロードとアップグレード

    apt パッケージには、パッケージの自動ダウンロードのサポートする専
    用の cron スクリプト "/etc/cron.daily/apt" が同梱されています。こ
    のスクリプトは unattended-upgrades パッケージをインストールするこ
    とで自動アップグレード実行の機能拡張をします。これらは、"/usr/
    share/doc/unattended-upgrades/README" に記述されているように、"/
    etc/apt/apt.conf.d/02backup" と "/etc/apt/apt.conf.d/
    50unattended-upgrades" の中のパラメーターでカスタム化できます。

    unattended-upgrades パッケージは基本的に stable システムのセキュ
    リティーアップグレードのためです。既存の stable システムが、自動
    アップグレードで壊される危険性が、セキュリティーアップグレードが
    すでに閉じたセキュリティーホールからの侵入者によりシステムが壊わ
    される危険性より小さいなら、パラメーターを次のように設定して自動
    アップグレードをするのも一計です。

    APT::Periodic::Update-Package-Lists "1";
    APT::Periodic::Download-Upgradeable-Packages "1";
    APT::Periodic::Unattended-Upgrade "1";

    unstable システムを使っている場合には、自動アップグレードするとシ
    ステムはいつの日か確実に壊われるので、それはしたくないでしょう。
    そんな unstable の場合でも、次に記すような事前にパッケージをダウ
    ンロードするパラメーターを設定でインタラクティブなアップグレード
    をするための時間を節約したいでしょう。

    APT::Periodic::Update-Package-Lists "1";
    APT::Periodic::Download-Upgradeable-Packages "1";
    APT::Periodic::Unattended-Upgrade "0";

%

2.7.9. APT のよるダウンロードバンド幅の制限

    APT によるダウンロードのバンド幅を例えば 800Kib/sec (=100kiB/sec)
    に制限したい場合には、APT のパラメーターを次のように設定します。

    APT::Acquire::http::Dl-Limit "800";

%

2.7.10. 緊急ダウングレード

    注意

    Debian では設計としてはダウングレードを正式にサポートしません。緊
    急の復元処置の一部としてのみ実行されるべきです。こういう状況であ
    るにもかかわらず、多くの場合にうまく機能することが知られています
    。重要なシステムでは回復処置の後に全ての重要データーをバックアッ
    プし、最初から新規システムを再インストールします。

    壊れたシステムアップグレードからの復元するために、候補バージョン
    を操作して新しいアーカイブから古いアーカイブにダウングレードする
    ことがうまくいくかもしれません (「候補バージョンの調整」参照下さ
    い)。これは、何度も "dpkg -i <broken-package>_<old-version>.deb"
    コマンドを実行する退屈な作業をしないでよくする方法です (「dpkg コ
    マンドを使っての救済」参照下さい)。

    次に記すような "unstable" を追跡する "/etc/apt/sources.list" ファ
    イル中の行を探します。

    deb http://deb.debian.org/debian/ sid main contrib non-free

    それを testing を追いかけるように次と交換します。

    deb http://deb.debian.org/debian/ bookworm main contrib non-free

    "/etc/apt/preferences" を次のように設定します。

    Package: *
    Pin: release a=testing
    Pin-Priority: 1010

    "apt-get dist-upgrade" を実行して、システム全体にわたってパッケー
    ジのダウングレードを強制します。

    この緊急ダウングレードの後でこの特別の "/etc/apt/preferences" フ
    ァイルを削除します。

    ヒント

    依存関係の問題を最小限とすべく、できるだけ多くのパッケージを削除
    (remove で、完全削除 purge ではありません!) します。システムのダ
    ウングレードのためには手動でいくつかのパッケージを削除とインスト
    ールしなければいけないかも知れません。Linux カーネルやブートロー
    ダーや udev や PAM や APT やネットワーク関係のパッケージやそれら
    の設定ファイルには特に注意が必要です。

%

2.7.11. 誰がパッケージをアップロードしたのか?

    "/var/lib/dpkg/available" や "/usr/share/doc/package_name/
    changelog" の中にリストされたメンテナの名前は "誰がパッケージ化活
    動の背後にいるのか" に関していくばくかの情報を提供しますが、パッ
    ケージを実際にアップロードをした人がはっきりしません。devscripts
    パッケージ中の who-uploads(1) は Debian のソースパッケージを実際
    にアップロードした人を確定します。

%

2.7.12. equivs パッケージ

    ソースからプログラムをコンパイルして Debian パッケージを置換えた
    い際には、それを実際にローカルで Debian 化してパッケージ (*.deb)
    して、私的アーカイブを使うのが好ましいです。

    しかし、プログラムをソースからコンパイルして "/usr/local" にイン
    ストールすることを選んだ際には、パッケージ依存関係を満足させるた
    めの最後の手段として equivs を使う必要があるかもしれません。

    Package: equivs
    Priority: optional
    Section: admin
    Description: Circumventing Debian package dependencies
     This package provides a tool to create trivial Debian packages.
     Typically these packages contain only dependency information, but they
     can also include normal installed files like other packages do.
     .
     One use for this is to create a metapackage: a package whose sole
     purpose is to declare dependencies and conflicts on other packages so
     that these will be automatically installed, upgraded, or removed.
     .
     Another use is to circumvent dependency checking: by letting dpkg
     think a particular package name and version is installed when it
     isn't, you can work around bugs in other packages' dependencies.
     (Please do still file such bugs, though.)

%

2.7.13. 安定版システムへのパッケージ移植

    stable システムの部分アップグレードのためには、その環境内でソース
    パッケージを使ってパッケージをリビルドするのが好ましいです。こう
    することでパッケージ依存関係による大掛かりなアップグレードをしな
    いで済みます。

    stable システムのための "/etc/apt/sources.list" ファイルに次のエ
    ントリーを追加します。

    deb-src http://deb.debian.org/debian unstable  main contrib non-free

    コンパイルするのに必要なパッケージをインストールしソースパッケー
    ジをダウンロードをします。

    # apt-get update
    # apt-get dist-upgrade
    # apt-get install fakeroot devscripts build-essential
    # apt-get build-dep foo
    $ apt-get source foo
    $ cd foo*

    バックポートに必要な際には、dpkg や debhelper 等のツールチェイン
    パッケージをバックポートパッケージを用いてアップデートします。

    次を実行します。

    $ dch -i

    "+bp1" を後ろに付けるなどして、"debian/changelog" 中でパッケージ
    バージョンを先に進める

    次のようにしてパッケージをビルドしシステムにインストールします。

    $ debuild
    $ cd ..
    # debi foo*.changes

%

2.7.14. APT のためのプロキシサーバー

    Debian アーカイブの特定サブセクション全てをミラーするとディスク空
    間とネットワークのバンド幅の大いなる無駄遣いですので、LAN 上に多
    くのシステムを管理している際には APT のためのローカルのプロキシサ
    ーバーを設置することを考えるのは良いことです。APT は、apt.conf(5)
    とか "/usr/share/doc/apt/examples/configure-index.gz" に説明され
    たようにして、汎用の squid のようなウェッブ (http) プロキシサーバ
    ー (「他のネットワークアプリケーションサーバー」参照下さい) を使
    うように設定できます。"$http_proxy" 環境変数による設定は、"/etc/
    apt/apt.conf" ファイル中の設定より優先します。

    Debian アーカイブ専用のプロキシツールがあります。実際に使う前に
    BTS をチェック下さい。

    表2.19 Debian アーカイブ専用のプロキシツールのリスト

    +---------------------------------------------------------------+
    | パッケージ  |ポプ|サイ|                 説明                  |
    |             |コン| ズ |                                       |
    |-------------+----+----+---------------------------------------|
    |             |V:0,|    |Debian アーカイブファイルのキャッシュプ|
    |approx       |I:0 |6317|ロキシサーバー (コンパイルされた OCaml |
    |             |    |    |プログラム)                            |
    |-------------+----+----+---------------------------------------|
    |apt-cacher   |V:0,|289 |Debian パッケージとソースファイルのキャ|
    |             |I:0 |    |ッシュプロキシ (Perl プログラム)       |
    |-------------+----+----+---------------------------------------|
    |             |V:5,|    |ソフトウエアーパッケージの頒布ためのキ |
    |apt-cacher-ng|I:5 |1488|ャッシュプロキシ (コンパイルされた C++ |
    |             |    |    |プログラム)                            |
    +---------------------------------------------------------------+


    注意

    Debian がそのアーカイブ構造を再編した際に、このような専用のプロキ
    シツールはパッケージメンテナによるコードの修正が必要で、一定期間
    使えなくなることがあります。一方、汎用のウェッブ (http) プロキシ
    は比較的堅牢ですしそのような変化に合わすのも簡単です。

%

2.7.15. 小さな公開パッケージアーカイブ

    ヒント
   
    手動でパッケージアーカイブを設定するのは複雑です。いくつかのレポ
    ジトリー管理ツールが有ります。総括リストがオンラインであります。

    近代的なセキュアーAPT システム (「トップレベルの "Release" ファイ
    ルと信憑性」参照下さい) と互換性のある小規模のパブリックアーカイ
    ブを作る例を次に示します。まず、いくつかの仮定をします。

      * アカウント名: "foo"

      * ホスト名: "www.example.com"

      * 必要なパッケージ: apt-utils や gnupg 等のパッケージ

      * URL: "http://www.example.com/~foo/" ( → "/home/foo/
        public_html/index.html")

      * パッケージのアーキテクチャ: "amd64"

    サーバーシステム上で Foo のアーカイブキーを作成します。

    $ ssh foo@www.example.com
    $ gpg --gen-key
    ...
    $ gpg -K
    ...
    sec   1024D/3A3CB5A6 2008-08-14
    uid                  Foo (ARCHIVE KEY) <foo@www.example.com>
    ssb   2048g/6856F4A7 2008-08-14
    $ gpg --export -a 3A3CB5A6 >foo.public.key

    Foo に関するキー ID"3A3CB5A6" のアーカイブキーファイル
    "foo.public.key" を公開

    "Origin: Foo" というアーカイブツリーを作成します。

    $ umask 022
    $ mkdir -p ~/public_html/debian/pool/main
    $ mkdir -p ~/public_html/debian/dists/unstable/main/binary-amd64
    $ mkdir -p ~/public_html/debian/dists/unstable/main/source
    $ cd ~/public_html/debian
    $ cat > dists/unstable/main/binary-amd64/Release << EOF
    Archive: unstable
    Version: 4.0
    Component: main
    Origin: Foo
    Label: Foo
    Architecture: amd64
    EOF
    $ cat > dists/unstable/main/source/Release << EOF
    Archive: unstable
    Version: 4.0
    Component: main
    Origin: Foo
    Label: Foo
    Architecture: source
    EOF
    $ cat >aptftp.conf <<EOF
    APT::FTPArchive::Release {
      Origin "Foo";
      Label "Foo";
      Suite "unstable";
      Codename "sid";
      Architectures "amd64";
      Components "main";
      Description "Public archive for Foo";
    };
    EOF
    $ cat >aptgenerate.conf <<EOF
    Dir::ArchiveDir ".";
    Dir::CacheDir ".";
    TreeDefault::Directory "pool/";
    TreeDefault::SrcDirectory "pool/";
    Default::Packages::Extensions ".deb";
    Default::Packages::Compress ". gzip bzip2";
    Default::Sources::Compress "gzip bzip2";
    Default::Contents::Compress "gzip bzip2";

    BinDirectory "dists/unstable/main/binary-amd64" {
      Packages "dists/unstable/main/binary-amd64/Packages";
      Contents "dists/unstable/Contents-amd64";
      SrcPackages "dists/unstable/main/source/Sources";
    };

    Tree "dists/unstable" {
      Sections "main";
      Architectures "amd64 source";
    };
    EOF

    あなたのサーバーシステム上の APT アーカイブ内容の繰り返しアップデ
    ートは dupload を設定することで自動化できます。

    次に示す内容の "~/.dupload.conf" を設定したクライアントで
    "dupload -t foo changes_file" を実行して、全てのパッケージファイ
    ルを "~foo/public_html/debian/pool/main/" に設置します。

    $cfg{'foo'} = {
      fqdn => "www.example.com",
      method => "scpb",
      incoming => "/home/foo/public_html/debian/pool/main",
      # The dinstall on ftp-master sends emails itself
      dinstall_runs => 1,
    };
   
    $cfg{'foo'}{postupload}{'changes'} = "
      echo 'cd public_html/debian ;
      apt-ftparchive generate -c=aptftp.conf aptgenerate.conf;
      apt-ftparchive release -c=aptftp.conf dists/unstable >dists/unstable/Release ;
      rm -f dists/unstable/Release.gpg ;
      gpg -u 3A3CB5A6 -bao dists/unstable/Release.gpg dists/unstable/Release'|
      ssh foo@www.example.com  2>/dev/null ;
      echo 'Package archive created!'";

    dupload(1) が起動する postupload フックスクリプトがアップロード毎
    に更新されたアーカイブファイルを作成します。

    この小規模のパブリックアーカイブをクライアントシステムの apt 行に
    追加できます。

    $ sudo bash
    # echo "deb http://www.example.com/~foo/debian/ unstable main" \
       >> /etc/apt/sources.list
    # apt-key add foo.public.key

    ヒント
   
    もしローカルファイルシステム上にアーカイブがある場合には、上記の
    代わりに "deb file:///home/foo/debian/ …" が使えます。

%

2.7.16. システム設定の記録とコピー

    パッケージと debconf の選択状態のローカルコピーは次に記すようにし
    て作成できます。

    # dpkg --get-selections '*' > selection.dpkg
    # debconf-get-selections    > selection.debconf

    ここで、"*" は"selection.dpkg" が"purge" に関するパッケージ項目も
    含めるようにします。

    これら2ファイルを他のコンピューターに移動し、次のようにしてインス
    トールします。

    # dselect update
    # debconf-set-selections < myselection.debconf
    # dpkg --set-selections  < myselection.dpkg
    # apt-get -u dselect-upgrade    # or dselect install

    実質的に同じ設定でクラスターとなった多くのサーバーを管理すること
    をお考えの場合には、専用パッケージである fai 等を使って全システム
    を管理することを考えます。

%

2.7.17. 外来のバイナリーパッケージの変換やインストール

    alien(1) を使うと、Red Hat の rpm や Stampede の slp や Slackware
    の tgz や Solaris の pkg ファイルフォーマットを Debian の deb パ
    ッケージに変換できます。あなたのシステムにインストールしたパッケ
    ージに替えて他の Linux ディストリビューション由来のパッケージを使
    いたい際には、alien を使って変換しインストールします。alien は
    LSB パッケージをサポートします。

    警告

    alien(1) は sysvinit や libc6 や libpam-modules 等の必須のシステ
    ムパッケージを置き換えるために使うべきではありません。実質的には 
    alien(1) は、LSB 準拠か静的にリンクされた non-free のバイナリーの
    みで提供されるパッケージにのみ使われるべきです。フリーソフトウエ
    アーの場合は、ソースパッケージを使い本物の Debian パッケージを作
    るべきです。

%

2.7.18. dpkg を使わないパッケージの開梱

    "dpkg*.deb" パッケージの内容は、どんな Unix 的環境でも標準の ar
    (1) と tar(1) を使うことで、dpkg(1) を使うこと無く開梱できます。

    # ar x /path/to/dpkg_<version>_<arch>.deb
    # ls
    total 24
    -rw-r--r-- 1 bozo bozo  1320 2007-05-07 00:11 control.tar.gz
    -rw-r--r-- 1 bozo bozo 12837 2007-05-07 00:11 data.tar.gz
    -rw-r--r-- 1 bozo bozo     4 2007-05-07 00:11 debian-binary
    # mkdir control
    # mkdir data
    # tar xvzf control.tar.gz -C control
    # tar xvzf data.tar.gz -C data

    他の "*.deb" パッケージの内容は、上記のようにして "dpkg*.deb" か
    ら取り出した dpkg-deb(1) コマンドにより開梱できるし、また標準の 
    ar(1) と tar(1) を xz(1) 解凍サポートともに使うことで上記同様に開
    梱できます。

    パッケージの内容は mc コマンドを使っても閲覧できます。

%

2.7.19. パッケージ管理の追加参考文書

    パッケージ管理に関しては次の文書からさらに学習できます。

      * パッケージ管理の一義的文書:

          + aptitude(8) と dpkg(1) と tasksel(8) と apt(8) と apt-get
            (8) と apt-config(8) と apt-key(8) と sources.list(5) と 
            apt.conf(5) と apt_preferences(5);

          + "/usr/share/doc/apt-doc/guide.html/index.html" と "/usr/
            share/doc/apt-doc/offline.html/index.html" from the
            apt-doc package;

          + aptitude-doc-en パッケージに入っている、"/usr/share/doc/
            aptitude/html/en/index.html"。

      * 正規で詳細な Debian アーカイブに関する文書:
   
          + Debian アーカイブの正式のポリシーは Debian ポリシーマニュ
            アル、第2章 - Debian アーカイブに規定されています。

          + "Debian 開発者リファレンス、第4章 Debian 開発者が利用可能
            なリソース 4.6 Debian アーカイブ"と、

          + "The Debian GNU/Linux FAQ, Chapter 6 - The Debian FTP
            archives".

      * Debian ユーザー向けの Debian パッケージ作成の入門書:

          + "Debian メンテナ入門" (廃止対象).

          + "Debian Maintainer 向け案内書".

第3章システムの初期化

    Debian システムが以下に起動され設定されるかの知っていることはシス
    テム管理者として賢明です。正確で詳細な情報がインストールされたパ
    ッケージのソースや文書中にあるとは言え、我々の大部分にとってはち
    ょっと大変過ぎます。

    著者などの過去の知見に基づき Debian システムの要点とそれらの設定
    の簡単な参考となる概論を提供するように勤めました。Debian システム
    は動く標的なので、システムの状況が変わっているかもしれません。シ
    ステムに変更を加える前に、各パッケージの最新文書を参照下さい。

    ヒント
   
    systemd に準拠するシステムのブートアッププロセスは bootup(7) に詳
    述されている。 (最新の Debian)

    ヒント
   
    UNIX System V Release 4 に準拠するシステムのブートアッププロセス
    は boot(7) に詳述されている。 (過去の Debian)

%

3.1. ブートストラッププロセスの概要

    コンピューターシステムは、電源投入イベントからユーザーに機能の完
    備したオペレーティングシステム (OS) を提供するまでブートストラッ
    ププロセスを数段通過します。

    単純化のため、デフォールトのインストールをした典型的な PC プラッ
    トフォームに限定し議論します。

    典型的なブートストラッププロセスは4段ロケットのようです。各段のロ
    ケットは次の段のロケットにシステムのコントロールを引き継ぎます。

      * 「1段目: BIOS」

      * 「2段目: ブートローダー」
   
      * 「3段目: ミニ Debian システム」

      * 「4段目: 通常の Debian システム」

    もちろん、これらに関して異なる設定をすることはできます。例えば、
    自分自身で専用カーネルをコンパイルした場合、ミニ Debian システム
    のステップをスキップできます。自分自身で確認するまでは、あなたの
    システムがこの様になっていると決めつけないで下さい。

    注記

    非伝統的 PC プラットフォームの SUN とか Macintosh システム等では
    、ROM 上の BIOS やディスク上のパーティション (「ディスクパーティ
    ション設定」) が非常に異なっているかもしれません。そのような場合
    にはプラットフォーム特定の文書をどこかで求めて下さい。

%

3.1.1. 1段目: BIOS

    BIOS は電源投入イベントが引き起こすブートプロセスの1段目です。CPU
    のプログラムカウンターが電源投入イベントで初期化され、読出し専用
    メモリー (ROM) 上にあるBIOS が特定のメモリーアドレスから実行され
    ます。

    BIOS はハードウエアーの基本的な初期化 (POST: 電源投入時自己診断)
    を行い、システムのコントロールをあなたが提供する次のステップにシ
    ステムのコントロールを引き継ぎます。BIOS は通常ハードウエアーによ
    って供給されます。

    BIOS 初期画面はどのキーを押すと BIOS 設定画面に入って BIOS の挙動
    を設定できるかを通常表示しています。よく使われるキーは F1 や F2
    や F10 や Esc や Ins や Del です。もし BIOS 初期画面が洒落た画像
    表示で隠されている場合、Esc 等の何らかのキーをおすとこれを無効に
    できます。こういったキーはハードウエアーに大いに依存します。

    BIOS が起動するコードのハードウエアー上の場所や優先順位は BIOS 設
    定画面から選択できます。典型的には最初に見つかった選択されたデバ
    イス (ハードディスクやフロッピーディスクや CD-ROM 等) の最初の数
    セクターがメモリー上にロードされこの初期コードが実行されます。こ
    の初期コードは次のいずれでもよろしい。

      * ブートローダーコード

      * FreeDOS のような踏み石 OS のカーネルコード

      * この小さな空間に収まればターゲット OS のカーネルコード

    典型的にはプライマリハードディスクの指定されたパーティションから
    システムが起動されます。伝統的 PC のハードディスクの最初の2セクタ
    ーにマスターブートレコード (MBR) が含まれます。ブート選択に含まれ
    るディスクのパーティション情報はこの MBR の最後に記録されています
    。BIOS から実行される最初のブートローダーコードは残りの部分を占め
    ます。

%

3.1.2. 2段目: ブートローダー

    ブートローダーは BIOS によって起動されるブートプロセスの2段目です
    。それはシステムのカーネルイメージと initrd イメージをメモリーに
    ロードし、それらにコントロールを引き継ぎます。この initrd イメー
    ジはルートファイルシステムイメージで、そのサポートは使われるブー
    トローダー次第です。

    Debian システムは通常 Linux カーネルをデフォールトのシステムカー
    ネルとして使っています。現在の 2.6/3.x カーネルにとっての initrd
    イメージは技術的に言うなら initramfs (初期 RAM ファイルシステム)
    イメージです。基本的な initrd イメージはルートファイルシステム中
    の圧縮 cpio アーカイブです。カーネルはこの基本的な initrd イメー
    ジをロードする前の非常に初期のブート中に microcode をアップデート
    することができます。非圧縮cpio フォーマット中のmicrocode のバイナ
    リーブロッブと基本的な initrd イメージよりなる組み合わせ initrd
    イメージを作成することを可能にします。

    ヒント

    initramfs-tools-core パッケージ中の lsinitramfs(8) や 
    unmkinitramfs(8) を用いると initrd イメージファイルの内容を検査で
    きます。詳細は https://wiki.debian.org/initramfs を参照ください。

    Debian システムのデフォールトインストールでは、GRUB ブートローダ
    ーの1段目のコードを PC プラットホームの MBR の中に置きます。多く
    のブートローダーと設定の選択肢が利用可能です。

    表3.1 ブートローダーのリスト

    +---------------------------------------------------------------+
    |  パッケージ  |ポプ |サイ|initrd|ブートロ|        説明         |
    |              |コン | ズ |      | ーダー |                     |
    |--------------+-----+----+------+--------+---------------------|
    |              |     |    |      |        |ディスクパーティショ |
    |              |V:0, |    |サポー|GRUB    |ンや vfat や ext3 等 |
    |grub-legacy   |I:2  |735 |ト    |Legacy  |のファイルシステムを |
    |              |     |    |      |        |理解するぐらいスマー |
    |              |     |    |      |        |トです。             |
    |--------------+-----+----+------+--------+---------------------|
    |              |     |    |      |        |ディスクパーティショ |
    |              |V:28,|    |サポー|        |ンや vfat や ext4 等 |
    |grub-pc       |I:774|533 |ト    |GRUB 2  |のファイルシステムを |
    |              |     |    |      |        |理解するぐらいスマー |
    |              |     |    |      |        |トです。(デフォルト) |
    |--------------+-----+----+------+--------+---------------------|
    |              |     |    |      |        |GRUB 2 のブート可能な|
    |grub-rescue-pc|V:0, |6367|サポー|GRUB 2  |レスキューイメージ   |
    |              |I:1  |    |ト    |        |(CD とフロッピー) (PC|
    |              |     |    |      |        |/BIOS バージョン)    |
    |--------------+-----+----+------+--------+---------------------|
    |              |V:0, |    |サポー|        |ハードディスク上のセ |
    |lilo          |I:2  |697 |ト    |Lilo    |クター位置に依存しま |
    |              |     |    |      |        |す。(旧式)           |
    |--------------+-----+----+------+--------+---------------------|
    |              |     |    |      |        |ISO9660 ファイルシス |
    |syslinux      |V:4, |343 |サポー|Isolinux|テムを理解します。ブ |
    |              |I:48 |    |ト    |        |ート CD に使われてい |
    |              |     |    |      |        |ます。               |
    |--------------+-----+----+------+--------+---------------------|
    |              |     |    |      |        |MSDOS ファイルシステ |
    |syslinux      |V:4, |343 |サポー|Syslinux|ム (FAT) 理解します。|
    |              |I:48 |    |ト    |        |ブートフロッピーで使 |
    |              |     |    |      |        |われます。           |
    |--------------+-----+----+------+--------+---------------------|
    |              |V:0, |    |サポー|        |新しいシステムが     |
    |loadlin       |I:1  |90  |ト    |Loadlin |FreeDOS/MSDOS システ |
    |              |     |    |      |        |ムから起動されます。 |
    |--------------+-----+----+------+--------+---------------------|
    |              |     |    |      |        |MSDOS の MBR を代替す|
    |              |V:0, |    |非サポ|Neil    |るフリーソフトウエア |
    |mbr           |I:7  |50  |ート  |Turton  |ーです。ディスクパー |
    |              |     |    |      |の MBR  |ティションを理解する |
    |              |     |    |      |        |だけです。           |
    +---------------------------------------------------------------+


    警告

    grub-rescue-pc パッケージのイメージから作ったブート可能なレスキュ
    ーメディア (CD かフロッピー) 無しにブートローダーを試してはいけま
    せん。これさえあると、ハードディスク上に機能するブートローダーが
    無くともシステムの起動ができます。

    GRUB Legacy のメニューの設定は "/boot/grub/menu.lst" にあります。
    例えば、次のような内容です。

    title           Debian GNU/Linux
    root            (hd0,2)
    kernel          /vmlinuz root=/dev/hda3 ro
    initrd          /initrd.img

    GRUB 2 のメニューの設定は "/boot/grub/grub.cfg" にあります。 "/
    etc/grub.d/*" の雛形と "/etc/default/grub" の設定から "/usr/sbin/
    update-grub" を使って自動的に作られます。例えば、次のような内容で
    す。

    menuentry "Debian GNU/Linux" {
            set root=(hd0,3)
            linux /vmlinuz root=/dev/hda3
            initrd /initrd.img
    }

    これらの例で、これらの GRUB パラメーターは次の意味です。

    表3.2 GRUB パラメーターの意味

    +---------------------------------------------------------------+
    |GRUB パラ|                        意味                         |
    |メーター |                                                     |
    |---------+-----------------------------------------------------|
    |         |GRUB legacy では "(hd0,2)" また GRUB 2 では "(hd0,3)"|
    |root     |と設定することでプライマリディスクの3つ目のパーティシ|
    |         |ョンを使用                                           |
    |---------+-----------------------------------------------------|
    |kernel   |カーネルパラメーター "root=/dev/hda3 ro" とともに "/ |
    |         |vmlinuz" にあるカーネルを使用                        |
    |---------+-----------------------------------------------------|
    |initrd   |"/initrd.img" にある initrd/initramfs イメージを使用 |
    +---------------------------------------------------------------+


    注記

    GRUB legacy プログラムが使うパーティション値は Linux カーネルやユ
    ーティリティーツールが使う値より1つ少ない数字です。GRUB 2 プログ
    ラムはこの問題を修正します。

    ヒント

    UUID (「UUID を使ってパーティションをアクセス」参照下さい) は、"/
    dev/hda3" のようなファイル名に代わるブロックの特定デバイスを確定
    するのに使え、例えば "root=UUID=
    81b289d5-4341-4003-9602-e254a17ac232 ro" です。

    ヒント

    もし GRUB が使われている場合には、カーネルブートパラメーターは /
    boot/grub/grub.cfg 中に設定されます。 Debian システム上では、/
    boot/grub/grub.cfg を直接編集するべきではありません。/etc/default
    /grub 中の GRUB_CMDLINE_LINUX_DEFAULT の値を編集するべきで、
    update-grub(8) を実行することで /boot/grub/grub.cfg を更新すべき
    です。

    ヒント
   
    チェインロード (連鎖導入) とよばれる技術を使うと、あるブートロー
    ダーから他のブートローダーを起動できます。

    "info grub" と grub-install(8) を参照下さい。

%

3.1.3. 3段目: ミニ Debian システム

    ミニ Debian システムはブートローダーによって起動されるブートプロ
    セスの3段目です。メモリー上でルートファイルシステムとともにシステ
    ムカーネルを実行します。これはオプションの起動プロセスの準備段階
    です。

    注記

    "ミニ Debian システム" は著者がこの3段目のブートプロセスを本文書
    中で記述するために作った言葉です。このシステムは一般に initrd と
    か initramfs システムと呼ばれています。類似のメモリー上のシステム
    は Debian インストーラーでも使われています。

    "/init" スクリプトはこのメモリー上のルートファイルシステムで最初
    に実行されるプログラムです。それはユーザー空間でカーネルを初期化
    し次の段階にコントロールを引き継ぐプログラムです。このミニ Debian
    システムは、メインのブートプロセスが始まる前にカーネルモジュール
    を追加したり、ルートファイルシステムを暗号化されたファイルシステ
    ムとしてマウントする等のブートプロセスの柔軟性を提供します。

      * initramfs-tools で initramfs が作成された場合には "/init" プ
        ログラムはシェルプログラムです。

          + "break=init" 等をカーネルブートパラメーターとして与えると
            、本部分のブートプロセスに割り込み root シェルを獲得でき
            ます。この他の割り込み条件は "/init" スクリプトを参照下さ
            い。このシェル環境はあなたの機器のハードウエアーを詳細に
            検査できるだけ十分洗練されています。
   
          + このミニ Debian システムで利用可能なコマンドは機能を削っ
            たコマンドで、主に busybox(1) という GNU ツールで提供され
            ます。

      * dracut で initramfs が作成された場合には "/init" プログラムは
        バイナリーの systemd プログラムです。

          + このミニ Debian システムで利用可能なコマンドは機能を削っ
            た systemd(1) 環境です。

    注意
   
    読出しのみのルートファイルシステム上では、mount コマンドには "-n"
    オプションを使う必要があります。

%

3.1.4. 4段目: 通常の Debian システム

    通常の Debian システムはミニ Debian システムによって起動されるブ
    ートプロセスの4段目です。ミニ Debian システムのシステムカーネルは
    この環境ででも実行され続けます。ルートファイルシステムはメモリー
    上から本当にハードディスク上にあるファイルシステムに切り替えられ
    ます。

    多くのプログラムを起動する主ブートプロセスを行う init プログラム
    は、PID=1 で最初のプログラムとして実行されます。init プログラムの
    デフォールトのファイルパスは "/sbin/init" ですが、"init=/path/to/
    init_program" のようなカーネルブートパラメーターにより変更できま
    す。

    デフォルトの init プログラムは変化してきています:

      * squeeze 以前の Debian は、単純な SysV-スタイル init を使用し
        ます。

      * wheezy の Debian は、LSB ヘッダーを用いブート順決めブートスク
        リプトを並列起動をする改良された SysV-スタイル init を使用し
        ます。

      * jessie の Debian は、イベントドリブンで並列初期化のために
        systemd にデフォルトの init を切り替えました。

    ヒント
   
    あなたのシステム上の実際の init コマンドは "ps --pid 1 -f" コマン
    ドで確認できます。

    ヒント
   
    Debian jessie 以降 "/sbin/init" は "/lib/systemd/systemd" にシム
    リンクされています。

    表3.3 Debian システムののブートユーティリティーのリスト

    +---------------------------------------------------------------+
    |    パッケージ     |ポプコ|サイ |             説明             |
    |                   |  ン  | ズ  |                              |
    |-------------------+------+-----+------------------------------|
    |                   |V:810,|     |並行処理のためのイベント依存の|
    |systemd            |I:916 |15998|init(8) デーモン (sysvinit 代 |
    |                   |      |     |替)                           |
    |-------------------+------+-----+------------------------------|
    |                   |V:802,|     |systemd で sysvinit を置換する|
    |systemd-sysv       |I:914 |138  |のに必要な、マニュアルページと|
    |                   |      |     |リンク                        |
    |-------------------+------+-----+------------------------------|
    |systemd-cron       |V:1,  |143  |cron デーモンと anacron 機能を|
    |                   |I:1   |     |提供する systemd の unit。    |
    |-------------------+------+-----+------------------------------|
    |init-system-helpers|V:675,|131  |sysvinit と systemd 間を切り替|
    |                   |I:930 |     |える補助ツール                |
    |-------------------+------+-----+------------------------------|
    |initscripts        |V:91, |176  |システムの始動と停止のためのス|
    |                   |I:323 |     |クリプト                      |
    |-------------------+------+-----+------------------------------|
    |sysvinit-core      |V:7,  |276  |System-V 的な init(8) ユーティ|
    |                   |I:9   |     |リティー                      |
    |-------------------+------+-----+------------------------------|
    |sysv-rc            |V:183,|81   |System-V 的なランレベル変更メ |
    |                   |I:335 |     |カニズム                      |
    |-------------------+------+-----+------------------------------|
    |sysvinit-utils     |V:494,|79   |System-V 的なユーティリティー |
    |                   |I:999 |     |(startpar(8)、bootlogd(8)、…) |
    |-------------------+------+-----+------------------------------|
    |lsb-base           |V:881,|49   |Linux Standard Base 3.2 の    |
    |                   |I:999 |     |init スクリプト機能           |
    |-------------------+------+-----+------------------------------|
    |                   |V:210,|     |LSB init.d スクリプト依存関係 |
    |insserv            |I:330 |150  |を使いブート順序を整理するツー|
    |                   |      |     |ル                            |
    |-------------------+------+-----+------------------------------|
    |                   |V:3,  |     |Linux が提供するユーザースペー|
    |uswsusp            |I:8   |714  |スソフトウエアーによるサスペン|
    |                   |      |     |ドを使うためのツール          |
    |-------------------+------+-----+------------------------------|
    |kexec-tools        |V:1,  |278  |kexec(8) リブートのための     |
    |                   |I:8   |     |kexec ツール (ワームリブート) |
    |-------------------+------+-----+------------------------------|
    |systemd-bootchart  |V:0,  |128  |ブートプロセスのパーフォンマン|
    |                   |I:1   |     |スアナライザー                |
    |-------------------+------+-----+------------------------------|
    |bootchart2         |V:0,  |94   |ブートプロセスのパーフォンマン|
    |                   |I:0   |     |スアナライザー                |
    |-------------------+------+-----+------------------------------|
    |pybootchartgui     |V:0,  |177  |ブートプロセスのアナライザー  |
    |                   |I:0   |     |(可視化)                      |
    |-------------------+------+-----+------------------------------|
    |mingetty           |V:0,  |38   |コンソール専用 getty(8)       |
    |                   |I:3   |     |                              |
    |-------------------+------+-----+------------------------------|
    |mgetty             |V:0,  |315  |インテリジェントモデム用の代替|
    |                   |I:1   |     |getty(8)                      |
    +---------------------------------------------------------------+


    ヒント
   
    ブートプロセスを高速化する最新のティップは Debian wiki:
    BootProcessSpeedup を参照下さい。

%

3.2. Systemd init

    このセクションは PID=1 (詰まり、init プロセス)の systemd(1) プロ
    グラムがどのようにシステムを起動するのかを説明します。

    systemd の init プロセスは、SysV 的な手続き定義スタイルではなく宣
    言定義スタイルで書かれた unit 設定ファイル(systemd.unit(5) 参照 )
    に従い並列で複数プロセスを起動します。これらは以下に記すような複
    数のパス (systemd-system.conf(5) 参照)から読み込まれます:

      * "/lib/systemd/system": OS のデフォルトの設定ファイル

      * "/etc/systemd/system": OS デフォルト設定ファイルをオーバーラ
        イドするシステム管理者設定ファイル

      * "/run/systemd/system": OS デフォルト設定ファイルをオーバーラ
        イドする実行時生成される設定ファイル

    相互依存関係は "Wants="、"Requires="、"Before="、"After="、 …
    ("MAPPING OF UNIT PROPERTIES TO THEIR INVERSES" in systemd.unit
    (5) 参照) 等の指示定義によって規定される。リソースのコントロール
    は (systemd.resource-control(5) 参照)によっても定義される。

    unit 設定ファイルのサッフィックスにそのタイプを折込みます:

      * *.service は systemd がコントロールしたりスーパーバイズするプ
        ロセスを記述します。systemd.service(5) 参照ください。

      * *.device は sysfs(5) 中に udev(7) デバイスツリーとして暴露さ
        れるデバイスを記述します。See systemd.device(5) を参照くださ
        い。

      * *.mount は systemd がコントロールしたりスーパーバイズするファ
        イルシステムのマウントポイントを記述します。systemd.mount(5)
        を参照ください。

      * *.automount は systemd がコントロールしたりスーパーバイズする
        ファイルシステムの自動マウントポイントを記述します。
        systemd.automount(5) を参照ください。

      * *.swap は systemd がコントロールやスーパーバイズするスワップ
        デバイスやファイルを記述します。systemd.swap(5) を参照くださ
        い。

      * *.path は systemd がパス基準で起動するために監視するパスを記
        述します。systemd.path(5) を参照ください。

      * *.socket は systemd がソケット基準で起動するためにコントロー
        ルしたりスーパーバイズするソケットを記述します。
        systemd.socket(5) を参照ください。

      * *.timer は systemd がタイマー基準で起動するためにコントロール
        したりスーパーバイズするタイマーを記述します。systemd.timer
        (5) を参照ください。

      * *.slice は cgroups(7) でリソースを管理します。systemd.slice
        (5) を参照ください。

      * *.scope はシステムプロセスの集合を systemd のバスインターフェ
        ースを用いて管理するためにプログラムで作られます。
        systemd.scope(5) を参照ください。

      * *.target は他の unit設定ファイルを組み合わせて始動時同期点を
        作ります。systemd.target(5) を参照ください。

    システムの始動 (init) されると systemd プロセスは (通常
    "graphical.target" にシムリンクされている) "/lib/systemd/system/
    default.target を起動しようとします。. 最初に、"local-fs.target"
    や "swap.target" や "cryptsetup.target" 等のいくつかの特殊ターゲ
    ット unit (systemd.special(7) 参照) が引き込まれファイルシステム
    をマウントします。そして、他のターゲット unit が、ターゲット unit
    の依存関係で引き込まれます。詳細に関しては bootup(7) を読んで下さ
    い。

    systemd はバックワードコンパティビリティー機能を提供します。"/etc
    /init.d/rc[0123456S].d/[KS]<name>" 中の、SysV-スタイルのブートス
    クリプトは依然として読み込まれ処理されますし、telinit(8) は
    systemd の unit 有効化要求に変換されます。

    注意
   
    擬似実装された runlevel の 2 から 4 は、すべて同じ
    "multi-user.target" にシムリンクされます。

%

3.2.1. ホスト名

    カーネルがシステムのホスト名を維持管理します。
    systemd-hostnamed.service により起動されたシステム unit が "/etc/
    hostname" に保存された名前を使ってブート時にホスト名を設定します
    。このファイルには、完全修飾ドメイン名ではなく、システムのホスト
    名のみが含まれているべきです。

    現在のホスト名を確認するには、hostname(1) を引数無しで実行します
    。

%

3.2.2. ファイルシステム

    通常のディスクやネットワークのファイルシテムのマウントオプション
    は "/etc/fstab" で設定されます。fstab(5) と「マウントオプションに
    よるファイルシステムの最適化」を参照下さい。

    暗号化されたファイルシステムの設定は "/etc/crypttab" で設定されま
    す。crypttab(5) を参照ください。

    mdadm(8) を用いるソフトウエアー RAID は "/etc/mdadm/mdadm.conf"
    で設定されます。mdadm.conf(5) を参照ください。

    警告

    各ブートアップごとに、全てのファイルシステムをマウントした後で、"
    /tmp" と "/var/lock" と "/var/run" 中の一時ファイルはクリーンされ
    ます。

%

3.2.3. ネットワークインターフェースの初期化

    最近の systemd下の Debian デスクトップ環境では、ネットワークイン
    ターフェースは、lo が "networking.service" で、他のインターフェー
    スが "NetworkManager.service" で通常初期化されます。

    どのように設定するのかは 5章ネットワークの設定を参照下さい。.

%

3.2.4. カーネルメッセージ

    コンソールに表示されるカーネルのエラーメッセージは、その閾値て設
    定できる。

    # dmesg -n3

    表3.4 カーネルエラーレベルのリスト

    +--------------------------------------------------------------+
    |エラーレベル値|エラーレベル名|              意味              |
    |--------------+--------------+--------------------------------|
    |0             |KERN_EMERG    |システムは不安定                |
    |--------------+--------------+--------------------------------|
    |1             |KERN_ALERT    |直ぐアクションが必要            |
    |--------------+--------------+--------------------------------|
    |2             |KERN_CRIT     |クリチカルなコンディション      |
    |--------------+--------------+--------------------------------|
    |3             |KERN_ERR      |エラーコンディション            |
    |--------------+--------------+--------------------------------|
    |4             |KERN_WARNING  |警告コンディション              |
    |--------------+--------------+--------------------------------|
    |5             |KERN_NOTICE   |ノーマルだが重要なコンディション|
    |--------------+--------------+--------------------------------|
    |6             |KERN_INFO     |情報                            |
    |--------------+--------------+--------------------------------|
    |7             |KERN_DEBUG    |デバグレベルのメッセージ        |
    +--------------------------------------------------------------+


%

3.2.5. システムメッセージ

    systemd の下では、カーネルとシステムの両方のメッセージがジャーナ
    ルサービス systemd-journald.service (所謂 journald) で、"/var/log
    /journal" の下の恒久的なバイナリーデーターか "/run/log/journal/"
    下の非恒久的なバイナリーデーターとして記録されます。このようなバ
    イナリー記録データーには journalctl(1) コマンドを用いてアクセスで
    きます。.

    systemd の下ではロギングのユーティリティーである rsyslogd(8) は、
    (systemd 以前のデフォルトの "/dev/log" を読むのではなく) 揮発性の
    バイナリーログデーターを読み伝統的な恒久的な ASCII システムログデ
    ーターを作成するように挙動が変わります。

    ログファイルとスクリーン上の両方のシステムメッセージに関して、 "/
    etc/default/rsyslogd" と "/etc/rsyslog.conf" によってカスタム化で
    きます。rsyslogd(8) と rsyslog.conf(5) を参照下さい。さらに「ログ
    アナライザー」を参照下さい。

%

3.2.6. systemd の下でのシステム管理

    systemd は init システムを提供するのみならず、ジャーナルのロギン
    グや、ログイン管理や、時間管理や、ネットワーク管理などの汎用シス
    テム管理機能を提供します。

    systemd(1) はいくつかのコマンドで管理されます:

      * systemctl(1) コマンドは systemd システムとサービス管理をコン
        トロールします (CLI)、

      * systemsdm(1) コマンドは systemd システムとサービス管理をコン
        トロールします (GLI)、

      * journalctl(1) コマンドは systemd ジャーナルの内容照会をします
        、

      * loginctl(1) コマンドは systemd のログイン管理をコントロールし
        ます、

      * systemd-analyze(1) はシステムのブートアップの性能を解析します
        。

    以下は典型的 systemd 管理コマンドの断片です。正確な意味は該当する
    マンページを参照ください。

    表3.5 典型的な systemd 管理コマンド断片の例

    +---------------------------------------------------------------+
    |             操作              |タイプ |     コマンド断片      |
    |-------------------------------+-------+-----------------------|
    |GUIのサービスマネージャー      |GUI    |"systemadm" (systemd-ui|
    |                               |       |パッケージ)            |
    |-------------------------------+-------+-----------------------|
    |全ターゲットユニット設定をリス |Unit   |"systemctl list-units  |
    |ト                             |       |--type=target"         |
    |-------------------------------+-------+-----------------------|
    |全サービスユニット設定をリスト |Unit   |"systemctl list-units  |
    |                               |       |--type=service"        |
    |-------------------------------+-------+-----------------------|
    |全ユニット設定タイプをリスト   |Unit   |"systemctl list-units  |
    |                               |       |--type=help"           |
    |-------------------------------+-------+-----------------------|
    |メモリー中の全ソケット unit の |Unit   |"systemctl             |
    |リスト                         |       |list-sockets"          |
    |-------------------------------+-------+-----------------------|
    |メモリー中の全タイマー unit の |Unit   |"systemctl list-timers"|
    |リスト                         |       |                       |
    |-------------------------------+-------+-----------------------|
    |"$unit" 始動                   |Unit   |"systemctl start $unit"|
    |-------------------------------+-------+-----------------------|
    |"$unit" 停止                   |Unit   |"systemctl stop $unit" |
    |-------------------------------+-------+-----------------------|
    |サービス特定の設定の再ロード   |Unit   |"systemctl reload      |
    |                               |       |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |"$unit" 停止と始動             |Unit   |"systemctl restart     |
    |                               |       |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |"$unit" 始動と、他全ての停止   |Unit   |"systemctl isolate     |
    |                               |       |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |"graphical" に切り替え(GUI シス|Unit   |"systemctl isolate     |
    |テム)                          |       |graphical"             |
    |-------------------------------+-------+-----------------------|
    |"multi-user" に切り替え(CLI シ |Unit   |"systemctl isolate     |
    |ステム)                        |       |multi-user"            |
    |-------------------------------+-------+-----------------------|
    |"rescue" に切り替え(シングルユ |Unit   |"systemctl isolate     |
    |ーザー CLI システム)           |       |rescue"                |
    |-------------------------------+-------+-----------------------|
    |"$unit" に kill 信号を送る     |Unit   |"systemctl kill $unit" |
    |-------------------------------+-------+-----------------------|
    |"$unit" サービスがアクティブか |Unit   |"systemctl is-active   |
    |を確認                         |       |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |"$unit" サービスが失敗かを確認 |Unit   |"systemctl is-failed   |
    |                               |       |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |"$unit|$PID|device" の状態を確 |Unit   |"systemctl status $unit|
    |認                             |       ||$PID|$device"         |
    |-------------------------------+-------+-----------------------|
    |"$unit|$job" の属性を表示      |Unit   |"systemctl show $unit| |
    |                               |       |$job"                  |
    |-------------------------------+-------+-----------------------|
    |失敗した "$unit" をリセット    |Unit   |"systemctl reset-failed|
    |                               |       |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |全ての unit サービスの依存関係 |       |"systemctl             |
    |をリスト                       |Unit   |list-dependencies      |
    |                               |       |--all"                 |
    |-------------------------------+-------+-----------------------|
    |システムにインストールされた   |Unit フ|"systemctl             |
    |unit ファイルをリスト          |ァイル |list-unit-files"       |
    |-------------------------------+-------+-----------------------|
    |"$unit" を有効にする(symlink 追|Unit フ|"systemctl enable      |
    |加)                            |ァイル |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |"$unit" を無効にする(symlink 削|Unit フ|"systemctl disable     |
    |除)                            |ァイル |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |"$unit" のマスクを外す("/dev/  |Unit フ|"systemctl unmask      |
    |null" へのsymlink を削除)      |ァイル |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |"$unit" にマスクをかける("/dev/|Unit フ|"systemctl mask $unit" |
    |null" へのsymlink を追加)      |ァイル |                       |
    |-------------------------------+-------+-----------------------|
    |デフォールトのターゲット設定を |Unit フ|"systemctl get-default"|
    |取得                           |ァイル |                       |
    |-------------------------------+-------+-----------------------|
    |"graphical" にデフォールトのタ |Unit フ|"systemctl set-default |
    |ーゲットを設定 (GUI システム)  |ァイル |graphical"             |
    |-------------------------------+-------+-----------------------|
    |"multi-user" にデフォールトのタ|Unit フ|"systemctl set-default |
    |ーゲットを設定 (CLI システム)  |ァイル |multi-user"            |
    |-------------------------------+-------+-----------------------|
    |ジョブ環境の表示               |環境   |"systemctl             |
    |                               |       |show-environment"      |
    |-------------------------------+-------+-----------------------|
    |ジョブ環境 "variable"(変数)を  |       |"systemctl             |
    |"value(値)に設定する"          |環境   |set-environment        |
    |                               |       |variable=value"        |
    |-------------------------------+-------+-----------------------|
    |ジョブ環境 "variable" (変数)の |       |"systemctl             |
    |設定を解除する                 |環境   |unset-environment      |
    |                               |       |variable"              |
    |-------------------------------+-------+-----------------------|
    |全 unit ファイルとデーモンを再 |ライフ |"systemctl             |
    |起動                           |サイク |daemon-reload"         |
    |                               |ル     |                       |
    |-------------------------------+-------+-----------------------|
    |システムをシャットダウンする   |システ |"systemctl poweroff"   |
    |                               |ム     |                       |
    |-------------------------------+-------+-----------------------|
    |システムのシャットダウンと再起 |システ |"systemctl reboot"     |
    |動                             |ム     |                       |
    |-------------------------------+-------+-----------------------|
    |システムのサスペンド           |システ |"systemctl suspend"    |
    |                               |ム     |                       |
    |-------------------------------+-------+-----------------------|
    |システムのハイバーネート       |システ |"systemctl hibernate"  |
    |                               |ム     |                       |
    |-------------------------------+-------+-----------------------|
    |"$unit" のジョブのログを見る   |ジャー |"journalctl -u $unit"  |
    |                               |ナル   |                       |
    |-------------------------------+-------+-----------------------|
    |"$unit" のジョブのログを見る   |ジャー |"journalctl -u $unit   |
    |("tail -f" スタイル)           |ナル   |-f"                    |
    |-------------------------------+-------+-----------------------|
    |それぞれの初期化ステップにかか |分析   |"systemd-analyze time" |
    |った時間を表示する             |       |                       |
    |-------------------------------+-------+-----------------------|
    |初期化にかかった時間を全ての   |分析   |"systemd-analyze blame"|
    |unit に関してリストする        |       |                       |
    |-------------------------------+-------+-----------------------|
    |読み込み "$unit" ファイル中のエ|分析   |"systemd-analyze verify|
    |ラーを検出する。               |       |$unit"                 |
    |-------------------------------+-------+-----------------------|
    |cgroups(7) を用いてブートプロセ|Cgroup |"systemd-cgls"         |
    |スを追跡する                   |       |                       |
    |-------------------------------+-------+-----------------------|
    |cgroups(7) を用いてブートプロセ|Cgroup |"ps xawf -eo           |
    |スを追跡する                   |       |pid,user,cgroup,args"  |
    |-------------------------------+-------+-----------------------|
    |cgroups(7) を用いてブートプロセ|Cgroup |"/sys/fs/cgroup/systemd|
    |スを追跡する                   |       |/" の下の sysfs を読む |
    +---------------------------------------------------------------+


    ここで、上記の例の中の "$unit" は単一の unit 名 (.service や
    .target といったサフィックスは任意) とか、多くの場合、現在メモリ
    ー中の全 unit の主名称に対して fnmatch(3) を用いて"*" や "?" や "
    []" 等のシェルスタイルのグロブによる複数 unit 指定であっても良い
    。

    上記例中のシステムの状態を変えるコマンドは必要な管理特権を獲得さ
    せるべく "sudo" を通常前置する。

    "systemctl status $unit|$PID|$device" の出力は色付きドット ("●")
    を使い unit の状態が一目瞭然とされる。

      * 白い "●" は "活動停止" や "停止済み" の状態を示す。

      * 赤い "●" は "失敗発生" や "エラー発生" の状態を示す。

      * 緑の "●" は "活動中" や "再起動中" や "起動中" の状態を示す。

%

3.2.7. systemd のカスタム化

    デフォルトのインストールでは、多くのネットワークサービス(6章ネッ
    トワークアプリケーションを参照) はブート時に systemd によってブー
    ト時に network.target の後に起動される。"sshd" も例外ではありませ
    ん。カスタム化の例としてオンデマンド起動に "sshd" をかえましょう
    。

    最初に、システムがインストールしたサービスの unit を無効化しまし
    ょう。

     $ sudo systemctl stop sshd.service
     $ sudo systemctl mask sshd.service

    古典的 Unix サービスでは indetd スーパーサーバーによるによりオン
    デマンドでソケット有効化をしていました。systemd では、*.socket や
    *.service unit 設定ファイルを等してこれと等価のことができます。

    聞くソケットを指定するには sshd.socket

    [Unit]
    Description=SSH Socket for Per-Connection Servers

    [Socket]
    ListenStream=22
    Accept=yes

    [Install]
    WantedBy=sockets.target

    sshd.socket に対応するサービスファイルの sshd@.service

    [Unit]
    Description=SSH Per-Connection Server
   
    [Service]
    ExecStart=-/usr/sbin/sshd -i
    StandardInput=socket

    そして、再ロードします。

     $ sudo systemctl daemon-reload

%

3.3. udev システム

    Linux カーネル 2.6以降では、udev システムがハードウエアーの自動検
    出と初期化のメカニズムを提供します (udev(7) 参照下さい)。カーネル
    が各デバイスを発見すると、udev システムは sysfs ファイルシステム
    (「procfs と sysfs」参照下さい) からの情報を使いユーザープロセス
    を起動し、modprobe(8) プログラム (「カーネルモジュール初期化」参
    照下さい) を使ってそれをサポートする必要なカーネルモジュールをロ
    ードし、対応するデバイスノードを作成します。

    ヒント

    もし "/lib/modules/<kernel-version>/modules.dep" が何らかの理由で
    depmod(8) によって適正に生成されていなかった場合には、モジュール
    は udev システムによる期待にそってロードされないかもしれません。
    これを修正するには、"depmod -a" を実行します。

    デバイスノード名は "/etc/udev/rules.d/" の中のファイルによって設
    定できます。現在のデフォールトのルールは、cd とネットワークデバイ
    ス以外は非静的なデバイス名となる動的生成名を作る傾向があります。
    cd やネットワークデバイスと同様のカスタムルールを追加することで
    USB メモリースティック等の他のデバイスにも静的なデバイス名を生成
    出来ます。"Writing udev rules" か "/usr/share/doc/udev/
    writing_udev_rules/index.html" を参照下さい。

    udev システムは少々動くターゲットなので、詳細は他のドキュメントに
    譲り、ここでは最小限の記述に止めます。

    ヒント

    "/etc/fstab" 中のマウントルールでは、デバイス名が静的なデバイス名
    である必要がありません。"/dev/sda" 等のデバイス名ではなく UUID を
    使ってデバイスをマウントできます。「UUID を使ってパーティションを
    アクセス」を参照下さい。

%

3.3.1. カーネルモジュール初期化

    modprobe(8) プログラムは、ユーザープロセスからカーネルモジュール
    を追加や削除することで実行中の Linux カーネルの設定を可能にします
    。udev システム (「udev システム」参照下さい) は、その起動を自動
    化しカーネルモジュールの初期化を補助します。

    "/etc/modules" ファイル中にリストしてプリロードする必要のある (
    modules(5) 参照下さい) 次に記すような非ハードウエアーや特殊ハード
    ウエアーのドライバーモジュールがあります。

      * ポイント間ネットワークデバイス (TUN) と仮想 Ethernet ネットワ
        ークデバイス (TAP) を提供する、TUN/TAP モジュール

      * netfilter ファイアーウォール機能 (iptables(8) と「Netfilter
        インフラ」) を提供する netfilter モジュール

      * ウォッチドッグタイマードライバーのモジュール

    modprobe(8) プログラムのための設定ファイルは、modprobe.conf(5) で
    説明されているように "/etc/modprobes.d/" ディレクトリーの下にあり
    ます。(あるカーネルモジュールが自動ロードされるのを避けるには、"/
    etc/modprobes.d/blacklist" ファイル中にブラックリストします。)

    depmod(8) プログラムによって生成される "/lib/modules/<version>/
    modules.dep" ファイルは、modprobe(8) プログラムによって使われるモ
    ジュール依存関係を記述します。

    注記

    ブート時に modprobe(8) を使ってのモジュールロードの問題に出会った
    場合には、"depmod -a" として "modules.dep" を再構築をするとこの様
    な問題が解消できるかもしれません。

    modinfo(8) プログラムは Linux カーネルモジュールに関する情報を表
    示します。

    lsmod(8) プログラムは "/proc/modules" の内容を読みやすい形式にし
    て、どのカーネルモジュールが現在ロードされているかを表示します。

    ヒント
   
    あなたのシステム上の正確なハードウエアーを特定します。「ハードウ
    エアーの識別」を参照下さい。

    ヒント
   
    ブート時に期待されるハードウエアー機能を有効となるように設定もで
    きます。「ハードウエアー設定」を参照下さい。

    ヒント
   
    あなたのデバイスのサポートは、カーネルを再コンパイルすれば追加で
    きます。「カーネル」を参照下さい。

第4章認証

    人 (またはプログラム) がシステムへのアクセスの要求をした際に、認
    証はその正体が信頼できるものだと確認します。

    警告

    PAM の設定のエラーはあなたをあなた自身のシステムから締め出すかも
    知れません。レスキュー CD を手元に置くか代替ブートパーティション
    設定を必ずします。復元するには、それらを使ってシステムをブートし
    そこから修正します。

    警告
   
    本章は、2013年にリリースされた Debian 7.0 (Wheezy) に基づいている
    ため、内容が陳腐化しつつあります。

%

4.1. 通常の Unix 認証

    通常の Unix 認証は PAM (プラグ可能な認証モジュール) のもとで 
    pam_unix.so(8) モジュールによって提供される。":" で分離されたエン
    トリーを持つその3つの重要な設定ファイルは次です。

    表4.1 3つの pam_unix(8) に関する重要な設定ファイル

    +---------------------------------------------------------------+
    |ファイル|パーミッション |ユー |グルー|          説明           |
    |        |    (許可)     |ザー |  プ  |                         |
    |--------+---------------+-----+------+-------------------------|
    |/etc/   |-rw-r--r--     |root |root  |(浄化された) ユーザーアカ|
    |passwd  |               |     |      |ウント情報               |
    |--------+---------------+-----+------+-------------------------|
    |/etc/   |-rw-r-----     |root |shadow|保護されたユーザーアカウ |
    |shadow  |               |     |      |ント情報                 |
    |--------+---------------+-----+------+-------------------------|
    |/etc/   |-rw-r--r--     |root |root  |グループ情報             |
    |group   |               |     |      |                         |
    +---------------------------------------------------------------+


    "/etc/passwd" ファイルは次の内容です。

     ...
    user1:x:1000:1000:User1 Name,,,:/home/user1:/bin/bash
    user2:x:1001:1001:User2 Name,,,:/home/user2:/bin/bash
     ...

    passwd(5) に説明されているように、このファイルの ":" で分離された
    エントリーそれぞれは次の意味です。

      * ログイン名

      * パスワード規定エントリー

      * 数値のユーザー ID

      * 数値のグループ ID

      * ユーザー名またはコメント領域

      * ユーザーのホームディレクトリー

      * ユーザーのコマンドインタープリター (無いこともある)

    "/etc/passwd" の2番目のエントリーは暗号化したパスワードのエントリ
    ーとして使われていました。"/etc/shadow" が導入された後は、このエ
    ントリーはパスワード規定エントリーとして使われています。

    表4.2 "/etc/passwd" の2番目のエントリーの内容

    +---------------------------------------------------------------+
    | 内容 |                          意味                          |
    |------+--------------------------------------------------------|
    |(空白)|パスワード無しアカウント                                |
    |------+--------------------------------------------------------|
    |x     |暗号化したパスワードは "/etc/shadow" ファイルの中にあり |
    |      |ます。                                                  |
    |------+--------------------------------------------------------|
    |*     |このアカウントへのログイン不可                          |
    |------+--------------------------------------------------------|
    |!     |このアカウントへのログイン不可                          |
    +---------------------------------------------------------------+


    "/etc/shadow" の内容は次です。

     ...
    user1:$1$Xop0FYH9$IfxyQwBe9b8tiyIkt2P4F/:13262:0:99999:7:::
    user2:$1$vXGZLVbS$ElyErNf/agUDsm1DehJMS/:13261:0:99999:7:::
     ...

    shadow(5) で説明されているように、このファイルの ":" で分離された
    エントリーそれぞれは次の意味です。

      * ログイン名

      * 暗号化されたパスワード (最初が "$1$" で始まっているのは MD5
        暗号化が使われていることを示します。"*" はログイン不可を示し
        ます。)

      * 1970 年 1 月 1 日から、最後にパスワードが変更された日までの日
        数

      * パスワードが変更可能となるまでの日数
   
      * パスワードを変更しなくてはならなくなる日までの日数

      * パスワード有効期限が来る前に、ユーザが警告を受ける日数

      * パスワード有効期限が過ぎてからアカウントが使用不能になるまで
        の日数

      * 1970 年 1 月 1 日からアカウントが使用不能になる日までの日数

      * …

    "/etc/group" のファイル内容は次です。

    group1:x:20:user1,user2

    group(5) に説明されているように、このファイルの ":" で分離された
    エントリーそれぞれは次の意味です。

      * グループ名

      * 暗号化されたパスワード (実際は使われていない)
   
      * 数値のグループ ID

      * "," で分離されたユーザー名のリスト

    注記

    "/etc/gshadow" ファイルは "/etc/shadow" ファイルが "/etc/group"
    ファイルに対する機能と同様の機能がありますが、実際には使われてい
    ません。

    注記

    もし "authoptionalpam_group.so" 行が "/etc/pam.d/common-auth" に
    書き加えれ、"/etc/security/group.conf" に対応する設定がされていれ
    ば、実際のユーザーのグループメンバーシップは動的に割り当てられま
    す。pam_group(8) を参照下さい。

    注記

    base-passwd パッケージはユーザーとグループに関する権威のあるリス
    トが含まれます: "/usr/share/doc/base-passwd/
    users-and-groups.html"。

%

4.2. アカウントとパスワードの情報管理

    アカウント情報管理のための重要コマンドを記します。

    表4.3 アカウント情報を管理するコマンドのリスト

    +---------------------------------------------------------------+
    |      コマンド      |                   機能                   |
    |--------------------+------------------------------------------|
    |getent passwd       |"<user_name>" のアカウント情報の閲覧      |
    |<user_name>         |                                          |
    |--------------------+------------------------------------------|
    |getent shadow       |"<user_name>" のシャドーされたアカウント情|
    |<user_name>         |報の閲覧                                  |
    |--------------------+------------------------------------------|
    |getent group        |"<group_name>" のグループ情報の閲覧       |
    |<group_name>        |                                          |
    |--------------------+------------------------------------------|
    |passwd              |アカウントのパスワード管理                |
    |--------------------+------------------------------------------|
    |passwd -e           |アカウント開設のための一回だけ使えるパスワ|
    |                    |ードの設定                                |
    |--------------------+------------------------------------------|
    |chage               |パスワードのエージング情報管理            |
    +---------------------------------------------------------------+


    一部機能が機能するには root 権限が必要な場合があります。パスワー
    ドとデーターの暗号化は crypt(3) を参照下さい。

    注記

    Debian が提供する salsa 機器と同様な PAM と NSS の設定をされたシ
    ステム上では、ローカルの "/etc/passwd" や "/etc/group" や "/etc/
    shadow" の内容がシステムにアクティブに利用されていないことがあり
    ます。そういった環境下でも上記コマンドは有効です。

%

4.3. 良好なパスワード

    passwd(1) によるとシステムインストール時や passwd(1) コマンドによ
    ってアカウント作成する際には、次に記すようなセットからなる少なく
    とも6から8文字の良好なパスワードを選択するべきです。

      * 小文字のアルファベット

      * 数字の0から9

      * 句読点

    警告

    容易に推測できるパスワードを選んではいけません。アカウント名、社
    会保険番号、電話番号、住所、誕生日、家族員やペットの名前、辞書に
    ある単語、"12345" や "qwerty" のような単純な文字列…、これらすべて
    パスワードに選んではいけません。

%

4.4. 暗号化されたパスワード作成

    ソルトを使って暗号化されたパスワードを生成する独立のツールがあり
    ます。

    表4.4 パスワード生成ツールのリスト

    +---------------------------------------------------------------+
    |パッケ |ポプコン|サイ|コマンド |             機能              |
    | ージ  |        | ズ |         |                               |
    |-------+--------+----+---------+-------------------------------|
    |whois  |V:35,   |364 |mkpasswd |crypt(3) ライブラリーの充実しす|
    |       |I:393   |    |         |ぎたフロントエンド             |
    |-------+--------+----+---------+-------------------------------|
    |openssl|V:794,  |1465|openssl  |パスワードハッシュの計算       |
    |       |I:993   |    |passwd   |(OpenSSL)。passwd(1ssl)        |
    +---------------------------------------------------------------+


%

4.5. PAM と NSS

    Debian システムのような最新の Unix 的システムは PAM (プラグ可能な
    認証モジュール: Pluggable Authentication Modules) と NSS (ネーム
    サービススイッチ: Name Service Switch) メカニズムをローカルのシス
    テム管理者がそのシステム管理用に提供します。それらの役割をまとめ
    ると次の様になります。

      * PAM は、アプリケーションソフトウエアーが使う柔軟な認証メカニ
        ズムを提供し、パスワードデーターの交換に関与します。
   
      * NSS は、ls(1)andid(1) 等のプログラムがユーザーやグループの名
        前を得ために C 標準ライブラリー経由で頻用する柔軟なネームサー
        ビスメカニズムを提供します。

    これらの PAM と NSS システムは一貫した設定が必要です。

    PAM と NSS システムに関する注目のパッケージは次です。

    表4.5 特記すべき PAM と NSS システムのリスト

    +---------------------------------------------------------------+
    |    パッケージ     |ポプコ|サイ |             説明             |
    |                   |  ン  | ズ  |                              |
    |-------------------+------+-----+------------------------------|
    |libpam-modules     |V:807,|1032 |差し替え可能な認証モジュール  |
    |                   |I:999 |     |(基本サービス)                |
    |-------------------+------+-----+------------------------------|
    |                   |      |     |LDAP インターフェースを可能に |
    |libpam-ldap        |I:12  |249  |する差し替え可能な認証モジュー|
    |                   |      |     |ル                            |
    |-------------------+------+-----+------------------------------|
    |libpam-cracklib    |I:16  |115  |cracklib のサポートを可能にす |
    |                   |      |     |る差し替え可能な認証モジュール|
    |-------------------+------+-----+------------------------------|
    |                   |V:474,|     |logind のために登録ユーザーセ |
    |libpam-systemd     |I:853 |573  |ッションを登録するプラガブルオ|
    |                   |      |     |ーセンティケーション (PAM)    |
    |-------------------+------+-----+------------------------------|
    |libpam-doc         |I:1   |1044 |差し替え可能な認証モジュール  |
    |                   |      |     |(html と text の文書)         |
    |-------------------+------+-----+------------------------------|
    |                   |V:935,|     |GNU C ライブラリー: "ネームサ |
    |libc6              |I:999 |12771|ービススイッチ" も提供する共有|
    |                   |      |     |ライブラリー                  |
    |-------------------+------+-----+------------------------------|
    |glibc-doc          |I:11  |3161 |GNU C ライブラリー: マンページ|
    |-------------------+------+-----+------------------------------|
    |                   |      |     |GNU C ライブラリー: info と   |
    |glibc-doc-reference|I:5   |12740|pdf と html フォーマットでのリ|
    |                   |      |     |ファレンスマニュアル          |
    |                   |      |     |(non-free)                    |
    |-------------------+------+-----+------------------------------|
    |libnss-mdns        |I:526 |150  |マルチキャスト DNS を使った名 |
    |                   |      |     |前解決のための NSS モジュール |
    |-------------------+------+-----+------------------------------|
    |libnss-ldap        |I:11  |265  |LDAP をネームサービスとして使 |
    |                   |      |     |う NSS モジュール             |
    |-------------------+------+-----+------------------------------|
    |                   |      |     |LDAP をネームサービスとして使 |
    |libnss-ldapd       |I:14  |153  |う NSS モジュール (libnss-ldap|
    |                   |      |     |の新たなフォーク)             |
    +---------------------------------------------------------------+


      * libpam-doc 中の "The Linux-PAM System Administrators' Guide"
        は PAM 設定を学ぶ上で必須です。
   
      * glibc-doc-reference の中の "System Databases and Name Service
        Switch" セクションは NSS 設定を学ぶ上で必須です。

    注記

    より大規模かつ最新のリストは "aptitude search 'libpam-|libnss-'"
    コマンドを実行すると得られます。NSS という頭字語は "ネームサービ
    ススイッチ: Name Service Switch" と異なる "ネットワークセキュリテ
    ィーサービス: Network Security Service" を指すこともあります。

    注記
   
    PAM は個別プログラムに関する環境変数をシステム全体のデフォールト
    値に初期化する最も基本的な手段です。

    systemd の下では、logind のために systemd のコントロールグループ
    階層中にユーザーセッションを登録することでユーザーのログインを管
    理すべくlibpam-systemd パッケージがインストールされている。
    systemd-logind(8) や logind.conf(5) や pam_systemd(8) を参照くだ
    さい。

%

4.5.1. PAM と NSS によってアクセスされる設定ファイル

    PAM と NSS がアクセスする注目すべき設定ファイルを次に記します。

    表4.6 PAM NSS によりアクセスされる設定ファイルのリスト

    +---------------------------------------------------------------+
    |設定ファイル |                      機能                       |
    |-------------+-------------------------------------------------|
    |/etc/pam.d/  |"<program_name>" に関する PAM 設定の設定; pam(7) |
    |<プログラム  |と pam.d(5) 参照下さい                           |
    |名>          |                                                 |
    |-------------+-------------------------------------------------|
    |/etc/        |各サービスに関するエントリーによる NSS 設定の設  |
    |nsswitch.conf|定; nsswitch.conf(5) 参照下さい                  |
    |-------------+-------------------------------------------------|
    |/etc/nologin |ユーザーのログイン制限のために pam_nologin(8) モ |
    |             |ジュールがアクセス                               |
    |-------------+-------------------------------------------------|
    |/etc/        |pam_securetty(8) モジュールにより root アクセスに|
    |securetty    |使う tty を制限                                  |
    |-------------+-------------------------------------------------|
    |/etc/security|pam_access(8) モジュールによりアクセス制限を設定 |
    |/access.conf |                                                 |
    |-------------+-------------------------------------------------|
    |/etc/security|pam_group(8) モジュールによりグループに基づく制約|
    |/group.conf  |を設定                                           |
    |-------------+-------------------------------------------------|
    |/etc/security|pam_env(8) モジュールにより環境変数を設定        |
    |/pam_env.conf|                                                 |
    |-------------+-------------------------------------------------|
    |/etc/        |"readenv=1" 引数を付きの pam_env(8) モジュールに |
    |environment  |よって追加での環境変数を設定                     |
    |-------------+-------------------------------------------------|
    |/etc/default/|"readenv=1envfile=/etc/default/locale" 引数を付き|
    |locale       |の pam_env(8) モジュールによって追加でロケールを |
    |             |設定します (Debian)                              |
    |-------------+-------------------------------------------------|
    |/etc/security|pam_linits(8) モジュールによってリソース制限     |
    |/limits.conf |(ulimit, core, …) を設定                         |
    |-------------+-------------------------------------------------|
    |/etc/security|pam_time(8) モジュールによって時間制限を設定     |
    |/time.conf   |                                                 |
    |-------------+-------------------------------------------------|
    |/etc/systemd/|systemd ログイン管理設定の設定(logind.conf(5) と |
    |logind.conf  |systemd-logind.service(8) を参照)                |
    +---------------------------------------------------------------+


    パスワード選択の制限は pam_unix(8) と pam_cracklib(8) モジュール
    で実装されています。それらは引数を使って設定します。

    ヒント
   
    PAM モジュールはファイル名のサフィクスとして ".so" を使います。

%

4.5.2. 最新の集中システム管理

    集中化された軽量ディレクトリーアクセスプロトコル (LDAP) を採用す
    ることで多くのネットワーク上の Unix 的や非 Unix 的システムを最新
    の集中システム管理が実現できます。軽量ディレクトリーアクセスプロ
    トコルのオープンソース実装は OpenLDAP ソフトウエアーです。

    LDAP サーバーは、libpam-ldap と libnss-ldap パッケージで提供され
    る PAM と NSS を使うことで Debian システムにアカウント情報を提供
    します。この実現ためにはいくつかの設定が必要です (著者は本設定を
    使っていないため、次の情報は完全に二次情報です。ご理解の上お読み
    下さい。)。

      * スタンドアローンの LDAP デーモンである slapd(8) 等のプログラ
        ムを走らせることで集中化された LDAP サーバーを設置します。

      * デフォールトの "pam_unix.so" に代えて "pam_ldap.so" を使うに
        は "/etc/pam.d/" ディレクトリー中の PAM 設定ファイルを変更し
        ます。

          + Debian では、"/etc/pam_ldap.conf" をlibpam-ldap の設定フ
            ァイル、"/etc/pam_ldap.secret" を root のパスワードを保存
            するファイルとして使っています。

      * デフォールト ("compat" または "file") に代えて "ldap" を使う
        には "/etc/nsswitch.conf" ファイル中の NSS 設定を変更します。
   
          + Debian では、"/etc/libnss-ldap.conf" をlibnss-ldap の設定
            ファイルとして使っています。

      * パスワードのセキュリティー確保のために libpam-ldap が SSL (も
        しくは TLS) 接続を使うよう設定しなければいけません。

      * LDAP のネットワークオバーヘッドの犠牲はあるとはいえ、データー
        の整合性確保のために libnss-ldap が SSL (もしくは TLS) 接続を
        使うように設定できます。

      * LDAP のネットワークトラフィックを減少させるために LDAP サーチ
        結果を一時保持するための nscd(8) をローカルで走らせるべきです
        。

    libpam-doc パッケージで提供される pam_ldap.conf(5) や "/usr/share
    /doc/libpam-doc/html/" や glibc-doc パッケージで提供される "info
    libc 'NameServiceSwitch'" といった文書を参照下さい。

    同様に、これに代わる集中化されたシステムは他の方法を使っても設定
    できます。

      * Windows システムとのユーザーとグループの統合

          + winbind と libpam_winbind パッケージを使って Windows ドメ
            インサービスにアクセスします。

          + winbind(8) と SAMBA による MS Windows Networks への統合を
            参照下さい。

      * 旧来の Unix 的なシステムとのユーザーとグループの統合

          + nis パッケージにより NIS (当初 YP と呼ばれた) または NIS+
            にアクセス

          + The Linux NIS(YP)/NYS/NIS+ HOWTO 参照下さい。

%

4.5.3. 「どうして GNU の su は wheel グループをサポートしないのか」

    これは Richard M. Stallman が書いた昔の "info su" の最後に書かれ
    ていた有名な文言です。ご心配は無用です。現在 Debian にある su は
    PAM を使っているので "/etc/pam.d/su" の中の "pam_wheel.so" の行を
    エネーブルすることで su を使えるのを root グループに限定できます
    。

%

4.5.4. パスワード規則強化

    libpam-cracklib パッケージをインストールすると、例えば "/etc/
    pam.d/common-password" に次のような行があれば、パスワード規則を強
    化できます。

    squeeze の場合:

    password required pam_cracklib.so retry=3 minlen=9 difok=3
    password [success=1 default=ignore] pam_unix.so use_authtok nullok md5
    password requisite pam_deny.so
    password required pam_permit.so

%

4.6. 他のアクセスコントロール

    注記
   
    カーネルのセキュアーアテンションキー (SAK) 機能の制限は「
    Alt-SysRq キー」を参照下さい。

%

4.6.1. sudo

    sudo はシステム管理者がユーザーに制限付きの root 権限を与え、その
    root 活動を記録するように設計されたプログラムです。sudo はユーザ
    ーの通常パスワードだけが必要です。sudo パッケージをインストールし
    、"/etc/sudoers" の中のオプションを設定することによりアクティベー
    トして下さい。"/usr/share/doc/sudo/examples/sudoers" や「sudo の
    設定」の設定例を参照下さい。

    単一ユーザーシステムにおける私の sudo の使い方 (「sudo の設定」参
    照下さい) は自分自身の失敗からの防衛を目指しています。sudo を使う
    ことは、常に root アカウントからシステムを使うよりは良い方法だと
    個人的には考えます。例えば、次は "<some_file>" の所有者を "
    <my_name>" に変更します。

    $ sudo chown <my_name> <some_file>

    root のパスワード (自分でシステムインストールをした Debian ユーザ
    ーなら当然知っています) を知っていれば、どのユーザーアカウントか
    らいかなるコマンドも "su -c" とすれば root もとで実行できます。

%

4.6.2. PolicyKit

    PolicyKit は Unix系オペレーティングシステムにおけるシステム全体の
    特権を制御するオペレーティングシステム構成要素です。

    新しいGUIアプリケーションは、特権プロセスとして実行するように設計
    されていません。それらは、PolicyKitを経由し管理操作を実行する特権
    プロセスに話しかけます。

    PolicyKitは、このような操作をDebianシステム上のsudoグループ所属の
    ユーザーアカウントに限定します。

    polkit(8)を参照下さい。

%

4.6.3. SELinux

    セキュリティー強化した Linux (SELinux) は強制アクセス制御 (MAC)
    ポリシーのある通常の Unix 的な権限モデルより厳格な枠組みです。あ
    る条件下では root の権限すら制限を受けます。

%

4.6.4. サーバーのサービスへのアクセスの制限

    システムのセキュリティーのためにできるだけ多くのサーバープログラ
    ムを無効とするのは良い考えです。このことはネットワークサーバーの
    場合は決定的です。直接デーモンとしてであれスーパーサーバープログ
    ラム経由であれ有効にされている使っていないサーバーがあることはセ
    キュリティーリスクと考えられます。

    sshd(8) 等の多くのプログラムが PAM を使ったアクセスコントロールを
    使っています。サーバーサービスへのアクセスを制限するには多くの方
    法があります。

      * 設定ファイル: "/etc/default/<プログラム名>"

      * デーモンに関するサービス unit 設定

      * PAM (プラグ可能な認証モジュール: Pluggable Authentication
        Modules)

      * スーパーサーバーに関する "/etc/inetd.conf"

      * TCP ラッパーに関する "/etc/hosts.deny" と "/etc/hosts.allow"
        、tcpd(8)

      * Sun RPC に関する "/etc/rpc.conf"

      * atd(8) に関する "/etc/at.allow" と "/etc/at.deny"

      * atd(8) に関する "/etc/at.allow" と "/etc/at.deny"

      * netfilter インフラのネットワークファイアーウォール

    「systemd の下でのシステム管理」と「PAM と NSS によってアクセスさ
    れる設定ファイル」と「Netfilter インフラ」を参照下さい。

    ヒント
   
    NFS 他の RPC を使うプログラムためには Sun RPC サービスはアクティ
    ブにする必要があります。

    ヒント

    もし現代的な Debian システムでリモートアクセスで問題に会った場合
    には、"/etc/hosts.deny" 中に "ALL:PARANOID" 等の問題となっている
    設定があればコメントアウトします。(ただしこの種の行為に関するセキ
    ュリティーリスクに注意を払わなければいけません。)

%

4.7. 認証のセキュリティー

    注記
   
    ここに書かれている情報はあなたのセキュリティーのニーズに充分では
    ないかもしれませんが、良いスタートです。

%

4.7.1. インターネット上でセキュアーなパスワード

    多くのトランスポーテーションレイヤーサービスはパスワード認証も含
    めて暗号化せずにメッセージをプレーンテキストで通信します。途中で
    傍受されかねないインターネットの荒野を経由して暗号化せずパスワー
    ドを送ることは非常によくない考えです。これらに関しては、"トランス
    ポーテーションレイヤーセキュリティー"(TLS) もしくはその前身の "セ
    キュアーソケットレイヤー" (SSL) で暗号化することでパスワードを含
    むすべての通信をセキュアーにしてサービスができます。

    表4.7 インセキュアーとセキュアーのサービスとポートのリスト

    +---------------------------------------------------------------+
    |インセキュアーなサービス名|ポート|セキュアーなサービス名|ポート|
    |--------------------------+------+----------------------+------|
    |www (http)                |80    |https                 |443   |
    |--------------------------+------+----------------------+------|
    |smtp (mail)               |25    |ssmtp (smtps)         |465   |
    |--------------------------+------+----------------------+------|
    |ftp-data                  |20    |ftps-data             |989   |
    |--------------------------+------+----------------------+------|
    |ftp                       |21    |ftps                  |990   |
    |--------------------------+------+----------------------+------|
    |telnet                    |23    |telnets               |992   |
    |--------------------------+------+----------------------+------|
    |imap2                     |143   |imaps                 |993   |
    |--------------------------+------+----------------------+------|
    |pop3                      |110   |pop3s                 |995   |
    |--------------------------+------+----------------------+------|
    |ldap                      |389   |ldaps                 |636   |
    +---------------------------------------------------------------+


    暗号化には CPU タイムがかかります。CPU に友好的な代替方法として、
    POP には "パスワードを認証されたポストオフィスプロトコル "(APOP)
    や SMTP や IMAP には "チャレンジレスポンス認証メカニズム MD5"
    (CRAM-MD5) といったセキュアーな認証プロトコルでパスワードのみを保
    護しつつ通信はプレーンテキストですることもできます。(最近メールク
    ライアントからメールサーバーにインターネット経由でメールメッセー
    ジを送る際には、CRAM-MD5 で認証をしたのちネットワークプロバイダー
    によるポート25 ブロッキングを避けて従来の SMTP ポート25 の代わり
    にメッセージサブミッションポート587 を使うことがよく行われます。)

%

4.7.2. セキュアーシェル

    セキュアーシェル (SSH) プログラムはセキュアーな認証とともにインセ
    キュアーなネットワークを通過したお互いに信頼し合っていないホスト
    間のセキュアーで暗号化された通信を可能にします。OpenSSH クライア
    ント ssh(1) と OpenSSH デーモン sshd(8) から成り立っています。SSH
    はポートフォーワーディング機能を使い POP や X のようなインセキュ
    アープロトコルの通信をインターネット経由でトンネルするのに使えま
    す。

    クライアントは、ホストベースド認証、公開鍵認証、チャレンジレスポ
    ンス認証、パスワード認証を使って認証をとろうとします。公開鍵認証
    を利用すると、リモートからのパスワード無しログインができるように
    なります。「リーモートアクセスサーバーとユーティリティー (SSH)」
    を参照下さい。

%

4.7.3. インターネットのためのセキュリティー強化策

    たとえ、セキュアーシェル (SSH) やポイントツーポイントトンネリング
    プロトコル (PPTP) サーバーのようなセキュアーサービスを走らせる場
    合でも、ブルートフォースのパスワード推測等による侵入の可能性は残
    っています。次のようなセキュリティーのためのツールとともに、ファ
    イアーウォールポリシー (「Netfilter インフラ」参照下さい) を使う
    のはセキュリティー状況を向上させることが期待できます。

    表4.8 追加セキュリティー策を提供するツールのリスト

    +---------------------------------------------------------------+
    | パッケージ  |ポプコ |サイ|                説明                |
    |             |  ン   | ズ |                                    |
    |-------------+-------+----+------------------------------------|
    |knockd       |V:0,   |102 |小さなポートノックのデーモン knockd |
    |             |I:3    |    |(1) とクライアント konck            |
    |-------------+-------+----+------------------------------------|
    |fail2ban     |V:112, |2092|複数回の認証エラーを発生させる IP を|
    |             |I:123  |    |使用禁止にします                    |
    |-------------+-------+----+------------------------------------|
    |libpam-shield|V:0,   |115 |パスワード推測によるリモートからの攻|
    |             |I:0    |    |撃者を締め出す                      |
    +---------------------------------------------------------------+


%

4.7.4. root パスワードのセキュリティー確保

    あなたの機器に他人が root 権限を持ってアクセスするのを阻止するに
    は、次のアクションが必要です。

      * ハードディスクへの物理的アクセスを阻止

      * BIOS に鍵を書け、リムーバブルメディアからの起動を阻止
   
      * GRUB のインタラクティブセッションのパスワードを設定

      * GRUB のメニュー項目編集に施錠

    ハードディスクへの物理的アクセスがあれば、パスワードをリセットす
    ることは次の手順を使うと比較的簡単です。

     1. ハードディスクを CD から起動可能な BIOS のついた PC に移動し
        ます。

     2. レスキューメディア (Debian ブートディスク、Knoppix CD、GRUB
        CD、…) でシステムを起動します。
   
     3. ルートパーティションを読出し / 書込みアクセスでマウントします
        。

     4. ルートパーティションの "/etc/passwd" を編集し、root アカウン
        トの2番目の項目を空にします。

    grub-rescue-pc の起動時に GRUB のメニュー項目を編集可能 (「2段目:
    ブートローダー」参照下さい) なら、次の手順を使えてさらに簡単です
    。

     1. カーネルパラメーターを "root=/dev/hda6 rw init=/bin/sh" のよ
        うな感じに変更してシステムを起動します。

     2. "/etc/passwd" を編集し、root アカウントの2番目の項目を空にし
        ます。

     3. システム再起動します。

    これで、システムの root シェルにパスワード無しに入れるようになり
    ました。

    注記

    root シェルにアクセスさえできれば、システム上の全てにアクセスでき
    システム上のどのパスワードでもリセットできます。さらに。john とか
    crack パッケージ (「システムのセキュリティーと整合性のチェック」
    参照下さい) のようなブルートフォースのパスワードクラッキングツー
    ルを使ってすべてのユーザーアカウントのパスワードが破られるかもし
    れません。こうして破られたパスワードは他のシステムへの侵入を引き
    起こしかねません。

    この様な懸念を回避できる唯一の合理的なソフトウエアー的解決法は、
    dm-crypt と initramfs (「データー暗号化ティップ」参照下さい) をつ
    かう、ソフトウエアー暗号化されたルートパーティション (もしくは "/
    etc" パーティション) を使うことです。でも、パスワードがシステム起
    動毎に必要になってしまいます。

第5章ネットワークの設定

    ヒント
   
    GNU/Linux のネットワーク設定の一般的ガイドは Linux Network
    Administrators Guide を参照下さい。

    ヒント
   
    最近の Debian に特化したネットワーク設定のガイドは The Debian
    Administrator's Handbook — Configuring the Network を参照下さい。

    警告

    伝統的なインターフェースの命名法 ("eth0", "eth1", "wlan0", …) を
    使う代わりに、新しい systemd は "enp0s25" のような "予測可能なネ
    ットワークインターフェース名" を用います。

    警告
   
    本章は、2013年にリリースされた Debian 7.0 (Wheezy) に基づいている
    ため、内容が陳腐化しつつあります。

    ヒント

    本ドキュメントはネットワーク設定例にIPv4を用いて古い ifconfig(8)
    を使っていますが、Debian はwheezy リリースから IPv4+IPv6を用いて 
    ip(8) を使うように移行中です。本ドキュメント更新のパッチは歓迎で
    す。

    ヒント
   
    systemd の下では、networkd がネットワーク管理に使えます。
    systemd-networkd(8)y> を参照ください。

%

5.1. 基本的ネットワークインフラ

    現代的な Debian システムの基本的ネットワークインフラをレビューし
    ます。

    表5.1 GUI のネットワーク設定ツール

    +----------------------------------------------------------------+
    |     パッケージ      |ポプコ|サイ |    タイプ    |     説明     |
    |                     |  ン  | ズ  |              |              |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネットワークを|
    |                     |V:587,|     |              |接続したり切断|
    |ifupdown             |I:991 |217  |設定::ifupdown|したりする標準|
    |                     |      |     |              |化されたツール|
    |                     |      |     |              |(Debian 特定) |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:3,  |     |              |有線ネットワー|
    |ifplugd              |I:18  |217  |, ,           |クを自動的に管|
    |                     |      |     |              |理            |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |"ifupdown" パ |
    |                     |V:0,  |     |              |ッケージを強化|
    |ifupdown-extra       |I:1   |106  |, ,           |するネットワー|
    |                     |      |     |              |クテストスクリ|
    |                     |      |     |              |プト          |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネットワークイ|
    |ifmetric             |V:0,  |37   |, ,           |ンターフェース|
    |                     |I:1   |     |              |の経路メトリッ|
    |                     |      |     |              |ク設定        |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |"/etc/network/|
    |                     |      |     |              |interfaces" フ|
    |                     |V:0,  |     |              |ァイル経由で  |
    |guessnet             |I:0   |422  |, ,           |"ifupdown" パ |
    |                     |      |     |              |ッケージを補強|
    |                     |      |     |              |する mapping  |
    |                     |      |     |              |スクリプト    |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |"ifupdown" パ |
    |ifscheme             |V:0,  |59   |, ,           |ッケージを補強|
    |                     |I:0   |     |              |する mapping  |
    |                     |      |     |              |スクリプト    |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |NetworkManager|
    |network-manager      |V:358,|14957|設定::NM      |(デーモン): ネ|
    |                     |I:440 |     |              |ットワークを自|
    |                     |      |     |              |動管理        |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:132,|     |              |NetworkManager|
    |network-manager-gnome|I:372 |5540 |, ,           |(GNOME フロン |
    |                     |      |     |              |トエンド)     |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |有線と無線のネ|
    |wicd                 |I:24  |36(*)|設定::wicd    |ットワークマネ|
    |                     |      |     |              |ージャー (メタ|
    |                     |      |     |              |パッケージ)   |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |有線と無線のネ|
    |                     |V:0,  |     |              |ットワークマネ|
    |wicd-cli             |I:1   |60(*)|, ,           |ージャー (コマ|
    |                     |      |     |              |ンドラインクラ|
    |                     |      |     |              |イアント)     |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |有線と無線のネ|
    |                     |V:0,  |176  |              |ットワークマネ|
    |wicd-curses          |I:3   |(*)  |, ,           |ージャー      |
    |                     |      |     |              |(Curses クライ|
    |                     |      |     |              |アント)       |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |有線と無線のネ|
    |wicd-daemon          |V:19, |992  |, ,           |ットワークマネ|
    |                     |I:26  |(*)  |              |ージャー (デー|
    |                     |      |     |              |モン)         |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |有線と無線のネ|
    |wicd-gtk             |V:15, |576  |, ,           |ットワークマネ|
    |                     |I:25  |(*)  |              |ージャー (GTK+|
    |                     |      |     |              |クライアント) |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |パケットフィル|
    |iptables             |V:300,|2520 |設            |ターと NAT の |
    |                     |I:993 |     |定::Netfilter |ための管理ツー|
    |                     |      |     |              |ル (Netfilter)|
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |iproute2、IPv6|
    |                     |V:672,|     |              |や他の上級ネッ|
    |iproute2             |I:926 |2867 |設定::iproute2|トワーク設定: |
    |                     |      |     |              |ip(8) や tc(8)|
    |                     |      |     |              |等            |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |各種の静的クラ|
    |                     |      |     |              |イテリアに基づ|
    |                     |V:0,  |     |              |きネットワーク|
    |ifrename             |I:3   |125  |, ,           |インターフェー|
    |                     |      |     |              |スを改名しま  |
    |                     |      |     |              |す: ifrename  |
    |                     |      |     |              |(8)           |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:102,|     |              |Ethernet デバ |
    |ethtool              |I:261 |597  |, ,           |イス設定の表示|
    |                     |      |     |              |と変更        |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ホスト名か IP |
    |                     |      |     |              |アドレスによっ|
    |                     |V:234,|     |              |てリモートホス|
    |iputils-ping         |I:997 |113  |test::iproute2|トのネットワー|
    |                     |      |     |              |クからの到達性|
    |                     |      |     |              |をテスト (旧来|
    |                     |      |     |              |、GNU)        |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ARP アドレスに|
    |                     |      |     |              |よって特定され|
    |iputils-arping       |V:8,  |55   |, ,           |るリモートホス|
    |                     |I:127 |     |              |トのネットワー|
    |                     |      |     |              |クからの到達性|
    |                     |      |     |              |をテスト      |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:4,  |     |              |リモートホスト|
    |iputils-tracepath    |I:60  |72   |, ,           |へのネットワー|
    |                     |      |     |              |クパスを追跡  |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |NET-3 ネットワ|
    |                     |      |     |              |ーキングツール|
    |                     |V:234,|     |設            |キット        |
    |net-tools            |I:634 |991  |定::net-tools |(net-tools、  |
    |                     |      |     |              |IPv4 ネットワ |
    |                     |      |     |              |ーク設定):    |
    |                     |      |     |              |ifconfig(8) 等|
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ホスト名か IP |
    |                     |      |     |              |アドレスによっ|
    |                     |V:0,  |     |テス          |てリモートホス|
    |inetutils-ping       |I:1   |359  |ト::net-tools |トのネットワー|
    |                     |      |     |              |クからの到達性|
    |                     |      |     |              |をテスト (旧来|
    |                     |      |     |              |、GNU)        |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ARP アドレスに|
    |                     |      |     |              |よって特定され|
    |                     |V:2,  |     |              |るリモートホス|
    |arping               |I:29  |77   |, ,           |トのネットワー|
    |                     |      |     |              |クからの到達性|
    |                     |      |     |              |をテスト (旧  |
    |                     |      |     |              |来)           |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |リモートホスト|
    |                     |V:63, |     |              |へのネットワー|
    |traceroute           |I:936 |159  |, ,           |クパス追跡する|
    |                     |      |     |              |ツール (旧来、|
    |                     |      |     |              |コンソール)   |
    |---------------------+------+-----+--------------+--------------|
    |isc-dhcp-client      |V:231,|686  |設定::低レベル|DHCP クライア |
    |                     |I:979 |     |              |ント          |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |WPA と WPA2   |
    |wpasupplicant        |V:332,|3436 |, ,           |(IEEE 802.11i)|
    |                     |I:507 |     |              |のためのクライ|
    |                     |      |     |              |アントサポート|
    |---------------------+------+-----+--------------+--------------|
    |                     |V:0,  |     |              |wpa_supplicant|
    |wpagui               |I:2   |781  |, ,           |の Qt GUI クラ|
    |                     |      |     |              |イアント      |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:188,|     |              |Linux のワイア|
    |wireless-tools       |I:254 |297  |, ,           |レス拡張を操作|
    |                     |      |     |              |するツール    |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:206,|     |              |chat による   |
    |ppp                  |I:474 |1054 |, ,           |PPP/PPPoE コネ|
    |                     |      |     |              |クション      |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:0,  |     |              |PPPoE コネクシ|
    |pppoeconf            |I:8   |192  |設定::ヘルパー|ョンの設定ヘル|
    |                     |      |     |              |パー          |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |chat による   |
    |pppconfig            |V:1,  |801  |, ,           |PPP コネクショ|
    |                     |I:2   |     |              |ンの設定ヘルパ|
    |                     |      |     |              |ー            |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |wvdial と ppp |
    |wvdial               |V:0,  |249  |, ,           |による PPP コ |
    |                     |I:5   |     |              |ネクションの設|
    |                     |      |     |              |定ヘルパー    |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |リモートホスト|
    |                     |V:6,  |     |テスト::低レベ|へのネットワー|
    |mtr-tiny             |I:54  |161  |ル            |クパスを追跡す|
    |                     |      |     |              |るツール      |
    |                     |      |     |              |(curses)      |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |リモートホスト|
    |                     |      |     |              |へのネットワー|
    |mtr                  |V:4,  |214  |, ,           |クパスを追跡す|
    |                     |I:43  |     |              |るツール      |
    |                     |      |     |              |(curses と    |
    |                     |      |     |              |GTK+)         |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |共通のネットワ|
    |gnome-nettool        |V:2,  |2105 |, ,           |ーク情報操作の|
    |                     |I:45  |     |              |ためのツール  |
    |                     |      |     |              |(GNOME)       |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネットワークマ|
    |                     |V:31, |     |              |ッパー / ポー |
    |nmap                 |I:253 |4452 |, ,           |トスキャナー  |
    |                     |      |     |              |(Nmap、コンソ |
    |                     |      |     |              |ール)         |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネットワークマ|
    |zenmap               |V:2,  |2939 |, ,           |ッパー / ポー |
    |                     |I:9   |     |              |トスキャナー  |
    |                     |      |     |              |(GTK+)        |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネットワークト|
    |                     |V:19, |     |              |ラフィックアナ|
    |tcpdump              |I:204 |1329 |, ,           |ライザー      |
    |                     |      |     |              |(Tcpdump、コン|
    |                     |      |     |              |ソール)       |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネットワークト|
    |                     |      |     |              |ラフィックアナ|
    |wireshark            |I:55  |64   |, ,           |ライザー      |
    |                     |      |     |              |(Wireshark、  |
    |                     |      |     |              |GTK+)         |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネットワークト|
    |tshark               |V:3,  |407  |, ,           |ラフィックアナ|
    |                     |I:34  |     |              |ライザー (コン|
    |                     |      |     |              |ソール)       |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:0,  |     |              |tcpdump の出力|
    |tcptrace             |I:3   |401  |, ,           |から接続状況の|
    |                     |      |     |              |まとめを作成  |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:0,  |     |              |柔軟なネットワ|
    |snort                |I:1   |2206 |, ,           |ーク侵入検知シ|
    |                     |      |     |              |ステム (Snort)|
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネットワークの|
    |ntopng               |V:1,  |969  |, ,           |使用状況をウェ|
    |                     |I:2   |     |              |ッブブラウザー|
    |                     |      |     |              |で表示        |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |BIND によって |
    |                     |      |     |              |提供されるネッ|
    |                     |V:64, |     |              |トワーククライ|
    |dnsutils             |I:517 |256  |, ,           |アント:       |
    |                     |      |     |              |nslookup(8) と|
    |                     |      |     |              |nsupdate(8) と|
    |                     |      |     |              |dig(8)        |
    |---------------------+------+-----+--------------+--------------|
    |                     |      |     |              |ネームサーバー|
    |dlint                |V:0,  |53   |, ,           |の閲覧で DNS  |
    |                     |I:7   |     |              |のゾーン情報を|
    |                     |      |     |              |チェック      |
    |---------------------+------+-----+--------------+--------------|
    |                     |V:0,  |     |              |DNS サーバーを|
    |dnstracer            |I:2   |61   |, ,           |その源流まで追|
    |                     |      |     |              |跡            |
    +----------------------------------------------------------------+


%

5.1.1. ホスト名の解決

    ホスト名の解決もまた、現在 NSS (ネームサービススイッチ、Name
    Service Switch) メカニズムによってサポートされています。この解決
    の流れは次です。

     1. "hosts: files dns" のようなスタンザのある "/etc/
        nsswitch.conf" ファイルがホスト名の解消の順序を規定します。
        (これは、"/etc/host.conf" ファイル中の "order" スタンザの機能
        を置換します。)

     2. files メソッドが最初に発動されます。ホスト名が "/etc/hosts"
        ファイルに見つかると、それに対応する全ての有効アドレスを返し
        終了します。("/etc/host.conf" ファイルは "multi on" を含みま
        す。)

     3. dns メソッドが発動されます。"/etc/resolv.conf" ファイルで識別
        されるインターネットドメイン名システム (DNS) への問い合わせで
        ホスト名が見つかれば、それに関する全ての有効アドレスを返しま
        す。

    例えば、"/etc/hosts" は以下の内容です。

    127.0.0.1 localhost
    127.0.1.1 <host_name>

    # The following lines are desirable for IPv6 capable hosts
    ::1     ip6-localhost ip6-loopback
    fe00::0 ip6-localnet
    ff00::0 ip6-mcastprefix
    ff02::1 ip6-allnodes
    ff02::2 ip6-allrouters
    ff02::3 ip6-allhosts

    各行は IP アドレスで始まり、関連するホスト名がそれに続きます。

    本例の2行目の IP アドレス 127.0.1.1 は他の Unix 系システムでは見
    かけないかもしれません。bug #719621 に記録されているように、
    Debian インストーラーは恒久的 IP アドレスのないシステムのために一
    部ソフトウエアー (GNOME等) のための回避策としてこの項目を作成しま
    す。

    <host_name> は、"/etc/hostname" の中に定義されたホスト名と一致し
    ます。

    恒久的 IP アドレスを持つシステムでは 127.0.1.1 の代えてその恒久的
    IP アドレスがここにあるべきです。

    恒久的 IP アドレスと Domain 名システム (DNS)が提供する完全修飾ド
    メイン名 (FQDN) を持つシステムでは、その標準的な <host_name(ホス
    ト名)>.<domain_name(ドメイン名)> が <host_name(ホスト名)> のみに
    代えて使われるべきです。

    resolvconf パッケージがインストールされなかったら、"/etc/
    resolv.conf" は静的なファイルです。インストールされると、それはシ
    ンボリックリンクになります。いずれにせよ、解決機構を初期化する情
    報を含んでいます。もし DNS が IP="192.168.11.1" に見つかるなら、
    それは次の内容です。

    nameserver 192.168.11.1

    resolvconf パッケージはこの "/etc/resolv.conf" をシンボリックリン
    クにし、フックスクリプトで自動的にその内容を管理します。

    典型的 adhoc な LAN 環境にある PC ワークステーションの場合、基本
    的な files や dns 法に加えて Multicast DNS (mDNS, Zeroconf) 経由
    でホスト名を解決する事ができます。

      * Avahi は Debian で Multicast DNS サービスの探索の枠組みを提供
        します。

      * Apple Bonjour / Apple Rendezvous と同等です。

      * libnss-mdns プラグインパッケージが GNU C ライブラリー (glibc)
        の GNU Name Service Switch (NSS) 機能に mDNS 経由のホスト名解
        決を提供します。
   
      * "/etc/nsswitch.conf" ファイルには "hosts: files mdns4_minimal
        [NOTFOUND=return] dns mdns4" のようなスタンザがあるべきです。

      * ホスト名が ".local" で終わる擬似-top-level domain (TLD) が解
        決されます。

      * mDNS の IPv4 リンク-ローカルのマルチキャストアドレス
        "224.0.0.251" とか IPv6 でそれに相当する "FF02::FB" が
        ".local"　で終わる名前の DNS クエリーに用いられます。

    非推奨である NETBios over TCP/IP を使うホスト名解決は、winbind パ
    ッケージをインストールすると提供できます。このような機能を有効に
    するには、"/etc/nsswitch.conf" ファイル中に "hosts: files
    mdns4_minimal [NOTFOUND=return] dns mdns4 wins" のようなスタンザ
    が必要です。(最近の Windows システムは通常 dns メソッドをホスト名
    の解決に使います。)

    注記

    ドメイン名システムにおけるジェネリックトップレベルドメイン (gTLD)
    の拡張が進行中です。LAN内のみで使うドメイン名を選ぶ際に名前衝突に
    注意が必要です。

%

5.1.2. ネットワークインターフェース名

    Linux カーネル中の各ハードウエアーは、それが見つかり次第ユーザー
    空間の設定メカニズム udev (「udev システム」参照下さい) を通じて
    、例えば eth0 のようなネットワークインターフェース名が付与されま
    す。ネットワークインターフェース名は、ifup(8) と interfaces(5) の
    中で物理インターフェースと呼ばれています。

    MAC アドレス等を使って各リブート毎に永続性をもって各ネットワーク
    インターフェースが名付けられるようにするルールファイル "/etc/udev
    /rules.d/70-persistent-net.rules" があります。このファイルは
    "persistent-net-generator.rules" ルールファイルによって実行されて
    いるような "/lib/udev/write_net_rules" プログラムによって自動生成
    されます。そのファイルを変更することで命名ルールを変更できます。

    注意

    "/etc/udev/rules.d/70-persistent-net.rules" ルールファイルを編集
    する時は、各ルールを1行に納めて MAC アドレスに小文字を使わなけれ
    ばいけません。例えば、あなたがこのファイル中に "FireWire device"
    と "PCI device" を見つけたら、きっと "PCI device" をeth0 として第
    1番目のネットワークインターフェースとして設定したいでしょう。

%

5.1.3. LAN のためのネットワークアドレス範囲

    rfc1918 によってローカルエリアネットワーク (LAN) での使用に予約さ
    れている各クラス毎の IPv4 32ビットアドレス範囲を確認します。これ
    らのアドレスは本来のインターネット上のアドレスとかち合う事が無い
    ことが保証されています。

    表5.2 ネットワークアドレス範囲のリスト

    +---------------------------------------------------------------+
    |クラ|ネットワークアドレ|ネットマスク |ネットマスク /|サブネット|
    | ス |        ス        |             |    ビット    |   の数   |
    |----+------------------+-------------+--------------+----------|
    |A   |10.x.x.x          |255.0.0.0    |/8            |1         |
    |----+------------------+-------------+--------------+----------|
    |B   |172.16.x.x —      |255.255.0.0  |/16           |16        |
    |    |172.31.x.x        |             |              |          |
    |----+------------------+-------------+--------------+----------|
    |C   |192.168.0.x —     |255.255.255.0|/24           |256       |
    |    |192.168.255.x     |             |              |          |
    +---------------------------------------------------------------+


    注記

    これらのアドレス内の1つがホストに付与されている場合、そのホストは
    インターネットに直接アクセスせず、各サービスのプロキシとなるかネ
    ットワークアドレス変換 (NAT) をするゲートウエーを通してアクセスし
    なければいけません。ブロードバンドルーターは消費者 LAN 環境のため
    に通常 NAT を行います。

%

5.1.4. ネットワークデバイスサポート

    Debian システムによってほとんどのハードウエアーデバイスはサポート
    されていますが、一部のネットワークデバイスはそのサポートのために
    DFSG non-free のファームウエアーが必要です。「ハードウエアードラ
    イバーとファームウエアー」を参照下さい。

%

5.2. デスクトップのためのモダンネットワーク設定

    最近の systemd下の Debian デスクトップ環境では、ネットワークイン
    ターフェースは、lo が "networking.service" で、他のインターフェー
    スが "NetworkManager.service" で通常初期化されます。

    Debian の squeeze 以降のシステム上では、NetworkManager (NM)
    (network-manager と関連パッケージ) や Wicd (wicd と関連パッケー
    ジ) 等の管理デーモン経由でネットワーク接続の管理ができます。

      * それらには洒落た GUI やコマンドラインのユーザーインターフェー
        スとともに提供されます。

      * それらのバックエンドシステムとして、自前のデーモンとともに提
        供されます。

      * それらによりあなたのシステムをインターネットへ容易に接続でき
        ます。

      * それらによりインターネットへの有線や無線のネットワークの管理
        が容易にできます。

      * それらにより旧来の "ifupdown" パッケージと独立にネットワーク
        を設定できます。

    注記
   
    サーバーにはこの様な自動ネットワーク設定を使わないで下さい。これ
    らはラップトップ上のモービルデスクトップを主対象としています。

    これらの現代的なネットワーク設定ツールは旧来の "ifupdown" パッケ
    ージやその "/etc/network/interfaces" 設定ファイルとの競合を避ける
    ように適正に設定する必要があります。

    注記

    これらの自動ネットワーク設定ツール機能の一部は、リグレッションに
    あっているかもしれません。これらは旧来の ifupdown パッケージほど
    は堅牢ではありません。最新の問題や制約条件に関しては
    network-manager の BTS や wicd の BTS を参照下さい。

%

5.2.1. GUI のネットワーク設定ツール

    Debian 上での NM や Wicd に関する正式のドキュメンテーションは、"/
    usr/share/doc/network-manager/README.Debian" や "/usr/share/doc/
    wicd/README.Debian" によりそれぞれ提供されます。

    デスクトップのための現代的ネットワーク設定の要点は以下です。

     1. 次のようにして、例えば foo というデスクトップユーザーを
        "netdev" グループに属するようにします。(GNOME や KDE のような
        現代的デスクトップ環境の下では D-bus 経由でそれを自動的にする
        のも一つの方法です。)

        $ sudo adduser foo netdev

     2. "/etc/network/interfaces" の設定を次のようにできるだけ簡単に
        します。
   
        auto lo
        iface lo inet loopback

     3. 次のようにして NM や Wicd を再起動します。

        $ sudo /etc/init.d/network-manager restart

        $ sudo /etc/init.d/wicd restart

     4. GUI 経由でネットワークを設定します。

    注記

    ifupdown との干渉を避けるために、"/etc/network/interfaces" にリス
    トされてないインターフェースのみが NM もしくは Wicd によって管理
    されます。

    ヒント

    NM のネットワーク設定能力を拡張したい場合には、
    network-manager-openconnect や network-manager-openvpn-gnome や
    network-manager-pptp-gnome や mobile-broadband-provider-info や
    gnome-bluetooth 等の適正なプラグインモジュールや補足パッケージを
    探してください。Wicd の場合もまったく同様の方法で対処します。

    注意

    こういった自動ネットワーク設定は、「ifupdown を使った基本的なネッ
    トワーク設定 (旧来)」や「ifupdown を使う上級ネットワーク設定 (旧
    来)」のような "/etc/network/interfaces" への凝った旧来の ifupdown
    設定と互換性がないかも知れません。最新の問題や制約条件に関しては
    network-manager の BTS や wicd の BTS を参照下さい。

%

5.3. GUI無しのモダンネットワーク設定

    上記とは異なり、systemd の下では、ネットワークは /etc/systemd/
    network/ を使って設定されているかもしれません。systemd-resolved
    (8) や resolved.conf(5) や systemd-networkd(8) を参照ください。

    これによりGUI無しのモダンネットワーク設定ができます。

    DHCP クライアントの設定は "/etc/systemd/network/dhcp.network" を
    作成することで設定できます。例えば:

    [Match]
    Name=en*
   
    [Network]
    DHCP=yes

    静的ネットワーク設定は "/etc/systemd/network/static.network" を作
    成することで設定できます。例えば:

    [Match]
    Name=en*
   
    [Network]
    Address=192.168.0.15/24
    Gateway=192.168.0.1

%

5.4. 旧来のネットワーク接続や設定

    「デスクトップのためのモダンネットワーク設定」に記載された手法で
    はあなたの目的にとって不十分な場合には、多くの簡単なツールを組み
    合わせる旧来のネットワーク接続や設定を使うべきです。

    旧来のネットワーク接続は手法毎に特定です (「ネットワーク接続方法
    (旧来)」参照下さい)。

    Linux の低レベルネットワーク設定には2タイプのプログラムがあります
    (「Iproute2 コマンド」参照下さい)。

      * 旧式の net-tools プログラム (ifconfig(8)、…) は Linux NET-3
        ネットワークシステム由来です。これらの多くはすでに型遅れです
        。

      * 新規の Linux iproute2 プログラム (ip(8)、…) は現行の Linux の
        ネットワークシステムです。

    これらの低レベルのネットワークプログラムは強力ですが、使うのが面
    倒です。そこで高レベルのネットワーク設定プログラムが作られました
    。

    ifupdown パッケージは Debian 上のそのような高レベルネットワーク設
    定のデファクトスタンダードです。それを使うと、"ifup eth0" とする
    だけでネットワークを立ち上げることができます。その設定ファイルは
    、"/etc/network/interfaces" ファイルで、その典型的内容は次です。

    auto lo
    iface lo inet loopback
   
    auto eth0
    iface eth0 inet dhcp

    resolvconf パッケージは、ネットワークアドレス解決設定ファイル "/
    etc/resolv.conf" の書き変えを自動化してネットワークアドレス解決の
    円滑な再構成をサポートするために ifupdown システムを補完するため
    に作られました。現在、ほとんどの Debian のネットワーク設定パッケ
    ージは resolvconf パッケージを使うように変更されています ("/usr/
    share/doc/resolvconf/README.Debian"参照下さい)。

    ifplugd や guessnet や ifscheme 等の ifupdown パッケージの補助ス
    クリプトが有線 LAN 上の可動 PC のためのネットワーク環境設定のよう
    なネットワーク環境の動的設定を自動化するために作られました。これ
    らはちょっと使い難いですが、既存の ifupdown システムとは反りが合
    います。

    詳細に例示とともに説明します (「ifupdown を使った基本的なネットワ
    ーク設定 (旧来)」と「ifupdown を使う上級ネットワーク設定 (旧来)」
    参照下さい)。

%

5.5. ネットワーク接続方法 (旧来)

    注意

    本セクションで説明されている接続テスト方法はあくまでテスト目的の
    ためのものです。毎日のネットワーク接続のために使うためではありま
    せん NM か Wicd か ifupdown パッケージを通して使うことをお勧めし
    ます (「デスクトップのためのモダンネットワーク設定」と「ifupdown
    を使った基本的なネットワーク設定 (旧来)」参照下さい)。

    典型的なネットワーク接続方法と PC までの接続経路は次のようにまと
    められます。

    表5.3 典型的なネットワーク接続方法と接続経路のリスト

    +---------------------------------------------------------------+
    |      PC      |接続方法|               接続経路                |
    |--------------+--------+---------------------------------------|
    |シリアルポート|PPP     |⇔ モデム ⇔ POTS ⇔ ダイヤルアップアクセ |
    |(ppp0)        |        |スポイント ⇔ ISP                       |
    |--------------+--------+---------------------------------------|
    |イーサーネット|PPPoE/  |⇔ BB モデム ⇔ BB サービス ⇔ BB アクセス|
    |ポート (eth0) |DHCP/静 |ポイント ⇔ ISP                         |
    |              |的      |                                       |
    |--------------+--------+---------------------------------------|
    |イーサーネット|DHCP/静 |⇔ LAN ⇔ ネットワークアドレス変換 (NAT) |
    |ポート (eth0) |的      |機能のある BB ルーター (⇔ BB モデム …) |
    +---------------------------------------------------------------+


    各接続方法のための設定スクリプトのまとめて次に記します。

    表5.4 ネットワーク接続設定のリスト

    +---------------------------------------------------------------+
    |接続方法|             設定             |バックエンドパッケージ |
    |--------+------------------------------+-----------------------|
    |PPP     |pppconfig 決定論的 chat の作成|pppconfig と ppp       |
    |--------+------------------------------+-----------------------|
    |PPP (代 |wvdialconf はヒューリスティッ |ppp と wvdial          |
    |替)     |クのある chat の作成          |                       |
    |--------+------------------------------+-----------------------|
    |PPPoE   |pppoeconf 決定論的 chat の作成|pppoeconf と ppp       |
    |--------+------------------------------+-----------------------|
    |DHCP    |"/etc/dhcp/dhclient.conf" 中に|isc-dhcp-client        |
    |        |記述されています              |                       |
    |--------+------------------------------+-----------------------|
    |静的 IP |"/etc/network/interfaces" 中に|iproute もしくくは     |
    |(IPv4)  |記述されています              |net-tools (型遅れ)     |
    |--------+------------------------------+-----------------------|
    |静的 IP |"/etc/network/interfaces" 中に|iproute                |
    |(IPv6)  |記述されています              |                       |
    +---------------------------------------------------------------+


    ネットワーク接続の省略語は次の意味です。

    表5.5 ネットワーク接続の省略語のリスト

    +---------------------------------------------------------------+
    |省略語 |                         意味                          |
    |-------+-------------------------------------------------------|
    |POTS   |旧来型電話サービス                                     |
    |-------+-------------------------------------------------------|
    |BB     |ブロードバンド                                         |
    |-------+-------------------------------------------------------|
    |BB サー|例: デジタルサブスクラーバーライン (DSL) やケーブルテレ|
    |ビス   |ビや家庭向け光ファイバー (FTTP)                        |
    |-------+-------------------------------------------------------|
    |BB モデ|例: DSL モデムやケーブルモデムや光ファイバー端末 (ONT) |
    |ム     |                                                       |
    |-------+-------------------------------------------------------|
    |LAN    |ローカルエリアネットワーク                             |
    |-------+-------------------------------------------------------|
    |WAN    |広域ネットワーク                                       |
    |-------+-------------------------------------------------------|
    |DHCP   |動的ホスト設定プロトコル                               |
    |-------+-------------------------------------------------------|
    |PPP    |ポイント間接続プロトコル                               |
    |-------+-------------------------------------------------------|
    |PPPoE  |Ethernet 経由のポイント間接続プロトコル                |
    |-------+-------------------------------------------------------|
    |ISP    |インターネットサービス供給者                           |
    +---------------------------------------------------------------+


    注記

    ケーブル TV 経由の WAN 接続サービスは大体 DHCP か PPPoE でサービ
    スを受けます。ADSL と FTTP の接続サービスは大体 PPPoE でサービス
    を受けます。WAN 接続の正確な設定要件はあなたの ISP にご確認下さい
    。

    注記

    BB ルータが家庭内 LAN 環境を作るのに使われる時には、LAN 上の PC
    はネットワークアドレス変換 (NAT) をして BB ルーター経由で WAN に
    接続されます。そのような場合、LAN 上の PC のネットワークインター
    フェースは静的 IP か BB ルーターからの DHCP でサービスを受けます
    。BB ルーターはあなたの ISP による指示にしたがって WAN に接続され
    るよう設定しなければいけません。

%

5.5.1. イーサーネットを使っての DHCP 接続

    典型的な現代的な家庭内や小規模ビジネスネットワークの LAN は WAN
    (インターネット) に何らかの消費者向けブロードバンドルーターを使っ
    て接続されています。このルーターの後ろの LAN は通常ルーター上で稼
    働する動的ホスト設定プロトコル (DHCP) サーバーによりサービスを受
    けています。

    動的ホスト設定プロトコル (DHCP) サービスを受けるイーサーネットで
    は、isc-dhcp-client パッケージをインストールするだけです。

    dhclient.conf(5) を参照下さい。

%

5.5.2. イーサーネットを使っての静的 IP 接続

    静的 IP サービスを受けるイーサーネットでは、特段何をする必要もあ
    りません。

%

5.5.3. pppconfig を使っての PPP 接続

    設定スクリプト pppconfig はPPP 接続を次の選択をすることで対話式で
    設定します。

      * 電話番号

      * ISP でのユーザー名

      * ISP のパスワード
   
      * ポートの速度

      * モデム通信のポート

      * 認証方法

    表5.6 pppconfig を使っての PPP 接続のための設定ファイルのリスト

    +---------------------------------------------------------------+
    |    ファイル     |                    機能                     |
    |-----------------+---------------------------------------------|
    |/etc/ppp/peers/  |pppconfig によって生成された <isp_name> に特 |
    |<isp_name>       |定な pppd のための設定ファイル               |
    |-----------------+---------------------------------------------|
    |/etc/chatscripts/|pppconfig によって生成された <isp_name> に特 |
    |<isp_name>       |定な chat のための設定ファイル               |
    |-----------------+---------------------------------------------|
    |/etc/ppp/options |pppd のための一般的な実行パラメーター        |
    |-----------------+---------------------------------------------|
    |/etc/ppp/        |PAP のための認証データー (安全上問題あり)    |
    |pap-secret       |                                             |
    |-----------------+---------------------------------------------|
    |/etc/ppp/        |CHAP のための認証データー (比較的安全)       |
    |chap-secret      |                                             |
    +---------------------------------------------------------------+


    注意
   
    もし pon と poff コマンドが引数無しに起動された場合には、"
    <isp_name>" の値として "provider" が使われます。

    低レベルのネットワーク設定ツールを使って次に記すように設定の確認
    ができます。

    $ sudo pon <isp_name>
    ...
    $ sudo poff <isp_name>

    "/usr/share/doc/ppp/README.Debian.gz" を参照下さい。

%

5.5.4. wvdialconf を使った代替 PPP 接続

    pppd(8) を使う異なるアプローチは、wvdial パッケージが提供する 
    wvdial(1) からそれを実行することです。電話を掛け接続の交渉をする
    ために pppd がchat(8) を実行するのではなく、wvdial が電話を掛け接
    続の交渉をした後に pppd を始動し後を任せます。

    設定スクリプト wvdialconf は PPP 接続を次の選択をすることで対話式
    で設定します。

      * 電話番号

      * ISP でのユーザー名

      * ISP のパスワード

    ほとんどの場合 wvdial は接続をすることに成功し、自動的に認証デー
    ターのリストを管理します。

    表5.7 wvdialconf で PPP 接続する際の設定ファイルリスト

    +---------------------------------------------------------------+
    |    ファイル    |                     機能                     |
    |----------------+----------------------------------------------|
    |/etc/ppp/peers/ |wvdialconf がwvdial に合わせて生成した pppd の|
    |wvdial          |設定ファイル                                  |
    |----------------+----------------------------------------------|
    |/etc/wvdial.conf|wvdialconf が生成した設定ファイル             |
    |----------------+----------------------------------------------|
    |/etc/ppp/options|pppd のための一般的な実行パラメーター         |
    |----------------+----------------------------------------------|
    |/etc/ppp/       |PAP のための認証データー (安全上問題あり)     |
    |pap-secret      |                                              |
    |----------------+----------------------------------------------|
    |/etc/ppp/       |CHAP のための認証データー (比較的安全)        |
    |chap-secret     |                                              |
    +---------------------------------------------------------------+


    低レベルのネットワーク設定ツールを使って次に記すように設定の確認
    ができます。

    $ sudo wvdial
    ...
    $ sudo killall wvdial

    wvdial(1) と wvdial.conf(5) を参照下さい。

%

5.5.5. pppoeconf を使った PPPoE 接続

    あなたの ISP が PPPoE 接続を提供し、あなたの PC を直接 WAN に接続
    すると決めた際には、あなたの PC のネットワークは PPPoE で設定しな
    いといけません。PPPoE とはイーサーネット経由の PPP の意味です。設
    定スクリプト pppoeconf は PPPoE 接続を対話式で設定します。

    設定ファイルは以下。

    表5.8 pppoeconf を用いて PPPoE 接続する際の設定ファイルのリスト

    +---------------------------------------------------------------+
    |      ファイル      |                   機能                   |
    |--------------------+------------------------------------------|
    |/etc/ppp/peers/     |pppoeconf がpppoe に合わせて生成した pppd |
    |dsl-provider        |の設定ファイル                            |
    |--------------------+------------------------------------------|
    |/etc/ppp/options    |pppd のための一般的な実行パラメーター     |
    |--------------------+------------------------------------------|
    |/etc/ppp/pap-secret |PAP のための認証データー (安全上問題あり) |
    |--------------------+------------------------------------------|
    |/etc/ppp/chap-secret|CHAP のための認証データー (比較的安全)    |
    +---------------------------------------------------------------+


    低レベルのネットワーク設定ツールを使って次に記すように設定の確認
    ができます。

    $ sudo /sbin/ifconfig eth0 up
    $ sudo pon dsl-provider
    ...
    $ sudo poff dsl-provider
    $ sudo /sbin/ifconfig eth0 down

    "/usr/share/doc/pppoeconf/README.Debian" を参照下さい。

%

5.6. ifupdown を使った基本的なネットワーク設定 (旧来)

    Debian システム上の伝統的な TCP/IP ネットワークのセットアップは
    ifupdown パッケージをより高レベルのツールとして使います。2つの場
    合があります。

      * 可動 PC のような動的 IP システムの場合、TCP/IP ネットワークを
        resolvconf パッケージを使い設定し、容易にネットワーク設定を切
        り替えられるようにしましょう (「DHCP サービスを受けるネットワ
        ークインターフェース」参照下さい)。
   
      * サーバーのような静的 IP システムの場合、TCP/IP ネットワークを
        resolvconf パッケージを使うことなく設定し、システムを単純にし
        ましょう (「静的 IP を使うネットワークインターフェース」参照
        下さい)。

    このような伝統的設定方法は上級設定をしたい際に非常に有用です。以
    下を参照下さい。

    ifupdown パッケージは Debian システムでの高レベルネットワーク設定
    の標準化された枠組みを提供します。このセクションでは、簡略化され
    た紹介と多くの典型例で ifupdown を使った基本的なネットワーク設定
    を学びます。

%

5.6.1. 簡略化されたコマンドシンタックス

    ifupdown パッケージには2つのコマンドがあります: ifup(8) と ifdown
    (8)。設定ファイル "/etc/network/interfaces" により規定される高レ
    ベルのネットワーク設定を提供します。

    表5.9 ifupdown を使う基本的なネットワーク設定コマンドのリスト

    +---------------------------------------------------------------+
    |コマン|                       アクション                       |
    |  ド  |                                                        |
    |------+--------------------------------------------------------|
    |ifup  |"iface eth0" スタンザがあれば、ネットワークインターフェ |
    |eth0  |ース eth0 をネットワーク設定 eth0 で起動                |
    |------+--------------------------------------------------------|
    |ifdown|"iface eth0" スタンザがあれば、ネットワークインターフェ |
    |eth0  |ース eth0 に関するネットワーク設定 eth0 を終了し停止    |
    +---------------------------------------------------------------+


    警告
   
    up 状態にあるインターフェースを、ifconfig(8) や ip(8) コマンドの
    ような低レベル設定ツールを使って設定してはいけません。

    注記
   
    ifupdown というコマンドはありません。

%

5.6.2. "/etc/network/interfaces" の基本的なシンタックス

    "/etc/network/interfaces" のシンタックスは interfaces(5) に説明さ
    れていて、要点を次に記します。

    表5.10 "/etc/network/interfaces" のスタンザのリスト

    +---------------------------------------------------------------+
    |      スタンザ       |                  意味                   |
    |---------------------+-----------------------------------------|
    |"auto                |システム起動時にインターフェース         |
    |<interface_name>"    |<interface_name> を起動                  |
    |---------------------+-----------------------------------------|
    |"allow-auto          |, ,                                      |
    |<interface_name>"    |                                         |
    |---------------------+-----------------------------------------|
    |"allow-hotplug       |カーネルがインターフェースからのホットプ |
    |<interface_name>"    |ラグイベントを認知した際にインターフェー |
    |                     |ス <interface_name> を起動               |
    |---------------------+-----------------------------------------|
    |"iface <config_name> |ネットワーク設定 <config_name> を規定    |
    |…" によって始まる行  |                                         |
    |---------------------+-----------------------------------------|
    |"mapping             |<interface_name> に対応する <config_name>|
    |<interface_name_glob>|の mapping 値を規定                      |
    |" によって始まる行   |                                         |
    |---------------------+-----------------------------------------|
    |ハッシュ "#" で始まる|コメントして無視 (行末コメントは非サポー |
    |行                   |ト)                                      |
    |---------------------+-----------------------------------------|
    |バックスラシュ "\" で|設定を次行に継続                         |
    |終わる行             |                                         |
    +---------------------------------------------------------------+


    iface スタンザで始まる行は次のシンタクスです。

    iface <config_name> <address_family> <method_name>
     <option1> <value1>
     <option2> <value2>
     ...

    基本設定に関しては、mapping スタンザは使われませんし、ネットワー
    クインターフェース名をネットワーク設定名として使います (「mapping
    スタンザ」参照下さい)。

    警告
   
    "/etc/network/interfaces" のネットワークインターフェースに関する
    "iface" スタンザの重複定義をしてはいけません。

%

5.6.3. ループバックネットワークインターフェース

    "/etc/network/interfaces" ファイルに次の設定をすることでシステム
    ブート時にループバックネットワークインターフェース lo が起動され
    ます (auto スタンザ経由)。

    auto lo
    iface lo inet loopback

    この設定は、"/etc/network/interfaces" ファイル中にいつも存在しま
    す。

%

5.6.4. DHCP サービスを受けるネットワークインターフェース

    「イーサーネットを使っての DHCP 接続」によりシステムの準備をした
    後、DHCP によってサービスされるネットワークインターフェースは "/
    etc/network/interfaces" ファイルの中に次のような設定エントリーを
    設定します。

    allow-hotplug eth0
    iface eth0 inet dhcp

    Linux カーネルが物理インターフェース eth0 を認識した場合、
    allow-hotplug スタンザは ifup によりそのインターフェースが起動さ
    せられるようにし、iface スタンザが ifup がインターフェースが DHCP
    を使うように設定します。

%

5.6.5. 静的 IP を使うネットワークインターフェース

    静的 IP によってサービスされるネットワークインターフェースは "/
    etc/network/interfaces" ファイル中に例えば次の設定エントリーを作
    ることで設定されます。

    allow-hotplug eth0
    iface eth0 inet static
     address 192.168.11.100
     netmask 255.255.255.0
     gateway 192.168.11.1
     dns-domain example.com
     dns-nameservers 192.168.11.1

    Linux カーネルが物理インターフェース eth0 を認識した場合、
    allow-hotplug スタンザは ifup によりそのインターフェースが起動さ
    せられるようにし、iface スタンザが ifup がインターフェースが静的
    IP を使うように設定します。

    ここでは次を仮定しています。

      * LAN ネットワークの IP アドレス範囲: 192.168.11.0 -
        192.168.11.255

      * ゲートウエーの IP アドレス: 192.168.11.1

      * PC の IP アドレス: 192.168.11.100

      * resolvconf パッケージ: インストール済み

      * ドメイン名: "example.com"

      * DNS サーバーの IP アドレス: 192.168.11.1

    resolvconf パッケージがインストールされていないと、DNS 関係の設定
    は手動で "/etc/resolv.conf" を次のように編集する必要があります。

    nameserver 192.168.11.1
    domain example.com

    注意

    上記例で用いた IP アドレスはそのままコピーされるべきものではあり
    ません。IP 番号はあなたの実際のネットワーク設定に合わせなければい
    けません。

%

5.6.6. ワイアレス LAN インターフェースの基本

    ワイアレス LAN (省略すると WLAN) は IEEE 802.11 という標準群に基
    づく特別な免許なく使える無線を使う帯域拡散通信を経由の高速ワイア
    レス接続を提供します。

    WLAN インターフェースは通常の Ethernet インターフェースと非常に似
    ていますが、始動時にネットワーク ID と暗号キーデーターを必要とし
    ます。インターフェース名が使われるカーネルドライバーによって eth1
    や wlan0 や ath0 や wifi0 等とインターフェース名が少々異なる以外
    は、それらに使われる高レベルのネットワークツールは Ethernet イン
    ターフェースのものとまったく同じです。

    ヒント
   
    wmaster0 デバイスは、新規の Linux の mac80211 API による SoftMAC
    によってのみ使われる内部デバイスのマスターデバイスです。

    WLAN に関して留意すべきキーワードは次です。

    表5.11 WLAN の略語のリスト

    +---------------------------------------------------------------+
    |省略語|    元の言葉    |                 意味                  |
    |------+----------------+---------------------------------------|
    |      |                |802.11 以前の WaveLAN ネットワークによ |
    |NWID  |ネットワーク ID |って使われる16ビットネットワークID (非 |
    |      |                |常に非推奨)                            |
    |------+----------------+---------------------------------------|
    |(E)   |(拡張) サービス |802.11 ワイアレス LAN が統合されて連結 |
    |SSID  |セットアイデンテ|されてできるワイアレスアクセスポイント |
    |      |ィファイアー    |(APs) のネットワーク名、ドメイン ID    |
    |------+----------------+---------------------------------------|
    |WEP,  |有線等価プライバ|第1世代の、40ビットのキーを使う64ビット|
    |(WEP2)|シー            |(128ビット) のワイアレス暗号化標準 (非 |
    |      |                |推奨)                                  |
    |------+----------------+---------------------------------------|
    |      |Wi-Fi 保護アクセ|第2世代の、WEP との互換性のあるワイアレ|
    |WPA   |ス (Protected   |ス暗号化標準 (802.11i の殆ど)          |
    |      |Access)         |                                       |
    |------+----------------+---------------------------------------|
    |      |Wi-Fi 保護アクセ|第3世代の、WEP との互換性のないワイアレ|
    |WPA2  |ス 2 (Protected |ス暗号化標準 (完全に 802.11i)          |
    |      |Access 2)       |                                       |
    +---------------------------------------------------------------+


    実際のプロトコルの選択肢は採用しているワイアレスルーターによって
    普通制約されます。

%

5.6.7. WPA/WPA2を使うワイアレスLANインターフェース

    新規のWPA/WPA2を使うWLANをサポートするには、wpasupplicantパッケー
    ジをインストールする必要があります。

    WLAN 接続上の DHCP によってサービスされている IP の場合には、"/
    etc/network/interfaces" ファイルのエントリーは次のようです。

    allow-hotplug ath0
    iface ath0 inet dhcp
     wpa-ssid homezone
     # hexadecimal psk is encoded from a plaintext passphrase
     wpa-psk 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f

    "/usr/share/doc/wpasupplicant/README.modes.gz" を参照下さい。

%

5.6.8. WEP を使うワイアレス LAN インターフェース

    旧式の WEP を使う WLAN をサポートするには、wireless-tools パッケ
    ージをインストールする必要があります。(あなたの消費者用のルーター
    は今だにセキュアーでないインフラを使っているかもしれませんが、無
    いよりはましです。)

    注意
   
    WEP を使う WLAN 上のネットワークトラフィックは他人に覗かれている
    かも知れないことを覚えておいて下さい。

    WLAN 接続上の DHCP によってサービスされている IP の場合には、"/
    etc/network/interfaces" ファイルのエントリーは次のようです。

    allow-hotplug eth0
    iface eth0 inet dhcp
     wireless-essid Home
     wireless-key1 0123-4567-89ab-cdef
     wireless-key2 12345678
     wireless-key3 s:password
     wireless-defaultkey 2
     wireless-keymode open

    "/usr/share/doc/wireless-tools/README.Debian" を参照下さい。

%

5.6.9. PPP 接続

    以前説明したように PPP 接続を設定する必要があります (「pppconfig
    を使っての PPP 接続」参照下さい)。さらに、第1番目の PPP デバイス
    ppp0 のための "/etc/network/interfaces" ファイルのエントリーを次
    のように追加します。

    iface ppp0 inet ppp
     provider <isp_name>

%

5.6.10. 代替の PPP 接続

    以前説明したように wvdial を使う代替 PPP 接続をまず設定する必要が
    あります (「wvdialconf を使った代替 PPP 接続」参照下さい)。さらに
    、第1番目の PPP デバイス ppp0 のための "/etc/network/interfaces"
    ファイルのエントリーを次のように追加します。

    iface ppp0 inet wvdial

%

5.6.11. PPPoE 接続

    PPPoE によってサービスされる直接 WAN に接続した PC の場合、以前説
    明したように PPPoE 接続を設定する必要があります (「pppoeconf を使
    った PPPoE 接続」参照下さい)。さらに、第1番目の PPPoE デバイス
    eth0 のための "/etc/network/interfaces" ファイルのエントリーを次
    のように追加します。

    allow-hotplug eth0
    iface eth0 inet manual
     pre-up /sbin/ifconfig eth0 up
     up ifup ppp0=dsl
     down ifdown ppp0=dsl
     post-down /sbin/ifconfig eth0 down
    # The following is used internally only
    iface dsl inet ppp
     provider dsl-provider

%

5.6.12. ifupdown のネットワーク設定状態

    "/etc/network/run/ifstate" ファイルは、ifupdown パッケージが管理
    する全ての有効なネットワークインターフェースの意図したネットワー
    ク設定状態を記録します。残念ながら ifupdown が意図したにもかかわ
    らずインターフェースを起動できなかった場合でも、"/etc/network/run
    /ifstate" ファイルはインターフェースが起動されたと表示します。

    あるインターフェースに関する ifconfig(8) コマンド出力が次の例のよ
    うな行を欠いている場合、IPV4 ネットワークの一部としては使えません
    。

      inet addr:192.168.11.2  Bcast:192.168.11.255  Mask:255.255.255.0

    注記
   
    PPPoE に接続されているイーサーネットデバイスの場合、ifconfig(8)
    コマンドのアウトプットは上記例のような行を欠いています。

%

5.6.13. 基本ネットワーク設定

    例えば eth0 というインターフェースを再設定したい際には、まず "
    sudo ifdown eth0" コマンドを実行してそれを無効にしなければいけま
    せん。こうすることで eth0 のエントリーが "/etc/network/run/
    ifstate" ファイルから削除されます。(もし eth0 が有効でなかったり
    それにたいして過去に間違った設定がされている際には、こうするとエ
    ラーメッセージを発することになるかもしれません。シンプルな単一ユ
    ーザーのワークステーションではいつも問題なことは知る限り起こらな
    いようです。)

    こうすることで、必要に応じてネットワークインターフェース eth0 を
    自由に再設定するために "/etc/network/interfaces" の内容を自由に書
    き換えられます。

    こうした後で、eth0 を"sudo ifup eth0" コマンドを使って再起動でき
    ます。

    ヒント
   
    ネットワークインターフェースは、"sudo ifdown eth0;sudo ifup eth0"
    とすることで (再)初期化できます。

%

5.6.14. ifupdown-extra パッケージ

    ifupdown-extra パッケージは、ifupdown とともに使う使いやすいネッ
    トワーク接続テストを提供します。

      * network-test(1) コマンドはシェルから実行できます。
   
      * 自動スクリプトは各 ifup コマンド実行毎に実行されます。

    network-test コマンドをつかうことで面倒な低レベルコマンドを使って
    ネットワーク問題を分析する手間を省けます。

    自動スクリプトは "/etc/network/*/" にインストールされ、次の機能が
    あります。

      * ネットワークケーブルの接続の確認

      * IP アドレスの重複使用の確認

      * "/etc/network/routes" の定義に従った静的ルートの設定

      * ネットワークのゲートウエーが到達可能かの確認

      * 結果を "/var/log/syslog" ファイルに記録

    この syslog 記録はリモートシステムのネットワーク問題を管理する上
    で非常に有用です。

    ヒント

    ifupdown-extra パッケージの自動的な挙動は "/etc/default/
    network-test" によって設定可能です。これらの自動テストの一部は
    ARP からの返答を聞くのでシステムのブートプロセスを少々遅らせます
    。

%

5.7. ifupdown を使う上級ネットワーク設定 (旧来)

    ifupdown パッケージの機能は、上級知識を使うと「ifupdown を使った
    基本的なネットワーク設定 (旧来)」に書かれているよりも向上します。

    ここに記述されている機能は全く任意のものです。著者自身、怠け者で
    面倒な事が嫌いなために、ここに書かれたことを使うことは滅多にあり
    ません。

    注意

    「ifupdown を使った基本的なネットワーク設定 (旧来)」に書かれた情
    報でネットワーク接続をうまく設定できないのに、次の情報を使うと状
    況は更に悪くなります。

%

5.7.1. ifplugd パッケージ

    ifplugd パッケージはイーサーネット接続のみを管理する旧式の自動ネ
    ットワーク設定ツールです。これによって可動 PC 等のイーサーネット
    ケーブルの脱着問題を解決します。もし NetworkManager か Wicd (「デ
    スクトップのためのモダンネットワーク設定」参照下さい) がインスト
    ールされている場合は、このパッケージは必要ありません。

    このパッケージはデーモンとして実行され、auto とか allow-hotplug
    という機能 (表5.10「"/etc/network/interfaces" のスタンザのリスト
    」) を置き換え、インターフェースがネットワークに繋がれるとインタ
    ーフェースを起動します。

    例えば eth0 という内部イーサーネットポートに対する ifplugd パッケ
    ージの利用方法は次です。

     1. "/etc/network/interfaces" の中のスタンザを削除しましょう:
        "auto eth0" または "allow-hotplug eth0"、

     2. "/etc/network/interfaces" の中のスタンザを残しましょう:
        "iface eth0 inet …" と "mapping …"、
   
     3. ifplugd パッケージをインストールします。

     4. "sudo dpkg-reconfigure ifplugd" の実行します。

     5. eth0 を"ifplugd により監視される静的インターフェース" としま
        す。

    こうするとお望みどおりのネットワーク設定が機能します。

      * 電源投入もしくはハードウエアーの発見時に、インターフェースは
        自動的に起動されます。

          + 長い DHCP のタイムアウトを待つことのない迅速なブートプロ
            セス。

          + 適正な IPv4 アドレス無いまま起動された変なインターフェー
            スが無いこと (「ifupdown のネットワーク設定状態」参照下さ
            い)。

      * イーサーネットケーブルを発見時にインターフェースが起動されま
        す。

      * イーサーネットケーブルを外して少し経った時点でインターフェー
        スが自動的に停止されます。

      * イーサーネットケーブルを接続した時点でインターフェースが新規
        ネットワーク環境下で起動されます。

    ヒント
   
    ifplugd(8) コマンドの引数はインターフェースの再設定の遅延時間など
    の挙動を設定します。

%

5.7.2. ifmetric パッケージ

    ifmetric パッケージを使うと、DHCP でもルートのメトリクスを事後操
    作できます。

    次のようにすると eth0 インターフェースを wlan0 インターフェースよ
    り優先するように設定できます。

     1. ifmetric パッケージをインストールします。

     2. "/etc/network/interfaces" 中の "iface eth0 inet dhcp" 行のす
        ぐ下に "metric 0" というオプション行を追加します。

     3. "/etc/network/interfaces" 中の "iface wlan0 inet dhcp" 行のす
        ぐ下に "metric 1" というオプション行を追加します。

    メトリック0とは最高優先順位のルートでデフォールトのルートというこ
    とを意味します。大きなメトリック値は低い優先順位を意味します。最
    低のメトリック値をもつ有効なインターフェースの IP アドレスが発信
    源となるインターフェースになります。ifmetric(8) を参照下さい。

%

5.7.3. 仮想インターフェース

    物理的には単一のイーサーネットインターフェースは異なる IP アドレ
    スをもつ複数の仮想インターフェースとして設定できます。いくつかの
    IP サブネットワークにインターフェースを繋ぐのが通常こうする目的で
    す。例えば、単一ネットワークインターフェースを使った IP アドレス
    に基づく仮想ウェッブホスティングがその適用例です。

    例えば、次を仮定します。

      * あなたのホスト上の単一のイーサーネットインターフェースが (ブ
        ロードバンドルーターではなく) イーサーネットハブに接続されて
        います。

      * イーサーネットハブはインターネットと LAN ネットワークの両方に
        接続されています。
   
      * LAN ネットワークはサブネット 192.168.0.x/24 を使います。

      * あなたのホストはインターネットに関しては物理インターフェース
        eth0 を DHCP が提供する IP アドレスで使います。

      * あなたのホストは LAN に関しては仮想インターフェース eth0:0 を
        192.168.0.1 で使います。

    このとき "/etc/network/interfaces" 中の次のスタンザがあなたのネッ
    トワークを設定します。

    iface eth0 inet dhcp
     metric 0
    iface eth0:0 inet static
     address 192.168.0.1
     netmask 255.255.255.0
     network 192.168.0.0
     metric 1

    注意

    netfilter/iptables (「Netfilter インフラ」参照下さい) を使ってネ
    ットワークアドレス変換 (NAT) を使う上記設定例は単一インターフェー
    スを使って LAN に対して安価なルーターを提供しますが、そのような設
    定を使ったのでは真のファイアーウォール能力はありません。2つの物理
    インターフェースと NAT を使ってインターネットからローカルネットワ
    ークをセキュアーするべきです。

%

5.7.4. 上級コマンドシンタックス

    ifupdownパッケージはネットワーク設定名とネットワークインターフェ
    ース名を使って上級ネットワーク設定をできるようにします。わたしは 
    ifup(8) や interfaces(5) とは少々異なる用語法をここでは使っていま
    す。

    表5.12 ネットワークデバイスの用語法のリスト

    +---------------------------------------------------------------+
    |マンペー |            |この後の文中の用|                       |
    |ジの用語 |著者の用語法|       例       |         説明          |
    |   法    |            |                |                       |
    |---------+------------+----------------+-----------------------|
    |物理イン |ネットワーク|lo, eth0,       |Linux カーネルが (udev |
    |ターフェ |インターフェ|<interface_name>|メカニズムを利用して)  |
    |ース名   |ース名      |                |与えた名前             |
    |---------+------------+----------------+-----------------------|
    |論理イン |ネットワーク|config1,        |"/etc/network/         |
    |ターフェ |設定名      |config2,        |interfaces" 中で iface |
    |ース名   |            |<config_name>   |に続く名前のトークン   |
    +---------------------------------------------------------------+


    「簡略化されたコマンドシンタックス」中の基本的なネットワーク設定
    コマンドは、iface スタンザ中のネットワーク設定名のトークンと、"/
    etc/network/interfaces" 中のネットワークインターフェース名が一致
    している必要があります。

    上級ネットワーク設定コマンドは次のような "/etc/network/
    interfaces" の中で、ネットワーク設定名とネットワークインターフェ
    ース名を区別を可能にします。

    表5.13 ifupdown を使う上級ネットワーク設定コマンドのリスト

    +---------------------------------------------------------------+
    |  コマンド  |                    アクション                    |
    |------------+--------------------------------------------------|
    |ifup eth0=  |ネットワーク設定 config1 を使うネットワークインタ |
    |config1     |ーフェース eth0 を始動                            |
    |------------+--------------------------------------------------|
    |ifdown eth0=|ネットワーク設定 config1 を使うネットワークインタ |
    |config1     |ーフェース eth0 を停止                            |
    |------------+--------------------------------------------------|
    |ifup eth0   |mapping スタンザによって選ばれる設定を使ってネット|
    |            |ワークインターフェース eth0 を始動                |
    |------------+--------------------------------------------------|
    |ifdown eth0 |mapping スタンザによって選ばれる設定を使ってネット|
    |            |ワークインターフェース eth0 を停止                |
    +---------------------------------------------------------------+


%

5.7.5. mapping スタンザ

    「"/etc/network/interfaces" の基本的なシンタックス」では複雑にな
    るのを避けるために "/etc/network/interfaces" 中の mapping スタン
    ザを説明しませんでした。このスタンザには次のシンタクスがあります
    。

    mapping <interface_name_glob>
     script <script_name>
     map <script_input1>
     map <script_input2>
     map ...

    上記は、<script_name> で指定される mapping スクリプトで設定の選択
    を自動化することで "/etc/network/interfaces" に上級機能を付与しま
    す。

    次の実行を追いかけましょう。

    $ sudo ifup eth0

    "<interface_name_glob>" が"eth0" と一致する時に、この実行は自動的
    に eth0 を設定する次のコマンドの実行を引き起こします。

    $ sudo ifup eth0=$(echo -e '<script_input1> \n <script_input2> \n ...' | <script_name> eth0)

    ここで、"map" を含む行は任意で反復可です。

    注記
   
    mapping スタンザのグロッブはシェルのファイル名グロブのように機能
    します (「シェルグロブ」参照下さい)。

%

5.7.6. 手動切り替え可能なネットワーク設定

    「基本ネットワーク設定」でしたように "/etc/network/interfaces" フ
    ァイルを書き直すことなくいくつかのネットワーク設定間を手動で切り
    替える方法を次に示します。

    アクセスする必要のある全てのネットワーク設定のついて、"/etc/
    network/interfaces" ファイル中に次に示すような個別のスタンザを作
    ります。

    auto lo
    iface lo inet loopback

    iface config1 inet dhcp

    iface config2 inet static
     address 192.168.11.100
     netmask 255.255.255.0
     gateway 192.168.11.1
     dns-domain example.com
     dns-nameservers 192.168.11.1
   
    iface pppoe inet manual
     pre-up /sbin/ifconfig eth0 up
     up ifup ppp0=dsl
     down ifdown ppp0=dsl
     post-down /sbin/ifconfig eth0 down

    # The following is used internally only
    iface dsl inet ppp
     provider dsl-provider

    iface pots inet ppp
     provider provider

    iface の後にあるトークンのネットワーク設定名に、ネットワークイン
    ターフェース名のトークンを使っていないことに注目下さい。また、何
    らかのイベントの際にネットワークインターフェース eth0 を自動的に
    起動する auto スタンザも allow-hotplug スタンザもありません。

    さあ、ネットワーク設定を切り替える準備完了です。

    あなたの PC を DHCP が提供される LAN に移動します。次のようにして
    ネットワークインターフェース (物理インターフェース) eth0 にネット
    ワーク設定名 (論理インターフェース名) config1 を付与してそれを起
    動します。

    $ sudo ifup eth0=config1
    Password:
    ...

    インターフェース eth0 が起動され、DHCP で設定され、LAN に接続され
    ます。

    $ sudo ifdown eth0=config1
    ...

    インターフェース eth0 が停止され、LAN から切断されます。

    あなたの PC を静的 IP が提供される LAN に移動します。次のようにし
    てネットワークインターフェース (物理インターフェース) eth0 にネッ
    トワーク設定名 (論理インターフェース名) config2 を付与してそれを
    起動します。

    $ sudo ifup eth0=config2
    ...

    インターフェース eth0 が起動され、静的 IP で設定され、LAN に接続
    されます。dns-* で与えられる追加パラメーターが "/etc/resolv.conf"
    の内容を設定します。この "/etc/resolv.conf" はresolvconf パッケー
    ジがインストールされている方がうまく管理されます。

    $ sudo ifdown eth0=config2
    ...

    インターフェース eth0 が停止され、LAN から再度切断されます。

    あなたの PC を PPPoE が提供されているサービスに繋がっている BB モ
    デムのポートに移動します。次のようにしてネットワークインターフェ
    ース eth0 にネットワーク設定名 pppoe を付与してそれを起動します。

    $ sudo ifup eth0=pppoe
    ...

    インターフェース eth0 が起動され、ISP に直接接続された PPPoE で設
    定されます。

    $ sudo ifdown eth0=pppoe
    ...

    インターフェース eth0 が停止され再切断されます。

    あなたの PC を LAN や BB モデムのない POTS とモデムを使っている場
    所に移動します。次のようにしてネットワークインターフェース ppp0
    にネットワーク設定名 pots を付与してそれを起動します。

    $ sudo ifup ppp0=pots
    ...

    インターフェース ppp0 が起動され、PPP を使ってインターネットに接
    続されます。

    $ sudo ifdown ppp0=pots
    ...

    インターフェース ppp0 が停止され再切断されます。

    ifupdown システムのネットワーク設定状態の現状は "/etc/network/run
    /ifstate" ファイルの内容で確認します。

    警告
   
    複数のネットワークインターフェースがある場合には、eth* や ppp* 等
    の最後の数字を調整する必要があります。

%

5.7.7. ifupdown システムを使うスクリプト

    ifupdown システムはスクリプトに環境変数を引き渡して "/etc/network
    /*/" 中にインストールされたスクリプトを自動実行します。

    表5.14 ifupdown システムが引き渡す環境変数のリスト

    +---------------------------------------------------------------+
    |  環境変数  |                  引き渡す変数値                  |
    |------------+--------------------------------------------------|
    |"$IFACE"    |処理対象のインターフェースの物理名 (インターフェー|
    |            |ス名)                                             |
    |------------+--------------------------------------------------|
    |"$LOGICAL"  |処理対象のインターフェースの論理名 (設定名)       |
    |------------+--------------------------------------------------|
    |"$ADDRFAM"  |インターフェースの <address_family>               |
    |------------+--------------------------------------------------|
    |"$METHOD"   |インターフェースの <method_name> (例えば "static")|
    |------------+--------------------------------------------------|
    |"$MODE"     |ifup から実行されると "start"、ifdown から実行され|
    |            |ると "stop"                                       |
    |------------+--------------------------------------------------|
    |"$PHASE"    |"$MODE" と同じ、ただし pre-up と post-up と       |
    |            |pre-down と post-down 段階を詳細に区別            |
    |------------+--------------------------------------------------|
    |"$VERBOSITY"|"--verbose" 使用の指標; 使用されたら1、使用されな |
    |            |かったら0                                         |
    |------------+--------------------------------------------------|
    |"$PATH"     |コマンドサーチパス: "/usr/local/sbin:/usr/local/  |
    |            |bin:/usr/sbin:/usr/bin:/sbin:/bin"                |
    |------------+--------------------------------------------------|
    |"$IF_       |iface スタンザ下の対応するオプションの値          |
    |<OPTION>"   |                                                  |
    +---------------------------------------------------------------+


    各環境変数 "$IF_<OPTION>" は、対応する <option1> や <option2> オ
    プションの名前に "$IF_" を付け、大文字に変換し、ハイホンを下線に
    変換し、英数字文字以外を捨てて作成されます。

    ヒント

    <address_family> や <method_name> や <option1> や <option2> に関
    しては「"/etc/network/interfaces" の基本的なシンタックス」を参照
    下さい。

    ifupdown-extra パッケージ (「ifupdown-extra パッケージ」参照下さ
    い) はこのような環境変数を使って ifupdown パッケージの機能拡張を
    します。ifmetric パッケージ (「ifmetric パッケージ」参照下さい)
    は "$IF_METRIC" 変数を通してメトリック値を設定する "/etc/network/
    if-up.d/ifmetric" スクリプトをインストールします。ネットワーク設
    定の自動選択の簡単で強力な枠組みを提供している guessnet パッケー
    ジ (「guessnet を使う mapping」参照下さい) もまたこれらを使います
    。

    注記

    これらの環境変数を使うネットワーク設定スクリプトのより具体的な例
    に関しては、"/usr/share/doc/ifupdown/examples/*" 中の例示スクリプ
    トや ifscheme と ifupdown-scripts-zg2 パッケージで使われているス
    クリプトを確認して下さい。このような追加スクリプトは基本的な
    ifupdown-extra や guessnet パッケージと機能の重複があります。この
    ような追加スクリプトをインストールしたら、干渉しないようにこのよ
    うなスクリプトをカスタム化するべきです。

%

5.7.8. guessnet を使う mapping

    「手動切り替え可能なネットワーク設定」に記述されたように手動で設
    定選択する代わりに、「mapping スタンザ」に記述された mapping メカ
    ニズムをつかってカスタムスクリプトでネットワーク設定を自動的に選
    択できます。

    guessnet パッケージにより提供される guessnet-ifupdown(8) コマンド
    は mapping スクリプトとして使われるように設計されており、ifupdown
    システムを拡張する強力な枠組みを提供します。

      * iface スタンザの下の各ネットワーク設定毎に guessnet オプショ
        ンの値としてテスト条件をリストします。
   
      * mapping は最初のエラーを返さない iface をネットワーク設定とし
        て選択します。

    guessnet オプションは ifupdown システムにより実行されるスクリプト
    に追加の環境変数をエクスポートするだけなので、"/etc/network/
    interfaces" ファイルを mapping スクリプトと guessnet-ifupdown と
    オリジナルのネットワーク設定インフラである ifupdown とで重複して
    利用することで特に支障は起こりません。詳細は guessnet-ifupdown(8)
    を参照下さい。

    注記

    "/etc/network/interfaces" 中に複数の guessnet オプション行が必要
    な時には、オプション行の開始文字列重複を ifupdown パッケージは許
    さないので、guessnet1 や guessnet2 等で始まるオプション行を使いま
    す。

5.8. 低レベルネットワーク設定

%

5.8.1. Iproute2 コマンド

    Iproute2 コマンドは完全な低レベルネットワーク設定機能を提供します
    。型遅れとなった net-tools コマンドと新しい iproute2 コマンド等と
    の翻訳表を次に示します。

    表5.15 型遅れとなった net-tools コマンドと新しい iproute2 コマン
    ド等との翻訳表

    +---------------------------------------------------------------+
    |  型遅れの  |   新しい   |                操作                 |
    | net-tools  |iproute2 等 |                                     |
    |------------+------------+-------------------------------------|
    |ifconfig(8) |ip addr     |デバイスのプロトコル (IP または IPv6)|
    |            |            |アドレス                             |
    |------------+------------+-------------------------------------|
    |route(8)    |ip route    |ルーティングテーブル                 |
    |------------+------------+-------------------------------------|
    |arp(8)      |ip neigh    |ARP または NDISC キャッシュ項目      |
    |------------+------------+-------------------------------------|
    |ipmaddr     |ip maddr    |マルチキャストアドレス               |
    |------------+------------+-------------------------------------|
    |iptunnel    |ip tunnel   |IP 経由トンネル                      |
    |------------+------------+-------------------------------------|
    |nameif(8)   |ifrename(8) |MAC アドレスに基づきネットワークイン |
    |            |            |ターフェースを命名                   |
    |------------+------------+-------------------------------------|
    |mii-tool(8) |ethtool(8)  |イーサーネットデバイスの設定         |
    +---------------------------------------------------------------+


    ip(8) と IPROUTE2 Utility Suite Howto を参照下さい。

%

5.8.2. 安全な低レベルネットワーク操作

    次の低レベルネットワークコマンドは、ネットワーク設定を変更しない
    ので安全に使えます。

    表5.16 低レベルネットワークコマンドのリスト

    +---------------------------------------------------------------+
    |      コマンド      |                   説明                   |
    |--------------------+------------------------------------------|
    |ifconfig            |有効インターフェースのリンクとアドレスの状|
    |                    |態を表示                                  |
    |--------------------+------------------------------------------|
    |ip addr show        |有効インターフェースのリンクとアドレスの状|
    |                    |態を表示                                  |
    |--------------------+------------------------------------------|
    |route -n            |数字を使ったアドレスで全てのルーティングテ|
    |                    |ーブルを表示                              |
    |--------------------+------------------------------------------|
    |ip route show       |数字を使ったアドレスで全てのルーティングテ|
    |                    |ーブルを表示                              |
    |--------------------+------------------------------------------|
    |arp                 |ARP キャッシュテーブルの現状の内容を表示  |
    |--------------------+------------------------------------------|
    |ip neigh            |ARP キャッシュテーブルの現状の内容を表示  |
    |--------------------+------------------------------------------|
    |plog                |ppp デーモンのログを表示                  |
    |--------------------+------------------------------------------|
    |ping yahoo.com      |"yahoo.com" までのインターネット接続の確認|
    |--------------------+------------------------------------------|
    |whois yahoo.com     |ドメインデーターベースに "yahoo.com" を誰 |
    |                    |が登録したかを確認                        |
    |--------------------+------------------------------------------|
    |traceroute yahoo.com|"yahoo.com" までのインターネット接続の追跡|
    |--------------------+------------------------------------------|
    |tracepath yahoo.com |"yahoo.com" までのインターネット接続の追跡|
    |--------------------+------------------------------------------|
    |mtr yahoo.com       |"yahoo.com" までのインターネット接続の追跡|
    |                    |(繰り返し)                                |
    |--------------------+------------------------------------------|
    |dig                 |"example.com" のDNS レコードを            |
    |[@dns-server.com]   |"dns-server.com" で"a" か "mx" か "any" か|
    |example.com [{a|mx| |のレコードに関して確認します。            |
    |any}]               |                                          |
    |--------------------+------------------------------------------|
    |iptables -L -n      |パケットフィルターの確認                  |
    |--------------------+------------------------------------------|
    |netstat -a          |オープンポートの発見                      |
    |--------------------+------------------------------------------|
    |netstat -l --inet   |聴取中のポートの発見                      |
    |--------------------+------------------------------------------|
    |netstat -ln --tcp   |聴取中の TCP ポートの発見 (数字)          |
    |--------------------+------------------------------------------|
    |dlint example.com   |"examle.com" の DNS ゾーン情報を確認      |
    +---------------------------------------------------------------+


    ヒント

    これらの低レベルネットワーク設定ツールは "/sbin/" 中にあります。"
    /sbin/ifconfig" 等のような完全コマンドパスを使うか、 "~/.bashrc"
    中の "$PATH" リストに "/sbin" を追加する必要があるかもしれません
    。

%

5.9. ネットワークの最適化

    一般的なネットワークの最適化は本書の射程外です。ここでは消費者用
    の接続に関する課題にのみ触れます。

    表5.17 ネットワーク最適化ツールのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプコ |サイ|                  説明                  |
    |   ジ    |  ン   | ズ |                                        |
    |---------+-------+----+----------------------------------------|
    |iftop    |V:7,   |97  |ネットワークインターフェースの帯域利用情|
    |         |I:115  |    |報を表示                                |
    |---------+-------+----+----------------------------------------|
    |iperf    |V:4,   |263 |インターネットプロトコルのバンド幅測定ツ|
    |         |I:55   |    |ール                                    |
    |---------+-------+----+----------------------------------------|
    |ifstat   |V:0,   |60  |インターフェース統計モニター            |
    |         |I:8    |    |                                        |
    |---------+-------+----+----------------------------------------|
    |bmon     |V:1,   |146 |可搬型バンド幅モニター兼速度推定機      |
    |         |I:17   |    |                                        |
    |---------+-------+----+----------------------------------------|
    |ethstatus|V:0,   |40  |ネットワークデバイスのスループットを迅速|
    |         |I:5    |    |に測定するスクリプト                    |
    |---------+-------+----+----------------------------------------|
    |bing     |V:0,   |80  |経験則的確率バンド幅試験ソフト          |
    |         |I:1    |    |                                        |
    |---------+-------+----+----------------------------------------|
    |bwm-ng   |V:2,   |90  |簡単軽量のコンソール式のバンド幅モニター|
    |         |I:17   |    |                                        |
    |---------+-------+----+----------------------------------------|
    |ethstats |V:0,   |23  |コンソール式のイーサーネット統計モニター|
    |         |I:0    |    |                                        |
    |---------+-------+----+----------------------------------------|
    |ipfm     |V:0,   |78  |帯域分析ツール                          |
    |         |I:0    |    |                                        |
    +---------------------------------------------------------------+


%

5.9.1. 最適 MTU の発見

    最大送信単位 (MTU) 値は、ping(8) を"-M do" オプションとともに使っ
    て ICMP パケットをデーターサイズ 1500 (IP+ICMP ヘッダー分の28バイ
    トを加えて) から始めて IP フラグメンテーションしない最大サイズを
    見つけることで実験的に決定できます。

    例えば、次を試してみて下さい:

    $ ping -c 1 -s $((1500-28)) -M do www.debian.org
    PING www.debian.org (194.109.137.218) 1472(1500) bytes of data.
    From 192.168.11.2 icmp_seq=1 Frag needed and DF set (mtu = 1454)

    --- www.debian.org ping statistics ---
    0 packets transmitted, 0 received, +1 errors

    1500ではなく1452を試す

    ping(8) が1454で成功するのを確認します。

    このプロセスはパス MTU (PMTU) 発見 (RFC1191) で、tracepath(8) コ
    マンドで自動化できます。

    ヒント

    PMTU 値が1454となる上記例は Asynchronous Transfer Mode (ATM) をバ
    ックボーンネットワークとして使い顧客を PPPoE でサービスしていた
    FTTP プロバイダーの場合でした。実際の PMTU 値はあなたの環境に依存
    します。例えば私の新しい FTTP プロバイダーの場合は1500です。

    表5.18 最適 MTU 値の基本的なガイドライン

    +---------------------------------------------------------------+
    |   ネットワーク環境    |     MTU     |          理由           |
    |-----------------------+-------------+-------------------------|
    |ダイヤルアップ接続 (IP:|576          |標準                     |
    |PPP)                   |             |                         |
    |-----------------------+-------------+-------------------------|
    |イーサーネット接続 (IP:|1500         |標準かつデフォールト     |
    |DHCP または固定)       |             |                         |
    |-----------------------+-------------+-------------------------|
    |イーサーネット接続 (IP:|1492 (=      |PPP ヘッダーに2バイト、  |
    |PPPoE)                 |1500-8)      |PPPoE ヘッダーに6バイト、|
    |-----------------------+-------------+-------------------------|
    |イーサーネット接続 (ISP|1462 (=      |著者推定: イーサーネット |
    |のバックボーン: ATM、  |48*31-18-8)  |ヘッダーに18、SAR 末尾に8|
    |IP: DHCP または固定)   |             |                         |
    |-----------------------+-------------+-------------------------|
    |イーサーネット接続 (ISP|             |根拠は"Optimal MTU       |
    |のバックボーン: ATM、  |1454 (=      |configuration for PPPoE  |
    |IP: PPPoE)             |48*31-8-18-8)|ADSL Connections"参照下さ|
    |                       |             |い                       |
    +---------------------------------------------------------------+


    これらの基本的なガイドラインに加えて、次を覚えておきます。

      * 何らかのトンネル手法 (VPN等) を使うと、それらのオーバーヘッド
        のために最適 MTU を更に減らすかもしれません。

      * MTU 値は実験的に決定される PMTU 値を越すべきではありません。

      * もし他の制約条件を満たすなら、MTU 値は一般的に大きい方がいい
        です。

%

5.9.2. MTU の設定

    MTU 値をそのデフォールトの1500から1454に設定する例を次に示します
    。

    DHCP (「DHCP サービスを受けるネットワークインターフェース」参照下
    さい) の場合、"/etc/network/interfaces" 中の該当する iface スタン
    ザ行を次と交換する事ができます。

    iface eth0 inet dhcp
     pre-up /sbin/ifconfig $IFACE mtu 1454

    静的 IP (「静的 IP を使うネットワークインターフェース」参照下さ
    い) の場合、"/etc/network/interfaces" 中の該当する iface スタンザ
    行を次と交換する事ができます。

    iface eth0 inet static
     address 192.168.11.100
     netmask 255.255.255.0
     gateway 192.168.11.1
     mtu 1454
     dns-domain example.com
     dns-nameservers 192.168.11.1

    直接の PPPoE (「pppoeconf を使った PPPoE 接続」参照下さい) の場合
    、"/etc/ppp/peers/dsl-provider" 中の該当する "mtu" 行を次と交換す
    る事ができます。

    mtu 1454

    最大セグメントサイズ (MSS) はパケットサイズの代替尺度として使われ
    ます。MSS と MTU の関係は次です。

      * IPv4 ではMSS = MTU - 40
   
      * IPv6 ではMSS = MTU - 60

    注記

    iptables(8) (「Netfilter インフラ」参照下さい) を使う最適化は MSS
    を使ってパッケットサイズを制約できるのでルーターとして有用です。
    iptables(8) 中の "TCPMSS" を参照下さい。

%

5.9.3. WAN TCP の最適化

    現代的な高帯域でレイテンシーの大きな WAN では、TCP のスループット
    は TCP バッファーサイズパラメーターを "TCP Tuning Guide" や "TCP
    tuning" に書かれている手順で調整することで最大化できます。今のと
    ころ現在の Debian のデフォールトは高速の 1G bps の FTTP サービス
    でつながっている私の LAN でも十分機能しています。

%

5.10. Netfilter インフラ

    Netfilter はLinux カーネルのモジュール (「カーネルモジュール初期
    化」参照下さい) を利用するステートフルファイアーウォールとネット
    ワークアドレス変換 (NAT) のインフラを提供します。

    表5.19 ファイアーウォールツールのリスト

    +---------------------------------------------------------------+
    |  パッケージ   |ポプコ|サイ|               説明                |
    |               |  ン  | ズ |                                   |
    |---------------+------+----+-----------------------------------|
    |               |V:300,|    |netfilter の管理ツール(IPv4 用の   |
    |iptables       |I:993 |2520|iptables(8)、IPv6 用の ip6tables(8)|
    |               |      |    |)                                  |
    |---------------+------+----+-----------------------------------|
    |arptables      |V:0,  |96  |netfilter の管理ツール(ARP 用の    |
    |               |I:2   |    |arptables(8))                      |
    |---------------+------+----+-----------------------------------|
    |ebtables       |V:15, |265 |netfilter の管理ツール(Ethernet ブ |
    |               |I:39  |    |リッジング用の ebtables(8))        |
    |---------------+------+----+-----------------------------------|
    |iptstate       |V:0,  |116 |netfilter の状態を常時モニター (top|
    |               |I:3   |    |(1) と類似)                        |
    |---------------+------+----+-----------------------------------|
    |shorewall-init |V:0,  |68  |Shoreline ファイアーウォール初期化 |
    |               |I:0   |    |                                   |
    |---------------+------+----+-----------------------------------|
    |shorewall      |V:5,  |2458|Shoreline ファイアーウォール、     |
    |               |I:13  |    |netfilter 設定ファイル生成システム |
    |---------------+------+----+-----------------------------------|
    |               |V:0,  |    |Shoreline ファイアーウォール、     |
    |shorewall-lite |I:0   |65  |netfilter 設定ファイル生成システム |
    |               |      |    |(軽装備バージョン)                 |
    |---------------+------+----+-----------------------------------|
    |               |V:1,  |    |Shoreline ファイアーウォール、     |
    |shorewall6     |I:2   |779 |netfilter 設定ファイル生成システム |
    |               |      |    |(IPv6 バージョン)                  |
    |---------------+------+----+-----------------------------------|
    |               |V:0,  |    |Shoreline ファイアーウォール、     |
    |shorewall6-lite|I:0   |64  |netfilter 設定ファイル生成システム |
    |               |      |    |(IPv6 軽装備バージョン)            |
    +---------------------------------------------------------------+


    netfilter のユーザー空間の主プログラムは iptables(8) です。シェル
    から対話形式で手動で netfilter を設定し、その状態を iptables-save
    (8) で保存し、iptables-restore(8) を使って init スクリプト経由で
    システムのリブート時に回復できます。

    shorewall のような設定ヘルパースクリプトはこの過程を簡単にします
    。

    http://www.netfilter.org/documentation/ (または "/usr/share/doc/
    iptables/html/" 中) の文書を参照下さい。

      * Linux Networking-concepts HOWTO

      * Linux 2.4 Packet Filtering HOWTO

      * Linux 2.4 NAT HOWTO

    ヒント

    これらは Linux 2.4 のために書かれたとはいえ、iptables(8) コマンド
    も netfilter カーネル機能も現在の Linux 2.6 や 3.x カーネルシリー
    ズにもあてはまります。

第6章ネットワークアプリケーション

    ネットワーク接続を確立した (5章ネットワークの設定参照下さい) あと
    で、各種のネットワークアプリケーションを実行できます。

    ヒント

    最近の Debian に特化したネットワークインターフェースのガイドは、
    The Debian Administrator's Handbook — Network Infrastructure を参
    照ください。

    ヒント

    もしどこかの ISP で "2段階認証" を有効にした場合、あなたのプログ
    ラムから POP や SMTP サービスにアクセスするアプリケーションパスワ
    ードを入手する必要があります。事前にあなたのホスト IP を許可する
    必要があるかもしれません。

%

6.1. ウェッブブラウザー

    多くのウェッブブラウザーパッケージがハイパーテキストトランスファ
    ープロトコル (HTTP) を使って遠隔コンテントにアクセスするために存
    在します。

    表6.1 ウェッブブラウザーのリスト

    +---------------------------------------------------------------+
    |   パッケージ   |ポプコ|サイズ|タイ| ウェッブブラウザーの説明  |
    |                |  ン  |      | プ |                           |
    |----------------+------+------+----+---------------------------|
    |chromium        |V:51, |180040|X   |Chromium、(Google からのオ |
    |                |I:141 |      |    |ープンオースブラウザー)    |
    |----------------+------+------+----+---------------------------|
    |                |      |      |    |Firefox, (Mozilla からのオ |
    |firefox         |V:13, |205631|, , |ープンソースのブラウザー、 |
    |                |I:20  |      |    |Debian Unstable でのみ入手 |
    |                |      |      |    |可能)                      |
    |----------------+------+------+----+---------------------------|
    |firefox-esr     |V:217,|198436|, , |Firefox ESR, (Firefox 延長 |
    |                |I:437 |      |    |サポートリリース)          |
    |----------------+------+------+----+---------------------------|
    |epiphany-browser|V:4,  |3730  |, , |GNOME、HIG 準拠、Epiphany  |
    |                |I:24  |      |    |                           |
    |----------------+------+------+----+---------------------------|
    |konqueror       |V:18, |20763 |, , |KDE、Konqueror             |
    |                |I:100 |      |    |                           |
    |----------------+------+------+----+---------------------------|
    |dillo           |V:1,  |1536  |, , |Dillo, (軽量ブラウザー,    |
    |                |I:7   |      |    |FLTK 準拠)                 |
    |----------------+------+------+----+---------------------------|
    |w3m             |V:31, |2289  |テキ|w3m                        |
    |                |I:284 |      |スト|                           |
    |----------------+------+------+----+---------------------------|
    |lynx            |V:13, |1948  |, , |Lynx                       |
    |                |I:98  |      |    |                           |
    |----------------+------+------+----+---------------------------|
    |elinks          |V:6,  |1767  |, , |ELinks                     |
    |                |I:28  |      |    |                           |
    |----------------+------+------+----+---------------------------|
    |links           |V:6,  |2249  |, , |Links (テキストのみ)       |
    |                |I:39  |      |    |                           |
    |----------------+------+------+----+---------------------------|
    |                |V:1,  |      |グラ|Links (X を使わないコンソー|
    |links2          |I:15  |5417  |フィ|ルグラフィクス)            |
    |                |      |      |クス|                           |
    +---------------------------------------------------------------+


%

6.1.1. ブラウザー設定

    次に示す特別の URL 文字列を使うと一部のブラウザーでその設定値を確
    認する事ができます。

      * "about:"

      * "about:config"

      * "about:plugins"

    Debian は、Java (ソフトウエアープラットフォーム) や Flash のみな
    らず、MPEG や MPEG2 や MPEG4 や DivX や Windows Media Video
    (.wmv) や QuickTime (.mov) や MP3 (.mp3) や Ogg/Vorbis ファイルや
    DVDs や VCDs 等を取り扱えるブラウザーのプラグインコンポーネントを
    提供します。Debian では contrib や non-free アーカイブエリアに
    non-free のブラウザープラグインパッケージを提供しています。

    表6.2 ブラウザープラグインのリスト

    +---------------------------------------------------------------------+
    |              パッケージ              |ポプ|サイ|エリア |    説明    |
    |                                      |コン| ズ |       |            |
    |--------------------------------------+----+----+-------+------------|
    |                                      |    |    |       |Pepper Flash|
    |pepperflashplugin-nonfree             |V:1,|29  |contrib|Player -    |
    |                                      |I:21|    |       |browser     |
    |                                      |    |    |       |plugin      |
    |--------------------------------------+----+----+-------+------------|
    |                                      |    |    |       |PPAPI-host  |
    |browser-plugin-freshplayer-pepperflash|I:9 |1135|contrib|NPAPI-plugin|
    |                                      |    |    |       |adapter for |
    |                                      |    |    |       |pepperflash |
    +---------------------------------------------------------------------+


    ヒント

    上記の Debian パッケージを使うのが遥に簡単であるとはいえ、今でも
    ブラウザーのプラグインは "*.so" をプラグインディレクトリー (例え
    ば "/usr/lib/iceweasel/plugins/") 等にインストールしブラウザーを
    再起動することで手動で有効にすることができます。

    ウェッブサイトによっては使っているブラウザーのユーザーエージェン
    ト文字列によって接続を拒否します。こういう状況はユーザーエージェ
    ント文字列を偽装することで回避できます。例えば、これは次の内容を
    "~/.gnome2/epiphany/mozilla/epiphany/user.js" か "~/.mozilla/
    firefox/*.default/user.js" といったユーザー設定ファイル追加すれば
    できます。

    user_pref{"general.useragent.override","Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)"};

    こうする代わりに、URL に"about:config" を入力して表示画面内容を右
    クリックしてこの変数を追加や再設定することでもできます。

    注意
   
    偽装されたユーザーエージェント文字列は Java に対して良からぬ副次
    効果を引き起こすかもしれません。

%

6.2. メールシステム

    注意

    もしインターネットと直接メール交換するメールサーバーを設定するな
    ら、このような初歩的文書が不要なぐらいシステムを熟知しているべき
    です。

    メールシステムには複数のホスト上の多くのサーバープログラムやクラ
    イアントプログラムが含まれます。機能的にはメールエージェントには3
    タイプあります:

      * メール転送エージェント (MTA、「メールトランスポートエージェン
        ト (MTA)」参照) は異るホスト間でメールを転送するプログラムで
        す。

      * メール配送エージェント (MDA、「フィルター付きのメールデリバリ
        ーエージェント (MDA)」参照) はホスト内のユーザーのメールボッ
        クスにメッセージを配送するプログラム。

      * メールユーザーエージェント (MUA, 電子メールクライアントとも呼
        ばれます、「メールユーザーエージェント (MUA)」参照) はメッセ
        ージ作成と配送されたメッセージにアクセスをするプログラムです
        。

    注記
   
    以下の設定例は消費者用インターネット接続上の典型的モービルワーク
    ステーションにのみ有効です。

%

6.2.1. Eメールの基本

    email メッセージは、メッセージのエンベロープ(封筒)と、メッセージ
    のヘッダーと、メッセージの本体との、 3 構成要素から成り立っていま
    す。

    メッセージエンベロープ中の "To" (宛先)と "From" (差出人) 情報は
    SMTP が電子メールを配達するのに用いられます。(メッセージエンベロ
    ープの "From" 情報はバウンスアドレス、 From_、等とも呼ばれます。)

    メッセージヘッダー中の "To" (宛先)と "From" (差出人) 情報は email
    クライアントが email を表示するのに用いられます。(通常これらはメ
    ッセージエンベロープの情報と共通ですが、必ずしもそうとは限りませ
    ん。)

    電子メイルクライアントは、多目的インターネットメール拡張 (MIME)
    を持ちいてコンテントのデータータイプやエンコーディングを扱いメッ
    セージヘッダーやボディーのデーターを解釈する必要があります。

%

6.2.2. 近代的メールサービスの基礎

    スパム (望みも頼みもしない電子メール) 問題を封じ込めるために、多
    くの消費者用インターネット接続を提供する ISP は対抗措置を実施して
    います。

      * 彼らの顧客がメッセージを送信するためのスマートホストサービス
        は、rfc4954 で規定される (SMTP AUTH サービスの) パスワードを
        使い rfc4409 で規定されるメッセージサブミッションポート (587)
        を使います。

      * ISP のネットワーク内部 (但し ISP 自身の送信メールサーバーを除
        く) からの SMTP ポート (25) からインターネットへの接続はブロ
        ックされます。

      * 外部ネットワークの怪しげなホストから ISP の受信メールサーバー
        への SMTP ポート (25) 接続はブロックされます。(ダイヤルアップ
        接続等の消費者用インターネット接続に用いられる動的 IP アドレ
        ス範囲上のホストからの接続はほぼ確実にブロックされます。)

      * ドメインキー・アイデンティファイド・メール (DKIM) や SPF 認証
        やドメインベースのメッセージ認証、報告および適合 (DMARC) のよ
        うなアンチスパムテクニックが email のフィルタリングに広範に使
        用されています。

      * ドメインキー・アイデンティファイド・メールサービスがあなたの
        メールをスマートホスト経由で送信する際に提供されているかもし
        れません。

      * スマートホストはスマートホスト上のあなたのメールアドレスに送
        信元メールアドレスを書き換えるかもしれません。

    メールシステムを設定したりメール配達問題を解決する際には、こうし
    た新たな制約に配慮しなければいけません。

    注意
   
    リモートホストに確実にメールを直接送るために、消費者用インターネ
    ット接続上で SMTP サーバーを実行するのは現実的ではありません。

    注意

    無関係の複数の送信元メールアドレスのメールを、単一のスマートホス
    トを使って確実にリモートホストに送ることを期待するのは現実的では
    ありません。

    注意

    メールは送付先に到達する途中のどこかのホストによって黙って拒否さ
    れるでしょう。リモートホストに確実にメールを送る唯一の手段は、あ
    なたのメールを正真正銘のものであるように見せることです。

    このような敵意のあるインターネットの状況と制約を考慮して、
    Yahoo.com や Gmail.com 等の独立インターネットメール ISP はトラン
    スポートレイヤーセキュリティー (TLS) やその前駆者であるセキュアー
    ソケットレイヤー (SSL) を使ってインターネット上のどこからでも接続
    できるセキュアーなメールサービスを提供しています。

      * 非推奨となっているSSL経由のSMTP (SMTPS プロトコル) によるポー
        ト465を用いたスマートホストサービス。

      * STARTTLS を用い、ポート 587 で提供されるスマートホストサービ
        ス。

      * 受信メールには POP3 を使って TLS/POP3 ポート (995) でアクセス
        できます。

    話を簡単にするために、 "smtp.hostname.dom" にスマートホストがあり
    、SMTP 認証が必要で、 STARTTLS を使いメッセージサブミッションポー
    ト (587) を使うと、以下の話では仮定します。

%

6.2.3. ワークステーションのメール設定戦略

    最も簡単なメール設定は、MUA (「メールユーザーエージェント (MUA)」
    参照下さい) 自身が ISP のスマートホストにメールを送信し ISP の
    POP3 サーバーからメールを受信する設定です。この設定タイプは機能が
    充実した icedove(1) や evolution(1) 等の GUI の MUA でよく使われ
    ます。メールを種類毎にフィルターする必要がある際には MUA のフィル
    ター機能を使う必要があります。このような場合にはローカルの MTA (
    「メールトランスポートエージェント (MTA)」参照下さい) は(送信者と
    受信者が同一ホスト上にある時には)ローカル配送のみをする必要があり
    ます。

    Debian システムがマルチユーザーシステムであることに留意ください。
    あなたが唯一のユーザーでも多くのプログラムが root として実行され
    る多くのプログラムがあり、それらはあなたにメールを送るかもしれま
    せん。

    これに代わるメール設定は、ローカルの MTA 経由で ISP のスマートホ
    ストにメールを送信し ISP の POP3 サーバーからメール取得プログラム
    (「リモートメールの取得および転送ユーティリティー」参照下さい) に
    よってローカルのメイルボックスに受信する設定です。メールの種類毎
    にフィルターする必要がある場合には、フィルター付きの MDA (「フィ
    ルター付きのメールデリバリーエージェント (MDA)」参照下さい) を使
    って別々のメイルボックスにフィルターします。このタイプの設定は、
    どんな MUA で設定することができるのですが、単純な mutt(1) や mew
    (1) 等のコンソールの MUA (「メールユーザーエージェント (MUA)」参
    照下さい) でよく使われます。このような場合にはローカルの MTA (「
    メールトランスポートエージェント (MTA)」参照下さい) はスマートホ
    ストへの配送とローカル配送の両方をする必要があります。モービルワ
    ークステーションは有効な FQDN を持たないので、メール配送エラーを
    避けるように外部に出すメール中のローカルメール名を隠して偽装する
    ようにローカル MTA を設定します (「メールアドレス設定」参照下さ
    い)。

    ヒント
   
    Maildir を使いホームディレクトリー下のどこかに email のメッセージ
    を保存するように MUA/MDA を設定したいかもしれません。

%

6.3. メールトランスポートエージェント (MTA)

    普通のワークステーションでは、メールトランスポートエージェント
    (MTA) にexim4-* か postfix パッケージのどちらがよく選ばれます。こ
    の選択は全くあなた次第です。

    表6.3 ワークステーションでの基本的メールトランスポートエージェン
    ト関連パッケージのリスト

    +---------------------------------------------------------------+
    |    パッケージ    |ポプコ|サイ|              説明              |
    |                  |  ン  | ズ |                                |
    |------------------+------+----+--------------------------------|
    |                  |V:342,|    |Exim4 メールトランスポートエージ|
    |exim4-daemon-light|I:367 |1493|ェント (MTA: Debian のデフォール|
    |                  |      |    |ト)                             |
    |------------------+------+----+--------------------------------|
    |exim4-base        |V:349,|1704|Exim4 文書 (text) と共通ファイル|
    |                  |I:377 |    |                                |
    |------------------+------+----+--------------------------------|
    |exim4-doc-html    |I:1   |3662|Exim4 文書 (html)               |
    |------------------+------+----+--------------------------------|
    |exim4-doc-info    |I:1   |624 |Exim4 文書 (info)               |
    |------------------+------+----+--------------------------------|
    |                  |V:145,|    |Postfix メールトランスポートエー|
    |postfix           |I:160 |4182|ジェント (MTA: Debian の代替候  |
    |                  |      |    |補)                             |
    |------------------+------+----+--------------------------------|
    |postfix-doc       |I:9   |4444|Postfix 文書 (html+text)        |
    |------------------+------+----+--------------------------------|
    |sasl2-bin         |V:5,  |428 |Cyrus SASL API の実装 (SMTP AUTH|
    |                  |I:19  |    |について postfix を補完)        |
    |------------------+------+----+--------------------------------|
    |cyrus-sasl2-doc   |I:1   |575 |Cyrus SASL - 文書               |
    +---------------------------------------------------------------+


    ポプコンの投票数では exim4-* は postfix より何倍も人気があるよう
    ですが、postfix が Debian のデベロッパーに人気がないということで
    はありません。Debian のサーバーシステムは exim4 も postfix も使っ
    ています。目立つ Debian のデベロッパーからのメーリングリスト投稿
    メールのヘッダーの分析は、これら両方の MTA がともに人気があること
    を示唆しています。

    exim4-* パッケージは非常に小さなメモリー消費とその設定が非常にフ
    レキシブルであることで知られています。postfix パッケージは非常に
    コンパクトで高速で単純でセキュアーであることで知られています。両
    ソフトウエアーは十分な文書とともに提供され、品質とライセンスでも
    ともに良好です。

    Debian アーカイブ中には異なった能力と狙いを持ったメールトランスポ
    ートエージェント (MTA) パッケージに関して多くの選択肢があります。

    表6.4 Debian アーカイブ中のメールトランスポートエージェント (MTA)
    パッケージに関する選択肢リスト

    +---------------------------------------------------------------+
    |    パッケージ    |ポプコン |サイ |         能力と狙い         |
    |                  |         | ズ  |                            |
    |------------------+---------+-----+----------------------------|
    |exim4-daemon-light|V:342,   |1493 |高機能                      |
    |                  |I:367    |     |                            |
    |------------------+---------+-----+----------------------------|
    |postfix           |V:145,   |4182 |高機能 (セキュリティー)     |
    |                  |I:160    |     |                            |
    |------------------+---------+-----+----------------------------|
    |exim4-daemon-heavy|V:7, I:8 |1643 |高機能 (柔軟性)             |
    |------------------+---------+-----+----------------------------|
    |sendmail-bin      |V:14,    |1854 |高機能 (既に慣れている場合) |
    |                  |I:15     |     |                            |
    |------------------+---------+-----+----------------------------|
    |nullmailer        |V:7, I:10|479  |超軽量、ローカルメール無し  |
    |------------------+---------+-----+----------------------------|
    |ssmtp             |V:8, I:11|2    |超軽量、ローカルメール無し  |
    |------------------+---------+-----+----------------------------|
    |courier-mta       |V:0, I:0 |2416 |超高機能                    |
    |------------------+---------+-----+----------------------------|
    |masqmail          |V:0, I:0 |337  |軽量                        |
    |------------------+---------+-----+----------------------------|
    |esmtp             |V:0, I:0 |128  |軽量                        |
    |------------------+---------+-----+----------------------------|
    |esmtp-run         |V:0, I:0 |32   |軽量 (esmtp の sendmail 互換|
    |                  |         |     |性拡張)                     |
    |------------------+---------+-----+----------------------------|
    |msmtp             |V:5, I:10|547  |軽量                        |
    |------------------+---------+-----+----------------------------|
    |msmtp-mta         |V:3, I:4 |86   |軽量 (msmtp の sendmail 互換|
    |                  |         |     |性拡張)                     |
    +---------------------------------------------------------------+


%

6.3.1. exim4 設定

    注意

    exim4 を設定して複数の送信元メールアドレスに対応する複数のスマー
    トホストを経由してインターネットメールを送ることは簡単ではありま
    せん。popcon や cron 等のシステムプログラムために単一送信元アドレ
    スだけのために exim4 を設定し、mutt 等のようなユーザープログラム
    のために複数の送信元アドレスだけのために msmtp を設定しましょう。

    スマートホスト経由のインターネットメールに関しては、exim4-* パッ
    ケージを次のように (再)設定します。

    $ sudo /etc/init.d/exim4 stop
    $ sudo dpkg-reconfigure exim4-config

    "General type of mail configuration" に関して、"スマートホストで
    メール送信; SMTP または fetchmail で受信する" を選択します。

    "System mail name:" をそのデフォルトである FQDN (「ホスト名の解決
    」参照下さい) に設定します。

    "IP-addresses to listen on for incoming SMTP connections:" をその
    デフォルトである "127.0.0.1 ; ::1" と設定します。

    "Other destinations for which mail is accepted:" の内容を消去しま
    す。

    "Machines to relay mail for:" の内容を消去します。

    "送出スマートホストの IP アドレスまたはホスト名:" を
    "smtp.hostname.dom:587" と設定します。

    "Hide local mail name in outgoing mail?" に関して "<No>" を選択し
    ます。(この代わりに、「メールアドレス設定」にある "/etc/
    email-addresses" を使用します。)

    "DNS クエリの数を最小限に留めますか (ダイヤルオンデマンド)?" に次
    の内のひとつの返答をします。

      * 起動時にインターネットに接続されている場合は、"No" とします。
   
      * 起動時にインターネットに接続されていない場合は、"Yes" としま
        す。

    "Delivery method for local mail:" を"mbox format in /var/mail/"
    と設定します。

    "Split configuration into small files?:" に関して "<Yes>" を選択
    します。

    "/etc/exim4/passwd.client" を編集しスマートホストのためのパスワー
    ドエントリーを作成します。

    $ sudo vim /etc/exim4/passwd.client
     ...
    $ cat /etc/exim4/passwd.client
    ^smtp.*\.hostname\.dom:username@hostname.dom:password

    次のようにして exim4 を起動します。

    $ sudo /etc/init.d/exim4 start

    "/etc/exim4/passwd.client" 中のホスト名はエリアスであってはいけま
    せん。真のホスト名は次の様にして確認できます。

    $ host smtp.hostname.dom
    smtp.hostname.dom is an alias for smtp99.hostname.dom.
    smtp99.hostname.dom has address 123.234.123.89

    エリアス問題を回避するために "/etc/exim4/passwd.client" の中に正
    規表現を用いています。もし ISP がエリアスで示されるホストを移動さ
    せても SMTP AUTH がきっと動きます。

    次のようにすれば exim4 の設定を手動で更新できます。

      * "/etc/exim4/" 中の exim4 設定ファイルの更新。

          + MACRO を設定するために "/etc/exim4/
            exim4.conf.localmacros" を作成し、"/etc/exim4/
            exim4.conf.template" を編集します。(非分割設定)
   
          + "/etc/exim4/exim4.conf.d" サブディレクトリー中で、新規フ
            ァイルを作成したり既存ファイルを編集したりします。(分割設
            定)

      * "invoke-rc.d exim4 reload" を実行します。

    次に示す正式のガイドを読んで下さい: "/usr/share/doc/exim4-base/
    README.Debian.gz" と update-exim4.conf(8)。

    注意

    "DNS クエリの数を最小限に留めますか (ダイヤルオンデマンド)?" とい
    う debconf の質問に "No" (デフォールト値) が選ばれシステムがブー
    ト時にインターネットに繋がっていない場合、exim4 の起動は長い時間
    がかかります。

    警告
   
    たとえあなたの ISP が許可していても、暗号化なしに平文パスワードを
    用いることはセキュリティー上の問題があります。

    ヒント

    ポート 587 上で STARTTLS を用い SMTP を用いることが推奨されていま
    すが、未だに一部 ISP は非推奨の SMTPS (ポート 465 上の SSL)を用い
    ています。4.77 以降の Exim4 はこの非推奨の SMTPS プロトコルをクラ
    イアントとしてもサーバーとしてもサポートしています。

    ヒント

    あなたのラップトップ PC 用に "/etc/aliases" を尊重する軽量 MTA を
    探しているなら、exim4(8) の設定を "/etc/default/exim4" 中に
    "QUEUERUNNER='queueonly'" や "QUEUERUNNER='nodaemon'" 等と設定す
    る事を考慮するべきです。

%

6.3.2. SASL を使う postfix の設定

    スマートホスト経由のインターネットメールに関しては postfix 文書と
    重要マニュアルページを読むことから始めるべきです。

    表6.5 重要 postfix マニュアルページのリスト

    +---------------------------------------------------------+
    |  コマンド  |                    機能                    |
    |------------+--------------------------------------------|
    |postfix(1)  |Postfix コントロールプログラム              |
    |------------+--------------------------------------------|
    |postconf(1) |Postfix の設定ユーティリティー              |
    |------------+--------------------------------------------|
    |postconf(5) |Postfix 設定パラメーター                    |
    |------------+--------------------------------------------|
    |postmap(1)  |Postfix 検索テーブルのメンテナンス          |
    |------------+--------------------------------------------|
    |postalias(1)|Postfix エリアスデーターベースのメンテナンス|
    +---------------------------------------------------------+


    postfix と sasl2-bin パッケージを次のように (再)設定します。

    $ sudo /etc/init.d/postfix stop
    $ sudo dpkg-reconfigure postfix

    "スマートホストを使ってインターネット" を選択します。

    "SMTP リレーホスト (なければ空):" を "[smtp.hostname.dom]:587" と
    設定します。

    $ sudo postconf -e 'smtp_sender_dependent_authentication = yes'
    $ sudo postconf -e 'smtp_sasl_auth_enable = yes'
    $ sudo postconf -e 'smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd'
    $ sudo postconf -e 'smtp_sasl_type = cyrus'
    $ sudo vim /etc/postfix/sasl_passwd

    スマートホストのパスワードエントリーを作成します。

    $ cat /etc/postfix/sasl_passwd
    [smtp.hostname.dom]:587     username:password
    $ sudo postmap hush:/etc/postfix/sasl_passwd

    次に記すように postfix を起動します。

    $ sudo /etc/init.d/postfix start

    dpkg-reconfigure ダイアログと "/etc/postfix/sasl_passwd" の中で "
    [" と "]" を使うことで MX レコードを確認せずに指定された hostname
    その物を直接使うように確実にします。"/usr/share/doc/postfix/html/
    SASL_README.html" の中の "Enabling SASL authentication in the
    Postfix SMTP client" を参照下さい。

%

6.3.3. メールアドレス設定

    メールのトランスポートとデリバリーとユーザーのエージェントが使う
    メールアドレス設定ファイルが少々存在します。

    表6.6 メールアドレス関連のファイルのリスト

    +---------------------------------------------------------------+
    |   ファイル    |        機能         |    アプリケーション     |
    |---------------+---------------------+-------------------------|
    |/etc/mailname  |(送出)メールのデフォ |Debian 固有、mailname(5) |
    |               |ールトのホスト名     |                         |
    |---------------+---------------------+-------------------------|
    |/etc/          |送出メールのホスト名 |exim(8) 固有、           |
    |email-addresses|の偽装               |exim4-config_files(5)    |
    |---------------+---------------------+-------------------------|
    |/etc/postfix/  |送出メールのホスト名 |postfix(1) 固有、postmap |
    |generic        |の偽装               |(1) コマンド実行後有効。 |
    |---------------+---------------------+-------------------------|
    |/etc/aliases   |受入メールのためのア |一般的、newaliases(1) コ |
    |               |カウント名のエリアス |マンド実行後有効。       |
    +---------------------------------------------------------------+


    通常 "/etc/mailname" ファイル中の mailname はホストの IP の一つと
    して解決できる完全修飾ドメイン名 (FQDN) です。解決できる IP アド
    レスのあるホスト名を持たない可動ワークステーションの場合には、こ
    の mailname を "hostname -f" に設定します。(これは exim4-* と
    postfix の両方に有効な安全な選択肢です。)

    ヒント

    "/etc/mailname" の内容は多くの MTA 以外のプログラムによってそのデ
    フォールト挙動のために使われます。mutt の場合、~/muttrc ファイル
    中の "hostname" と "from" 変数を設定して mailname の値をオーバー
    ライドします。bts(1) や dch(1) 等の devscripts パッケージ中のプロ
    グラムの場合、環境変数の "$DEBFULLNAME" や "$DEBEMAIL" をエキスポ
    ートしてその値をオーバーライドします。

    ヒント

    通常 popularity-contest パッケージは root アカウントからメールを
    FQDN 付きで送信します。/usr/share/popularity-contest/default.conf
    に記載された様に /etc/popularity-contest.conf 中に MAILFROM を設
    定する必要があります。こうしないと、smarthost の SMTP サーバーに
    よってあなたのメールは拒否されます。少々面倒ですが、root からの全
    メールの発信元を書き替えるより、この方法は安全ですし、他のデーモ
    ンや cron スクリプトに関してもこの方法を適用するべきです。

    mailname を"hostname -f" と設定した時には、次によって MTA で発信
    元メールアドレスを偽装することが実現できます。

      * exim4(8) の場合、exim4-config_files(5) に説明されているように
        "/etc/email-addresses"
   
      * postfix(1) の場合、generic(5) に説明されているように "/etc/
        postfix/generic"

    postfix の場合、次に記す追加ステップが必要です。

    # postmap hash:/etc/postfix/generic
    # postconf -e 'smtp_generic_maps = hash:/etc/postfix/generic'
    # postfix reload

    あなたのメール設定は次のようにするとテストできます。

      * exim(8) の場合、-brw, -bf, -bF, -bV, … オプションを使用
   
      * postmap(1) の場合、-q オプションを使用

    ヒント

    Exim はexiqgrep(8) や exipick(8) のようないくつかのユーティリティ
    ープログラムとともに供給されます。利用可能なコマンドは "dpkg -L
    exim4-base|grep man8/" を参照下さい。

%

6.3.4. 基本的な MTA の操作

    基本的な MTA 操作が存在します。その一部は sendmail(1) 互換性イン
    ターフェース経由で実行する事もできます。

    表6.7 基本的 MTA 操作のリスト

    +---------------------------------------------------------------+
    |exim コマン|   postfix コマンド   |            説明            |
    |    ド     |                      |                            |
    |-----------+----------------------+----------------------------|
    |sendmail   |sendmail              |標準入力からメールを読み配送|
    |           |                      |を手配 (-bm)                |
    |-----------+----------------------+----------------------------|
    |mailq      |mailq                 |メールキューを状態とキュー  |
    |           |                      |ID とともにリスト (-bp)     |
    |-----------+----------------------+----------------------------|
    |newaliases |newaliases            |エリアスデーターベースを初期|
    |           |                      |化 (-I)                     |
    |-----------+----------------------+----------------------------|
    |exim4 -q   |postqueue -f          |待機メールを排出 (-q)       |
    |-----------+----------------------+----------------------------|
    |exim4 -qf  |postsuper -r ALL      |全メールを排出              |
    |           |deferred; postqueue -f|                            |
    |-----------+----------------------+----------------------------|
    |exim4 -qff |postsuper -r ALL;     |凍結メールをも排出          |
    |           |postqueue -f          |                            |
    |-----------+----------------------+----------------------------|
    |exim4 -Mg  |postsuper -h queue_id |キュー ID によってメッセージ|
    |queue_id   |                      |を凍結                      |
    |-----------+----------------------+----------------------------|
    |exim4 -Mrm |postsuper -d queue_id |キュー ID によってメッセージ|
    |queue_id   |                      |を削除                      |
    |-----------+----------------------+----------------------------|
    |N/A        |postsuper -d ALL      |全メッセージを削除          |
    +---------------------------------------------------------------+


    ヒント
   
    "/etc/ppp/ip-up.d/*" 中のスクリプトで全メールを排出するのは良い考
    えかも知れません。

%

6.4. メールユーザーエージェント (MUA)

    Debian 関連のメーリングリストを購読する場合、参加者のデファクトス
    タンダードで期待通り挙動をする mutt や mew 等の MUA を使うのは良
    い考えかも知れません。

    表6.8 メールユーザーエージェント (MUA) のリスト

    +---------------------------------------------------------------+
    |パッケージ |ポプコ|サイズ|               タイプ                |
    |           |  ン  |      |                                     |
    |-----------+------+------+-------------------------------------|
    |evolution  |V:31, |475   |X GUI プログラム (GNOME3、グループウ |
    |           |I:229 |      |エアスイート)                        |
    |-----------+------+------+-------------------------------------|
    |thunderbird|V:57, |165180|X GUI プログラム (GNOME2、ブランドを |
    |           |I:138 |      |外した Mozilla Thunderbird)          |
    |-----------+------+------+-------------------------------------|
    |kmail      |V:34, |18011 |X GUI プログラム (KDE)               |
    |           |I:88  |      |                                     |
    |-----------+------+------+-------------------------------------|
    |mutt       |V:37, |7056  |きっと vim とともに使われるキャラクタ|
    |           |I:313 |      |ーターミナルプログラム               |
    |-----------+------+------+-------------------------------------|
    |mew        |V:0,  |2325  |(x)emacs の下でキャラクターターミナル|
    |           |I:0   |      |プログラム                           |
    +---------------------------------------------------------------+


%

6.4.1. 基本 MUA — Mutt

    vim と組み合わせて mutt をメールユーザーエージェント (MUA) として
    使うように "~/.muttrc" を使って次に示すようにカスタム化します。

    #
    # User configuration file to override /etc/Muttrc
    #
    # spoof source mail address
    set use_from
    set hostname=example.dom
    set from="Name Surname <username@example.dom>"
    set signature="~/.signature"

    # vim: "gq" to reformat quotes
    set editor="vim -c 'set tw=72 et ft=mail'"

    # "mutt" goes to Inbox, while "mutt -y" lists mailboxes
    set mbox_type=Maildir           # use qmail Maildir format for creating mbox
    set mbox=~/Mail                 # keep all mail boxes in $HOME/Mail/
    set spoolfile=+Inbox            # mail delivered to $HOME/Mail/Inbox
    set record=+Outbox              # save fcc mail to $HOME/Mail/Outbox
    set postponed=+Postponed        # keep postponed in $HOME/Mail/postponed
    set move=no                     # do not move Inbox items to mbox
    set quit=ask-yes                # do not quit by "q" only
    set delete=yes                  # always delete w/o asking while exiting
    set fcc_clear                   # store fcc as non encrypted

    # Mailboxes in Maildir (automatic update)
    mailboxes `cd ~/Mail; /bin/ls -1|sed -e 's/^/+/' | tr "\n" " "`
    unmailboxes Maillog *.ev-summary

    ## Default
    #set index_format="%4C %Z %{%b %d} %-15.15L (%4l) %s"
    ## Thread index with senders (collapse)
    set index_format="%4C %Z %{%b %d} %-15.15n %?M?(#%03M)&(%4l)? %s"

    ## Default
    #set folder_format="%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f"
    ## just folder names
    set folder_format="%2C %t %N %f"

    HTML メールや MS ワードのインラインのアッタチメントを表示するよう
    に、"/etc/mailcap" か "~/.mailcap" に次に記す内容を追加します。

    text/html; lynx -force_html %s; needsterminal;
    application/msword; /usr/bin/antiword '%s'; copiousoutput; description="Microsoft Word Text"; nametemplate=%s.doc

    ヒント

    Mutt はIMAP クライアントやメールボックス様式変換機として使えます
    。メッセージを "t" や "T" 他でタグできます。こうしてタグされたメ
    ッセージは ";C" を使う異なるメールボックス間の移動や ";d" を使う
    消去で一括処理できます。

%

6.4.2. 上級 MUA — Mutt + msmtp

    Mutt は msmtp を使うと複数の送信元メールアドレスに対応するスマー
    トホストを使って複数の送信元メールアドレスを使うように設定できま
    す。

    ヒント

    Msmtp は /usr/sbin/sendmail コマンドを提供する他の sendmail のエ
    ミュレーターと共存してインストールできる sendmail のエミュレータ
    ーです。だからシステムのメールを exim4 や postfix のままにできま
    す。

    例として3つのemailアドレスをサポートすることを考えましょう。

      * "My Name1 <myaccount1@gmail.com>"

      * "My Name2 <myaccount2@gmail.com>"

      * "My Name3 <myaccount3@example.org>"

    3つの異なる送信元メールアドレスのための3つのスマートホストをサポ
    ートするカスタム化 ~/.muttrc 例を以下に示します。

    set use_from
    set from="My Name3 <myaccount3@example.org>"
    set reverse_name
    alternates myaccount1@gmail\.com|myaccount1@gmail\.com|myaccount3@example\.org

    # ...

    # MACRO
    macro compose "1" "<edit-from>^UMy Name1 \<myaccount1@gmail.com\>\n"
    macro compose "2" "<edit-from>^UMy Name2 \<myaccount2@gmail.com\>\n"
    macro compose "3" "<edit-from>^UMy Name3 \<myaccount3@example.org\>\n"

    send2-hook '~f myaccount1@gmail.com' "set sendmail = '/usr/bin/msmtp --read-envelope-from'"
    send2-hook '~f myaccount2@gmail.com' "set sendmail = '/usr/bin/msmtp --read-envelope-from'"
    send2-hook '~f myaccount3@example.org' "set sendmail = '/usr/bin/msmtp --read-envelope-from'"

    # ...

    msmtp-gnome をインストールして ~/.msmtprc を以下のように設定しま
    しょう。

    defaults
    logfile ~/.msmtp.log
    domain myhostname.example.org
    tls on
    tls_starttls on
    tls_certcheck on
    tls_trust_file /etc/ssl/certs/ca-certificates.crt
    auth on
    port 587
    auto_from

    account myaccount1@gmail.com
    host smtp.gmail.com
    from  myaccount1@gmail.com
    user  myaccount1@gmail.com

    account myaccount2@gmail.com
    host smtp.gmail.com
    from  myaccount2@gmail.com
    user  myaccount2@gmail.com

    account myaccount3@example.org
    host mail.example.org
    from  myaccount3@example.org
    user  myaccount3@example.org

    account default : myaccount3@example.org

    そして、 Gnome キーリングにパスワードデーターを加えましょう。例え
    ば:

     $ secret-tool store --label=msmtp \
         host smtp.gmail.com \
         service smtp \
         user myaccount1@gmail.com
     ...

    ヒント

    もし Gnome キーリングを使いたくない場合は、msmtp パッケージを代わ
    りにインストールして各アカウント毎に "password secret123" のよう
    なエントリーを ~/.msmtprc の中に追加しましょう。詳しくは memtp の
    ドキュメンテーションを参照ください。

%

6.5. リモートメールの取得および転送ユーティリティー

    リモートメールにアクセスしそれらをマニュアル処理ために MUA を実行
    する代わりに、全てのメールをローカルホストに配送するように、その
    ような処理を自動化したいかもしれません。リモートメール回収・転送
    ユーティリティーはそんなあなたのためにあります。

    fetchmail(1) は GNU/Linux 上のリモートメールの取得のデファクト標
    準でしたが、著者は現在 getmail(1) が気に入っています。もしバンド
    幅を節約するためにメールをダウンロードする前に拒否したいなら、
    mailfilter か mpop が役に立つかもしれません。どのメールの取得ユー
    ティリティーを使おうとも、取得したメールをパイプ経由で maildrop
    等の MDA に配送するようにシステム設定をすることをお勧めします。

    表6.9 リモートメールの取得および転送ユーティリティーのリスト

    +---------------------------------------------------------------+
    |          |ポプ |サ |                                          |
    |パッケージ|コン |イ |                   説明                   |
    |          |     |ズ |                                          |
    |----------+-----+---+------------------------------------------|
    |fetchmail |V:5, |814|メール取得ユーティリティー (POP3、APOP、  |
    |          |I:17 |   |IMAP) (旧式)                              |
    |----------+-----+---+------------------------------------------|
    |getmail   |V:1, |30 |メール取得ユーティリティー (POP3、IMAP4、 |
    |          |I:6  |   |SDPS) (単純、セキュアー、高信頼)          |
    |----------+-----+---+------------------------------------------|
    |mailfilter|V:0, |291|メール取得ユーティリティー (POP3)、regex  |
    |          |I:0  |   |フィルター機能付き                        |
    |----------+-----+---+------------------------------------------|
    |mpop      |V:0, |400|メール取得ユーティリティー (POP3) かつ MDA|
    |          |I:0  |   |、フィルター機能付き                      |
    +---------------------------------------------------------------+


%

6.5.1. getmail の設定

    getmail(1) の設定は getmail 文書に記載されています。次に示すのが
    ユーザーとして複数の POP3 アカウントにアクセスする著者の設定です
    。

    "/usr/local/bin/getmails" を次のように作成します。

    #!/bin/sh
    set -e
    if [ -f $HOME/.getmail/running ]; then
      echo "getmail is already running ... (if not, remove $HOME/.getmail/running)" >&2
      pgrep -l "getmai[l]"
      exit 1
    else
      echo "getmail has not been running ... " >&2
    fi
    if [ -f $HOME/.getmail/stop ]; then
      echo "do not run getmail ... (if not, remove $HOME/.getmail/stop)" >&2
      exit
    fi
    if [ "x$1" = "x-l" ]; then
      exit
    fi
    rcfiles="/usr/bin/getmail"
    for file in $HOME/.getmail/config/* ; do
      rcfiles="$rcfiles --rcfile $file"
    done
    date -u > $HOME/.getmail/running
    eval "$rcfiles $@"
    rm $HOME/.getmail/running

    次のように設定します。

    $ sudo chmod 755 /usr/local/bin/getmails
    $ mkdir -m 0700 $HOME/.getmail
    $ mkdir -m 0700 $HOME/.getmail/config
    $ mkdir -m 0700 $HOME/.getmail/log

    各 POP3 アカウント毎に "$HOME/.getmail/config/pop3_name" 設定ファ
    イルを次のように作成します。

    [retriever]
    type = SimplePOP3SSLRetriever
    server = pop.example.com
    username =  pop3_name@example.com
    password = <your-password>

    [destination]
    type = MDA_external
    path = /usr/bin/maildrop
    unixfrom = True

    [options]
    verbose = 0
    delete = True
    delivered_to = False
    message_log = ~/.getmail/log/pop3_name.log

    次のように設定します。

    $ chmod 0600 $HOME/.getmail/config/*

    "/usr/local/bin/getmails" が15分毎に cron(8) により実行されるよう
    にスケジュールするために、"sudo crontab -e -u <user_name>" と実行
    して次に記すユーザーの cron エントリーを追加します。

    5,20,35,50 * * * * /usr/local/bin/getmails --quiet

    ヒント

    POP3 へのアクセス問題は getmail に起因しないかもしれません。一部
    の有名な無償の POP3 サービスは POP3 のプロトコルに違反しているか
    も知れませんし、それらのスパムフィルターが完璧でないかも知れませ
    ん。例えば、RETR コマンドを受信すると DELE コマンドの受信を待たず
    にメッセージを消去するかもしれませんし、スパムメールボックスに隔
    離するかも知れません。被害を最小限にするにアクセスされたメッセー
    ジをアーカイブして消去しないようにサービスの設定をします。"Some
    mail was not downloaded" を参照下さい。

%

6.5.2. fetchmail の設定

    fetchmail(1) を設定するには、"/etc/default/fetchmail" や "/etc/
    fetchmailrc" や "$HOME/.fetchmailrc" を設定します。"/usr/share/
    doc/fetchmail/examples/fetchmailrc.example" 中の例を参照下さい。

%

6.6. フィルター付きのメールデリバリーエージェント (MDA)

    postfix や exim4 等のほとんどの MTA プログラムは、MDA (メールデリ
    バリーエージェント) として機能します。フィルター機能のある専門の
    MDA があります。

    procmail(1) は GNU/Linux 上のフィルター付きの MDA のデファクト標
    準でしたが、著者は現在 maildrop(1) が気に入っています。どのフィル
    ターユーティリティーを使おうとも、フィルターされたメールを qmail
    スタイルの Maildir にデリバリーするようにシステムを設定します。

    表6.10 フィルター付きの MDA のリスト

    +----------------------------------------------------------+
    |パッケージ| ポプコン  |サイズ|            説明            |
    |----------+-----------+------+----------------------------|
    |procmail  |V:40, I:277|300   |フィルター付き MDA (旧式)   |
    |----------+-----------+------+----------------------------|
    |mailagent |V:0, I:5   |1356  |Perl フィルター付き MDA     |
    |----------+-----------+------+----------------------------|
    |maildrop  |V:0, I:2   |1141  |構造化フィルター言語付き MDA|
    +----------------------------------------------------------+


%

6.6.1. maildrop の設定

    maildrop(1) の設定は maildropfilter 文書に記載されています。次に
    "$HOME/.mailfilter" の設定例を示します。

    # Local configuration
    MAILROOT="$HOME/Mail"
    # set this to /etc/mailname contents
    MAILHOST="example.dom"
    logfile $HOME/.maildroplog

    # rules are made to override the earlier value by the later one.

    # mailing list mails ?
    if (     /^Precedence:.*list/:h || /^Precedence:.*bulk/:h )
    {
        # rules for mailing list mails
        # default mailbox for mails from mailing list
        MAILBOX="Inbox-list"
        # default mailbox for mails from debian.org
        if ( /^(Sender|Resent-From|Resent-Sender): .*debian.org/:h )
        {
            MAILBOX="service.debian.org"
        }
        # default mailbox for mails from bugs.debian.org (BTS)
        if ( /^(Sender|Resent-From|Resent-sender): .*@bugs.debian.org/:h )
        {
            MAILBOX="bugs.debian.org"
        }
        # mailbox for each properly maintained mailing list with "List-Id: foo" or "List-Id: ...<foo.bar>"
        if ( /^List-Id: ([^<]*<)?([^<>]*)>?/:h )
        {
            MAILBOX="$MATCH2"
        }
    }
    else
    {
        # rules for non-mailing list mails
        # default incoming box
        MAILBOX="Inbox-unusual"
        # local mails
        if ( /Envelope-to: .*@$MAILHOST/:h )
        {
            MAILBOX="Inbox-local"
        }
        # html mails (99% spams)
        if ( /DOCTYPE html/:b ||\
             /^Content-Type: text\/html/ )
        {
            MAILBOX="Inbox-html"
        }
        # blacklist rule for spams
        if ( /^X-Advertisement/:h ||\
             /^Subject:.*BUSINESS PROPOSAL/:h ||\
             /^Subject:.*URGENT.*ASISSTANCE/:h ||\
             /^Subject: *I NEED YOUR ASSISTANCE/:h )
        {
            MAILBOX="Inbox-trash"
        }
        # whitelist rule for normal mails
        if ( /^From: .*@debian.org/:h ||\
             /^(Sender|Resent-From|Resent-Sender): .*debian.org/:h ||\
             /^Subject: .*(debian|bug|PATCH)/:h )
        {
            MAILBOX="Inbox"
        }
        # whiltelist rule for BTS related mails
        if ( /^Subject: .*Bug#.*/:h ||\
             /^(To|Cc): .*@bugs.debian.org/:h )
        {
            MAILBOX="bugs.debian.org"
        }
        # whitelist rule for getmails cron mails
        if ( /^Subject: Cron .*getmails/:h )
        {
            MAILBOX="Inbox-getmails"
        }
    }

    # check existance of $MAILBOX
    `test -d $MAILROOT/$MAILBOX`
    if ( $RETURNCODE == 1 )
    {
        # create maildir mailbox for $MAILBOX
        `maildirmake $MAILROOT/$MAILBOX`
    }
    # deliver to maildir $MAILBOX
    to "$MAILROOT/$MAILBOX/"
    exit

    警告

    procmail と違い、maildrop は欠落した maildir ディレクトリーを自動
    的に作りません。"$HOME/.mailfilter" の例中のように事前に 
    maildirmake(1) を使ってディレクトリーを作らなければいけません。

%

6.6.2. procmail の設定

    procmail(1) 用の "$HOME/.procmailrc" を使う類似設定を次に記します
    。

    MAILDIR=$HOME/Maildir
    DEFAULT=$MAILDIR/Inbox/
    LOGFILE=$MAILDIR/Maillog
    # clearly bad looking mails: drop them into X-trash and exit
    :0
    * 1^0 ^X-Advertisement
    * 1^0 ^Subject:.*BUSINESS PROPOSAL
    * 1^0 ^Subject:.*URGENT.*ASISSTANCE
    * 1^0 ^Subject: *I NEED YOUR ASSISTANCE
    X-trash/

    # Delivering mailinglist messages
    :0
    * 1^0 ^Precedence:.*list
    * 1^0 ^Precedence:.*bulk
    * 1^0 ^List-
    * 1^0 ^X-Distribution:.*bulk
    {
    :0
    * 1^0 ^Return-path:.*debian-devel-admin@debian.or.jp
    jp-debian-devel/

    :0
    * ^Resent-Sender.*debian-user-request@lists.debian.org
    debian-user/

    :0
    * ^Resent-Sender.*debian-devel-request@lists.debian.org
    debian-devel/

    :0
    * ^Resent-Sender.*debian-announce-request@lists.debian.org
    debian-announce

    :0
    mailing-list/
    }

    :0
    Inbox/

%

6.6.3. mbox の内容の再配達

    もしあなたのホームディレクトリーが一杯になり procmail(1) がうまく
    機能しなかった場合には、"/var/mail/<username>" からホームディレク
    トリー内の仕分けられたメールボックスの中に手動でメールを配達しな
    ければいけません。ディスク空間を確保した後に、次を実行します。

    # /etc/init.d/${MAILDAEMON} stop
    # formail -s procmail </var/mail/<username>
    # /etc/init.d/${MAILDAEMON} start

%

6.7. POP3/IMAP4 サーバー

    LAN 上でプライベートのサーバーを実行する場合、LAN クライアントに
    メールを配達するために POP3 / IMAP4 サーバーを実行することを考え
    ます。

    表6.11 POP3/IMAP サーバーのリスト

    +---------------------------------------------------------------+
    |            |ポプ|サ |タイ|                                    |
    | パッケージ |コン|イ | プ |                説明                |
    |            |    |ズ |    |                                    |
    |------------+----+---+----+------------------------------------|
    |courier-pop |V:2,|308|POP3|Courier メールサーバー - POP3 サーバ|
    |            |I:2 |   |    |ー (maildir フォーマットのみ)       |
    |------------+----+---+----+------------------------------------|
    |cyrus-pop3d |V:0,|160|POP3|Cyrus メールシステム (POP3 サポート)|
    |            |I:0 |   |    |                                    |
    |------------+----+---+----+------------------------------------|
    |courier-imap|V:3,|589|IMAP|Courier メールサーバー - IMAP サーバ|
    |            |I:4 |   |    |ー (maildir フォーマットのみ)       |
    |------------+----+---+----+------------------------------------|
    |cyrus-imapd |V:1,|484|IMAP|Cyrus メールシステム (IMAP サポート)|
    |            |I:1 |   |    |                                    |
    +---------------------------------------------------------------+


%

6.8. プリントサーバーとユーティリティー

    In the old Unix-like system, the BSD Line printer daemon (lpd)
    was the standard and the standard print out format of the classic
    free software was PostScript (PS). Some filter system was used
    along with Ghostscript to enable printing to the non-PostScript
    printer. See 「Ghostscript」.

    In the modern Debian system, the Common UNIX Printing System
    (CUPS) is the de facto standard and the standard print out format
    of the modern free software is Portable Document Format (PDF).

    The CUPS uses Internet Printing Protocol (IPP). The IPP is now
    supported by other OSs such as Windows XP and Mac OS X and has
    became new cross-platform de facto standard for remote printing
    with bi-directional communication capability.

    CUPS システムのファイルフォーマット依存の自動変換機能のおかげで、
    どんなデーターでも lpr コマンドに供給すると期待される印刷出力が生
    成されます。(CUPS では、lpr はcups-bsd パッケージをインストールす
    ると有効となります。)

    Debian システムには、プリントサーバーやユーティリティーで留意すべ
    きパッケージがいくつかあります。

    表6.12 プリントサーバーとユーティリティーのリスト

    +---------------------------------------------------------------+
    |       パッケージ        |ポプコ|サイ|ポート |      説明       |
    |                         |  ン  | ズ |       |                 |
    |-------------------------+------+----+-------+-----------------|
    |                         |V:3,  |    |printer|BSD lpr/lpd (ライ|
    |lpr                      |I:4   |362 |(515)  |ンプリンターデー |
    |                         |      |    |       |モン)            |
    |-------------------------+------+----+-------+-----------------|
    |lprng                    |V:1,  |3064|, ,    |, , (拡張)       |
    |                         |I:1   |    |       |                 |
    |-------------------------+------+----+-------+-----------------|
    |cups                     |V:140,|1141|IPP    |インターネット印 |
    |                         |I:395 |    |(631)  |刷 CUPS サーバー |
    |-------------------------+------+----+-------+-----------------|
    |                         |      |    |       |CUPS 用System V  |
    |                         |      |    |       |プリンターコマン |
    |                         |      |    |       |ド: lp(1) と     |
    |                         |V:56, |    |       |lpstat(1) と     |
    |cups-client              |I:454 |493 |, ,    |lpoptions(1) と  |
    |                         |      |    |       |cancel(1) と     |
    |                         |      |    |       |lpmove(8) と     |
    |                         |      |    |       |lpinfo(8) と     |
    |                         |      |    |       |lpadmin(8) 等    |
    |-------------------------+------+----+-------+-----------------|
    |                         |      |    |       |CUPS 用BSD プリン|
    |                         |V:36, |    |       |ターコマンド: lpr|
    |cups-bsd                 |I:385 |122 |, ,    |(1) と lpq(1) と |
    |                         |      |    |       |lprm(1) と lpc(8)|
    |                         |      |    |       |等               |
    |-------------------------+------+----+-------+-----------------|
    |printer-driver-gutenprint|V:100,|937 |非該当 |CUPS 用のプリンタ|
    |                         |I:372 |    |       |ードライバー     |
    +---------------------------------------------------------------+


    ヒント
   
    CUPS システムはウェッブブラウザーを "http://localhost:631/" に向
    けることで設定できます。

%

6.9. リーモートアクセスサーバーとユーティリティー (SSH)

    セキュアーシェル (SSH) はインターネット経由で接続するセキュアーな
    方法です。Debian では、OpenSSH と呼ばれるフリーバージョンのSSH が
    openssh-client と openssh-server パッケージとして利用可能です。

    表6.13 リモートアクセスサーバーとユーティリティーのリスト

    +------------------------------------------------------------------+
    |      パッケージ      |ポプコ|サイ|        ツール        |  説明  |
    |                      |  ン  | ズ |                      |        |
    |----------------------+------+----+----------------------+--------|
    |                      |      |    |                      |セキュア|
    |openssh-client        |V:803,|4298|ssh(1)                |ーシェル|
    |                      |I:996 |    |                      |クライア|
    |                      |      |    |                      |ント    |
    |----------------------+------+----+----------------------+--------|
    |                      |V:690,|    |                      |セキュア|
    |openssh-server        |I:834 |1567|sshd(8)               |ーシェル|
    |                      |      |    |                      |サーバー|
    |----------------------+------+----+----------------------+--------|
    |                      |      |    |                      |ユーザー|
    |                      |      |    |                      |に      |
    |                      |      |    |                      |ssh-add |
    |ssh-askpass-fullscreen|V:0,  |42  |ssh-askpass-fullscreen|用のパス|
    |                      |I:0   |    |(1)                   |フレーズ|
    |                      |      |    |                      |を質問す|
    |                      |      |    |                      |る      |
    |                      |      |    |                      |(GNOME2)|
    |----------------------+------+----+----------------------+--------|
    |                      |      |    |                      |ユーザー|
    |                      |      |    |                      |に      |
    |                      |      |    |                      |ssh-add |
    |ssh-askpass           |V:3,  |106 |ssh-askpass(1)        |用のパス|
    |                      |I:34  |    |                      |フレーズ|
    |                      |      |    |                      |を質問す|
    |                      |      |    |                      |る (プレ|
    |                      |      |    |                      |ーン X) |
    +------------------------------------------------------------------+


    注意
   
    あなたの SSH がインターネットからアクセスできる場合には、「インタ
    ーネットのためのセキュリティー強化策」を参照下さい。

    ヒント

    リモートのシェルプロセスが回線接続の中断の際にも継続するようにす
    るために screen(1) プログラムを使いましょう (「screen プログラム
    」参照下さい)。

%

6.9.1. SSH の基本

    警告
   
    OpenSSH サーバーを実行したい場合には、"/etc/ssh/
    sshd_not_to_be_run" が存在してはいけません。

    SSH には2つの認証プロトコルがあります。

    表6.14 SSH の認証プロトコルと方法のリスト

    +---------------------------------------------------------------+
    | SSH |                                 |                       |
    |プロ |            SSH 手法             |         説明          |
    |トコ |                                 |                       |
    | ル  |                                 |                       |
    |-----+---------------------------------+-----------------------|
    |SSH-1|"RSAAuthentication"              |RSA アイデンティティ鍵 |
    |     |                                 |を用いるユーザー認証   |
    |-----+---------------------------------+-----------------------|
    |     |                                 |".rhosts" に基づくホス |
    |, ,  |"RhostsAuthentication"           |ト認証 (インセキュアー |
    |     |                                 |、無効化済み)          |
    |-----+---------------------------------+-----------------------|
    |     |                                 |RSA ホストキーと組み合 |
    |, ,  |"RhostsRSAAuthentication"        |わせの、".rhosts" に基 |
    |     |                                 |づくホスト認証 (無効化 |
    |     |                                 |済み)                  |
    |-----+---------------------------------+-----------------------|
    |, ,  |"ChallengeResponseAuthentication"|RSA チャレンジ応答認証 |
    |-----+---------------------------------+-----------------------|
    |, ,  |"PasswordAuthentication"         |パスワードを用いる認証 |
    |-----+---------------------------------+-----------------------|
    |SSH-2|"PubkeyAuthentication"           |公開鍵を用いるユーザー |
    |     |                                 |認証                   |
    |-----+---------------------------------+-----------------------|
    |     |                                 |公開キークライアントホ |
    |     |                                 |スト認証と組み合わせの |
    |, ,  |"HostbasedAuthentication"        |、"~/.rhosts" か "/etc/|
    |     |                                 |hosts.equiv" に基づくホ|
    |     |                                 |スト認証 (無効化済み)  |
    |-----+---------------------------------+-----------------------|
    |, ,  |"ChallengeResponseAuthentication"|チャレンジ応答認証     |
    |-----+---------------------------------+-----------------------|
    |, ,  |"PasswordAuthentication"         |パスワードを用いる認証 |
    +---------------------------------------------------------------+


    注意
   
    非 Debian システムを使う際にはこれらの相違点に注意します。

    詳細は、"/usr/share/doc/ssh/README.Debian.gz" と ssh(1) と sshd
    (8) と ssh-agent(1) と ssh-keygen(1) を参照下さい。

    次に示すのがキーとなる設定ファイルです。

    表6.15 SSH 設定ファイルのリスト

    +---------------------------------------------------------------+
    | 設定ファイル  |              設定ファイルの説明               |
    |---------------+-----------------------------------------------|
    |/etc/ssh/      |SSH クライアントのデフォールト、ssh_config(5)  |
    |ssh_config     |参照下さい                                     |
    |---------------+-----------------------------------------------|
    |/etc/ssh/      |SSH サーバーのデフォールト、sshd_config(5) 参照|
    |sshd_config    |下さい                                         |
    |---------------+-----------------------------------------------|
    |~/.ssh/        |当該 SSH サーバーの当該アカウント接続用にクライ|
    |authorized_keys|アントが使用するデフォールト公開 SSH キー      |
    |---------------+-----------------------------------------------|
    |~/.ssh/identity|ユーザーの秘密 SSH-1 RSA キー                  |
    |---------------+-----------------------------------------------|
    |~/.ssh/id_rsa  |ユーザーの秘密 SSH-2 RSA キー                  |
    |---------------+-----------------------------------------------|
    |~/.ssh/id_dsa  |ユーザーの秘密 SSH-2 DSA キー                  |
    +---------------------------------------------------------------+


    ヒント
   
    公開と秘密の SSH キーをどう使うかに関しては、ssh-keygen(1) と 
    ssh-add(1) と ssh-agent(1) を参照下さい。

    ヒント
   
    接続をテストして設定を確認します。何らかの問題がある際には、"ssh
    -v" を使います。

    ヒント
   
    ローカルの秘密 SSH キーを暗号化するパスフレーズは "ssh-keygen -p"
    として後から変更できます。

    ヒント

    ホストを制限したり特定コマンドを実行するように "~/.ssh/
    authorized_keys" 中に記載してオプションを追加できます。詳細は、
    sshd(8) を参照下さい。

    次に示す内容は、クライアントから ssh(1) 接続をスタートします。

    表6.16 SSH クライアント起動例のリスト

    +---------------------------------------------------------------+
    |             コマンド             |            説明            |
    |----------------------------------+----------------------------|
    |ssh username@hostname.domain.ext  |デフォールトモードで接続しま|
    |                                  |す。                        |
    |----------------------------------+----------------------------|
    |ssh -v                            |デバグメッセージを有効にして|
    |username@hostname.domain.ext      |デフォールトモードで接続しま|
    |                                  |す。                        |
    |----------------------------------+----------------------------|
    |ssh -1                            |SSH version 1 での接続を強制|
    |username@hostname.domain.ext      |します。                    |
    |----------------------------------+----------------------------|
    |ssh -1 -o RSAAuthentication=no -l |SSH version 1 でパスワードを|
    |username hostname.domain.ext      |使うことを強制します。      |
    |----------------------------------+----------------------------|
    |ssh -o PreferredAuthentications=  |SSH version 2 でパスワードを|
    |password -l username              |使うことを強制します。      |
    |hostname.domain.ext               |                            |
    +---------------------------------------------------------------+


    もしローカルとリモートで同一ユーザー名を使う際には、"username@"
    とタイプするのを省略できます。たとえローカルとリモートで異なるユ
    ーザー名を使う際にでも、"~/.ssh/config" を用いるとユーザー名のタ
    イプを省略できます。例えば Debian Salsa サービスでのユーザー名が
    "foo-guest" という場合には、"~/.ssh/config" が次を含むように設定
    します。

    Host salsa.debian.org people.debian.org
        User foo-guest

    ssh(1) はユーザーにとってより賢明でよりセキュアーな telnet(1) と
    して機能します。telnet コマンドと異なり、ssh コマンドは telnet エ
    スケープ文字 (初期デフォールト CTRL-]) に出会うことで中断される事
    がありません。

%

6.9.2. SMTP/POP3 トンネルをするためのポートフォワーディング

    ssh を通して localhost のポート 4025 から remote-server のポート
    25 へと、localhost のポート 4110 から remote-server のポート 110
    へと接続するパイプを設定するには、ローカルホスト上で次のように実
    行します。

    # ssh -q -L 4025:remote-server:25 4110:remote-server:110 username@remote-server

    このようにするとインターネット経由で SMTP/POP3 サーバーへとセキュ
    アーに接続できます。リモートホストの "/etc/ssh/sshd_config" 中の
    "AllowTcpForwarding" エントリーを "yes" と設定します。

%

6.9.3. リモートパスワード無しでの接続

    "RSAAuthentication" (SSH-1 プロトコル) もしくは
    "PubkeyAuthentication" (SSH-2 プロトコル) を使うと、リモートシス
    テムのパスワードを覚える必要が無くなります。

    リモートシステム上の "/etc/ssh/sshd_config" 中に
    "RSAAuthentication yes" か "PubkeyAuthentication yes" という対応
    する設定をします。

    次に示すように、ローカルで認証キーを生成しリモートシステム上に公
    開キーをインストールします。

      * "RSAAuthentication": SSH-1 の RSA キー (置き換えられたので非
        推奨。)

    $ ssh-keygen
    $ cat .ssh/identity.pub | ssh user1@remote "cat - >>.ssh/authorized_keys"

      * "PubkeyAuthentication": SSH-2 の RSA キー

    $ ssh-keygen -t rsa
    $ cat .ssh/id_rsa.pub | ssh user1@remote "cat - >>.ssh/authorized_keys"

      * "PubkeyAuthentication": SSH-2 の DSA キー (遅いので非推奨。)

    $ ssh-keygen -t dsa
    $ cat .ssh/id_dsa.pub | ssh user1@remote "cat - >>.ssh/authorized_keys"

    ヒント

    SSH-2 の DSA キーを使うことは、キーが小さく遅いので非推奨です。特
    許が期限切れとなったので DSA を使って RSA 特許を回避する理由はあ
    りません。DSA はデジタル署名アルゴリズムで遅いです。また
    DSA-1571-1 も参照下さい。

    注記

    SSH-2 で"HostbasedAuthentication" が機能するには、サーバーホスト
    の "/etc/ssh/sshd_config" と、クライアントホストの "/etc/ssh/
    ssh_config" か "~/.ssh/config" という両方のホスト設定で
    "HostbasedAuthentication" を"yes" と調節する必要があります。

%

6.9.4. 外部 SSH クライアントへの対処法

    他のプラットフォーム上で利用可能なフリーな SSH クライアントがいく
    つかあります。

    表6.17 他のプラットフォーム上で使えるフリーな SSH クライアントの
    リスト

    +---------------------------------------------------------------+
    |    環境    |             フリーの SSH プログラム              |
    |------------+--------------------------------------------------|
    |Windows     |puTTY (http://www.chiark.greenend.org.uk/~sgtatham|
    |            |/putty/) (GPL)                                    |
    |------------+--------------------------------------------------|
    |Windows     |cygwin 中の SSH (http://www.cygwin.com/) (GPL)    |
    |(cygwin)    |                                                  |
    |------------+--------------------------------------------------|
    |古典的      |macSSH (http://www.macssh.com/) (GPL)             |
    |Macintosh   |                                                  |
    |------------+--------------------------------------------------|
    |Mac OS X    |OpenSSH; ターミナルアプリケーションの ssh を使用し|
    |            |ましょう (GPL)                                    |
    +---------------------------------------------------------------+


%

6.9.5. ssh-agent の設定

    SSH の認証キーをパスフレーズで保護する方がより安全です。もしパス
    フレーズが設定されていない場合には "ssh-keygen -p" で設定できます
    。

    上記のようにパスワードを使って接続したリモートホスト上の "~/.ssh/
    authorized_keys" 中にあなたの公開 SSH キー (例えば "~/.ssh/
    id_rsa.pub") を設定します。

    $ ssh-agent bash
    $ ssh-add ~/.ssh/id_rsa
    Enter passphrase for /home/<username>/.ssh/id_rsa:
    Identity added: /home/<username>/.ssh/id_rsa (/home/<username>/.ssh/id_rsa)

    次に示すように、今後リモートパスワードは必要ありません。

    $ scp foo <username>@remote.host:foo

    ssh-agent のセッションを終了するのに ^D を押します。

    X サーバーの場合、通常の Debian の起動スクリプトは親プロセスとし
    て ssh-agent を実行します。だから ssh-add は1回だけ実行すれば十分
    です。詳細は ssh-agent(1) と ssh-add(1) を参照下さい。

%

6.9.6. SSH 上のリモートシステムをシャットダウンする方法

    "shutdown -h now" (「システムをシャットダウンする方法」参照下さ
    い) を実行しているプロセスを at(1) コマンド (「タスク1回実行のス
    ケジュール」参照下さい) を使って次のようにして SSH が終了すること
    から守る必要があります。

    # echo "shutdown -h now" | at now

    "shutdown -h now" をscreen(1) (「screen プログラム」参照下さい)
    セッション中で実行しても同様のことができます。

%

6.9.7. SSH のトラブルシュート

    問題に出会ったら、設定ファイルのパーミッションを確認し、ssh を
    "-v" オプションとともに実行します。

    root でファイアーウォールと問題を起こした場合には、"-p" オプショ
    ンを使いましょう; こうするとサーバーポートの 1 — 1023 を使うのを
    回避します。

    リモートサイトへの ssh 接続が急に動作し無くなった際は、システム管
    理者による変更、特に可能性が高いのはシステムメンテナンス中に
    "host_key" が変更された結果かもしれません。実際にこういう状況で誰
    も洒落たハックでリモートホストとしてなりすまそうとしていないこと
    を確認した後に、"host_key" エントリーをローカルホストの "~/.ssh/
    known_hosts" から削除すると再び接続できるようになります。

%

6.10. 他のネットワークアプリケーションサーバー

    他のネットワークアプリケーションサーバーを次に示します。

    表6.18 他のネットワークアプリケーションサーバー

    +---------------------------------------------------------------+
    |   パッケージ    |ポプコ|サイ |プロト|          説明           |
    |                 |  ン  | ズ  | コル |                         |
    |-----------------+------+-----+------+-------------------------|
    |telnetd          |V:1,  |115  |TELNET|TELNET サーバー          |
    |                 |I:3   |     |      |                         |
    |-----------------+------+-----+------+-------------------------|
    |telnetd-ssl      |V:0,  |170  |, ,   |, , (SSL サポート)       |
    |                 |I:0   |     |      |                         |
    |-----------------+------+-----+------+-------------------------|
    |nfs-kernel-server|V:38, |342  |NFS   |Unix 式ファイル共有      |
    |                 |I:79  |     |      |                         |
    |-----------------+------+-----+------+-------------------------|
    |samba            |V:102,|16629|SMB   |Windows のファイルとプリ |
    |                 |I:159 |     |      |ンター共有               |
    |-----------------+------+-----+------+-------------------------|
    |netatalk         |V:2,  |2077 |ATP   |Apple/Mac のファイルとプ |
    |                 |I:3   |     |      |リンター共有 (AppleTalk) |
    |-----------------+------+-----+------+-------------------------|
    |proftpd-basic    |V:24, |488  |FTP   |汎用ファイルダウンロード |
    |                 |I:32  |     |      |                         |
    |-----------------+------+-----+------+-------------------------|
    |apache2          |V:246,|610  |HTTP  |汎用ウェッブサーバー     |
    |                 |I:315 |     |      |                         |
    |-----------------+------+-----+------+-------------------------|
    |squid            |V:13, |8385 |, ,   |汎用ウェッブプロキシサー |
    |                 |I:15  |     |      |バー                     |
    |-----------------+------+-----+------+-------------------------|
    |squid3           |V:4,  |240  |, ,   |, ,                      |
    |                 |I:10  |     |      |                         |
    |-----------------+------+-----+------+-------------------------|
    |bind9            |V:52, |1063 |DNS   |他のホストの IP アドレス |
    |                 |I:65  |     |      |                         |
    |-----------------+------+-----+------+-------------------------|
    |isc-dhcp-server  |V:18, |1471 |DHCP  |クライアント自身の IP ア |
    |                 |I:54  |     |      |ドレス                   |
    +---------------------------------------------------------------+


    コモンインターネットファイルシステムプロトコル (CIFS) はサーバー
    メッセージブロック (SMB) と同じプロトコルで Microsoft Windows で
    広く使われています。

    ヒント
   
    サーバーシステムの統合には、「最新の集中システム管理」を参照下さ
    い。

    ヒント

    ホスト名の解決は通常 DNS サーバーによって提供されます。ホストの
    IP アドレスが DHCP によって動的にアサインされる場合には Debian
    wiki 上のDDNS ページに書かれているようにして bind9 と
    isc-dhcp-server を使いホスト名解決のためのダイナミック DNS が設定
    できます。

    ヒント

    Debian アーカイブの全内容のローカルのミラーサーバーを使うより、
    squid 等のプロキシサーバーを使う方がはるかにバンド幅を節約上では
    るかに効率的です。

%

6.11. 他のネットワークアプリケーションクライアント

    他のネットワークアプリケーションクライアントを次に示します。

    表6.19 他のネットワークアプリケーションクライアント

    +---------------------------------------------------------------+
    |  パッケージ   |ポプコ|サイ|プロト|            説明            |
    |               |  ン  | ズ | コル |                            |
    |---------------+------+----+------+----------------------------|
    |netcat         |I:41  |16  |TCP/IP|TCP/IP 用万能ツール (スイス |
    |               |      |    |      |陸軍ナイフ)                 |
    |---------------+------+----+------+----------------------------|
    |               |V:794,|    |      |セキュアソケットレイヤー    |
    |openssl        |I:993 |1465|SSL   |(SSL) のバイナリーと関連する|
    |               |      |    |      |暗号化ツール                |
    |---------------+------+----+------+----------------------------|
    |stunnel4       |V:5,  |507 |, ,   |万能 SSL ラッパー           |
    |               |I:17  |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |telnet         |V:65, |163 |TELNET|TELNET クライアント         |
    |               |I:904 |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |telnet-ssl     |V:0,  |210 |, ,   |, , (SSL サポート)          |
    |               |I:3   |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |nfs-common     |V:181,|768 |NFS   |Unix 式ファイル共有         |
    |               |I:343 |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |smbclient      |V:16, |2016|SMB   |MS Windows のファイルとプリ |
    |               |I:174 |    |      |ンター共有                  |
    |---------------+------+----+------+----------------------------|
    |               |V:32, |    |      |リモートの MS Windows ファイ|
    |cifs-utils     |I:123 |299 |, ,   |ルをマウントやアンマウントす|
    |               |      |    |      |るコマンド                  |
    |---------------+------+----+------+----------------------------|
    |ftp            |V:18, |137 |FTP   |FTP クライアント            |
    |               |I:282 |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |lftp           |V:6,  |2255|, ,   |, ,                         |
    |               |I:39  |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |ncftp          |V:3,  |1339|, ,   |フルスクリーンの FTP クライ |
    |               |I:22  |    |      |アント                      |
    |---------------+------+----+------+----------------------------|
    |wget           |V:288,|3477|HTTP  |ウェッブダウンローダー      |
    |               |I:988 |    |と FTP|                            |
    |---------------+------+----+------+----------------------------|
    |curl           |V:151,|426 |, ,   |, ,                         |
    |               |I:548 |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |axel           |V:0,  |216 |, ,   |加速ダウンローダー          |
    |               |I:4   |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |aria2          |V:2,  |1854|, ,   |BitTorrent と Metalink サポ |
    |               |I:19  |    |      |ート付き、加速ダウンローダー|
    |---------------+------+----+------+----------------------------|
    |bind9-host     |V:382,|365 |DNS   |bind9 由来の host(1) コマン |
    |               |I:948 |    |      |ド、"Priority: standard"    |
    |---------------+------+----+------+----------------------------|
    |dnsutils       |V:64, |256 |, ,   |bind 由来の dig(1) コマンド |
    |               |I:517 |    |      |、"Priority: standard"      |
    |---------------+------+----+------+----------------------------|
    |isc-dhcp-client|V:231,|686 |DHCP  |IP アドレス獲得             |
    |               |I:979 |    |      |                            |
    |---------------+------+----+------+----------------------------|
    |ldap-utils     |V:14, |718 |LDAP  |LDAP サーバーからデーター獲 |
    |               |I:75  |    |      |得                          |
    +---------------------------------------------------------------+


%

6.12. システムデーモンの診断

    telnet プログラムを使うとシステムデーモンへの手動接続とその診断が
    できます。

    プレーンな POP3 サービスをテストするには、次のようにします。

    $ telnet mail.ispname.net pop3

    一部の ISP が提供する TLS/SSL を有効にした POP3 サービスをテスト
    するには、telnet-ssl か openssl パッケージによる、TLS/SSL を有効
    にした telnet クライアントが必要です。

    $ telnet -z ssl pop.gmail.com 995

    $ openssl s_client -connect pop.gmail.com:995

    次の RFC は各システムデーモンに関する必要な知見を提供します。

    表6.20 よく使われる RFC のリスト

    +---------------------------------------------------------------+
    |       RFC        |                    説明                    |
    |------------------+--------------------------------------------|
    |rfc1939 と rfc2449|POP3 サービス                               |
    |------------------+--------------------------------------------|
    |rfc3501           |IMAP4 サービス                              |
    |------------------+--------------------------------------------|
    |rfc2821 (rfc821)  |SMTP サービス                               |
    |------------------+--------------------------------------------|
    |rfc2822 (rfc822)  |メールファイルフォーマット                  |
    |------------------+--------------------------------------------|
    |rfc2045           |Multipurpose Internet Mail Extensions (MIME)|
    |------------------+--------------------------------------------|
    |rfc819            |DNS サービス                                |
    |------------------+--------------------------------------------|
    |rfc2616           |HTTP サービス                               |
    |------------------+--------------------------------------------|
    |rfc2396           |URI 定義                                    |
    +---------------------------------------------------------------+


    "/etc/services" の中にポートの使用され方が記載されています。

第7章 X Window システム

    警告
   
    本章は、2013年にリリースされた Debian 7.0 (Wheezy) に基づいている
    ため、内容が陳腐化しつつあります。

    Debian システム上の X Window システムは X.Org 由来のソースに基づ
    いています。

%

7.1. 重要パッケージ

    インストールを簡略化するための (メタ)パッケージが少々あります。

    表7.1 X Window のためのキーとなる (メタ)パッケージのリスト

    +---------------------------------------------------------------+
    | (メタ)パッケージ |ポプコ|サイ|              説明              |
    |                  |  ン  | ズ |                                |
    |------------------+------+----+--------------------------------|
    |                  |      |    |X ライブラリー、X サーバー、フォ|
    |xorg              |I:457 |52  |ントセット、基本的な X クライア |
    |                  |      |    |ントとユーティリティーの集合 (メ|
    |                  |      |    |タパッケージ)                   |
    |------------------+------+----+--------------------------------|
    |xserver-xorg      |V:66, |238 |X サーバーのフルスイーツとその設|
    |                  |I:492 |    |定                              |
    |------------------+------+----+--------------------------------|
    |xbase-clients     |I:26  |46  |X クライアントの雑多な集合 (メタ|
    |                  |      |    |パッケージ)                     |
    |------------------+------+----+--------------------------------|
    |x11-common        |V:372,|308 |X Window システムのためのファイ |
    |                  |I:755 |    |ルシステムインフラ              |
    |------------------+------+----+--------------------------------|
    |xorg-docs         |I:6   |2036|X.Org ソフトウエアースイーツの雑|
    |                  |      |    |多な文書                        |
    |------------------+------+----+--------------------------------|
    |                  |V:54, |    |メニューに対応しているアプリケー|
    |menu              |I:197 |1509|ションに関して Debian メニューを|
    |                  |      |    |生成                            |
    |------------------+------+----+--------------------------------|
    |                  |V:31, |    |Debian メニュー構造を           |
    |menu-xdg          |I:109 |27  |freedesktop.org の xdg メニュー |
    |                  |      |    |構造に変換                      |
    |------------------+------+----+--------------------------------|
    |                  |V:229,|    |freedesktop.org によって提供され|
    |xdg-utils         |I:521 |327 |る統合デスクトップ環境のためのユ|
    |                  |      |    |ーティリティー                  |
    |------------------+------+----+--------------------------------|
    |task-gnome-desktop|I:175 |9   |標準の GNOME デスクトップ環境   |
    |                  |      |    |(メタパッケージ)                |
    |------------------+------+----+--------------------------------|
    |task-kde-desktop  |I:66  |6   |コアの KDE デスクトップ環境 (メ |
    |                  |      |    |タパッケージ)                   |
    |------------------+------+----+--------------------------------|
    |task-xfce-desktop |I:106 |9   |Xfce 軽量デスクトップ環境 (メタ |
    |                  |      |    |パッケージ)                     |
    |------------------+------+----+--------------------------------|
    |task-lxde-desktop |I:35  |9   |LXDE 軽量デスクトップ環境 (メタ |
    |                  |      |    |パッケージ)                     |
    |------------------+------+----+--------------------------------|
    |                  |V:2,  |    |Fluxbox: 自由自在に設定可能でリ |
    |fluxbox           |I:9   |3860|ソース消費が少ない X ウィンドウ |
    |                  |      |    |マネージャー                    |
    +---------------------------------------------------------------+


    X の基本に関しては、X(7) と the LDP XWindow-User-HOWTO を参照下さ
    い。

%

7.2. デスクトップ環境の設定

    デスクトップ環境は、通常 X ウィンドウマネージャーとファイルマネー
    ジャーと互換性あるユーティリティープログラムのスイートの組み合わ
    せです。

    GNOME や KDE や Xfce や LXDE 等の充実したデスクトップ環境を
    aptitude のタスクメニューを使って設定できます。

    ヒント

    タスクメニューは Debian の unstable/testing 環境下では最新のパッ
    ケージの変遷状態を反映していないかもしれません。そのような状況で
    はパッケージ間のコンフリクトを避けるために aptitude(8) のタスクメ
    ニューの下でいくつかの (メタ)パッケージを非選択にする必要がありま
    す。(メタ)パッケージを非選択にする場合には、それらに依存関係を提
    供しているパッケージが自動削除されないように特定のパッケージを手
    動選択しなければいけません。

    上記と違う方法として、Fluxbox 等の X ウィンドウマネージャーだけを
    使って簡単な環境を設定する事もできます。

    X ウィンドウマネージャーやデスクトップ環境のガイドは X のためのウ
    ィンドウマネージャーを参照下さい。

%

7.2.1. Debian メニュー

    Debian メニューシステムは menu パッケージの update-menus(1) を使
    って、テキストと X の両指向のプログラムに関して一般化されたインタ
    ーフェースを提供します。各パッケージは "/usr/share/menu/" ディレ
    クトリーにメニューデーターをインストールします。"/usr/share/menu/
    README" を参照下さい。

%

7.2.2. Freedesktop.org メニュー

    Freedesktop.org の xdg メニューシステム対応の各パッケージは "/usr
    /share/applications/" の下の "*.desktop" で提供されるそのメニュー
    データーをインストールします。Freedesktop.org スタンダード対応の
    現代的デスクトップ環境は xdg-utils パッケージを使ってこれらのデー
    ターからそれぞれのメニューを生成します。"/usr/share/doc/xdg-utils
    /README" を参照下さい。

%

7.2.3. Freedesktop.org メニューからの Debian 　メニュー

    GNOME や KDE のような Freedesktop.org メニュー準拠のウィンドーマ
    ネージャー環境から伝統的な Debian メニューにアクセスするのには、
    menu-xdg パッケージをインストールしなければいけません。

%

7.3. サーバー/クライアント関係

    X Window システムはサーバーとクライアントのプログラムの組み合わせ
    として起動されます。ローカルとリモートと言う言葉に対応するサーバ
    ーとクライアントと言う言葉の意味に注意を払う必要があります。

    表7.2 サーバー/クライアントの用語法のリスト

    +---------------------------------------------------------------+
    |    タイプ     |                     説明                      |
    |---------------+-----------------------------------------------|
    |X サーバー     |ユーザーのディスプレーや入力デバイスが接続され |
    |               |たローカルホスト上で実行されるプログラム。     |
    |---------------+-----------------------------------------------|
    |X クライアント |データーを処理し X サーバーへ話しかけるリモート|
    |               |ホスト上で実行されるプログラム。               |
    |---------------+-----------------------------------------------|
    |アプリケーショ |データーを処理しクライアントへ話しかけるリモー |
    |ンサーバー     |トホスト上で実行されるプログラム。             |
    |---------------+-----------------------------------------------|
    |アプリケーショ |ユーザーのディスプレーや入力デバイスが接続され |
    |ンクライアント |たローカルホスト上で実行されるプログラム。     |
    +---------------------------------------------------------------+


    最近の X サーバーは MIT 共有メモリー拡張機能があり、ローカルの X
    クライアントとローカルの共有メモリーを使って通信します。これはネ
    ットワーク透過性の Xlib プロセス間通信チャンネルをバイパスし、大
    きなイメージを扱う際の性能が得られるようにしています。

%

7.4. X サーバー

    X サーバーの情報は xorg(1) を参照下さい。

%

7.4.1. X サーバーの (再)設定

    X サーバーの (再)設定は以下のようにします:

    # dpkg-reconfigure --priority=low x11-common

    注記

    最近の Linux カーネルは DRM や KMS や udev によりグラフィクスや入
    力デバイスを良好にサポートします。X サーバーはこれらを使うように
    書き換えられました。だから "/etc/X11/xorg.conf" は通常あなたのシ
    ステムにありません。これらのパラメーターはカーネルにより設定され
    ます。Linux カーネルドキュメンテーションの "fb/modedb.txt" を参照
    ください。

    あなたのモニターのスペックに関して注意深く確認します。大きな高解
    像度の CRT モニターの場合、チラつきを軽減するためにモニターの許容
    する限りできるだけ高いリフレッシュレート (85 Hz なら十二分、75 Hz
    で十分) 設定することが望ましい。LCD モニターの場合、その低速反応
    性のためにより低速の標準リフレッシュレート (60 Hz) 設定で通常問題
    はありません。

    注記
   
    あなたのモニターシステムのハードウエアーを破壊するかもしれないの
    で、高過ぎるリフレッシュレートを使わないように注意して下さい。

%

7.4.2. X サーバーへの接続方法

    "X サーバー " (ディスプレー側) が"X クライアント" (アプリケーショ
    ン側) からの接続を許可するようにするにはいくつかの方法があります
    。

    表7.3 X サーバーへの接続方法のリスト

    +---------------------------------------------------------------+
    |              |      |    |ユ|       |           |             |
    |  パッケージ  |ポプコ|サイ|ー|暗号化 |   方法    | 適切な用途  |
    |              |  ン  | ズ |ザ|       |           |             |
    |              |      |    |ー|       |           |             |
    |--------------+------+----+--+-------+-----------+-------------|
    |              |      |    |非|       |xhost コマ |             |
    |xbase-clients |I:26  |46  |確|いいえ |ンド       |非推奨       |
    |              |      |    |認|       |           |             |
    |--------------+------+----+--+-------+-----------+-------------|
    |              |      |    |確|       |           |パイプ経由の |
    |xbase-clients |I:26  |46  |認|いいえ |xauth コマ |ローカル接続 |
    |              |      |    |済|       |ンド       |用           |
    |              |      |    |み|       |           |             |
    |--------------+------+----+--+-------+-----------+-------------|
    |              |      |    |確|       |           |リモートネッ |
    |openssh-client|V:803,|4298|認|はい   |ssh -X コマ|トワーク接続 |
    |              |I:996 |    |済|       |ンド       |用           |
    |              |      |    |み|       |           |             |
    |--------------+------+----+--+-------+-----------+-------------|
    |              |      |    |確|       |GNOME ディ |パイプ経由の |
    |gdm3          |V:165,|5101|認|いいえ |スプレーマ |ローカル接続 |
    |              |I:229 |    |済|(XDMCP)|ネージャー |用           |
    |              |      |    |み|       |           |             |
    |--------------+------+----+--+-------+-----------+-------------|
    |              |      |    |確|       |KDE ディス |パイプ経由の |
    |sddm          |V:53, |1742|認|いいえ |プレーマネ |ローカル接続 |
    |              |I:95  |    |済|(XDMCP)|ージャー   |用           |
    |              |      |    |み|       |           |             |
    |--------------+------+----+--+-------+-----------+-------------|
    |              |      |    |確|       |X ディスプ |パイプ経由の |
    |xdm           |V:3,  |686 |認|いいえ |レーマネー |ローカル接続 |
    |              |I:6   |    |済|(XDMCP)|ジャー     |用           |
    |              |      |    |み|       |           |             |
    |--------------+------+----+--+-------+-----------+-------------|
    |              |      |    |確|       |WindowMaker|パイプ経由の |
    |wdm           |V:31, |2289|認|いいえ |ディスプレ |ローカル接続 |
    |              |I:284 |    |済|(XDMCP)|ーマネージ |用           |
    |              |      |    |み|       |ャー       |             |
    |--------------+------+----+--+-------+-----------+-------------|
    |              |      |    |確|       |LTSP ディス|リモート SSH |
    |ldm           |V:0,  |436 |認|はい   |プレーマネ |ネットワーク |
    |              |I:0   |    |済|       |ージャー   |接続用 (シン |
    |              |      |    |み|       |           |クライアント)|
    +---------------------------------------------------------------+


    警告

    暗号手法を使っている等といった非常に良い理由無しには、X 接続のた
    めにセキュアーされていないネットワーク経由のリモート TCP/IP 接続
    を使ってはいけません。暗号化無しのリモート TCP/IP ソケット接続は
    盗聴の被害に会いやすく、Debian システムではデフォールトで無効化さ
    れています。"ssh -X" を使います。

    警告

    セキュアーされていないネットワーク経由で XDMCP 接続も使ってはいけ
    ません。XDMCP 接続は、UDP/IP 経由で暗号化せずデーターを送信するの
    で盗聴攻撃を受けやすいです。

    ヒント
   
    LTSP は、Linux ターミナルサーバープロジェクトのことです。

%

7.5. X Window システムの起動

    X Window システムは X サーバーとそれに接続する X クライアントの組
    み合わせの X セッションとしてよく起動されます。通常のデスクトップ
    環境ではそれらの両方ともワークステーション上で実行されます。

    X session は次のようにして起動されます。

      * コマンドラインからの startx コマンド

      * "/etc/rc?.d/" ディレクトリー ("?" はランレベルに対応) 中の最
        後にある起動スクリプトから起動される X ディスプレーマネージャ
        ーデーモンプログラム *dm の1つ

    ヒント

    ディスプレーマネージャーデーモンの起動スクリプトは実際に実行され
    る前に "/etc/X11/default-display-manager" ファイルの内容を確認し
    ます。こうすることで X ディスプレーマネージャーデーモンプログラム
    が1つだけが実行されることを確実にします。

    ヒント
   
    X ディスプレーマネージャーの初期環境変数に関しては、「X Window の
    下でのみ特定ロケール」を参照下さい。

    本質的にこれらすべてのプログラムは "/etc/X11/Xsession" スクリプト
    を実行します。そうすることで、"/etc/X11/Xsession" スクリプトは、"
    /etc/X11/Xsession.d/" ディレクトリー中のスクリプトを run-parts(8)
    風に実行します。これは本質的に次の順番で見つかる最初のプログラム
    を exec builtin コマンドで実行することです。

     1. もし定義されていた場合には、X ディスプレーマネージャーにより
        "/etc/X11/Xsession" の引数として指定されたスクリプト。

     2. もし定義されていた場合には、"~/.xsession" か "~/.Xsession" ス
        クリプト。

     3. もし定義されていた場合には、"/usr/bin/x-session-manager" コマ
        ンド。

     4. もし定義されていた場合には、"/usr/bin/x-window-manager" コマ
        ンド。

     5. もし定義されていた場合には、"/usr/bin/x-terminal-emulator" コ
        マンド。

    このプロセスは "/etc/X11/Xsession.options" の内容に影響されます。
    これらの "/usr/bin/x-*" コマンドが指し示すプログラムが正確に何で
    あるかは Debian の alternative システムにより決定され、
    "update-alternatives --config x-session-manager" 等によって変更さ
    れます。

    詳細は Xsession(5) 参照ください。

%

7.5.1. gdm3 で X セッションをスタート

    gdm3(1) はメニューから X セッションのセッションのタイプ (デスクト
    ップ環境: 「デスクトップ環境の設定」) とか、言語 (ロケール: 「ロ
    ケール」) を選択できるようにします。それは "~/.dmrc" の中に選択さ
    れたデフォールト値を次のように保存します。

    [Desktop]
    Session=default
    Language=ja_JP.UTF-8

%

7.5.2. X セッションのカスタム化 (古典的方法)

    "/etc/X11/Xsession.options" が、"#" 文字が前に付いていない
    "allow-user-xsession" と言う行を含んでいるシステム上では、誰でも
    "~/.xsession" か "~/.Xsession" を定義することでシステムコードを完
    全にオーバーライドして "/etc/X11/Xsession" の挙動をカスタム化でき
    ます。"~/.xsession" ファイル中の最後のコマンドはあなたの最も好む
    X window/ セッションマネージャーを起動するように "exec
    some-window/session-manager" という形式の使う必要があります。

    もし当該機能が使われる場合、システムユーティリティーによるディス
    プレー(やログイン)マネージャー(DM)や、セッションマネージャーや、
    ウィンドーマネージャー(WM)の選択は無視されます。

%

7.5.3. X セッションのカスタム化 (新方法)

    上記のように完全にシステムコードをオーバーライドすること無しに X
    セッションをカスタム化する新方法を次に示します。

      * ディスプレーマネージャー gdm3 は特定のセッションを選択する事
        ができて、それを "/etc/X11/Xsession" の引数に設定できます。

          + "/etc/profile" や "~/.profile" や "/etc/xprofile" や "~
            /.xprofile" ファイルが gdm3 起動プロセスの一部として実行
            されます。

      * "~/.xsessionrc" ファイルが起動プロセスの一部として実行されま
        す。(デスクトップ非依存)

          + "#allow-user-xsession" が "/etc/X11/Xsession.options" 中
            にあっても "~/.xsessionrc" ファイルの実行を妨げることはあ
            りません。

      * "~/.gnomerc" ファイルが起動プロセスの一部として実行されます。
        (GNOME デスクトップのみ)

    システムユーティリティーによるディスプレー(やログイン)マネージャ
    ー(DM)や、セッションマネージャーや、ウィンドーマネージャー(WM)の
    選択は尊重されます。

    これらの設定ファイル中に "exec …" や "exit" があってはいけません
    。

%

7.5.4. リモート X クライアントを SSH 経由で接続

    "ssh -X" を使うことで、ローカルの X サーバーからリモートのアプリ
    ケーションサーバーへのセキュアーな接続が可能となります。

    コマンドラインオプション "-X" を使わないでおくには、リモートホス
    トの "/etc/ssh/sshd_config" 中の "X11Forwarding" エントリーを
    "yes" と設定します。

    ローカルホスト上の X サーバーの起動します。

    ローカルホスト上で xterm を開きます。

    ssh(1) を実行してリモートサイトとの接続を次のように確立します。

    localname @ localhost $ ssh -q -X loginname@remotehost.domain
    Password:

    リモートホスト上の "gimp" 等の X アプリケーションコマンドを次のよ
    うに実行します。

    loginname @ remotehost $ gimp &

    ここに書かれた手法はリモート X クライアントがあたかもローカルの
    UNIX ドメインソケット経由でローカル接続されているかのようにして、
    リモート X クライアントからの出力を表示できるようにします。

%

7.5.5. インターネット経由のセキュアーな X ターミナル

    インターネット経由のセキュアーな X ターミナルは ldm 等の専用のパ
    ッケージを使えば簡単に実現でき、リモートで実行される X デスクトッ
    プ環境の全てを表示します。あなたのローカル機器は SSH 経由で接続さ
    れたリモートのアプリケーションサーバーのシンクライアントになりま
    す。

%

7.6. X Window でのフォント

    2002年に、Fontconfig 2.0 がフォントアクセスの設定とカスタム化のた
    めのディストリビューション非依存のライブラリーとして作られました
    。Debian はsqueeze 以降 Fontconfig 2.0 だけをそのフォント設定に使
    います。

    X Window システムのフォントサポートは次のように要約できます。

      * 旧来の X サーバー側フォントサポートシステム

          + 旧式バージョンの X クライアントアプリケーションとの下位互
            換性ためにオリジナルの中核 X11 フォントシステムが提供され
            ています。

          + オリジナルの中核 X11 フォントは X サーバーにインストール
            されます。

      * 現代的な X クライアント側フォントサポートシステム

          + 現代的な X システムはこの後にリストされる (「基本的フォン
            ト」と「追加のフォント」と「CJK フォント」) 全てのフォン
            トをアンチエリアシングなどの先進的機能とともにサポートし
            ます。
   
          + Xft 2.0 はGNOME や KDE や LibreOffice 由来等の現代的な X
            アプリケーションを FreeType 2.0 ライブラリーと結びつけま
            す。

          + FreeType 2.0 はフォントのラスター化ライブラリーを提供しま
            す。

          + Fontconfig はXft 2.0 のためのフォント規定を提供します。そ
            の設定は fonts.conf(5) を参照下さい。

          + 現代的な Xft 2.0 を使う X アプリケーションは現代的な X サ
            ーバーに X レンダリング拡張を使って話しかけます。

          + X レンダリング拡張はフォントアクセスとグリフイメージ生成
            を X サーバーから X クライアントに移動します。

    表7.4 X Window フォントシステムをサポートするパッケージのテーブル

    +---------------------------------------------------------------+
    |                 |ポプコ|サ |                                  |
    |   パッケージ    |  ン  |イ |               説明               |
    |                 |      |ズ |                                  |
    |-----------------+------+---+----------------------------------|
    |xfonts-utils     |V:66, |415|X Window システムフォントユーティ |
    |                 |I:542 |   |リティープログラム                |
    |-----------------+------+---+----------------------------------|
    |                 |V:143,|   |Xft、X アプリケーションと FreeType|
    |libxft2          |I:662 |122|フォントラスター化ライブラリーをつ|
    |                 |      |   |なげるライブラリー                |
    |-----------------+------+---+----------------------------------|
    |libfreetype6     |V:426,|896|FreeType 2.0 フォントラスター化ラ |
    |                 |I:994 |   |イブラリー                        |
    |-----------------+------+---+----------------------------------|
    |fontconfig       |V:354,|583|Fontconfig、汎用フォント設定ライブ|
    |                 |I:776 |   |ラリー — サポートバイナリー       |
    |-----------------+------+---+----------------------------------|
    |fontconfig-config|V:367,|442|Fontconfig、汎用フォント設定ライブ|
    |                 |I:871 |   |ラリー — 設定データー             |
    +---------------------------------------------------------------+


    フォント設定情報は次のようにして確認できます。

      * 中核 X11 フォントパスに関しては "xset q"

      * fontconfig のフォントデフォールトに関しては "fc-match"

      * fontconfig で利用可能なフォントに関しては "fc-list"

    ヒント

    "The Penguin and Unicode" は現代的な X Window システムの良い概論
    です。http://unifont.org/ にある他の文書も Unicode フォントや
    Unicode 化されたソフトや国際化や Unicode のフリー (英語で自由と無
    償という意味)/ リブレ (仏語等で自由の意味、無償という意味は無い)/
    オープンソース (FLOSS) オペレーティングシステム上での使い勝手の問
    題に関する良い情報源です。

%

7.6.1. 基本的フォント

    コンピューターフォントには大きくわけて2つのタイプがあります。

      * ビットマップフォント (低解像度のラスター化で良好)
   
      * アウトラインやストロークフォント (高解像度ラスター化で良好)

    ビットマップフォントを拡大するとギザギザのイメージになってしまい
    ますが、アウトラインやストロークフォント拡大するとスムーズなイメ
    ージになります。

    Debian システム上のビットマップフォントは、".pcf.gz" というファイ
    ル拡張子を持った圧縮された X11 pcf ビットマップフォントファイルと
    して提供されます。

    Debian システム上のアウトラインフォントは次で提供されます。

      * ".pfb" (バイナリーフォントファイル) と ".afm" (フォントメトリ
        クスファイル) というファイル拡張子を持った PostScript Type 1
        フォントファイル。

      * ".ttf" というファイル拡張子を通常持った TrueType (もしくは
        OpenType) フォントファイル。

    ヒント
   
    OpenType はTrueType と PostScript Type 1 の両方を置き換えることを
    目指しています。

    表7.5 PostScript Type 1 フォントへの対応表

    +-------------------------------------------------------------------+
    |フォントパ |ポプ |サイ |サンセリ |セリフフ|モノスペース |フォントの|
    | ッケージ  |コン | ズ  |フフォン | ォント |  フォント   |   起源   |
    |           |     |     |   ト    |        |             |          |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |PostScript |N/A  |N/A  |Helvetica|Times   |Courier      |Adobe     |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |           |     |     |Nimbus   |Nimbus  |             |URW (Adobe|
    |gsfonts    |I:599|4439 |Sans L   |Roman   |Nimbus Mono L|互換サイ  |
    |           |     |     |         |No9 L   |             |ズ)       |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |           |     |     |         |        |             |PostScript|
    |           |     |     |Nimbus   |Nimbus  |             |Type 1 フ |
    |gsfonts-x11|I:82 |95   |Sans L   |Roman   |Nimbus Mono L|ォントでの|
    |           |     |     |         |No9 L   |             |X フォント|
    |           |     |     |         |        |             |サポート。|
    |-----------+-----+-----+---------+--------+-------------+----------|
    |           |     |     |Free     |Free    |             |拡張 URW  |
    |t1-cyrillic|I:19 |4878 |Helvetian|Times   |Free Courier |(Adobe 互 |
    |           |     |     |         |        |             |換サイズ) |
    |-----------+-----+-----+---------+--------+-------------+----------|
    |           |     |     |         |        |             |Computer  |
    |           |     |     |         |        |             |Modern    |
    |           |     |     |         |        |             |(TeX 由来)|
    |           |     |     |         |        |             |に準拠した|
    |lmodern    |V:13,|33270|LMSans*  |LMRoman*|LMTypewriter*|スケーラブ|
    |           |I:113|     |         |        |             |ルな      |
    |           |     |     |         |        |             |PostScript|
    |           |     |     |         |        |             |と        |
    |           |     |     |         |        |             |OpenType  |
    |           |     |     |         |        |             |のフォント|
    +-------------------------------------------------------------------+


    表7.6 TrueType フォントへの対応表

    +------------------------------------------------------------------------------------+
    |   フォントパッケージ    |ポプコ|サイ|サンセリフ|セリフフォ|モノスペー|フォントの起 |
    |                         |  ン  | ズ | フォント |   ント   |スフォント|     源      |
    |-------------------------+------+----+----------+----------+----------+-------------|
    |                         |      |    |          |          |          |Microsoft    |
    |                         |      |    |          |          |          |(Adobe 互換サ|
    |ttf-mscorefonts-installer|V:1,  |92  |Arial     |Times New |Courier   |イズ) (これは|
    |                         |I:64  |    |          |Roman     |New       |non-free デー|
    |                         |      |    |          |          |          |ターをインス |
    |                         |      |    |          |          |          |トールします)|
    |-------------------------+------+----+----------+----------+----------+-------------|
    |                         |      |    |          |          |          |Liberation フ|
    |                         |      |    |Liberation|Liberation|Liberation|ォントプロジ |
    |fonts-liberation         |I:469 |2093|Sans      |Serif     |Mono      |ェクト       |
    |                         |      |    |          |          |          |(Microsoft 互|
    |                         |      |    |          |          |          |換サイズ)    |
    |-------------------------+------+----+----------+----------+----------+-------------|
    |                         |V:50, |    |          |          |          |GNU freefont |
    |fonts-freefont-ttf       |I:276 |6656|FreeSans  |FreeSerif |FreeMono  |(Microsoft 互|
    |                         |      |    |          |          |          |換サイズ)    |
    |-------------------------+------+----+----------+----------+----------+-------------|
    |                         |      |    |          |          |          |DejaVu、     |
    |fonts-dejavu             |I:478 |39  |DejaVu    |DejaVu    |DejaVu    |Unicode 対応 |
    |                         |      |    |Sans      |Serif     |Sans Mono |Bitstream    |
    |                         |      |    |          |          |          |Vera         |
    |-------------------------+------+----+----------+----------+----------+-------------|
    |                         |      |    |          |          |          |DejaVu、     |
    |                         |      |    |          |          |          |Unicode 対応 |
    |                         |      |    |          |          |          |Bitstream    |
    |                         |V:220,|    |DejaVu    |DejaVu    |DejaVu    |Vera (sans,  |
    |fonts-dejavu-core        |I:809 |2954|Sans      |Serif     |Sans Mono |sans-bold,   |
    |                         |      |    |          |          |          |serif,       |
    |                         |      |    |          |          |          |serif-bold,  |
    |                         |      |    |          |          |          |mono,        |
    |                         |      |    |          |          |          |mono-bold)   |
    |-------------------------+------+----+----------+----------+----------+-------------|
    |                         |      |    |          |          |          |DejaVu、     |
    |                         |      |    |          |          |          |Unicode 対応 |
    |                         |      |    |          |          |          |Bitstream    |
    |                         |      |    |          |          |          |Vera         |
    |fonts-dejavu-extra       |I:516 |7493|N/A       |N/A       |N/A       |(oblique,    |
    |                         |      |    |          |          |          |italic,      |
    |                         |      |    |          |          |          |bold-oblique,|
    |                         |      |    |          |          |          |bold-italic, |
    |                         |      |    |          |          |          |condensed)   |
    |-------------------------+------+----+----------+----------+----------+-------------|
    |                         |      |    |          |          |          |GNU Unifont、|
    |                         |      |    |          |          |          |Unicode 5.1  |
    |ttf-unifont              |I:21  |21  |N/A       |N/A       |unifont   |基本多言語面 |
    |                         |      |    |          |          |          |(BMP) 中の全 |
    |                         |      |    |          |          |          |印刷可能文字 |
    +------------------------------------------------------------------------------------+


    ヒント
   
    DejaVu フォントは Bitstream Vera フォントに基づきそれを包含します
    。

%

7.6.2. 追加のフォント

    aptitude(8) を使うと追加のフォントを簡単に見つけられます。

      * "Tasks" → "Localization" の下の短いパッケージ一覧

      * debtag への正規表現: "~Gmade-of::data:font" を使ってフォント
        データーにフィルターされた平坦なパッケージ一覧

      * パッケージ名への正規表現: "~nxfonts-" を使って BDF (ビットマ
        ップ) フォントパッケージにフィルターされた平坦なパッケージ一
        覧

      * パッケージ名への正規表現: "~nttf-|~nfonts-" を使って TrueType
        (アウトライン) フォントパッケージにフィルターされた平坦なパッ
        ケージ一覧

    フリーなフォントは限られていることがあるので、Debian ユーザーにと
    っていくつかの商用 TrueType フォントをインストールする選択肢があ
    ります。こういったことをユーザーが簡単しやすいようにいくつかの利
    便性のためのパッケージが作成されています。

      * mathematica-fonts
   
      * fonts-mscorefonts-installer

    あなたのフリーなシステムを non-Free のフォントで汚染する事になる
    とはいえ、TrueType フォントの選択肢は非常に沢山あります。

%

7.6.3. CJK フォント

    CJK (中日韓)文字のフォントに焦点を当てキーポイントを記します。

    表7.7 CJK フォント名中でフォントタイプを示すために使われるキーワ
    ード表

    +--------------------------------------------------------------+
    |フォントタイ |日本語フォント|中国語フォント| 韓国語フォント名 |
    |     プ      |      名      |      名      |                  |
    |-------------+--------------+--------------+------------------|
    |サンセリフ   |gothic, ゴチッ|hei, gothic   |dodum, gulim,     |
    |             |ク            |              |gothic            |
    |-------------+--------------+--------------+------------------|
    |セリフ       |mincho, 明朝  |song, ming    |batang            |
    +--------------------------------------------------------------+


    "P" の付いた "VL PGothic" のようなフォント名は、固定幅フォントの
    "VL Gothic" フォントに対応するプロポーショナルフォントです。

    例えば、Shift_JIS コードテーブルには 7070文字があります。それらは
    次のように分類できます。

      * JIS X 0201 1バイト文字 (191文字、別名: 半角文字)
   
      * JIS X 0208 2バイト文字 (6879文字、別名: 全角文字)

    2バイト文字は CJK 固定幅フォントを使うコンソールターミナル上で倍
    の幅を占めます。このような状況に対応するために、ファイル拡張子
    ".hbf" を使う Hanzi ビットマップフォント (HBF) ファイルが1バイト
    と2バイトの文字を含むフォントのために使えます。

    TrueType フォントファイルのための空間を節約するために、ファイル拡
    張子 ".ttc" を持つ TrueType フォントコレクションファイルを使う事
    ができます。

    文字の複雑なコード空間をカバーするために、CID でキーされた
    PostScript Type 1 フォントは "%!PS-Adobe-3.0 Resource-CMap" で始
    まる CMap ファイルとともに使われます。これは通常の X ディスプレー
    ではほとんど使われませんが PDF のレンダリング等では使われます (「
    X ユーティリティーアプリケーション」参照下さい)。

    ヒント

    ハン(漢)統一のために複数のグリフがいくつかの Unicode コードポイン
    トに対して期待されています。最も気になることの一つは CJK 国間で文
    字の位置が異なる "U+3001 IDEOGRAPHIC COMMA" と "U+3002
    IDEOGRAPHIC FULL STOP" です。"~/.fonts.conf" を使って日本語中心の
    フォントを中国語中心のフォントより優先順位を上げるよう設定するこ
    とで日本人は安心できるようになります。

7.7. X アプリケーション

%

7.7.1. X オフィスアプリケーション

    基本的なオフィスアプリケーションのリストを記します (LO は
    LibreOffice)。

    表7.8 基本的な X オフィスアプリケーションのリスト

    +---------------------------------------------------------------+
    |    パッケージ     |ポプコ|パッケー |タイ |        説明        |
    |                   |  ン  |ジサイズ | プ  |                    |
    |-------------------+------+---------+-----+--------------------|
    |libreoffice-writer |V:188,|39333    |LO   |ワードプロセッサ    |
    |                   |I:441 |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |libreoffice-calc   |V:188,|32973    |LO   |スプレッドシート    |
    |                   |I:436 |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |libreoffice-impress|V:176,|9934     |LO   |プレゼンテーション  |
    |                   |I:433 |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |libreoffice-base   |V:145,|7473     |LO   |データーベース管理  |
    |                   |I:325 |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |libreoffice-draw   |V:177,|14600    |LO   |ベクトル画像エディタ|
    |                   |I:434 |         |     |ー (ドロー)         |
    |-------------------+------+---------+-----+--------------------|
    |libreoffice-math   |V:174,|1963     |LO   |数式エディター      |
    |                   |I:437 |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |abiword            |V:1,  |5141     |GNOME|ワードプロセッサ    |
    |                   |I:12  |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |gnumeric           |V:6,  |9933     |GNOME|スプレッドシート    |
    |                   |I:21  |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |gimp               |V:68, |22313    |GTK  |ビットマップ画像エデ|
    |                   |I:341 |         |     |ィター (ペイント)   |
    |-------------------+------+---------+-----+--------------------|
    |inkscape           |V:55, |84823    |GNOME|ベクトル画像エディタ|
    |                   |I:209 |         |     |ー (ドロー)         |
    |-------------------+------+---------+-----+--------------------|
    |dia                |V:5,  |3727     |GTK  |フローチャートやダイ|
    |                   |I:31  |         |     |アグラムエディター  |
    |-------------------+------+---------+-----+--------------------|
    |planner            |V:0,  |1146     |GNOME|プロジェクト管理    |
    |                   |I:5   |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |calligrawords      |V:0,  |5717     |KDE  |ワードプロセッサ    |
    |                   |I:7   |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |calligrasheets     |V:0,  |10890    |KDE  |スプレッドシート    |
    |                   |I:6   |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |calligrastage      |V:0,  |5102     |KDE  |プレゼンテーション  |
    |                   |I:5   |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |calligraplan       |V:0,  |15342    |KDE  |プロジェクト管理    |
    |                   |I:2   |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |kexi               |V:0,  |7576     |KDE  |データーベース管理  |
    |                   |I:2   |         |     |                    |
    |-------------------+------+---------+-----+--------------------|
    |karbon             |V:0,  |3473     |KDE  |ベクトル画像エディタ|
    |                   |I:7   |         |     |ー (ドロー)         |
    +---------------------------------------------------------------+


%

7.7.2. X ユーティリティーアプリケーション

    著者の目に止まった基本的ユーティリティーアプリケーションのリスト
    を記します。

    表7.9 基本的 X ユーティリティーアプリケーションのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプコン|パッケージ|タイ |           説明            |
    |   ジ    |        |  サイズ  | プ  |                           |
    |---------+--------+----------+-----+---------------------------|
    |evince   |V:116,  |954       |GNOME|文書 (pdf) ビューワー      |
    |         |I:329   |          |     |                           |
    |---------+--------+----------+-----+---------------------------|
    |okular   |V:46,   |14646     |KDE  |文書 (pdf) ビューワー      |
    |         |I:118   |          |     |                           |
    |---------+--------+----------+-----+---------------------------|
    |calibre  |V:9,    |54876     |KDE  |e-book コンバーターとライブ|
    |         |I:36    |          |     |ラリーの管理               |
    |---------+--------+----------+-----+---------------------------|
    |fbreader |V:2,    |3074      |GTK  |e-book リーダー            |
    |         |I:15    |          |     |                           |
    |---------+--------+----------+-----+---------------------------|
    |evolution|V:31,   |475       |GNOME|個人情報管理 (グループウエ |
    |         |I:229   |          |     |アと電子メール)            |
    |---------+--------+----------+-----+---------------------------|
    |kontact  |V:1,    |2152      |KDE  |個人情報管理 (グループウエ |
    |         |I:16    |          |     |アと電子メール)            |
    |---------+--------+----------+-----+---------------------------|
    |scribus  |V:2,    |30375     |KDE  |デスクトップページレイアウ |
    |         |I:23    |          |     |トエディター               |
    |---------+--------+----------+-----+---------------------------|
    |glabels  |V:0, I:4|1326      |GNOME|ラベルエディター           |
    |---------+--------+----------+-----+---------------------------|
    |gnucash  |V:3,    |32304     |GNOME|個人会計                   |
    |         |I:12    |          |     |                           |
    |---------+--------+----------+-----+---------------------------|
    |homebank |V:0, I:3|1044      |GTK  |個人会計                   |
    |---------+--------+----------+-----+---------------------------|
    |kmymoney |V:0, I:2|12036     |KDE  |個人会計                   |
    |---------+--------+----------+-----+---------------------------|
    |shotwell |V:19,   |6451      |GTK  |デジタル写真オーガナイザー |
    |         |I:223   |          |     |                           |
    |---------+--------+----------+-----+---------------------------|
    |xsane    |V:17,   |2346      |GTK  |スキャナーのフロントエンド |
    |         |I:173   |          |     |                           |
    +---------------------------------------------------------------+


    注意

    evince や okular によって CJK の PDF 文書を Cmap データー (「CJK
    フォント」) を使って表示する際には poppler-data パッケージ (以前
    は non-free だった、「Ghostscript」参照下さい) が必要です。

    注記

    scribus (KDE) のようなソフトウエアーを GNOME デスクトップ環境にイ
    ンストールすることは、同様の機能が GNOME デスクトップ環境下で利用
    でき無いのでまったく問題ありません。ただ、機能が重複するパッケー
    ジをインストールしすぎるとあなたのメニューが忙しくなってしまいま
    す。

7.8. X トリビア

%

7.8.1. クリップボード

    3つのマウスボタンを使ってのX選択はXの本来のクリップボード機能です
    (「Unix 流のマウス操作」参照)。

    ヒント
   
    Shift-Insert は真ん中のマウスボタンのクリックと同等の動作をします
    。

    表7.10 基本的 X 選択プログラムのリスト

    +---------------------------------------------------------------+
    |パッケ |ポプコ |パッケージサ|タイ |            説明            |
    | ージ  |  ン   |    イズ    | プ  |                            |
    |-------+-------+------------+-----+----------------------------|
    |xsel   |V:10,  |59          |X    |X選択のコマンドラインインタ |
    |       |I:44   |            |     |ーフェース                  |
    |-------+-------+------------+-----+----------------------------|
    |xclip  |V:9,   |64          |X    |X選択のコマンドラインインタ |
    |       |I:49   |            |     |ーフェース                  |
    +---------------------------------------------------------------+


    最近のデスクトップ環境 (GNOME, KDE, …) は、左のマウスボタンとキー
    (CTRL-X と CRTL-C と CTRL-V) を使った、カット、コピー、ペーストの
    ための別個のクリップボードシステムを提供します。

%

7.8.2. X でのキーマップとポインターボタンのマッピング

    xmodmap(1) は X Window システム中でのキーマップとポインターボタン
    のマッピングのためのユーティリティーです。keycode を知るには、X
    環境下で xev(1) を実行してキーを押さえます。keysym の意味を知るに
    は、"/usr/include/X11/keysymdef.h" ファイル (x11proto-core-dev パ
    ッケージ) 中の MACRO 定義を覗いて下さい。このファイル中の全ての "
    #define" 文は keysym 名に "XK_" を前付けして名づけられています。

%

7.8.3. 古典的 X クライアント

    xterm(1) のような多くの伝統的 X クライアントプログラムは、ジオメ
    トリやフォントや表示を規定する標準化されたコマンドラインオプショ
    ンの組み合わせを使って起動できます。

    それらはその見栄えを設定するのに X リソースデーターベースも用いま
    す。X リソースのシステム全体のデフォールトは "/etc/X11/Xresources
    /*" の中に保存されており、それらのアプリケーションのデフォールト
    は "/etc/X11/app-defaults/*" の中に保存されています。これらの設定
    をスタート点として使います。

    "~/.Xresources" ファイルはユーザーのリソース規定を保存するために
    使われます。ログイン時にこのファイルは自動的にデフォールトの X リ
    ソースに合流されます。この設定変更をしてすぐ有効にするには、それ
    を次のコマンドを使ってデーターベースに合流させます。

    $ xrdb -merge ~/.Xresources

    x(7) と xrdb(1) を参照下さい。

%

7.8.4. X ターミナルエミュレーター — xterm

    xterm(1) に関することは、http://dickey.his.com/xterm/
    xterm.faq.html で学びます。

%

7.8.5. X クライアントを root で実行

    警告

    gdm3 のようなディスプレーマネージャーのプロンプトに root と入力し
    て X ディスプレー・セッションマネージャーを root アカウントの下で
    実行してはいけません。なぜなら、たとえシステム管理業務を行おうと
    している時ですら、こういう行為は安全でない (インセキュアー) と認
    識されているからです。X アーキテクチャ全てが root として実行する
    とインセキュアーと認識されています。通常ユーザーのような、可能な
    限り最低レベルの特権を使うように常にするべきです。

    例えば "foo" 等の特定の X クライアントを root として実行する最も
    簡単な方法は次に記すように sudo(8) を使うことです。

    $ sudo foo &

    $ sudo -s
    # foo &

    $ ssh -X root@localhost
    # foo &

    注意
   
    この目的だけのために上記のように ssh(1) を使うことはリソースの無
    駄遣いです。

    X クライアントが X サーバーに接続するためには次のことに注意下さい
    。

      * 元のユーザーの "$XAUTHORITY" と "$DISPLAY" 環境変数の値は新た
        なユーザーの環境変数値にコピーされなければいけません。
   
      * "$XAUTHORITY" 環境変数の値で指示されるファイルが新たなユーザ
        ーによって読めなければいけません。

第8章 I18N と L10N

    アプリケーションソフトの多言語化 (M17N) とかネイティブ言語サポー
    トは2段階で行います。

      * 国際化 (I18N): ソフトが複数のロケール (地域) を扱えるようにし
        ます。

      * 地域化 (L10N): 特定のロケール (地域) を扱えるようにします。

    ヒント

    M17N、I18N、L10N に対応する英語の multilingualization、
    internationalization、localization の中の "m" と "n"、"i" と "n"
    、"l" と "n" の間には 17、18、10 の文字があります。

    GNOME や KDE 等の現代的なソフトは多言語化されています。UTF-8 デー
    ターを扱えるようにすることで国際化され、gettext(1) インフラで翻訳
    されたメッセージを提供することで地域化されています。翻訳されたメ
    ッセージは別の地域化パッケージとして供給されているかもしれません
    。該当する環境変数を適切なロケールに設定することだけで翻訳された
    メッセージが選ばれます。

    最も簡単なテキストデーターの表現法は ASCII です。これは英語では十
    分で (7ビットで表現できる) 127文字以下しか使いません。国際化サポ
    ートのためにより多くの文字をサポートするために多くの文字の符号化
    (エンコーディング) システムが発明されています。現代的かつ賢明な符
    号化システムは、人類が知っている事実上全ての文字が扱える UTF-8 で
    す (「符号化方式の基本」参照下さい)。

    詳細は Introduction to i18n を参照下さい。

    国際化ハードウエアーサポートは地域化した設定データーを使って実現
    されています。

    警告
   
    本章は、2013年にリリースされた Debian 7.0 (Wheezy) に基づいている
    ため、内容が陳腐化しつつあります。

%

8.1. キーボード入力

    Debian システムは keyboard-configuration と console-setup パッケ
    ージを使い多くの国際キーボード配列として機能するように設定できま
    す。

    # dpkg-reconfigure keyboard-configuration
    # dpkg-reconfigure console-setup

    これは "/etc/default/keyboard" と "/etc/default/console-setup" に
    ある Linux コンソールと X Window のキーボード設定の設定パラメータ
    ーを更新します。これは Linux コンソールのフォントも設定します。

    多くの欧州言語で用いられるアクセント付きの文字を含めた多くの非
    -ASCII 文字はデッドキーや AltGr キーやコンポーズキーを使うことで
    アクセスできます。

    アジア言語に関しては次に記す IBus のような、より複雑なインプット
    メソッドが必要です。

%

8.1.1. IBus を使うインプットメソッドのサポート

    アプリケーションへの多言語入力は次のように処理されます。

    キーボード                                                          アプリケーション
       |                                                                                ^
       |                                                                                 |
       +-> Linux カーネル -> インプットメソッド -> Gtk, Qt, or X

    Debian システムための多言語入力の設定は、im-config パッケージとと
    もに IBus ファミリーのパッケージを使うことで簡素化されました。
    IBus パッケージのリストは次です。

    表8.1 IBus を用いるインプットメソッドサポートのリスト

    +---------------------------------------------------------------+
    |  パッケージ   |ポプコ |サイ|      サポートされたロケール      |
    |               |  ン   | ズ |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus           |V:70,  |1581|dbus を用いるインプットメソッドの |
    |               |I:87   |    |フレームワーク                    |
    |---------------+-------+----+----------------------------------|
    |ibus-mozc      |V:1,   |999 |日本語                            |
    |               |I:2    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-anthy     |V:0,   |8723|, ,                               |
    |               |I:1    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-kkc       |V:0,   |214 |, ,                               |
    |               |I:0    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-skk       |V:0,   |244 |, ,                               |
    |               |I:0    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-pinyin    |V:0,   |1434|中国語 (zh_CN 用)                 |
    |               |I:1    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-chewing   |V:0,   |415 |, , (zh_TW 用)                    |
    |               |I:0    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-hangul    |V:0,   |288 |韓国語                            |
    |               |I:1    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-table     |V:0,   |1801|IBus 用のテーブルエンジン         |
    |               |I:1    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-table-thai|I:0    |47  |タイ語                            |
    |---------------+-------+----+----------------------------------|
    |ibus-unikey    |V:0,   |318 |ベトナム語                        |
    |               |I:0    |    |                                  |
    |---------------+-------+----+----------------------------------|
    |ibus-m17n      |V:0,   |187 |多言語: インド系言語、アラビア語、|
    |               |I:1    |    |他                                |
    +---------------------------------------------------------------+


    kinput2 法や他のロケール依存のアジアの古典的インプットメソッドは
    まだありますが、現代的な UTF-8 の X 環境下ではお勧めできません。
    SCIM や uim ツールチェインは現代的な UTF-8 の X 環境下での国際イ
    ンプットメソッドの少し古いアプローチです。

%

8.1.2. 日本語の例

    日本語インプットメソッドを英語環境 ("en_US.UTF-8") 下で起動すると
    非常に便利です。GNOME3 環境下で IBus を使ってどう実現したかを以下
    に記します。

     1. 日本語インプットツールパッケージの ibus-anthy を im-config 等
        の推奨 (recommended) されたパッケージとともにインストールしま
        す。

     2. ユーザーのシェルから "im-config" を実行して "ibus" をインプッ
        トメソッドとして選択します。

     3. "Settings" → "Keyboard" → "Input Sources" → click "+" in
        "Input Sources" → "Japanese" → "Japanese (anthy)" を選択し
        "Add" をクリックします。

     4. "Japanese" を選択し "Add" をクリックして文字変換なしの日本語
        配列キーボードをサポートします。(インプットソースは任意に複数
        選べます。)

     5. ユーザーアカウントへの再ログイン

     6. "im-config" として設定を確認します。

     7. GUI ツールバーアイコンを右クリックしてインプットソースを設定
        します。

     8. インプットソース間を、SUPER-SPACE を用いて切り替えます。
        (SUPER は通常 Windows キーです。)

    以下に注意下さい。

      * im-config(8) は実行されるのが root からかどうかによって違った
        挙動をします。

      * im-config(8) はユーザーからのアクション無しにシステム上で最も
        好ましいインプットメソッドを有効にします。

      * im-config(8) のための GUI メニューエントリーは乱雑になること
        を防ぐためにデフォルトでは無効にされています。

%

8.1.3. インプットメソッドを無効化

    XIM を経由せずに入力したい場合には、プログラムを起動する際に
    "$XMODIFIERS" の値を "none" と設定します。もし emacs(1) 上で日本
    語入力インフラ egg を使う場合にはこれが当てはまるかもしれません。
    シェルから、次を実行します。

    $ XMODIFIERS=none emacs

    Debian メニューによって実行されるコマンドを調整するには、"/usr/
    share/doc/menu/html" に記された方法にしたがって "/etc/menu/" 中に
    カスタム化した設定を置きます。

%

8.2. ディスプレー出力

    Linux コンソールは限定された文字しか表示できません。(非 X コンソ
    ール上で非ヨーロッパ言語を表示するには jfbterm(1) のような特別な
    ターミナルプログラムを使う必要があります。)

    X Window は必要なフォントデーターがあれば UTF-8 中の全ての文字を
    表示できます。(オリジナルフォントデーターで使われた符号化方式は X
    Window システムが面倒を見るのでユーザーからは直接見えません。)

%

8.3. 東アジア不明瞭文字幅文字

    東アジアのロケールでは、箱描画文字やギリシャ文字やキリル文字はあ
    なたが望より広い幅で表示されターミナル出力が揃わなくなるかもしれ
    ません(Unicode標準附属書 #11 参照)。

    この問題は回避可能です:

      * gnome-terminal: Edit → Preferences → Profiles → Edit →
        Compatibility → Ambiguous-wide characters → Narrow
   
      * ncurses: 環境変数を export NCURSES_NO_UTF8_ACS=0 と設定します
        。

%

8.4. ロケール

    以下では gdm3(1) から起動された X Window 環境下で実行されるアプリ
    ケーションのためのロケールに焦点を当てます。

%

8.4.1. 符号化方式の基本

    環境変数 "LANG=xx_YY.ZZZZ" は、ロケールを言語コード "xx" と国コー
    ド "yy" と符号化方式 (エンコーディング) "ZZZZ" に設定します (「
    "$LANG" 変数」参照下さい)。

    現在の Debian システムは通常ロケールを "LANG=xx_YY.UTF-8" と設定
    します。これは Unicode 文字セットとともに UTF-8 符号化方式を使用
    します。この UTF-8 符号化システムはマルチバイトコードシステムでコ
    ードポイントを上手に使います。ASCII データーは、7ビットのコード域
    のみで構成されているので、1文字1バイトのみからなる必ず有効な
    UTF-8 データーです。

    以前の Debian システムはロケールを "LANG=C" か "LANG=xx_YY"
    (".UTF-8" は無しで) 設定していました。

      * ASCII 文字セットが "LANG=C" か "LANG=POSIX" の場合に使われま
        す。
   
      * 伝統的な Unix での符号化方式が "LANG=xx_YY" の場合に使われま
        す。

    "LANG=xx_YY" の場合に実際に使われる符号化方式は "/usr/share/i18n/
    SUPPORTED" を確認することで識別できます。例えば、"en_US" は
    "ISO-8859-1" 符号化方式を使い、"fr_FR@euro" は"ISO-8859-15" 符号
    化方式を使います。

    ヒント
   
    符号化方式の値の意味に関しては、表11.2「符号化方式値とその使い方
    リスト」を参照下さい。

%

8.4.2. UTF-8 ロケールを使う根拠

    ユニコード文字セットは実質的に人類が知り得る全ての文字を16進表記
    で 0 から 10FFFF までのコードポイント範囲で表記できます。そのスト
    レージには最小限 21 ビット必要です。

    UTF-8 符号化方式は I18N のための現代的で気の利いた符号化方式で、
    Unicode 文字である人類が知る実質的に全ての文字を表せます。UTF と
    は Unicode 変換フォーマット (Unicode Transformation Format: UTF)
    方式のことです。

    私は例えば "LANG=en_US.UTF-8" という UTF-8 ロケールをあなたのデス
    クトップで使うことをお薦めします。ロケールの最初の部分がアプリケ
    ーションが提示するメッセージを決めます。例えば、"LANG=
    fr_FR.UTF-8" ロケールの下の gedit(1) (GNOME デスクトップのテキス
    トエディター) は、必要なフォントとインプットメソッドがインストー
    ルされていれば、メニューをフランス語で提示しながら中国語の文字デ
    ーターを表示し編集できます。

    ロケールを "$LANG" 環境変数のみを用いて設定する事をお薦めします。
    UTF-8 ロケールの下で "LC_*" 変数 (locale(1) 参照下さい) の複雑な
    組み合わせ設定する意味はあまり無いと考えます。

    プレーンな英語のテキストですら非 ASCII 文字を含んでいるかもしれま
    せん、例えば左右のクオーテーションマークは ASCII の中にでは利用で
    きません。

    “double quoted text”
    ‘single quoted text’

    ASCII のプレーンテキストを UTF-8 のテキストに変換した時には、オリ
    ジナルの ASCII のテキストとまったく同じ内容とサイズとなります。で
    すから、UTF-8 ロケールを採用して何ら失うものはありません。

    一部のプログラムは I18N をサポートした後でより多くのメモリーを消
    費するようになります。それらのプログラムは、実行速度最適化のため
    に内部的に UTF-32 (UCS4) で Unicode のサポートをコードされていて
    、選ばれたロケールに無関係にそれぞれの ASCII 文字データー毎に4バ
    イトを消費するからです。ここでも、UTF-8 ロケールを使ったからとい
    って何も失うわけではありません。

    ベンダー固有の旧式非 UTF-8 の符号化システムは、多くの国でグラフィ
    ック文字のような一部文字に関して仔細だが困惑する相違がありがちで
    した。現代的な OS が UTF-8 システムを採用したことはこのような符号
    化方式 (エンコーディング) の問題を実質的に解決しました。

%

8.4.3. ロケールの再設定

    システムが特定のロケールにアクセスするために、ロケールデーターは
    ロケールデーターベースにコンパイルされなければいけません。
    (locales-all パッケージをインストールしない限り、Debian システム
    は全ての利用可能なロケールを事前にコンパイルして提供されません。)
    コンパイルできるサポートされているロケールの全リストは "/usr/
    share/i18n/SUPPORTED" に記載されています。全ての正確なロケール名
    がこのファイルにリストされています。次のようにすると全ての既にバ
    イナリー形式にコンパイルされ使える UTF-8 ロケールがリストされます
    。

    $ locale -a | grep utf8

    次のコマンド実行をすると locales パッケージが再設定されます。

    # dpkg-reconfigure locales

    このプロセスは3段階あります。

     1. 使用可能なロケールのリストを更新

     2. それをバイナリー形式にコンパイル
   
     3. PAM (「PAM と NSS」参照下さい) によって使われるように "/etc/
        default/locale" 中のシステム全体のデフォールトのロケール値を
        設定

    使用可能なロケールには、"en_US.UTF-8" と "UTF-8" 付きの全ての関心
    のある言語が含まれているべきです。

    米国英語での推奨のデフォールトロケールは "en_US.UTF-8" です。他の
    言語では "UTF-8" 付きのロケールを選ぶようにして下さい。これらの設
    定の内のいずれを使おうとも、いかなる国際化文字でも扱えます。

    注記
   
    ロケールを "C" に設定すると、メッセージは米国英語になりますが、
    ASCII 文字しか扱えなくなります。

%

8.4.4. "$LANG" 環境変数の値

    "$LANG" 環境変数の値は多くのアプリケーションによって設定や変更さ
    れます。

      * Linux コンソールプログラムに関しては、login(1) の PAM 機構に
        よって初期設定

      * 全ての X プログラムに関しては、ディスプレーマネージャーの PAM
        機構によって初期設定

      * リモートコンソールプログラムに関しては、ssh(1) の PAM 機構に
        よって初期設定
   
      * 全ての X プログラムに関しては、gdm3(1) のような一部ディスプレ
        ーマネージャーによって変更

      * 全ての X プログラムに関しては、 "~/.xsessionrc" を経由する X
        セッションの起動コードによって変更 (lenny の機能)

      * 全てのコンソールプログラムに関しては、 "~/.bashrc" 等のシェル
        の起動コードによって変更

    ヒント
   
    互換性を最大限に考えると、システムワイドのデフォールトロケールを
    "en_US.UTF-8" と設定するのが賢明です。

%

8.4.5. X Window の下でのみ特定ロケール

    PAM のカスタム化 (「PAM と NSS」参照下さい) を使えば、システムワ
    イドのデフォールトロケールに関わらず、特定のロケールを X Window
    の下だけで選ぶ事ができます。

    この環境は安定度を確保したままあなたに最良のデスクトップ経験を提
    供します。X Window システムが機能していないときでも読めるメッセー
    ジを表示する機能する文字ターミナルに常にアクセス出きます。中国語
    や日本語や韓国語のように非ローマ文字を使う言語では、これは非常に
    重要です。

    注記

    X セッションマネージャーパッケージが改良されれば別の方法が利用可
    能になるかもしれませんが、一般的かつ基本的なロケールの設定方法と
    して以下をお読み下さい。gdm3(1) に関して、 X セッションのロケール
    はメニューから選べると認識しています。

    "/etc/pam.d/gdm3" のような PAM 設定ファイル中で言語の環境変数を定
    義する場所は次の行により定義されます。

    auth    required        pam_env.so read_env=1 envfile=/etc/default/locale

    これを次のように変更します。

    auth    required        pam_env.so read_env=1 envfile=/etc/default/locale-x

    日本語の場合、"-rw-r--r-- 1 root root" パーミッションで次のように
    "/etc/default/locale-x" ファイルを作成します。

    LANG="ja_JP.UTF-8"

    他のプログラムのためにデフォールトの "/etc/default/locale" ファイ
    ルは次のように元のままにします。

    LANG="en_US.UTF-8"

    これはロケールをカスタム化する最も一般的なテクニックで、gdm3(1)
    自身のメニュー選択ダイアローグを地域化します。

    この場合の代策として、"~/.xsessionrc" ファイル使って簡単にロケー
    ルを変更してもいいです。

%

8.4.6. ファイル名の符号化方式

    クロスプラットフォームのデーター交換 (「リムーバブルストレージデ
    バイス」参照下さい) のために、特定の符号化方式 (エンコーディング)
    でファイルシステムをマウントする必要があるかもしれません。例えば
    、vfat ファイルシステムに関して mount(8) はオプション無しの場合
    CP437 とみなします。ファイル名に UTF-8 とか CP932 を使うためには
    明示的にマウントオプションを提供する必要があります。

    注記

    GNOME のような現代的なデスクトップ環境の下では、デスクトップアイ
    コンを右クリックし "Drive" タブをクリックし "Setting" を開くよう
    にクリックし "Mount options:" に"utf8" を入力すれば、ホットプラグ
    できる USB メモリーを自動マウントする時のマウントオプションを設定
    できます。このメモリースティックを次にマウントする機会には UTF-8
    でのマウントが有効です。

    注記

    もしシステムをアップグレードしたり旧式非 UTF-8 システムからディス
    クを移動したりする場合には、非 ASCII 文字のファイル名は
    ISO-8859-1 とか eucJP 等の今は非推奨の歴史的符号化方式で符号化を
    しているかもしれません。テキスト変換ツールの助力を得て、ファイル
    名を UTF-8 に変換します。「テキストデーター変換ツール」を参照下さ
    い。

    Samba は新規クライアント (Windows NT、200x、XP) には Unicode を使
    いますが、旧式クライアント (DOS、Windows 9x/Me) には CP850 をデフ
    ォールトで使います。この旧式クライアントへのデフォールトは "/etc/
    samba/smb.conf" ファイル中の "dos charset" を使って例えば日本語な
    ら CP932 等と変更できます。

%

8.4.7. 地域化されたメッセージと翻訳された文書

    Debian システム中で表示されるエラーメッセージや標準のプログラムの
    出力やメニューやマニュアルページ等のテキストメッセージや文書の多
    くに翻訳があります。ほとんどの翻訳行為のバックエンドツールとして
    GNU gettext(1) コマンドツールチェインが使われています。

    "Tasks" → "Localization" の下の aptitude(8) リストは地域化された
    メッセージをアプリケーションに追加したり翻訳された文書を提供する
    有用なバイナリーパッケージの徹底的なリストを提供します。

    例えば、manpages-<LANG> パッケージをインストールするとマンページ
    で地域化したメッセージに使えるようになります。<programname> に関
    するイタリア語のマンページを "/usr/share/man/it/" から読むには、
    次を実行します。

    LANG=it_IT.UTF-8 man <programname>

%

8.4.8. ロケールの効果

    sort(1) を使う際のソートオーダー (並べ替え順序) はロケールの言語
    選択に影響されます。スペイン語と英語のロケールでは異なる並べ替え
    が違います。

    ls(1) の日付フォーマットはロケールに影響されます。"LANG=C ls -l"
    と "LANG=en_US.UTF-8" の日付フォーマットは違います (「時間と日付
    のカスタム化表示」参照下さい)。

    数字の区切り方はロケール毎に異なります。例えば、英語のロケールで
    は一千一百一点一は "1,000.1" と表示されますが、ドイツ語のロケール
    では "1.000,1" と表示されます。スプレッドシートプログラムでこの違
    いに出会うかもしれません。

第9章システムに関するティップ

    主にコンソールからシステムを設定や管理する基本的なティップを次に
    記します。

%

9.1. screen プログラム

    screen(1) は、ネットワーク接続中断をサポートするので信頼性が低く
    断続的な接続経由でリモートサイトをアクセスする人にとっては非常に
    有用なツールです。

    表9.1 ネットワーク切断の中断をサポートするプログラムのリスト

    +---------------------------------------------------------------+
    |パッケ|ポプコ |サイ|                   説明                    |
    | ージ |  ン   | ズ |                                           |
    |------+-------+----+-------------------------------------------|
    |screen|V:127, |1013|VT100/ANSI ターミナルエミュレーションを使っ|
    |      |I:281  |    |てのターミナルマルチプレクサ               |
    |------+-------+----+-------------------------------------------|
    |tmux  |V:34,  |830 |代替のターミナルマルチプレクサ (代わりに   |
    |      |I:136  |    |"Control-B" を用いる)                      |
    +---------------------------------------------------------------+


%

9.1.1. screen(1) の使い方のシナリオ

    screen(1) は複数のプロセスを1つのターミナルウィンドウでうまく動作
    させるのみならず、接続が中断してもリモートシェルプロセスを生き延
    びさせる事もできます。screen(1) の使われ方の典型的シナリオは次で
    す。

     1. リモート機器にログインします。

     2. 単一のコンソール上で screen を起動します。

     3. ^A c ("Control-A" に続いて "c") によって作られた screen のウ
        ィンドウ中で複数のプログラムを実行します。

     4. ^A n ("Control-A" に続いて "n") によって、複数の screen のウ
        ィンドウ間を切り替えます。

     5. 突然ターミナルを離れる必要ができたけれども、接続を継続してあ
        なたが実行中の作業を失いたくありません。

     6. 次のようないかなる方法ででも、screen のセッションをデタッチで
        きます。
   
          + 暴力的にネットワーク接続を引き抜く

          + ^A d ("Control-A" に続いて "d") とタイプしてリモート接続
            から手動でログアウト

          + ^A DD ("Control-A" に続いて "DD") とタイプして screen を
            デタッチしてログアウト

     7. 同じリモート機器に (たとえ異なるターミナルからでも) 再びログ
        インします。

     8. screen を"screen -r" として起動します。

     9. screen は全アクティブなプログラムが実行されている過去の全
        screen ウィンドウを魔法のようにリアタッチします。

    ヒント

    screen を使うと、切断してもプロセスをアクティブにしておけその後で
    再接続した時にリアタッチできるので、ダイヤルアップやパケット接続
    のような計量されたネットワーク接続での接続料金の節約ができます。

%

9.1.2. screen コマンドのキーバインディング

    screen セッションではコマンドキーストローク以外の全てのキーボード
    入力は現在のウィンドウに送られます。全ての screen コマンドキース
    トロークは ^A ("Control-A") と単一キー [プラス何らかのパラメータ
    ー] をタイプすることによって入力されます。次に覚えておくべき重要
    なコマンドキーストロークを記します。

    表9.2 screen キーバインディングのリスト

    +---------------------------------------------------------------+
    |キーバインディン|                     意味                     |
    |       グ       |                                              |
    |----------------+----------------------------------------------|
    |^A ?            |ヘルプスクリーンを表示 (キーバインディングを表|
    |                |示)                                           |
    |----------------+----------------------------------------------|
    |^A c            |新規ウィンドウを作成しそれに切り替える        |
    |----------------+----------------------------------------------|
    |^A n            |次のウィンドウに切り替える                    |
    |----------------+----------------------------------------------|
    |^A p            |前のウィンドウに切り替える                    |
    |----------------+----------------------------------------------|
    |^A 0            |0番のウィンドウに切り替える                   |
    |----------------+----------------------------------------------|
    |^A 1            |1番のウィンドウに切り替える                   |
    |----------------+----------------------------------------------|
    |^A w            |ウィンドウのリストを表示                      |
    |----------------+----------------------------------------------|
    |^A a            |Ctrl-A を現在のウィンドウにキーボード入力とし |
    |                |て送る                                        |
    |----------------+----------------------------------------------|
    |^A h            |現在のウィンドウのハードコピーをファイルに書く|
    |----------------+----------------------------------------------|
    |^A H            |現在のウィンドウのファイルへのロギングを開始/ |
    |                |終了する                                      |
    |----------------+----------------------------------------------|
    |^A ^X           |ターミナルをロック (パスワードで保護)         |
    |----------------+----------------------------------------------|
    |^A d            |ターミナルから screen のセッションをデタッチ  |
    |----------------+----------------------------------------------|
    |^A DD           |screen のセッションをデタッチしてログアウト   |
    +---------------------------------------------------------------+


    詳細は screen(1) を参照下さい。

9.2. データーの記録と表現

%

9.2.1. ログデーモン

    多くのプログラムは "/var/log/" ディレクトリーの下にそれぞれの活動
    を記録します。

      * システムログデーモン: rsyslogd(8)

    「システムメッセージ」と「カーネルメッセージ」を参照下さい。

%

9.2.2. ログアナライザー

    注目すべきログアナライザー (aptitude(8) で
    "~Gsecurity::log-analyzer") を次に記します。

    表9.3 システムログアナライザーのリスト

    +---------------------------------------------------------------+
    |  パッケージ  |ポプコ |サイ|               説明                |
    |              |  ン   | ズ |                                   |
    |--------------+-------+----+-----------------------------------|
    |logwatch      |V:16,  |2265|綺麗な出力の Perl で書かれたログア |
    |              |I:18   |    |ナライザー                         |
    |--------------+-------+----+-----------------------------------|
    |fail2ban      |V:112, |2092|複数回の認証エラーを発生させる IP  |
    |              |I:123  |    |を使用禁止にします                 |
    |--------------+-------+----+-----------------------------------|
    |analog        |V:4,   |3534|ウェッブサーバーのログアナライザー |
    |              |I:109  |    |                                   |
    |--------------+-------+----+-----------------------------------|
    |awstats       |V:9,   |6910|強力で機能の多いウェッブサーバーの |
    |              |I:15   |    |ログアナライザー                   |
    |--------------+-------+----+-----------------------------------|
    |sarg          |V:3,   |843 |squid の分析レポートジェネレター   |
    |              |I:3    |    |                                   |
    |--------------+-------+----+-----------------------------------|
    |pflogsumm     |V:1,   |111 |Postfix ログ項目サマライザー       |
    |              |I:4    |    |                                   |
    |--------------+-------+----+-----------------------------------|
    |syslog-summary|V:0,   |30  |syslog ログファイルの内容をまとめる|
    |              |I:2    |    |                                   |
    |--------------+-------+----+-----------------------------------|
    |fwlogwatch    |V:0,   |479 |ファイアウォールログアナライザー   |
    |              |I:0    |    |                                   |
    |--------------+-------+----+-----------------------------------|
    |squidview     |V:0,   |189 |squid の access.log ファイルのモニ |
    |              |I:1    |    |ターと分析                         |
    |--------------+-------+----+-----------------------------------|
    |swatch        |V:0,   |101 |正規表現マッチ、ハイライト、フック |
    |              |I:0    |    |機能付きログファイルビューワー     |
    |--------------+-------+----+-----------------------------------|
    |crm114        |V:0,   |1119|制御可能な正規表現切断機とスパムフ |
    |              |I:0    |    |ィルター (CRM114)                  |
    |--------------+-------+----+-----------------------------------|
    |icmpinfo      |V:0,   |44  |ICMP メッセージの解釈              |
    |              |I:0    |    |                                   |
    +---------------------------------------------------------------+


    注記

    CRM114 はTRE 正規表現ライブラリーを使うファジーなフィルターを書く
    言語インフラを提供します。そのよくある応用はスパムメールのフィル
    ターですが、ログアナライザーとしても使えます。

%

9.2.3. シェルの活動を綺麗に記録

    単に script(1) を使ってシェル活動を記録すると (「シェル活動の記録
    」参照下さい)、コントロール文字の入ったファイルが生成されます。こ
    のような事は次のようにして col(1) を使うことで避けられます。

    $ script
    Script started, file is typescript

    何なりとします … そして script から脱出するために Ctrl-D を押しま
    す。

    $ col -bx <typescript >cleanedfile
    $ vim cleanedfile

    (例えば、initramfs 中のブートプロセスの途中のように) script が無
    い場合には、その代わりに次のようにすれば良いです。

    $ sh -i 2>&1 | tee typescript

    ヒント
   
    gnome-terminal のような一部の x-terminal-emulator は記録できます
    。スクロールバック用バッファーを拡大するのが良いかもしれません。

    ヒント
   
    screen(1) を"^A H" と一緒に使っても (「screen コマンドのキーバイ
    ンディング」参照下さい) コンソールの記録が録れます。

    ヒント

    emacs(1) を"M-x shell" か "M-x eshell" か "M-x term" と一緒に使っ
    てもコンソールの記録が録れます。後で "C-x C-w" とするとバッファー
    をファイルに書き出せます。

%

9.2.4. テキストデーターのカスタム化表示

    more(1) や less(1) 等のページャーツール (「ページャー」参照下さ
    い) や、ハイライトやフォーマット用のカスタムツール (「プレーンテ
    キストデーターをハイライトとフォーマット」参照下さい) はテキスト
    データーを綺麗に表示できますが、汎用エディター (「テキストエディ
    ター」参照下さい) が最も汎用性がありカスタム化が可能です。

    ヒント
   
    vim(1) やそのページャーモードのエリアス view(1) では、":set hls"
    とするとハイライトサーチが可能になります。

%

9.2.5. 時間と日付のカスタム化表示

    "ls -l" コマンドによる時間と日付のデフォールトの表示形式はロケー
    ル (値は「タイムスタンプ」を参照下さい) に依存します。"$LANG" 変
    数が最初に参照され、それを "$LC_TIME" 変数によりオーバーライドす
    る事ができます。

    実際の各ロケールでのデフォールトの表示形式は使われた標準 C ライブ
    ラリー (libc6 パッケージ) のバージョンに依存します。つまり Debian
    の異なるリリースは異なるデフォールトです。

    ロケール以上にこの時間や日付の表示フォーマットをカスタム化したい
    と真摯に望むなら、"--time-style" 引数か "$TIME_STYLE" 値を使って
    時間スタイル値を設定するべきです (ls(1) と date(1) と "info
    coreutils 'ls invocation'" を参照下さい)。

    表9.4 wheezy での "ls -l" コマンドによる時間と日付の表示例

    +---------------------------------------------------------------+
    |時間スタイル |    ロケール     |       時間と日付の表示        |
    |     値      |                 |                               |
    |-------------+-----------------+-------------------------------|
    |iso          |不問             |01-19 00:15                    |
    |-------------+-----------------+-------------------------------|
    |long-iso     |不問             |2009-01-19 00:15               |
    |-------------+-----------------+-------------------------------|
    |full-iso     |不問             |2009-01-19 00:15:16.000000000  |
    |             |                 |+0900                          |
    |-------------+-----------------+-------------------------------|
    |locale       |C                |Jan 19 00:15                   |
    |-------------+-----------------+-------------------------------|
    |locale       |en_US.UTF-8      |Jan 19 00:15                   |
    |-------------+-----------------+-------------------------------|
    |locale       |es_ES.UTF-8      |ene 19 00:15                   |
    |-------------+-----------------+-------------------------------|
    |+%d.%m.%y    |不問             |19.01.09 00:15                 |
    |%H:%M        |                 |                               |
    |-------------+-----------------+-------------------------------|
    |+%d.%b.%y    |C または         |19.Jan.09 00:15                |
    |%H:%M        |en_US.UTF-8      |                               |
    |-------------+-----------------+-------------------------------|
    |+%d.%b.%y    |es_ES.UTF-8      |19.ene.09 00:15                |
    |%H:%M        |                 |                               |
    +---------------------------------------------------------------+


    ヒント

    例えば "alias ls='ls --time-style=+%d.%m.%y\ %H:%M'" とするコマン
    ドエリアスを使うことでコマンドライン上に長いオプションを入力しな
    くてよくなります (「コマンドエリアス」を参照下さい)。

    ヒント
   
    このような iso フォーマットは ISO 8601 に準拠しています。

%

9.2.6. 着色化されたシェル出力

    殆どの現代的なターミナルへのシェル出力は ANSI エスケープコードを
    使って着色化できます ("/usr/share/doc/xterm/ctlseqs.txt.gz" を参
    照下さい)。

    例えば、次を試してみて下さい:

    $ RED=$(printf "\x1b[31m")
    $ NORMAL=$(printf "\x1b[0m")
    $ REVERSE=$(printf "\x1b[7m")
    $ echo "${RED}RED-TEXT${NORMAL} ${REVERSE}REVERSE-TEXT${NORMAL}"

%

9.2.7. 着色化されたコマンド

    着色化されたコマンドは対話環境で出力を検査するのに便利です。私は
    、私の "~/.bashrc" に次を含めています。

    if [ "$TERM" != "dumb" ]; then
        eval "`dircolors -b`"
        alias ls='ls --color=always'
        alias ll='ls --color=always -l'
        alias la='ls --color=always -A'
        alias less='less -R'
        alias ls='ls --color=always'
        alias grep='grep --color=always'
        alias egrep='egrep --color=always'
        alias fgrep='fgrep --color=always'
        alias zgrep='zgrep --color=always'
    else
        alias ll='ls -l'
        alias la='ls -A'
    fi

    エリアスを使うことで色効果を対話コマンド使用時に限定します。こう
    すると less(1) 等のページャープログラムの下でも色を見られるので、
    環境変数 "export GREP_OPTIONS='--color=auto'" をエキスポートする
    より都合が良いです。他のプログラムにパイプする際に色を使いたくな
    いなら、先ほどの "~/.bashrc" 例中で代わりに "--color=auto" としま
    す。

    ヒント
   
    このような着色するエリアスは、対話環境でシェルを "TERM=dumb bash"
    として起動することで無効にできます。

%

9.2.8. 複雑な反復のためにエディターでの活動を記録

    複雑な反復のためにエディターでの活動を記録できます。

    Vim の場合以下のようにします。

      * "qa": 名前付きレジスタ "a" にタイプした文字の記録を開始。

      * … エディターでの活動
   
      * "q": タイプした文字の記録を終了。

      * "@a": レジスター "a" の内容を実行。

    Emacs の場合は以下のようにします。

      * "C-x (": キーボードマクロの定義開始。

      * … エディターでの活動
   
      * "C-x )": キーボードマクロの定義終了。

      * "C-x e": キーボードマクロの実行。

%

9.2.9. X アプリケーションの画像イメージの記録

    xterm の表示を含めた、X アプリケーションの画像イメージを記録する
    にはいくつか方法があります。

    表9.5 画像の操作ツールのリスト

    +---------------------------------------------+
    | パッケージ  | ポプコン  |サイズ|  コマンド  |
    |-------------+-----------+------+------------|
    |xbase-clients|I:26       |46    |xwd(1)      |
    |-------------+-----------+------+------------|
    |gimp         |V:68, I:341|22313 |GUI メニュー|
    |-------------+-----------+------+------------|
    |imagemagick  |I:400      |218   |import(1)   |
    |-------------+-----------+------+------------|
    |scrot        |V:8, I:80  |70    |scrot(1)    |
    +---------------------------------------------+


%

9.2.10. 設定ファイルの変更記録

    DVCS システムを使って設定ファイルの変更を記録する専用ツールがあり
    ます。

    表9.6 VCS 中に設定の履歴を記録するパッケージのリスト

    +---------------------------------------------------------------+
    |           |ポプ |サ |                                         |
    |パッケージ |コン |イ |                  説明                   |
    |           |     |ズ |                                         |
    |-----------+-----+---+-----------------------------------------|
    |           |V:27,|   |Git (デフォールト) か Mercurial か Bazaar|
    |etckeeper  |I:32 |162|を使って設定ファイルとそのメタデーターを |
    |           |     |   |保存 (新規)                              |
    |-----------+-----+---+-----------------------------------------|
    |changetrack|V:0, |71 |RCS を使って設定ファイルを保存 (旧式)    |
    |           |I:0  |   |                                         |
    +---------------------------------------------------------------+


    git(1) which put entire "/etc" 全てを VCS のコントロール下に置く
    ように、git(1) とともに etckeeper パッケージを使うことをお薦めし
    ます。そのインストール案内とチュートリアルは "/usr/share/doc/
    etckeeper/README.gz" にあります。

    本質的に "sudo etckeeper init" を実行すると、"/etc" に関する git
    レポジトリーが、徹底的な手順を踏む特別のフックスクリプト付きでち
    ょうど「設定履歴記録のための Git」と同様に初期化されます。

    あなたが設定を変える毎に、普通に git(1) を使って記録できます。パ
    ッケージ管理コマンドを使うと、変更に関して上手に毎回自動記録もし
    ます。

    ヒント

    "/etc" の変更履歴を閲覧するには、"sudo GIT_DIR=/etc/.git gitk" と
    実行すると、新規インストールされたパッケージや削除されたパッケー
    ジやパッケージのバージョンの変化が一目瞭然です。

%

9.3. プログラム活動の監視と制御と起動

    プログラム活動は専用ツールを用いて監視と制御できます。

    表9.7 プログラム活動の監視と制御のツールのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプコ|サイ |                  説明                  |
    |   ジ    |  ン  | ズ  |                                        |
    |---------+------+-----+----------------------------------------|
    |coreutils|V:891,|17478|nice(1): スケジューリングの優先順位の変 |
    |         |I:999 |     |更してプログラムを実行                  |
    |---------+------+-----+----------------------------------------|
    |bsdutils |V:673,|393  |renice(1): 実行中プロセスのスケジューリ |
    |         |I:999 |     |ングの優先順位を変更                    |
    |---------+------+-----+----------------------------------------|
    |         |V:739,|     |"/proc" ファイルシステムのユーティリティ|
    |procps   |I:999 |792  |ー: ps(1) と top(1) と kill(1) と watch |
    |         |      |     |(1) 等                                  |
    |---------+------+-----+----------------------------------------|
    |         |V:427,|     |"/proc" ファイルシステムのユーティリティ|
    |psmisc   |I:845 |679  |ー: killall(1) と fuser(1) と pstree(1) |
    |         |      |     |と pstree(1)                            |
    |---------+------+-----+----------------------------------------|
    |time     |V:15, |82   |time(1): 時間に関するシステムリソース使 |
    |         |I:279 |     |用状況を報告するためにプログラムを実行  |
    |---------+------+-----+----------------------------------------|
    |sysstat  |V:161,|1918 |sar(1)、iostat(1)、mpstat(1)、…: Linux  |
    |         |I:183 |     |用のシステムパーフォーマンスツール      |
    |---------+------+-----+----------------------------------------|
    |isag     |V:0,  |116  |sysstat の対話型システムアクティビティー|
    |         |I:3   |     |グラフ化ソフト                          |
    |---------+------+-----+----------------------------------------|
    |lsof     |V:391,|451  |lsof(8): "-p" オプションを使い実行中のプ|
    |         |I:946 |     |ロセスが開いているファイルをリスト      |
    |---------+------+-----+----------------------------------------|
    |strace   |V:16, |2367 |strace(1): システムコールやシグナルを追 |
    |         |I:153 |     |跡                                      |
    |---------+------+-----+----------------------------------------|
    |ltrace   |V:1,  |363  |ltrace(1): ライブラリーコールを追跡     |
    |         |I:21  |     |                                        |
    |---------+------+-----+----------------------------------------|
    |xtrace   |V:0,  |353  |xtrace(1): X11 のクライアントとサーバー |
    |         |I:0   |     |の間の通信を追跡                        |
    |---------+------+-----+----------------------------------------|
    |powertop |V:9,  |662  |powertop(1): システムの電力消費情報     |
    |         |I:217 |     |                                        |
    |---------+------+-----+----------------------------------------|
    |cron     |V:805,|263  |cron(8) デーモンからバックグランドでスケ|
    |         |I:997 |     |ジュール通りプロセスを実行              |
    |---------+------+-----+----------------------------------------|
    |anacron  |V:409,|99   |1日24時間動作でないシステム用の cron 類 |
    |         |I:482 |     |似のコマンドスケジューラー              |
    |---------+------+-----+----------------------------------------|
    |at       |V:162,|161  |at(1) と batch(1) コマンド: 特定の時間や|
    |         |I:310 |     |特定のロードレベル以下でジョブを実行    |
    +---------------------------------------------------------------+


    ヒント
   
    procps パッケージはプログラム活動の監視と制御と起動の基本中の基本
    を提供します。このすべてを習得するべきです。

%

9.3.1. プロセスの時間計測

    コマンドが起動したプロセスにより使われた時間を表示します。

    # time some_command >/dev/null
    real    0m0.035s       # 壁時計の時間 (実経過時間)
    user    0m0.000s       # ユーザーモードの時間
    sys     0m0.020s       # カーネルモードの時間

%

9.3.2. スケジューリングのプライオリティー

    ナイス値はプロセスのスケジューリングのプライオリティーを制御する
    のに使われます。

    表9.8 スケジューリングのプライオリティーのためのナイス値のリスト

    +----------------------------------------------------------+
    |ナイス値|       スケジューリングのプライオリティー        |
    |--------+-------------------------------------------------|
    |19      |最低優先順位プロセス (ナイス)                    |
    |--------+-------------------------------------------------|
    |0       |ユーザーにとっての非常に高優先順位プロセス       |
    |--------+-------------------------------------------------|
    |-20     |rootにとっての非常に高優先順位プロセス (非ナイス)|
    +----------------------------------------------------------+


    # nice  -19 top                                      # 非常にナイス
    # nice --20 wodim -v -eject speed=2 dev=0,0 disk.img # 非常に高速

    極端なナイス値はシステムに害を与えるかもしれません。本コマンドは
    注意深く使用下さい、

%

9.3.3. ps コマンド

    Debian 上の ps(1) コマンドは BSD と SystemV 機能の両方をサポート
    しプロセスの活動を静的に特定するのに有用です。

    表9.9 ps コマンドのスタイルのリスト

    +----------------------------------------+
    |スタイル|典型的コマンド|      特徴      |
    |--------+--------------+----------------|
    |BSD     |ps aux        |%CPU %MEM を表示|
    |--------+--------------+----------------|
    |System V|ps -efH       |PPID を表示     |
    +----------------------------------------+


    ゾンビ (動作していない) 子プロセスに関して、"PPID" フィールドで識
    別される親プロセス ID を使ってプロセスを停止できます。

    pstree(1) コマンドはプロセスの木 (ツリー) を表示します。

%

9.3.4. top コマンド

    Debian 上の top(1) は機能が豊富で、どのプロセスがおかしな動きをし
    ているかを動的に識別することに役立ちます。

    それはインタラクティブなフルスクリーンプログラムです。"h"-キーを
    押すことで使用法のヘルプが得られ、 "q"-キーを押すことで終了できま
    す。

%

9.3.5. プロセスによって開かれているファイルのリスト

    プロセス ID (PID)、例えば1を使うプロセスによって開かれている全フ
    ァイルは次のようにしてリストできます。

    $ sudo lsof -p 1

    PID=1 は通常 init プログラムです。

%

9.3.6. プログラム活動の追跡

    プラグラムの活動状況は、システムコールとシグナルは strace(1) で、
    ライブラリーコールは ltrace(1) で、X11 のクライアントとサーバーの
    通信は xtrace(1) でプラグラムの活動状況を追跡できます。

    ls コマンドのシステムコールを次のようにして追跡できます。

    $ sudo strace ls

%

9.3.7. ファイルやソケットを使っているプロセスの識別

    例えば "/var/log/mail.log" 等のファイルを使っているプロセスは 
    fuser(1) によって次のようにして識別できます。

    $ sudo fuser -v /var/log/mail.log
                         USER        PID ACCESS COMMAND
    /var/log/mail.log:   root       2946 F.... rsyslogd

    "/var/log/mail.log" ファイルが rsyslogd(8) コマンドによって書込み
    のために開かれている事が分かります。

    例えば "smtp/tcp" 等のソケットを使っているプロセスは fuser(1) に
    よって次のようにして識別できます。

    $ sudo fuser -v smtp/tcp
                         USER        PID ACCESS COMMAND
    smtp/tcp:            Debian-exim   3379 F.... exim4

    SMTP ポート (25) への TCP 接続を処理するためにあなたのシステムで
    は exim4(8) が実行されている事がこれで分かります。

%

9.3.8. 一定間隔でコマンドを反復実行

    watch(1) はプログラムを一定間隔で反復実行しながらフルスクリーンで
    その出力を表示します。

    $ watch w

    こうすると2秒毎更新でシステムに誰がログオンしているかを表示します
    。

%

9.3.9. ファイルに関してループしながらコマンドを反復実行

    例えばグロブパターン "*.ext" へのマッチ等の何らかの条件にマッチす
    るファイルに関してループしながらコマンドを実行する方法がいくつか
    あります。

      * シェルの for-loop 法 (「シェルループ」参照下さい):

    for x in *.ext; do if [ -f "$x"]; then command "$x" ; fi; done

      * find(1) と xargs(1) の組み合わせ:

    find . -type f -maxdepth 1 -name '*.ext' -print0 | xargs -0 -n 1 command

      * コマンド付きの "-exec" オプションを使って find(1):

    find . -type f -maxdepth 1 -name '*.ext' -exec command '{}' \;

      * 短いシェルスクリプト付きの "-exec" オプションを使って find(1)
        :

    find . -type f -maxdepth 1 -name '*.ext' -exec sh -c "command '{}' && echo 'successful'" \;

    上記の例はスペースを含む等の変なファイル名でも適正に処理できるよ
    うに書かれています。find(1) に関する上級の使用法の詳細は「ファイ
    ル選択の慣用句」を参照下さい。

%

9.3.10. GUI からプログラムをスタート

    コマンドラインインターフェース (CLI) の場合、$PATH 環境変数で指定
    されるディレクトリー中で最初にマッチした名前のプログラムが実行さ
    れます。「"$PATH" 変数」を参照ください。

    freedesktop.org スタンダード準拠のグラフィカルユーザーインターフ
    ェース (GUI) の場合、/usr/share/applications/ ディレクトリー中の
    *.desktop ファイルにより各プログラムの GUI メニュー表示に必要なア
    トリビュートが提供されます。「Freedesktop.org メニュー」参照くだ
    さい。

    例えば chromium.desktop ファイルは、プログラム名の "Name" や、プ
    ログラムの実行パスと引数の "Exec" や、使用するアイコンの "Icon"
    等の属性(Desktop Entry Specification 参照)を "Chromium Web
    Browser" に関して以下のようにして定義します:

    [Desktop Entry]
    Version=1.0
    Name=Chromium Web Browser
    GenericName=Web Browser
    Comment=Access the Internet
    Comment[fr]=Explorer le Web
    Exec=/usr/bin/chromium %U
    Terminal=false
    X-MultipleArgs=false
    Type=Application
    Icon=chromium
    Categories=Network;WebBrowser;
    MimeType=text/html;text/xml;application/xhtml_xml;x-scheme-handler/http;x-scheme-handler/https;
    StartupWMClass=Chromium
    StartupNotify=true

    これは簡略化しすぎた記述ですが、*.desktop ファイルは以下のように
    してスキャンされます。

    デスクトップ環境は $XDG_DATA_HOME と $XDG_DATA_DIR 環境変数を設定
    します。例えば GNOME 3 では:

      * $XDG_DATA_HOME が未定義。(デフォルト値の $HOME/.local/share
        が使われます。)
   
      * $XDG_DATA_DIRS は /usr/share/gnome:/usr/local/share/:/usr/
        share/ に設定されます。

    以上により、ベースディレクトリー (XDG Base Directory
    Specification 参照) や applications ディレクトリーは以下となりま
    す。

      * $HOME/.local/share/ → $HOME/.local/share/applications/

      * /usr/share/gnome/ → /usr/share/gnome/applications/
   
      * /usr/local/share/ → /usr/local/share/applications/

      * /usr/share/ → /usr/share/applications/

    *.desktop ファイルはこれらの applications ディレクトリーでこの順
    番でスキャンされます。

    ヒント

    ユーザーによるカスタムの GUI メニュー項目は *.desktop ファイルを
    $HOME/.local/share/applications/ ディレクトリーに追加することで生
    成できます。

    ヒント

    同様に、もしこれらのベースディレクトリーの下の autostart ディレク
    トリーの中に*.desktop ファイルが作成されれば、*.desktop ファイル
    中に指定されたプログラムがデスクトップ環境が起動された時点に自動
    実行されます。Desktop Application Autostart Specification を参照
    ください。

    ヒント

    同様に、もし$HOME/Desktop ディレクトリーの中に*.desktop ファイル
    が作成され、デスクトップ環境がローンチャーアイコンを表示する機能
    を有効としていれば、そこに指定されたプログラムがアイコンをクリッ
    クした際に実行されます。xdg-user-dirs-update(1) を参照ください。

%

9.3.11. スタートするプログラムのカスタム化

    一部のプログラムは他のプログラムを自動的にスタートします。このプ
    ロセスをカスタム化する上でのチェックポイントを次に記します。

      * アプリケーション設定メニュー:

          + GNOME デスクトップ: "Settings" → "System" → "Details" →
            "Default Applications"

          + KDE デスクトップ: "K" → "Control Center" → "KDE
            Components" → "Component Chooser"

          + Iceweasel ブラウザー: "Edit" → "Preferences" →
            "Applications"

          + mc(1): "/etc/mc/mc.ext"

      * "$BROWSER" や "$EDITOR" や "$VISUAL" や "$PAGER" といった環境
        変数 (eviron(7) 参照下さい)

      * "editor" や "view" や "x-www-browser" や "gnome-www-browser"
        や "www-browser" 等のプログラムに関する update-alternatives
        (8) システム (「デフォールトのテキストエディターの設定」参照
        下さい)

      * MIME タイプとプログラムと関係づける、"~/.mailcap" や "/etc/
        mailcap" ファイルの内容 (mailcap(5) 参照下さい)

      * ファイル拡張子と MIME タイプとプログラムと関係づける、"~
        /.mime.types" や "/etc/mime.types" ファイルの内容 (
        run-mailcap(1) 参照下さい)

    ヒント
   
    update-mime(8) は"/etc/mailcap.order" ファイルを使って "/etc/
    mailcap" ファイルを更新します (mailcap.order(5) 参照下さい)。

    ヒント

    debianutils パッケージは、どのエディターやページャーやウェッブブ
    ラウザーを呼び出すかに関してそれぞれ賢明な判断をする 
    sensible-browser(1) や sensible-editor(1) や sensible-pager(1) を
    提供します。これらのシェルスクリプトを読む事をお薦めします。

    ヒント

    X の下で mutt のようなコンソールアプリケーションをあなたの好むア
    プリケーションとして実行するには、次のようにして X アプリケーショ
    ンを作成し、前記の方法であなたの好む起動されるアプリケーションと
    して "/usr/local/bin/mutt-term" を設定します。

    # cat /usr/local/bin/mutt-term <<EOF
    #!/bin/sh
    gnome-terminal -e "mutt \$@"
    EOF
    chmod 755 /usr/local/bin/mutt-term

%

9.3.12. プロセスの停止

    kill(1) を使ってプロセス ID を使ってプロセスを停止 (プロセスへシ
    グナルを送信) します。

    killall(1) や pkill(1) プロセスコマンド名や他の属性を使ってプロセ
    スを停止 (プロセスへシグナルを送信) します。

    表9.10 kill コマンドが良く使うシグナルのリスト

    +------------------------------------------------+
    |シグナル値|シグナル名|           機能           |
    |----------+----------+--------------------------|
    |1         |HUP       |デーモンの再スタートします|
    |----------+----------+--------------------------|
    |15        |TERM      |普通に停止します          |
    |----------+----------+--------------------------|
    |9         |KILL      |徹底的に停止します        |
    +------------------------------------------------+


%

9.3.13. タスク1回実行のスケジュール

    at(1) コマンドを次のように実行して1回だけのジョブをスケジュールし
    ます。

    $ echo 'command -args'| at 3:40 monday

%

9.3.14. タスク定期実行のスケジュール

    cron(8) コマンドを実行して定期的タスクをスケジュールします。
    crontab(1) と crontab(5) を参照下さい。

    例えば foo というノーマルユーザーとして "crontab -e" コマンドを使
    って "/var/spool/cron/crontabs/foo" という crontab(5) ファイルを
    作成することでプロセスをスケジュールして実行する事ができます。

    crontab(5) ファイルの例を次に記します。

    # use /bin/sh to run commands, no matter what /etc/passwd says
    SHELL=/bin/sh
    # mail any output to paul, no matter whose crontab this is
    MAILTO=paul
    # Min Hour DayOfMonth Month DayOfWeek command (Day... are OR'ed)
    # run at 00:05, every day
    5  0  *  * *   $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
    # run at 14:15 on the first of every month -- output mailed to paul
    15 14 1  * *   $HOME/bin/monthly
    # run at 22:00 on weekdays(1-5), annoy Joe. % for newline, last % for cc:
    0 22 *   * 1-5 mail -s "It's 10pm" joe%Joe,%%Where are your kids?%.%%
    23 */2 1 2 *   echo "run 23 minutes after 0am, 2am, 4am ..., on Feb 1"
    5  4 *   * sun echo "run at 04:05 every Sunday"
    # run at 03:40 on the first Monday of each month
    40 3 1-7 * *   [ "$(date +%a)" == "Mon" ] && command -args

    ヒント

    連続的に稼働していないシステムでは、機器のアップタイム上可能な限
    り指定間隔に近く定期的にコマンドをスケジュールするために anacron
    パッケージをインストールします。anacron(8) と anacrontab(5) を参
    照下さい。

    ヒント

    スケジュールされたシステムメインテナンススクリプトは、そのような
    スクリプトを "/etc/cron.hourly/" か "/etc/cron.daily/" か "/etc/
    cron.weekly/" か "/etc/cron.monthly/" 中に置くことで root アカウ
    ントからそれらを定期的に実行できます。これらのスクリプトの実行時
    間は "/etc/crontab" と "/etc/anacrontab" でカスタム化できます。

%

9.3.15. Alt-SysRq キー

    システム異常に対する保険はカーネルコンパイルオプションの "マジッ
    ク SysRq キー" (SAK キー) によって提供されます。現在の Debian カ
    ーネルではこれがデフォールトです。Alt-SysRq に続いて次のキーの中
    から1つを押すことでシステムのコントロールを救済するマジックが起き
    ます。

    表9.11 SAK コマンドキーのリスト

    +---------------------------------------------------------------+
    |Alt-SysRq に|                 アクションの説明                 |
    |  続くキー  |                                                  |
    |------------+--------------------------------------------------|
    |r           |X クラッシュの後でキーボードを raw (生コード発生) |
    |            |モードから復旧                                    |
    |------------+--------------------------------------------------|
    |0           |エラーメッセージを減らすべくコンソールログレベルを|
    |            |0 と変更                                          |
    |------------+--------------------------------------------------|
    |k           |全ての現仮想ターミナル上の全てのプロセスを停止 (K |
    |            |ll)                                               |
    |------------+--------------------------------------------------|
    |e           |init(8) 以外の全てのプロセスに、SIGTERM を送信    |
    |------------+--------------------------------------------------|
    |i           |init(8) 以外の全てのプロセスに、SIGKILL を送信    |
    |------------+--------------------------------------------------|
    |s           |データーが壊れないように全てのマウントされたファイ|
    |            |ルシステムをsync (同期)します。                   |
    |------------+--------------------------------------------------|
    |u           |全てのマウントされたファイルシステムを読出し専用で|
    |            |再マウント (アンマウント、umount)                 |
    |------------+--------------------------------------------------|
    |b           |同期することもアンマウントする事も無しに、システム|
    |            |をリブート (Reboot)                               |
    +---------------------------------------------------------------+


    ヒント
   
    常軌を理解するためには、signal(7) と kill(1) と sync(1) のマンペ
    ージを読みましょう。.

    "Alt-SysRq s" と "Alt-SysRq u" と "Alt-SysRq r" の組み合わせは、
    非常に悪い状況からの脱出しシステムを止めることなく使えるキーボド
    アクセスを回復するのに有効です。

    "/usr/share/doc/linux-doc-3.*/Documentation/sysrq.txt.gz" を参照
    下さい。

    注意

    Alt-SysRq 機能があることはユーザーに root 特権機能をアクセスさせ
    ることになるのでセキュリティーリスクと考える事もできます。"/etc/
    rc.local" 中に "echo 0 >/proc/sys/kernel/sysrq" とか "/etc/
    sysctl.conf" 中に "kernel.sysrq = 0" と置くと Alt-SysRq 機能を無
    効にできます。

    ヒント

    SSH ターミナルなどからは、"/proc/sysrq-trigger" に書き込むことで
    Alt-SysRq 機能が使えます。例えば、リモートのシェルプロンプトから
    "echo s > /proc/sysrq-trigger; echo u > /proc/sysrq-trigger" とす
    ると、全てのマウントされたファイルシステムを sync (同期) して u
    mount (アンマウント) します。

9.4. システム管理ティップ

%

9.4.1. だれがシステムを利用している?

    だれがシステムを利用しているかは、次のようにしてチェックできます
    。

      * who(1) は、誰がログオンしているかを表示します。

      * w(1) は、誰がログオンしていて何をしているかを表示します。
   
      * last(1) は、最後にログインしたユーザーのリストを表示します。

      * lastb(1) は、最後にログイン失敗したユーザーのリストを表示しま
        す。

    ヒント
   
    "/var/run/utmp" と "/var/log/wtmp" はこのようなユーザー情報を保持
    します。login(1) と utmp(5) を参照下さい。

%

9.4.2. 全員への警告

    wall(1) を使うと、次のようにしてシステムにログオンしている全員に
    メッセージを送れます。

    $ echo "We are shutting down in 1 hour" | wall

%

9.4.3. ハードウエアーの識別

    PCI 的デバイス (AGP、PCI-Express、CardBus、ExpressCard、等) では
    、 (きっと "-nn" オプションとともに使う) lspci(8) がハードウエア
    ー識別の良いスタート点です。

    この代わりに、"/proc/bus/pci/devices" の内容を読むか、"/sys/bus/
    pci" の下のディレクトリーツリーを閲覧することでハードウエアーの識
    別ができます (「procfs と sysfs」参照下さい)。

    表9.12 ハードウエアー識別ツールのリスト

    +---------------------------------------------------------------+
    |パッケージ |ポプコン |サイ|                説明                |
    |           |         | ズ |                                    |
    |-----------+---------+----+------------------------------------|
    |pciutils   |V:195,   |196 |Linux PCI ユーティリティー: lspci(8)|
    |           |I:992    |    |                                    |
    |-----------+---------+----+------------------------------------|
    |usbutils   |V:84,    |324 |Linux USB ユーティリティー: lsusb(8)|
    |           |I:862    |    |                                    |
    |-----------+---------+----+------------------------------------|
    |pcmciautils|V:13,    |97  |Linux のための PCMCIA ユーティリティ|
    |           |I:21     |    |ー: pccardctl(8)                    |
    |-----------+---------+----+------------------------------------|
    |scsitools  |V:0, I:3 |390 |SCSI ハードウエアー管理のためのツー |
    |           |         |    |ル集: lsscsi(8)                     |
    |-----------+---------+----+------------------------------------|
    |procinfo   |V:0, I:13|135 |"/proc" から得られるシステム情報:   |
    |           |         |    |lsdev(8)                            |
    |-----------+---------+----+------------------------------------|
    |lshw       |V:12,    |842 |ハードウエアー設定に関する情報: lshw|
    |           |I:94     |    |(1)                                 |
    |-----------+---------+----+------------------------------------|
    |discover   |V:41,    |90  |ハードウエアー識別システム: discover|
    |           |I:947    |    |(8)                                 |
    +---------------------------------------------------------------+


%

9.4.4. ハードウエアー設定

    GNOME や KDE のような現代的な GUI のデスクトップ環境ではほとんど
    のハードウエアー設定が付随する GUI 設定ツールを通じて管理できます
    が、それらの設定の基本的手法を知っておくのは良い事です。

    表9.13 ハードウエアー設定ツールのリスト

    +---------------------------------------------------------------+
    |   パッケージ    |ポプコ|サイ|              説明               |
    |                 |  ン  | ズ |                                 |
    |-----------------+------+----+---------------------------------|
    |console-setup    |V:137,|411 |Linux コンソールのフォントとキー |
    |                 |I:959 |    |テーブルユーティリティー         |
    |-----------------+------+----+---------------------------------|
    |x11-xserver-utils|V:282,|511 |X サーバーユーティリティー: xset |
    |                 |I:534 |    |(1)、xmodmap(1)                  |
    |-----------------+------+----+---------------------------------|
    |                 |V:145,|    |Advanced Configuration and Power |
    |acpid            |I:318 |176 |Interface (ACPI) によって起こるイ|
    |                 |      |    |ベントの管理のためのデーモン     |
    |-----------------+------+----+---------------------------------|
    |acpi             |V:17, |45  |ACPI デバイス上の情報を表示するユ|
    |                 |I:302 |    |ーティリティー                   |
    |-----------------+------+----+---------------------------------|
    |sleepd           |V:0,  |86  |非使用状況のときにラップトップを |
    |                 |I:0   |    |スリープさせるデーモン           |
    |-----------------+------+----+---------------------------------|
    |                 |V:408,|    |ハードディスクアクセスの最適化 ( |
    |hdparm           |I:718 |256 |「ハードディスクの最適化」参照下 |
    |                 |      |    |さい)                            |
    |-----------------+------+----+---------------------------------|
    |smartmontools    |V:134,|2117|S.M.A.R.T. を使ってストレージシス|
    |                 |I:197 |    |テムを制御監視                   |
    |-----------------+------+----+---------------------------------|
    |setserial        |V:5,  |117 |シリアルポートの管理ツール集     |
    |                 |I:9   |    |                                 |
    |-----------------+------+----+---------------------------------|
    |memtest86+       |V:1,  |2391|メモリーハードウエアー管理のため |
    |                 |I:29  |    |のツール集                       |
    |-----------------+------+----+---------------------------------|
    |scsitools        |V:0,  |390 |SCSI ハードウエアー管理のためのツ|
    |                 |I:3   |    |ール集                           |
    |-----------------+------+----+---------------------------------|
    |setcd            |V:0,  |35  |コンパクトデバイスアクセス最適化 |
    |                 |I:1   |    |                                 |
    |-----------------+------+----+---------------------------------|
    |big-cursor       |I:1   |27  |X のための大きなマウスカーソール |
    +---------------------------------------------------------------+


    上記で、ACPI はAPM より新しい電力管理システムの枠組みです。

    ヒント
   
    最近のシステム上の CPU フリーケンシースケーリングは acpi_cpufreq
    のようなカーネルモジュールで管理されています。

%

9.4.5. システムとハードウエアーの時間

    以下はシステムとハードウエアーの時間を MM/DD hh:mm, CCYY (月/日
    時:分, 年) に設定します。

    # date MMDDhhmmCCYY
    # hwclock --utc --systohc
    # hwclock --show

    Debian システムでは時間は通常地域の時間が表示されますが、ハードウ
    エアーとシステムの時間は通常 UTC(GMT) を使います。

    ハードウエアー (BIOS) 時間が UTC に設定されている場合は、"/etc/
    default/rcS" の中の設定を "UTC=yes" と変更します。

    Debian システムが使うタイムゾーンは以下のようにして再設定できます
    。

    # dpkg-reconfigure tzdata

    ネットワーク経由でシステムの時間を更新したい場合には、ntp や
    ntpdate や chrony 等のパッケージを使って NTP サービスを利用するこ
    とを考えます。

    ヒント

    systemd の下では、ネットワーク時間同期には上記と代わり
    systemd-timesyncd を使います。詳細は systemd-timesyncd(8) を参照
    ください。

    次を参照下さい。

      * 正確な日時の管理ハウツー

      * NTP 公共サービスプロジェクト

      * ntp-doc パッケージ

    ヒント
   
    ntp パッケージ中の ntptrace(8) を使うと、NTP サービスの継がりを第
    一義的根源まで溯ることができます。

%

9.4.6. ターミナルの設定

    文字コンソールと ncurses(3) システム機能を設定するのはいくつかの
    要素があります。

      * "/etc/terminfo/*/*" ファイル (terminfo(5))

      * "$TERM" 環境変数 (term(7))

      * setterm(1)、stty(1)、tic(1)、toe(1)

    もし xterm 用の terminfo エントリーが非 Debian のxterm でうまく機
    能しない場合には、リモートから Debian システムにログインする時に
    ターミナルタイプ、"$TERM"、を "xterm" から "xterm-r6" のような機
    能限定版に変更します。詳細は "/usr/share/doc/libncurses5/FAQ" を
    参照下さい。"dumb" は"$TERM" の最低機能の共通項です。

%

9.4.7. 音のインフラ

    現在の Linux のためのサウンドカードのためのデバイスドライバーは
    Advanced Linux Sound Architecture (ALSA) で提供されています。ALSA
    は過去の Open Sound System (OSS) と互換性のためのエミュレーション
    モードを提供します。

    ヒント
   
    "cat /dev/urandom > /dev/audio" か speaker-test(1) を使ってスピー
    カをテストします。(^C で停止)

    ヒント

    音が出ない場合ですが、あなたのスピーカーが消音された出力につなが
    っているかもしれません。現代的なサウンドシステムには多くの出力が
    あります。alsa-utils パッケージ中の alsamixer(1) は音量や消音の設
    定をするのに便利です。

    アプリケーションソフトはサウンドデバイスに直接アクセスするように
    ばかりでなく標準的なサウンドサーバーシステム経由で間接的にアクセ
    スするように設定されているかもしれません。

    表9.14 サウンドパッケージのリスト

    +---------------------------------------------------------------+
    |   パッケージ    |ポプコ |サイ|              説明              |
    |                 |  ン   | ズ |                                |
    |-----------------+-------+----+--------------------------------|
    |alsa-utils       |V:341, |2283|ALSA を設定し使用するユーティリ |
    |                 |I:476  |    |ティー                          |
    |-----------------+-------+----+--------------------------------|
    |oss-compat       |V:2,   |20  |ALSA の下で "/dev/dsp not found"|
    |                 |I:29   |    |エラーを防ぐ OSS 互換性         |
    |-----------------+-------+----+--------------------------------|
    |jackd            |V:4,   |9   |JACK Audio Connection Kit.      |
    |                 |I:27   |    |(JACK) サーバー (低遅延)        |
    |-----------------+-------+----+--------------------------------|
    |libjack0         |V:1,   |338 |JACK Audio Connection Kit.      |
    |                 |I:13   |    |(JACK) ライブラリー (低遅延)    |
    |-----------------+-------+----+--------------------------------|
    |nas              |V:0,   |243 |Network Audio System (NAS) サー |
    |                 |I:0    |    |バー                            |
    |-----------------+-------+----+--------------------------------|
    |libaudio2        |V:60,  |165 |Network Audio System (NAS) ライ |
    |                 |I:488  |    |ブラリー                        |
    |-----------------+-------+----+--------------------------------|
    |pulseaudio       |V:350, |6398|PulseAudio サーバー、ESD 代替   |
    |                 |I:471  |    |                                |
    |-----------------+-------+----+--------------------------------|
    |libpulse0        |V:289, |969 |PulseAudio クライアント、ESD 代 |
    |                 |I:604  |    |替                              |
    |-----------------+-------+----+--------------------------------|
    |libgstreamer1.0-0|V:372, |5280|GStreamer: GNOME サウンドエンジ |
    |                 |I:574  |    |ン                              |
    |-----------------+-------+----+--------------------------------|
    |libphonon4       |I:121  |680 |Phonon: KDE サウンドエンジン    |
    +---------------------------------------------------------------+


    各ポピュラーなデスクトップ環境では普通共通のサウンドエンジンがあ
    ります。アプリケーションに使われるそれぞれのサウンドエンジンはそ
    れと異なるサウンドサーバーにつなぐようにもできます。

%

9.4.8. スクリーンセーバーの無効化

    スクリーンセーバーを無効にするには、次のコマンドを使います。

    表9.15 スクリーンセーバーを無効にするコマンドのリスト

    +---------------------------------------------------------------+
    |                環境                 |        コマンド         |
    |-------------------------------------+-------------------------|
    |Linux コンソール                     |setterm -powersave off   |
    |-------------------------------------+-------------------------|
    |X Window (スクリーンセーバー消去)    |xset s off               |
    |-------------------------------------+-------------------------|
    |X Window (dpms 無効)                 |xset -dpms               |
    |-------------------------------------+-------------------------|
    |X Window (スクリーンセーバーの GUI 設|xscreensaver-command     |
    |定)                                  |-prefs                   |
    +---------------------------------------------------------------+


%

9.4.9. ブザー音の無効化

    PC スピーカーのコネクタを外すとブザー音は確実に無効にできます。
    pcspkr カーネルモジュールを削除すると同じ事ができます。

    次のようにすると bash(1) が使う readline(3) プログラムが "\a"
    (ASCII=7) に出会った際にブザー音を発生するのを防げます。

    $ echo "set bell-style none">> ~/.inputrc

%

9.4.10. 使用メモリー

    メモリー使用状況を確認するのに2つのリソースがあります。

      * "/var/log/dmesg" 中にあるカーネルブートメッセージには、利用可
        能なメモリーの正確な全サイズが書かれています。
   
      * free(1) や top(1) は稼働中システムのメモリーリソース情報を表
        示します。

    以下がその例です。

    # grep '\] Memory' /var/log/dmesg
    [    0.004000] Memory: 990528k/1016784k available (1975k kernel code, 25868k reserved, 931k data, 296k init)
    $ free -k
                 total       used       free     shared    buffers     cached
    Mem:        997184     976928      20256          0     129592     171932
    -/+ buffers/cache:     675404     321780
    Swap:      4545576          4    4545572

    「dmesg は 990 MB 空いているという一方、free -k は 320 MB 空いて
    いると言っている。 600 MB 以上行方不明だ …」と不思議かもれません
    。

    "Mem:" 行の "used" のサイズが大きかったり "free" のサイズが小さか
    ったりについて悩まないでおきましょう。それらの1行下の (次の例では
    675404と321780) を読んで安心して下さい。

    1GB=1048576k の DRAM (video システムがこのメモリーの一部を使用)
    が付いている私の MacBook では次のようになっています。

    表9.16 レポートされるメモリーサイズのリスト

    +--------------------------------------------------------+
    |           報告           |           サイズ            |
    |--------------------------+-----------------------------|
    |dmesg 中の全サイズ (Total)|1016784k = 1GB - 31792k      |
    |--------------------------+-----------------------------|
    |dmesg 中の未使用 (free)   |990528k                      |
    |--------------------------+-----------------------------|
    |shell 下での全 (total)    |997184k                      |
    |--------------------------+-----------------------------|
    |shell 下での未使用 (free) |20256k (しかし実質は 321780k)|
    +--------------------------------------------------------+


%

9.4.11. システムのセキュリティーと整合性のチェック

    ダメなシステム管理をするとあなたのシステムを外界からの攻撃にさら
    すことになるかもしれません。

    システムのセキュリティーと整合性のチェックには、次の事から始める
    べきです。

      * debsums パッケージ、debsums(1) と「トップレベルの "Release"
        ファイルと信憑性」を参照下さい。

      * chkrootkit パッケージ、chkrootkit(1) 参照下さい。
   
      * clamav パッケージ類、clamscan(1) と freahclam(1) 参照下さい。

      * Debian セキュリティー FAQ.

      * Securing Debian Manual.

    表9.17 システムセキュリティーや整合性確認のためのツールリスト

    +---------------------------------------------------------------+
    |パッケージ|ポプ |サイ |                  説明                  |
    |          |コン | ズ  |                                        |
    |----------+-----+-----+----------------------------------------|
    |logcheck  |V:8, |102  |システムログの異常を管理者にメールするデ|
    |          |I:10 |     |ーモン                                  |
    |----------+-----+-----+----------------------------------------|
    |          |V:5, |     |MD5 チェックサムを使ってインストールされ|
    |debsums   |I:42 |107  |たパッケージファイルを検証するユーティリ|
    |          |     |     |ティー                                  |
    |----------+-----+-----+----------------------------------------|
    |chkrootkit|V:5, |970  |ルートキット検出ソフト                  |
    |          |I:24 |     |                                        |
    |----------+-----+-----+----------------------------------------|
    |clamav    |V:13,|774  |Unix 用アンチウィルスユーティリティー - |
    |          |I:58 |     |コマンドラインインターフェース          |
    |----------+-----+-----+----------------------------------------|
    |tiger     |V:2, |7822 |システムセキュリティーの脆弱性を報告    |
    |          |I:3  |     |                                        |
    |----------+-----+-----+----------------------------------------|
    |tripwire  |V:2, |11521|ファイルやディレクトリーの整合性チェック|
    |          |I:3  |     |ソフト                                  |
    |----------+-----+-----+----------------------------------------|
    |john      |V:2, |452  |アクティブなパスワードクラッキングツール|
    |          |I:12 |     |                                        |
    |----------+-----+-----+----------------------------------------|
    |aide      |V:1, |2063 |先進的進入検出環境 - 静的ライブラリー   |
    |          |I:2  |     |                                        |
    |----------+-----+-----+----------------------------------------|
    |integrit  |V:0, |329  |ファイル整合性確認プログラム            |
    |          |I:0  |     |                                        |
    |----------+-----+-----+----------------------------------------|
    |crack     |V:0, |149  |パスワード推定プログラム                |
    |          |I:1  |     |                                        |
    +---------------------------------------------------------------+


    次のシンプルなスクリプトを使うと、典型的な間違いの全員書込み可の
    ファイルパーミッションをチェックできます。

    # find / -perm 777 -a \! -type s -a \! -type l -a \! \( -type d -a -perm 1777 \)

    注意

    debsums パッケージはローカルに保存された MD5 チェックサムを使うの
    で、悪意ある攻撃に対抗するセキュリティー監査ツールとしては完全に
    は信頼できません。

%

9.5. データー保存のティップ

    Linux のlive CDs とかレスキューモードで debian-installer CDs であ
    なたのシステムをブートすることでブートデバイス上のデーターストレ
    ージの再設定が簡単にできます。

%

9.5.1. ディスク空間の利用状況

    ディスク空間使用状況は mount と coreutils と xdu パッケージが提供
    するプログラムで評価できます:

      * mount(8) はマウントされたファイルシステム (= ディスク) すべて
        を報告します。

      * df(1) はファイルシステムのディスク空間使用状況を報告します。

      * du(1) はディレクトリーツリーのディスク空間使用状況を報告しま
        す。

    ヒント

    du(8) の出力を xdu(1x) に "du -k . |xdu" や "sudo du -k -x / |
    xdu" 等として注ぎ込むとそのグラフィカルでインタラクティブな表現が
    作成できます。

%

9.5.2. ディスクパーティション設定

    ディスクのパーティションの設定に関して、fdisk(8) は標準と考えられ
    てきていますが、parted(8) も注目に値します。"ディスクパーティショ
    ンデーター" や "パーティションテーブル" や "パーティションマップ"
    や "ディスクラベル" は全て同意語です。

    殆どの PC では、ディスクのパーティションデーターが最初のセクター
    つまり LBA セクター 0 (512バイト) に保持される、古典的なマスター
    ブートレコード (MBR) 方式が使われています。

    注記

    新規の Intel ベースの Mac のような拡張ファームウェアインターフェ
    イス (EFI) 付きの一部 PC では、ディスクパーティションデーターをセ
    クターの最初以外に保持する GUID Partition Table (GPT) 方式が使わ
    れています。

    fdisk(8) はディスクパーティションツールの標準でしたが、parted(8)
    がそれを置き換えつつあります。

    表9.18 ディスクパーティション管理パッケージのリスト

    +---------------------------------------------------------------+
    |パッケージ|ポプコ |サイ| GPT |              説明               |
    |          |  ン   | ズ |     |                                 |
    |----------+-------+----+-----+---------------------------------|
    |          |V:891, |    |非サ |fdisk(8) と cfdisk(8) を含む雑多 |
    |util-linux|I:999  |4598|ポー |なシステムユーティリティー       |
    |          |       |    |ト   |                                 |
    |----------+-------+----+-----+---------------------------------|
    |parted    |V:363, |304 |サポ |GNU Parted ディスクパーティション|
    |          |I:561  |    |ート |とリサイズのプログラム           |
    |----------+-------+----+-----+---------------------------------|
    |gparted   |V:19,  |2046|サポ |libparted ベースの GNOME パーティ|
    |          |I:132  |    |ート |ションエディター                 |
    |----------+-------+----+-----+---------------------------------|
    |gdisk     |V:278, |852 |サポ |GPT ディスク用パーティションエデ |
    |          |I:513  |    |ート |ィター                           |
    |----------+-------+----+-----+---------------------------------|
    |kpartx    |V:16,  |87  |サポ |パーティション用のデバイスマッピ |
    |          |I:29   |    |ート |ングを作成するプログラム         |
    +---------------------------------------------------------------+


    注意

    parted(8) はファイルシステムを生成やリサイズも出きるということで
    すが、そのようなことは mkfs(8) (mkfs.msdos(8) と mkfs.ext2(8) と 
    mkfs.ext3(8) とmkfs.ext4(8) と …) とか resize2fs(8) 等の最もよく
    メンテされている専用ツールを使って行う方がより安全です。

    注記

    GPT と MBR 間で切り替えるには、ディスクの最初数ブロックの内容を直
    接消去し (「ファイル内容の消去」参照下さい)、"parted /dev/sdx
    mklabel gpt" か "parted /dev/sdx mklabel msdos" を使ってそれを設
    定する必要があります。ここで "msdos" がMBR のために使われているこ
    とを覚えておきます。

%

9.5.3. UUID を使ってパーティションをアクセス

    あなたのパーティションの再設定やリムーバブルストレージメディアの
    起動順序はパーティションの名前を変えることになるかもしれませんが
    、それに首尾一貫してアクセスできます。もしディスクが複数ありあな
    たの BIOS がそれに首尾一貫したデバイス名をつけない時にも、これは
    役に立ちます。

      * "-U" オプションを使って mount(8) を実行すると "/dev/sda3" の
        ようなファイル名を使うのではなく UUID を使ってブロックデバイ
        スをマウントできます。
   
      * "/etc/fstab" (fstab(5) 参照下さい) は UUID を使えます。

      * ブートローダー (「2段目: ブートローダー」) もまた UUID を使え
        ます。

    ヒント
   
    ブロックスペシャルデバイスの UUID はblkid(8) を使って見極められま
    す。

    ヒント
   
    リムーバブルストレージメディア等のデバイス名は、必要なら udev
    rules を使って静的になります。「udev システム」を参照下さい。

%

9.5.4. LVM2

    LVM2 は Linux カーネル用の論理ボリュームマネージャーです。LVM2 を
    使うと、ディスクパーティションを物理的ハードディスクではなく論理
    ボリューム上の作成できるようになります。

    LVMには以下が必要です。

      * Linux カーネルによる device-mapper サポート (Debian カーネル
        ではデフォルト)

      * ユーザースペースの device-mapper サポートライブラリー
        (libdevmapper* パッケージ)

      * ユーザースペースの LVM2 ツール (lvm2 パッケージ)

    以下のマンページから LVM2 を学び始めましょう。

      * lvm(8): LVM2 機構の基本 (全 LVM2 コマンドのリスト)

      * lvm.conf(5): LVM2 の設定ファイル

      * lvs(8): 論理ボリュームの情報を報告します

      * vgs(8): ボリュームグループの情報を報告します

      * pvs(8): 物理ボリュームの情報を報告します

%

9.5.5. ファイルシステム設定

    ext4 ファイルシステム用に e2fsprogs パッケージは次を提供します。

      * 新規の ext4 ファイルシステムを作成するための mkfs.ext4(8)

      * 既存の ext4 ファイルシステムをチェックと修理するための 
        fsck.ext4(8)

      * ext4 ファイルシステムのスーパーブロックを設定するための 
        tune2fs(8)

      * debugfs(8) を使ってext4 ファイルシステムをインタラクティブに
        デバグします。(削除したファイルを回復する undel コマンドがあ
        ります。)

    mkfs(8) と fsck(8) コマンドは各種ファイルシステム依存プログラム
    (mkfs.fstype や fsck.fstype) のフロントエンドとして e2fsprogs に
    より提供されています。ext4 ファイルシステム用は、mkfs.ext4(8) と 
    fsck.ext4(8) で、それぞれ mke2fs(8) と e2fsck(8) にシムリンクされ
    ています。

    Linux によってサポートされる各ファイルシステムでも、類似コマンド
    が利用可能です。

    表9.19 ファイルシステム管理用パッケージのリスト

    +---------------------------------------------------------------+
    | パッケージ  |ポプコ|サイ|                説明                 |
    |             |  ン  | ズ |                                     |
    |-------------+------+----+-------------------------------------|
    |e2fsprogs    |V:576,|1449|ext2/ext3/ext4 ファイルシステムのため|
    |             |I:999 |    |のユーティリティー                   |
    |-------------+------+----+-------------------------------------|
    |reiserfsprogs|V:11, |1132|Reiserfs ファイルシステムのためのユー|
    |             |I:29  |    |ティリティー                         |
    |-------------+------+----+-------------------------------------|
    |dosfstools   |V:128,|235 |FAT ファイルシステムのためのユーティ |
    |             |I:524 |    |リティー (Microsoft: MS-DOS, Windows)|
    |-------------+------+----+-------------------------------------|
    |xfsprogs     |V:21, |3191|XFS ファイルシステムのためのユーティ |
    |             |I:98  |    |リティー (SGI: IRIX)                 |
    |-------------+------+----+-------------------------------------|
    |ntfs-3g      |V:186,|1479|NTFS ファイルシステムのためのユーティ|
    |             |I:512 |    |リティー (Microsoft: Windows NT, …)  |
    |-------------+------+----+-------------------------------------|
    |jfsutils     |V:1,  |1577|JFS ファイルシステムのためのユーティ |
    |             |I:12  |    |リティー (IBM: AIX, OS/2)            |
    |-------------+------+----+-------------------------------------|
    |reiser4progs |V:0,  |1373|Reiser4 ファイルシステムのためのユー |
    |             |I:4   |    |ティリティー                         |
    |-------------+------+----+-------------------------------------|
    |hfsprogs     |V:0,  |356 |HFS と HFS Plus ファイルシステムのた |
    |             |I:8   |    |めのユーティリティー (Apple: Mac OS) |
    |-------------+------+----+-------------------------------------|
    |btrfs-progs  |V:38, |4027|btrfs ファイルシステムのためのユーテ |
    |             |I:64  |    |ィリティー                           |
    |-------------+------+----+-------------------------------------|
    |zerofree     |V:3,  |25  |ext2/3/4 ファイルシステムのフリーブロ|
    |             |I:94  |    |ックをゼロにセットするプログラム     |
    +---------------------------------------------------------------+


    ヒント

    Ext4 ファイルシステムは Linux システムのためのデフォルトのファイ
    ルシステムで、特定の使用しない理由がない限りこれを使用することが
    強く推奨されます。

    ヒント

    Btrfs ファイルシステムが Linux カーネル 3.2 (Debian wheezy) では
    利用可能です。ext4 ファイルシステムは次のデフォルトのファイルシス
    テムとなると期待されています。

    警告

    カーネル空間でのライブ fsck(8) 機能やブートローダーサポートが提供
    されるようになるまでは、Btrfs をあなたのクリチカルなデーターに用
    いるべきではありません。

    ヒント

    一部のツールはファイルシステムへのアクセスを Linux カーネルのサポ
    ート無しでも可能にします (「ディスクをマウントせずに操作」参照下
    さい)。

%

9.5.6. ファイルシステムの生成と整合性チェック

    mkfs(8) コマンドは Linux システム上でファイルシステムを生成します
    。fsck(8) コマンドは Linux システム上でファイルシステムの整合性チ
    ェックと修理機能を提供します。

    現在 Debian は、ファイルシステム形成後に定期的な fsck 無しがデフ
    ォルトです。

    注意
   
    一般的に fsck をマウントされているファイルシステムに実行すること
    は安全ではありません。

    ヒント

    "/etc/mke2fs.conf" 中に "enable_periodic_fsck" と設定し、"tune2fs
    -c0 /dev/<partition_name>"を実行して最大マウント回数を 0 と設定す
    れば、再起動時にfsck(8) コマンドを root ファイルシステムを含む全
    ファイルシステムに安全に実行可能です。mke2fs.conf(5) と tune2fs
    (8) を参照ください。

    ヒント
   
    ブートスクリプトから実行される fsck(8) コマンドの結果を "/var/log
    /fsck/" 中のファイルからチェックします。

%

9.5.7. マウントオプションによるファイルシステムの最適化

    "/etc/fstab" により静的なファイルシステム設定がなされます。例えば
    、

    # <file system> <mount point>   <type>  <options>       <dump>  <pass>
    proc            /proc           proc    defaults        0       0
    UUID=709cbe4c-80c1-56db-8ab1-dbce3146d2f7 / ext4 noatime,errors=remount-ro 0 1
    UUID=817bae6b-45d2-5aca-4d2a-1267ab46ac23 none swap sw  0       0
    /dev/scd0       /media/cdrom0   udf,iso9660 user,noauto 0       0

    ヒント

    UUID (「UUID を使ってパーティションをアクセス」参照下さい) は、"/
    dev/hda3" や "/dev/hda3" 等の通常のブロックデバイス名の代わりにブ
    ロックデバイスを指定するのに使えます。

    ファイルシステムのパーフォーマンスや性格はそれに使われるマウント
    オプションによって最適化できます (fstab(5) と mount(8) 参照下さ
    い)。

      * "defaults" オプションはデフォールトのオプションが次の意味で
        す: "rw,suid,dev,exec,auto,nouser,async"。(一般的)

      * "noatime" もしくは "relatime" オプションは読出しアクセスを高
        速化するのに非常に効果的です。(一般的)

      * "user" オプションは通常ユーザーがファイルシステムをマウント出
        来るようにします。このオプションは "noexec,nosuid,nodev" オプ
        ションの組み合わせの意味です。(一般的、CD や usbストレージデ
        バイスに使用)

      * "noexec,nodev,nosuid" オプションの組み合わせはセキュリティー
        の強化に使われます。(一般的)

      * "noauto" オプションは明示的操作のみにマウントを制限します。
        (一般的)

      * ext3fs への "data=journal" オプションは、書込み速度を犠牲にに
        しますが、停電時のデーター整合性を強化します。

    ヒント

    ルートファイルシステムに非デフォールトのジャーナルモードを設定す
    るには、例えば "rootflags=data=journal" 等の、カーネルブートパラ
    メーター (「2段目: ブートローダー」参照下さい) を与える必要があり
    ます。lenny の場合、デフォールトのジャーナルモードは "rootflags=
    data=ordered" です。squeeze の場合、デフォールトのジャーナルモー
    ドは "rootflags=data=writeback" です。

%

9.5.8. スーパーブロックによるファイルシステムの最適化

    tune2fs(8) コマンドを用いてファイルシステムのスーパーブロックによ
    ってファイルシステムを最適化できます。

      * "sudo tune2fs -l /dev/hda1" を実行するとそのファイルシステム
        スーパーブロックを表示します。

      * "sudo tune2fs -c 50 /dev/hda1" を実行するとファイルシステムの
        チェック (ブートアップ時の fsck 実行) の頻度を50回のブート毎
        に変更します。

      * "sudo tune2fs -j /dev/hda1" の実行は ext2 から ext3 へとファ
        イルシステム変換してファイルシステムにジャーナリングの機能を
        追加します。(アンマウントしたファイルシステムに対して実行しま
        す。)

      * "sudo tune2fs -O extents,uninit_bg,dir_index /dev/hda1 &&
        fsck -pf /dev/hda1" の実行はファイルシステムを ext3 から ext4
        に変換します。(アンマウントしたファイルシステムに対して実行し
        ます。)

    ヒント

    tune2fs(8) は、その名前にもかかわらず、ext2 ファイルシステムに機
    能するだけでなく ext3 とか ext4 ファイルシステムに関しても機能し
    ます。

%

9.5.9. ハードディスクの最適化

    警告

    ハードディスクの設定はデーターの整合性にとって非常に危険な事なの
    で、その設定をさわる前にお使いのハードウエアーをチェックし 
    hdparam(8) のマンページをチェックします。

    例えば "/dev/hda" に対して "hdparm -tT /dev/hda" とするとハードデ
    ィスクのアクセス速度をテストできます。(E)IDE を使って接続された一
    部のハードディスクでは、"(E)IDE 32ビット I/O サポート" を有効にし
    "using_dma フラグ" を有効にし "interrupt-unmask フラグ" を設定し
    "複数16セクター I/O" を設定するように、"hdparm -q -c3 -d1 -u1
    -m16 /dev/hda" とすると高速化できます (危険です!)。

    例えば "/dev/sda" に対して "hdparm -W /dev/sda" とするとハードデ
    ィスクの書込みキャッシュ機能をテストできます。"hdparm -W 0 /dev/
    sda" とするとハードディスクの書込みキャッシュ機能を無効にできます
    。

    不良プレスの CDROM を現代的な高速 CD-ROM ドライブで読むには、
    "setcd -x 2" としてそれを減速して使えば読めるかもしれません。

%

9.5.10. ソリッドステートドライブの最適化

    ソリッドステートドライブ (SSD) のパーフォーマンスやディスク消耗は
    以下のようにすると最適化できます。

      * 最新の Linux カーネルを使用。 (>=3.2)

      * ディスク読み出しアクセス時のディスク書き込みの低減。

          + "noatime" か "relatime" マウントオプションを /etc/fstab
            中で設定します。

      * TRIM コマンドを有効にします。

          + "discard" マウントオプションを /etc/fstab 中で ext4 ファ
            イルシステム、スワップ (swap) パーティション、 Btrfs、他
            に設定します。fstab(5) 参照下さい。

          + "discard" オプションを /etc/lvm/lvm.conf 中で LVM に関し
            て設定します。lvm.conf(5) 参照下さい。
   
          + "discard" オプションを /etc/crypttab 中で dm-crypt に関し
            て設定します。crypttab(5) 参照下さい。

      * SSD に最適化したディスクスペース配分手順の有効化。

          + "ssd" マウントオプションを /etc/fstab 中で Btrfs に関して
            設定します。

      * ラップトップ PC の場合、システムがデーターをディスクに書き出
        すのを10 分間隔とします。

          + "commit=600" マウントオプションを /etc/fstab 中で設定しま
            す。fstab(5) 参照下さい。

          + AC 操作時も laptop-mode を用いるように pm-utils を設定し
            ます。 Debian BTS #659260 参照下さい。

    警告
   
    書き出しを通常の 5 秒間隔から 10 分間隔に変更すると電源喪失時にデ
    ーターが壊れやすくなります。

%

9.5.11. SMART を用いたハードディスクの破壊の予測

    smartd(8) デーモンを使うと SMART に文句を言うハードディスクの監視
    と記録ができます。

     1. BIOS のSMART 機能を有効にします。

     2. smartmontools パッケージをインストールします。

     3. df(1) を使ってリストすることであなたのハードディスクを識別し
        ます。

          + 監視対象のハードディスクを "/dev/hda" と仮定します。

     4. SMART 機能が実際に有効となっているかを "smartctl -a /dev/hda"
        のアウトプットを使ってチェックします。

          + もし有効でない場合には、"smartctl -s on -a /dev/hda" とし
            て有効にします。

     5. 次のようにして smartd(8) デーモンを実行します。

          + "/etc/default/smartmontools" ファイル中の "start_smartd=
            yes" をアンコメントします。

          + "sudo /etc/init.d/smartmontools restart" として smartd(8)
            デーモンを再実行します。

    ヒント
   
    smartd(8) デーモンは、警告の通知の仕方を含めて /etc/smartd.conf
    ファイルを用いてカスタム化できます。

%

9.5.12. $TMPDIR 経由で一時保存ディレクトリーを指定

    通常アプリケーションは一時保存ディレクトリー "/tmp" のもとに一時
    ファイルを作成します。もし "/tmp" が十分なスペースを提供できない
    場合、行儀のいいプログラムなら $TMPDIR 変数を使ってそのような一時
    保存ディレクトリを指定できます。

%

9.5.13. LVM を使う使用可能なストレージ空間の拡張

    インストール時に論理ボリュームマネージャー (LVM) (Linux 機能) 上
    に作られたパーティションは、大掛かりなシステムの再設定無しに複数
    のストレージデバイスにまたがる LVM 上のエクステントを継ぎ足したり
    その上のエクステントを切り捨てることで簡単にサイズ変更が出きます
    。

%

9.5.14. 他パーティションをマウントする使用可能なストレージ空間の拡張

    空のパーティションがあれば (例えば "/dev/sdx")、それを mkfs.ext4
    (1) を使ってフォーマットし、それをあなたが空間をより必要とするデ
    ィレクトリーに mount(8) することができます。(元来あったデーター内
    容はコピーする必要があります。)

    $ sudo mv work-dir old-dir
    $ sudo mkfs.ext4 /dev/sdx
    $ sudo mount -t ext4 /dev/sdx work-dir
    $ sudo cp -a old-dir/* work-dir
    $ sudo rm -rf old-dir

    ヒント

    上記の代わりに、空のディスクイメージファイル (「空のディスクイメ
    ージ作成」参照下さい) をループデバイスとしてマウントする (「ディ
    スクイメージファイルをマウント」参照下さい) 事もできます。実際の
    ディスク使用は実際にデーターを溜め込むとともに成長します。

9.5.15. 他ディレクトリーをバインドマウントする使用可能なストレージ空
間の拡張

    使える空間がある他のパーティション中に空のディレクトリーがあれば
    (例えば "/path/to/emp-dir")、そのディレクトリーを --bind" オプシ
    ョンを使って、空間を必要としているディレクトリー (例えば
    "work-dir")にマウントすることができます。

    $ sudo mount --bind /path/to/emp-dir work-dir

9.5.16. 他ディレクトリーをオーバーレーマウントすることで使用可能なス
トレージ空間を拡張

    Linux カーネル 3.18 以降 (Debian Stetch 9.0 以降) を使うと、他の
    パーティション中に使える空間 (例えば "/path/to/empty" と "/path/
    to/work") があれば、その中にディレクトリーを作成し、容量が必要な
    古いディレクトリー(e.g., "/path/to/old")の上に OverlayFS を使って
    積み重ねることができます。

    $ sudo mount -t overlay overlay \
      -olowerdir=/path/to/old-dir,upperdir=/path/to/empty,workdir=/path/to/work

    ここで、"/path/to/old" 上に書き込むには、読み書きが許可されたパー
    ティション上に "/path/to/empty" と "/path/to/work" があることが必
    要です。

%

9.5.17. シムリンクを使う使用可能なストレージ空間の拡張

    注意

    ここに書かれている事は非推奨です。ソフトウエアーによっては「ディ
    レクトリーへのシムリンク」ではうまく機能しません。上記の「マウン
    トする」アプローチを代わりに使ってください。

    使える空間がある他のパーティション中に空のディレクトリーがあれば
    (例えば "/path/to/emp-dir")、そのディレクトリーへ ln(8) を使って
    シムリンクを作成することができます。

    $ sudo mv work-dir old-dir
    $ sudo mkdir -p /path/to/emp-dir
    $ sudo ln -sf /path/to/emp-dir work-dir
    $ sudo cp -a old-dir/* work-dir
    $ sudo rm -rf old-dir

    警告

    "ディレクトリーへのシムリンク" を "/opt" のようなシステムが管理す
    るディレクトリーに使用してはいけません。システムがアップグレード
    される際にそのようなシムリンクは上書きされるかもしれません。

%

9.6. ディスクイメージ

    次に、ディスクイメージの操作を論じます。

%

9.6.1. ディスクイメージの作成

    例えば2番目の SCSI もしくはシリアル ATA ドライブ "/dev/sdb" 等の
    、アンマウントされたドライブのディスクイメージファイル "disk.img"
    はcp(1) か dd(1) を用いれば次のようにして作れます。

    # cp /dev/sdb disk.img
    # dd if=/dev/sdb of=disk.img

    プライマリ IDE ディスクの最初のセクターにある伝統的 PC のマスター
    ブートレコード (MBR) (「ディスクパーティション設定」参照下さい)
    のディスクイメージは、dd(1) を用いれば次のようにして作れます。

    # dd if=/dev/hda of=mbr.img bs=512 count=1
    # dd if=/dev/hda of=mbr-nopart.img bs=446 count=1
    # dd if=/dev/hda of=mbr-part.img skip=446 bs=1 count=66

      * "mbr.img": パーティションテーブル付きの MBR

      * "mbr-nopart.img": パーティションテーブル抜きの MBR。

      * "mbr-part.img": MBR のパーティションテーブルのみ。

    ブートディスクとして SCSI ドライブもしくはシリアル ATA デバイスが
    使われる場合、"/dev/hda" を"/dev/sda" に置き換えて下さい。

    オリジナルディスクのパーティションのイメージを作る場合には、"/dev
    /hda" を"/dev/hda1" 等で置き換えます。

%

9.6.2. ディスクに直接書込み

    ディスクイメージファイル "disk.img" はdd(1) を使ってサイズがマッ
    チする例えば "/dev/sdb" という2番目の SCSI ドライブに次のようにし
    て書き込むことができます。

    # dd if=disk.img of=/dev/sdb

    同様にディスクパーティションイメージファイル "partition.img" はサ
    イズがマッチする例えば "/dev/sdb1" という2番目の SCSI ドライブの1
    番目のパーティションに次のようにして書き込むことができます。

    # dd if=partition.img of=/dev/sdb1

%

9.6.3. ディスクイメージファイルをマウント

    単一パーティションイメージを含むディスクイメージ "partition.img"
    は次のように loop デバイスを使いマウントしアンマウントできます。

    # losetup -v -f partition.img
    Loop device is /dev/loop0
    # mkdir -p /mnt/loop0
    # mount -t auto /dev/loop0 /mnt/loop0
    ...hack...hack...hack
    # umount /dev/loop0
    # losetup -d /dev/loop0

    これは以下のように簡略化出来ます。

    # mkdir -p /mnt/loop0
    # mount -t auto -o loop partition.img /mnt/loop0
    ...hack...hack...hack
    # umount partition.img

    複数のパーティションを含むディスクイメージ "disk.img" の各パーテ
    ィションは loop デバイスを使ってマウント出来ます。loop デバイスは
    パーティションをデフォルトでは管理しないので、次のようにそれをリ
    セットする必要があります。

    # modinfo -p loop # verify kernel capability
    max_part:Maximum number of partitions per loop device
    max_loop:Maximum number of loop devices
    # losetup -a # verify nothing using the loop device
    # rmmod loop
    # modprobe loop max_part=16

    これで、loop デバイスは16パーティションまで管理出来ます。

    # losetup -v -f disk.img
    Loop device is /dev/loop0
    # fdisk -l /dev/loop0

    Disk /dev/loop0: 5368 MB, 5368709120 bytes
    255 heads, 63 sectors/track, 652 cylinders
    Units = cylinders of 16065 * 512 = 8225280 bytes
    Disk identifier: 0x452b6464

          Device Boot      Start         End      Blocks   Id  System
    /dev/loop0p1               1         600     4819468+  83  Linux
    /dev/loop0p2             601         652      417690   83  Linux
    # mkdir -p /mnt/loop0p1
    # mount -t ext4 /dev/loop0p1 /mnt/loop0p1
    # mkdir -p /mnt/loop0p2
    # mount -t ext4 /dev/loop0p2 /mnt/loop0p2
    ...hack...hack...hack
    # umount /dev/loop0p1
    # umount /dev/loop0p2
    # losetup -d /dev/loop0

    この他、同様の効果は kpartx パッケージの kpartx(8) により作られる
    デバイスマッパーデバイスを用いて次のようにして実現も出来ます。

    # kpartx -a -v disk.img
    ...
    # mkdir -p /mnt/loop0p2
    # mount -t ext4 /dev/mapper/loop0p2 /mnt/loop0p2
    ...
    ...hack...hack...hack
    # umount /dev/mapper/loop0p2
    ...
    # kpartx -d /mnt/loop0

    注記

    MBR 等をスキップするオフセットを使った loop デバイスによっても、
    このようなディスクイメージの単一パーティションをマウント出来ます
    。しかしこれは失敗しがちです。

%

9.6.4. ディスクイメージのクリーニング

    ディスクイメージファイル "disk.img" は消去済みのファイルを綺麗に
    無くした綺麗なスパースイメージ "new.img" に次のようにしてできます
    。

    # mkdir old; mkdir new
    # mount -t auto -o loop disk.img old
    # dd bs=1 count=0 if=/dev/zero of=new.img seek=5G
    # mount -t auto -o loop new.img new
    # cd old
    # cp -a --sparse=always ./ ../new/
    # cd ..
    # umount new.img
    # umount disk.img

    もし "disk.img" が ext2 か ext3 か ext4 の場合には、zerofree パッ
    ケージの zerofree(8) を使うことも出来ます。

    # losetup -f -v disk.img
    Loop device is /dev/loop3
    # zerofree /dev/loop3
    # cp --sparse=always disk.img new.img

%

9.6.5. 空のディスクイメージ作成

    5GiB まで成長可能な空のディスクイメージファイル "disk.img" はdd
    (1) と mke2fs(8) を使って次のようにして作成できます。

    $ dd bs=1 count=0 if=/dev/zero of=disk.img seek=5G

    loop デバイスを使ってこのディスクイメージ "disk.img" 上に ext4 フ
    ァイルシステムを作成できます。

    # losetup -f -v disk.img
    Loop device is /dev/loop1
    # mkfs.ext4 /dev/loop1
    ...hack...hack...hack
    # losetup -d /dev/loop1
    $ du  --apparent-size -h disk.img
    5.0G  disk.img
    $ du -h disk.img
    83M disk.img

    "sparse" に関して、そのファイルサイズは 5.0GiB でその実ディスク使
    用はたったの 83MiB です。この相違は ext4 がスパースファイルを保持
    できるから可能となっています。

    ヒント
   
    スパースファイルによる実際のディスク使用はそこに書かれるデーター
    とともに成長します。

    「ディスクイメージファイルをマウント」にあるように loop デバイス
    またはデバイスマッパーデバイスによりデバイスに同様の操作をするこ
    とで、このディスクイメージ "disk.img" をparted(8) または fdisk(8)
    を使ってパーティションし mkfs.ext4(8) や mkswap(8) 等を使ってファ
    イルシステムを作れます。

%

9.6.6. ISO9660 イメージファイル作成

    "source_directory" のソースディレクトリーツリーから作られる
    ISO9660 イメージファイル"cd.iso" はcdrkit が提供する genisoimage
    (1) を使って次のようにして作成できます。

    #  genisoimage -r -J -T -V volume_id -o cd.iso source_directory

    同様に、ブート可能な ISO9660 イメージファイル "cdboot.iso" は、
    debian-installer のような "source_directory" にあるディレクトリー
    ツリーから次のようにして作成できます。

    #  genisoimage -r -o cdboot.iso -V volume_id \
       -b isolinux/isolinux.bin -c isolinux/boot.cat \
       -no-emul-boot -boot-load-size 4 -boot-info-table source_directory

    上記では、Isolinux ブートローダー (「2段目: ブートローダー」参照
    下さい) がブートに使われています。

    次のようにすると CD-ROM デバイスから直接 md5sum 値を計算し
    ISO9660 イメージを作成できます。

    $ isoinfo -d -i /dev/cdrom
    CD-ROM is in ISO 9660 format
    ...
    Logical block size is: 2048
    Volume size is: 23150592
    ...
    # dd if=/dev/cdrom bs=2048 count=23150592 conv=notrunc,noerror | md5sum
    # dd if=/dev/cdrom bs=2048 count=23150592 conv=notrunc,noerror > cd.iso

    警告
   
    正しい結果を得るために上記のように Linux の ISO9660 ファイルシス
    テム先読みバグを注意深く避けなければいけません。

%

9.6.7. CD/DVD-R/RW に直接書込み

    ヒント
   
    DVD は、cdrkit が提供する wodim(1) にとっては単に大きな CD です。

    使えるデバイスは次のようにするとみつかります。

    # wodim --devices

    そしてブランクの CD-R をドライブに挿入して、例えば "/dev/hda" と
    いうこのデバイスに ISO9660 イメージファイル "cd.iso" にwodim(1)
    を使って次のようにして書込みます。

    # wodim -v -eject dev=/dev/hda cd.iso

    もし CD-R ではなく CD-RW が使われている場合には、次を代わりに実行
    して下さい。

    # wodim -v -eject blank=fast dev=/dev/hda cd.iso

    ヒント

    もしあなたのデスクトップシステムが CD を自動的にマウントする場合
    、wodim(1) を使う前に "sudo unmount /dev/hda" として CD をアンマ
    ウントします。

%

9.6.8. ISO9660 イメージファイルをマウント

    もし "cd.iso" の内容が ISO9660 イメージの場合、次のようにするとそ
    れを "/cdrom" に手動でマウントできます。

    # mount -t iso9660 -o ro,loop cd.iso /cdrom

    ヒント

    現代的なデスクトップシステムではISO9660フォーマットされた CD のよ
    うなリムーバブルメディアを自動的にマウントします (「リムーバブル
    ストレージデバイス」参照下さい)。

%

9.7. バイナリーデーター

    次に、ストレージメディア上のバイナリーデーターを直接操作すること
    を論じます。

%

9.7.1. バイナリーデーターの閲覧と編集

    もっとも基本的なバイナリーファイルを閲覧方法は "od -t x1" コマン
    ドを使うことです。

    表9.20 バイナリーデーターを閲覧や編集するパッケージのリスト

    +---------------------------------------------------------------+
    |  パッケージ   |ポプコ|サイ |               説明               |
    |               |  ン  | ズ  |                                  |
    |---------------+------+-----+----------------------------------|
    |               |V:891,|     |ファイルをダンプする od(1) がある |
    |coreutils      |I:999 |17478|基本パッケージ (HEX, ASCII, OCTAL,|
    |               |      |     |…)                                |
    |---------------+------+-----+----------------------------------|
    |               |V:60, |     |ファイルをダンプする hd(1) がある |
    |bsdmainutils   |I:996 |26   |ユーティリティーパッケージ (HEX,  |
    |               |      |     |ASCII, OCTAL, …)                  |
    |---------------+------+-----+----------------------------------|
    |hexedit        |V:1,  |72   |バイナリーエディターとビューワー  |
    |               |I:12  |     |(HEX, ASCII)                      |
    |---------------+------+-----+----------------------------------|
    |bless          |V:0,  |1028 |フル機能の16進エディター (GNOME)  |
    |               |I:4   |     |                                  |
    |---------------+------+-----+----------------------------------|
    |okteta         |V:1,  |1508 |フル機能の16進エディター (KDE4)   |
    |               |I:15  |     |                                  |
    |---------------+------+-----+----------------------------------|
    |ncurses-hexedit|V:0,  |132  |バイナリーエディターとビューワー  |
    |               |I:2   |     |(HEX, ASCII, EBCDIC)              |
    |---------------+------+-----+----------------------------------|
    |beav           |V:0,  |133  |バイナリーエディターとビューワー  |
    |               |I:0   |     |(HEX, ASCII, EBCDIC, OCTAL, …)    |
    +---------------------------------------------------------------+


    ヒント

    HEX は底が16の16進フォーマットです。OCTAL は底が8の8進フォーマッ
    トです。ASCII (アスキー) は情報交換用アメリカ標準コードで、通常の
    英文テキストです。EBCDIC (エビシディック) は IBM メインフレームオ
    ペレーティングシステム上で使われる拡張二進化十進数互換コードです
    。

%

9.7.2. ディスクをマウントせずに操作

    ディスクをマウントせずに読出しや書込みをするツールがあります。

    表9.21 ディスクをマウントせずに操作するパッケージのリスト

    +--------------------------------------------------------------+
    |パッケー|ポプコン|サイ |                 説明                 |
    |   ジ   |        | ズ  |                                      |
    |--------+--------+-----+--------------------------------------|
    |mtools  |V:10,   |389  |MSDOS ファイルをマウントせずに使うツー|
    |        |I:83    |     |ル                                    |
    |--------+--------+-----+--------------------------------------|
    |hfsutils|V:0, I:7|1884 |HFS や HFS+ ファイルをマウントせずに使|
    |        |        |     |うツール                              |
    +--------------------------------------------------------------+


%

9.7.3. データーの冗長性

    Linux カーネルが提供するソフトウエアー RAID システムは高いレベル
    のストレージ信頼性を達成するためにカーネルのファイルシステムのレ
    ベルでデーターの冗長性を提供します。

    アプリケーションプログラムレベルでストレージの高い信頼性を達成す
    るようにデーター冗長性を付加するツールもあります。

    表9.22 ファイルにデーターの冗長性を追加するツールのリスト

    +---------------------------------------------------------------+
    |パッケージ|ポプコ|サイ|                  説明                  |
    |          |  ン  | ズ |                                        |
    |----------+------+----+----------------------------------------|
    |par2      |V:4,  |271 |ファイルのチェックと修理のためのパリティ|
    |          |I:15  |    |ーアーカイブセット                      |
    |----------+------+----+----------------------------------------|
    |dvdisaster|V:0,  |1741|CD/DVD メディアのデーターロス/傷つき/老 |
    |          |I:2   |    |化の防止                                |
    |----------+------+----+----------------------------------------|
    |dvbackup  |V:0,  |413 |MiniDV カメラレコーダを使うバックアップ |
    |          |I:0   |    |ツール (rsbep(1) を提供)                |
    |----------+------+----+----------------------------------------|
    |vdmfec    |V:0,  |97  |前方エラー修正を使って失われたブロックの|
    |          |I:0   |    |復元                                    |
    +---------------------------------------------------------------+


%

9.7.4. データーファイルの復元と事故の証拠解析

    データーファイルの復元と事故の証拠解析のツールがあります。

    表9.23 データーファイルの復元と事故の証拠解析のリスト

    +---------------------------------------------------------------+
    | パッケージ  |ポプ |サイ|                 説明                 |
    |             |コン | ズ |                                      |
    |-------------+-----+----+--------------------------------------|
    |testdisk     |V:3, |1426|パーティションのスキャンとディスク復元|
    |             |I:38 |    |のためのユーティリティー              |
    |-------------+-----+----+--------------------------------------|
    |magicrescue  |V:0, |259 |マジックバイトを探してファイルを復元す|
    |             |I:3  |    |るユーティリティー                    |
    |-------------+-----+----+--------------------------------------|
    |scalpel      |V:0, |87  |質素で高性能なファイル彫刻刀          |
    |             |I:4  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |myrescue     |V:0, |83  |破壊したハードディスクからデーターを救|
    |             |I:3  |    |出                                    |
    |-------------+-----+----+--------------------------------------|
    |extundelete  |V:1, |148 |ext3/4 ファイルシステム上のファイルの |
    |             |I:11 |    |削除復元ユーティリティー              |
    |-------------+-----+----+--------------------------------------|
    |ext4magic    |V:0, |233 |ext3/4 ファイルシステム上のファイルの |
    |             |I:4  |    |削除復元ユーティリティー              |
    |-------------+-----+----+--------------------------------------|
    |ext3grep     |V:0, |281 |ext3 ファイルシステム上のファイルの削 |
    |             |I:3  |    |除復元ヘルプツール                    |
    |-------------+-----+----+--------------------------------------|
    |scrounge-ntfs|V:0, |50  |NTFS ファイルシステム上のデーター復元 |
    |             |I:3  |    |プログラム                            |
    |-------------+-----+----+--------------------------------------|
    |gzrt         |V:0, |33  |gzip 復元ツールキット                 |
    |             |I:0  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |sleuthkit    |V:2, |1511|証拠解析のためのツール (Sleuthkit)    |
    |             |I:24 |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |autopsy      |V:0, |1027|SleuthKit のための GUI                |
    |             |I:2  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |foremost     |V:0, |104 |データー復元のための証拠解析アプリケー|
    |             |I:7  |    |ション                                |
    |-------------+-----+----+--------------------------------------|
    |guymager     |V:0, |1030|Qt 使用の証拠解析用イメージ作成ソフト |
    |             |I:1  |    |                                      |
    |-------------+-----+----+--------------------------------------|
    |dcfldd       |V:0, |106 |証拠解析とセキュリティーのための dd の|
    |             |I:5  |    |強化版                                |
    +---------------------------------------------------------------+


    ヒント

    e2fsprogs パッケージ中の debugfs(8) の list_deleted_inodes または
    undel コマンドを用いると ext2 ファイルシステム上でファイルのアン
    デリートができます。

%

9.7.5. 大きなファイルを小さなファイルに分割

    単一ファイルでバックアップするにはデーターが大きすぎる場合、その
    ファイル内容を例えば 2000MiB の断片にしてバックアップし、それらの
    断片を後日マージしてオリジナルのファイルに戻せます。

    $ split -b 2000m large_file
    $ cat x* >large_file

    注意
   
    名前がかち合わないように "x" で始まるファイル名のファイルが無いよ
    うにします。

%

9.7.6. ファイル内容の消去

    ログファイルのようなファイルの内容を消去するためには、rm(1) を使
    ってファイルを消去しその後新しい空ファイルを作成することは止めま
    しょう。コマンド実行間にファイルがアクセスされているかもしれない
    のがこの理由です。次のようにするのがファイル内容を消去する安全な
    方法です。

    $ :>file_to_be_cleared

%

9.7.7. ダミーファイル

    次のコマンドはダミーや空のファイルを作成します。

    $ dd if=/dev/zero    of=5kb.file bs=1k count=5
    $ dd if=/dev/urandom of=7mb.file bs=1M count=7
    $ touch zero.file
    $ : > alwayszero.file

    次のファイルを見つかります。

      * "5kb.file" は5KB のゼロの連続です。

      * "7mb.file" は7MB のランダムなデーターです。

      * "zero.file" は0バイト長のファイルかもしれません。もしファイル
        が存在する時は、その mtime を更新しその内容と長さを保持します
        。

      * "alwayszero.file" は常に0バイト長ファイルです。もしファイルが
        存在する時は mtime を更新しファイル内容をリセットします。

%

9.7.8. ハードディスクの全消去

    "/dev/sda" にある USB メモリースティック等のハードディスク類似デ
    バイス全体のデーターを完全に消すいくつかの方法があります。

    注意

    次のコマンドを実行する前にまず USB メモリースティックの場所を 
    mount(8) を使ってチェックします。"/dev/sda" によって指し示される
    デバイスは SCSI ハードディスクかも知れませんしあなたの全システム
    のあるシリアル ATA ハードディスクかも知れません。

    次のようにしてデーターを0にリセットして全消去します。

    # dd if=/dev/zero of=/dev/sda

    次のようにしてランダムデーターを上書きして全消去します。

    # dd if=/dev/urandom of=/dev/sda

    次のようにしてランダムデーターを非常に効率的に上書きして全消去し
    ます。

    # shred -v -n 1 /dev/sda

    Debian インストーラ CD 等の多くのブート可能な Linux の CD のシェ
    ルから dd(1) が利用可能ですから、"/dev/hda" や "/dev/sda" 等のシ
    ステムハードディスクに対して同類のメディアから消去コマンドを実行
    することでインストールされたシステムを完全に消去することができま
    す。

%

9.7.9. ハードディスク未使用部分の全消去

    データーの消去はファイルシステムからアンリンクされているだけなの
    で、例えば "/dev/sdb1" のようなハードディスク (USB メモリースティ
    ック) 上の使用されていない領域には消去されたデーター自身が含まれ
    ているかもしれません。これらに上書きすることで綺麗に消去できます
    。

    # mount -t auto /dev/sdb1 /mnt/foo
    # cd /mnt/foo
    # dd if=/dev/zero of=junk
    dd: writing to `junk': No space left on device
    ...
    # sync
    # umount /dev/sdb1

    警告

    あなたの USB メモリースティックではこれで普通十分です。でもこれは
    完璧ではありません。消去されたファイル名や属性はファイルシステム
    中に隠れて残っているかもしれません。

%

9.7.10. 削除されたがまだオープン中のファイルの復活法

    ファイルをうっかり消去しても、そのファイルが何らかのアプリケーシ
    ョン (読出しか書込み) によって使われている限り、そのようなファイ
    ルを回復出来ます。

    例えば、次を試してみて下さい:

    $ echo foo > bar
    $ less bar
    $ ps aux | grep ' less[ ]'
    bozo    4775  0.0  0.0  92200   884 pts/8    S+   00:18   0:00 less bar
    $ rm bar
    $ ls -l /proc/4775/fd | grep bar
    lr-x------ 1 bozo bozo 64 2008-05-09 00:19 4 -> /home/bozo/bar (deleted)
    $ cat /proc/4775/fd/4 >bar
    $ ls -l
    -rw-r--r-- 1 bozo bozo 4 2008-05-09 00:25 bar
    $ cat bar
    foo

    この代わりに、(lsof パッケージがインストールされている時) もう一
    つのターミナルで次のように実行します。

    $ ls -li bar
    2228329 -rw-r--r-- 1 bozo bozo 4 2008-05-11 11:02 bar
    $ lsof |grep bar|grep less
    less 4775 bozo 4r REG 8,3 4 2228329 /home/bozo/bar
    $ rm bar
    $ lsof |grep bar|grep less
    less 4775 bozo 4r REG 8,3 4 2228329 /home/bozo/bar (deleted)
    $ cat /proc/4775/fd/4 >bar
    $ ls -li bar
    2228302 -rw-r--r-- 1 bozo bozo 4 2008-05-11 11:05 bar
    $ cat bar
    foo

%

9.7.11. 全てのハードリンクを検索

    ハードリンクのあるファイルは "ls -li" を使って確認できます、

    $ ls -li
    total 0
    2738405 -rw-r--r-- 1 root root 0 2008-09-15 20:21 bar
    2738404 -rw-r--r-- 2 root root 0 2008-09-15 20:21 baz
    2738404 -rw-r--r-- 2 root root 0 2008-09-15 20:21 foo

    "baz" も "foo" もリンク数が "2" (>1) でハードリンクがある事を示し
    ています。これらの inode 番号は共通の "2738404" です。これはこれ
    らがハードリンクされた同じファイルということを意味します。ハード
    リンクされた全てのファイルを偶然うまく見つけられない場合は、それ
    を例えば "2738404" という inode で次のようにして探せます。

    # find /path/to/mount/point -xdev -inum 2738404

%

9.7.12. 見えないディスクスペースの消費

    削除されたがオープンされたままのファイルは、通常の du(1) では見え
    ませんが、ディスクスペースを消費します。これらは次のようにすれば
    そのサイズとともにリストできます。

    # lsof -s -X / |grep deleted

%

9.8. データー暗号化ティップ

    あなたの PC への物理的アクセスがあると、誰でも簡単に root 特権を
    獲得できあなたの PC の全てのファイルにアクセスできます (「root パ
    スワードのセキュリティー確保」参照下さい)。これが意味するところは
    、あなたの PC が盗まれた場合にログインのパスワードではあなたのプ
    ライベートでセンシティブなデーターを守れないと言うことです。それ
    を達成するにはデーターの暗号化技術を適用しなければいけません。GNU
    プライバシーガード (「データーセキュリティーのインフラ」参照下さ
    い) はファイルを暗号化できますが、少々手間がかかります。

    dm-crypt と eCryptfs は最小限のユーザー努力でできる自動的なデータ
    ーの暗号化を Linux のカーネルモジュールその物を使って提供します。

    表9.24 データー暗号化ユーティリティーのリスト

    +---------------------------------------------------------------+
    |              |ポプ |サ |                                      |
    |  パッケージ  |コン |イ |                 説明                 |
    |              |     |ズ |                                      |
    |--------------+-----+---+--------------------------------------|
    |cryptsetup    |V:29,|402|暗号化されたブロックデバイス (dm-crypt|
    |              |I:78 |   |/ LUKS) のためのユーティリティー      |
    |--------------+-----+---+--------------------------------------|
    |              |     |   |ノーマルユーザーによるマウント/アンマ |
    |cryptmount    |V:4, |228|ウントに焦点を当てた暗号化されたブロッ|
    |              |I:5  |   |クデバイス (dm-crypt / LUKS) のための |
    |              |     |   |ユーティリティー                      |
    |--------------+-----+---+--------------------------------------|
    |ecryptfs-utils|V:3, |460|暗号化されたスタックドファイルシステム|
    |              |I:5  |   |(eCryptfs) のためのユーティリティー   |
    +---------------------------------------------------------------+


    Dm-crypt は device-mapper を使う暗号学的ファイルシステムです。
    Device-mapper は1つのブロックデバイスをもう1つのブロックデバイス
    にマップします。

    eCryptfs はスタックドファイルシステムを使うもう1つのファイルシス
    テムです。スタックドファイルシステムはマウントされたファイルシス
    テム上の既存のディレクトリーの上に重ね合わせます。

    注意
   
    データーの暗号化には CPU 時間等の負担がかかります。その利益と負担
    の両天秤をします。

    注記

    debian-installer (lenny 以降) を使うと、dm-crypt/LUKS と
    initramfs を使って、全 Debian システムを暗号化したディスク上にイ
    ンストールできます。

    ヒント
   
    ユーザー空間での暗号化ユーティリティーに関しては「データーセキュ
    リティーのインフラ」を参照下さい: GNU プライバシーガード。

%

9.8.1. dm-crypt/LUKS を使ったリムーバブルディスクの暗号化

    例えば "/dev/sdx" にある USB メモリースティックのようなリムーバブ
    ルストレージデバイスの内容を dm-crypt/LUKS を使って暗号化できます
    。それを単に次のようにフォーマットします。

    # badblocks -c 1024 -s -w -t random -v /dev/sdx
    # fdisk /dev/sdx
    ... "n" "p" "1" "return" "return" "w"
    # cryptsetup luksFormat /dev/sdx1
    ...
    # cryptsetup open --type luks /dev/sdx1 sdx1
    ...
    # ls -l /dev/mapper/
    total 0
    crw-rw---- 1 root root  10, 60 2008-10-04 18:44 control
    brw-rw---- 1 root disk 254,  0 2008-10-04 23:55 sdx1
    # mkfs.vfat /dev/mapper/sdx1
    ...
    # cryptsetup luksClose sdx1

    こうすると暗号化されたディスクは、現代的な GNOME のようなデスクト
    ップ環境では gnome-mount(1) を使ってパスワードを聞く以外は通常の
    ディスクと同様に "/media/<disk_label>" にマウントできます (「リム
    ーバブルストレージデバイス」参照下さい)。全て書込まれるデーターが
    暗号化されている点が相違点です。上記と違い、例えば "mkfs.ext4 /
    dev/sdx1" を使って ext4 等の異なったフォーマットで記録メディアを
    フォーマットしても良いです。

    注記

    もしデーターのセキュリティーが本当に偏執狂的に気になるなら、上記
    例で複数回の重ね書きをする必要があるかもしれません。でもこの操作
    は非常に時間がかかります。

%

9.8.2. dm-crypt を使って swap パーティションを暗号化

    オリジナルの "/etc/fstab" が次の内容と仮定します。

    /dev/sda7 swap sw 0 0

    dm-crypt を使って swap パーティションの暗号化を次のようにして有効
    にします

    # aptitude install cryptsetup
    # swapoff -a
    # echo "cswap /dev/sda7 /dev/urandom swap" >> /etc/crypttab
    # perl -i -p -e "s/\/dev\/sda7/\/dev\/mapper\/cswap/" /etc/fstab
    # /etc/init.d/cryptdisks restart
     ...
    # swapon -a

%

9.8.3. dm-crypt/LUKS で暗号化されたディスクのマウント

    dm-crypt/LUKS を用いて "/dev/sdc5" 上に作成された暗号化されたディ
    スクパーティションは以下のようにして "/mnt" マウントできます:

    $ sudo cryptsetup open /dev/sdc5 ninja --type luks
    Enter passphrase for /dev/sdc5: ****
    $ sudo lvm
    lvm> lvscan
      inactive          '/dev/ninja-vg/root' [13.52 GiB] inherit
      inactive          '/dev/ninja-vg/swap_1' [640.00 MiB] inherit
      ACTIVE            '/dev/goofy/root' [180.00 GiB] inherit
      ACTIVE            '/dev/goofy/swap' [9.70 GiB] inherit
    lvm> lvchange -a y /dev/ninja-vg/root
    lvm> exit
      Exiting.
    $ sudo mount /dev/ninja-vg/root /mnt

%

9.8.4. eCryptfs を使って自動的にファイルを暗号化

    eCryptfs と ecryptfs-utils パッケージを使うことで、"~/Private/"
    の下に書かれるファイルを自動的に暗号化できます。

      * ecryptfs-setup-private(1) を実行してプロンプトに従って "~/
        Private/" を設定します。

      * ecryptfs-mount-private(1) を実行して "~/Private/" を有効にし
        ます。

      * センシティブなデーターファイルを "~/Private/" に移動し、必要
        に応じてシムリンクを作成します。

          + 候補: "~/.fetchmailrc"、"~/.ssh/identity"、"~/.ssh/
            id_rsa"、"~/.ssh/id_dsa"、"go-rwx" を持つ他のファイル

      * センシティブなデーターディレクトリーを "~/Private/" 中のサブ
        ディレクトリーに移動し、必要に応じてシムリンクを作成します。

          + 候補: "~/.gnupg"、"go-rwx" を持つ他のディレクトリー

      * デスクトップ操作がしやすいように "~/Desktop/Private/" から "~
        /Private/" までのシムリンクを作成します。

      * ecryptfs-umount-private(1) を実行して "~/Private/" を無効にし
        ます。

      * 暗号化されたデーターが必要な際に "ecryptfs-mount-private" を
        実行して "~/Private/" を有効にします。

    ヒント

    eCryptfs はセンシティブなファイルのみを選択的に暗号化するので、そ
    のシステムへの負担は dm-crypt を全ルートとか "/home" デバイスとか
    に使うよりはるかに少ないです。eCryptfs は特段のディスク上のストレ
    ージの割り当て努力の必要はありませんが、全てのファイルシステムメ
    タデーターを秘匿することはできません。

%

9.8.5. eCryptfs を自動的にマウント

    もしあなたのログインパスワードを暗号化キーを包むのに使っている場
    合には、"/etc/pam.d/common-auth" 中の "pam_permit.so" のすぐ前に
    次に記す行があるようにすることで PAM (プラグ可能な認証モジュール:
    Pluggable Authentication Modules) を使って eCryptfs を自動的にマ
    ウントできます。

    "/etc/pam.d/common-auth" の "pam_permit.so" の直前に次の行を挿入
    します。

    auth required pam_ecryptfs.so unwrap

    "/etc/pam.d/common-session" の最後に次の行を挿入します。

    session optional pam_ecryptfs.so unwrap

    "/etc/pam.d/common-password" の最初の有効行に次の行を挿入します。

    password required pam_ecryptfs.so

    これは非常に便利です。

    警告
   
    PAM の設定エラーをすると、あなた自身のシステムからあなたを締め出
    すかもしれません。4章認証を参照下さい。

    注意

    もしあなたのログインパスワードを暗号化キーを包むのに使っている場
    合には、あなたの暗号化されたデーターのセキュリティーはあなたのユ
    ーザーログインパスワードと同程度です (「良好なパスワード」参照下
    さい)。注意深く強力なパスワードを設定していないと、あなたのラップ
    トップを誰かが盗んだ後にパスワード破りソフトを実行すれば、あなた
    のデーターは危険にさらされます (「root パスワードのセキュリティー
    確保」参照下さい)。

%

9.9. カーネル

    Debian はモジュール化された Linux カーネルをサポートされるアーキ
    テクチャに対してパッケージとしてディストリブートしています。

%

9.9.1. Linux カーネル 2.6/3.x

    Linux カーネル 2.4 と比較して特記すべき Linux カーネル 2.6/3.x の
    機能がいくつかあります。

      * デバイスは udev システムで生成されます (「udev システム」参照
        下さい)。

      * IDE CD/DVD デバイスへの読出し/書込みアクセスは ide-scsi モジ
        ュールを使用しません。

      * ネットワークのパケットフィルター機能は iptable カーネルモジュ
        ールを使います。

    Linux 2.6.39 から Linux 3.0 へとバージョンが飛んだのは、大きな技
    術的な変更があったからでは無く 20 周年記念が理由です。

%

9.9.2. カーネル変数

    多くの Linux の機能はカーネル変数を使い次のように設定されます。

      * ブートローダーにより初期化されたカーネル変数 (「2段目: ブート
        ローダー」参照下さい)

      * 実行時に sysfs によりアクセスできるカーネル変数に関して 
        sysctl(8) を用い変更されたカーネル変数 (「procfs と sysfs」参
        照下さい)

      * モジュールが起動された際の modprobe(8) の引数により設定される
        モジュール変数 (「ディスクイメージファイルをマウント」参照下
        さい)

    linux-doc-3.* パッケージで供給される Linux カーネル文書 ("/usr/
    share/doc/linux-doc-3.*/Documentation/filesystems/*") 中の
    "kernel-parameters.txt(.gz)" や関連する他の文書を参照下さい。

%

9.9.3. カーネルヘッダー

    ほとんどの普通のプログラムはカーネルヘッダーを必要としませんし、
    コンパイルするのにそれらを直接用いるとコンパイルがうまくいかない
    かもしれません。普通のプログラムは Debian システム上では (glibc
    ソースパッケージから生成される) libc6-dev パッケージが提供する "/
    usr/include/linux" や "/usr/include/asm" 中のヘッダを使ってコンパ
    イルするべきです。

    注記

    外部ソースからのカーネルモジュールやオートマウンターデーモン
    (amd) のようなカーネル固有の一部プログラムをコンパイルする場合、
    例えば "-I/usr/src/linux-particular-version/include/" 等の対応す
    るカーネルヘッダーへのパスをコマンドラインで指定しなければいけま
    せん。module-assistant(8) (またはその短縮形 m-a) はユーザーが1つ
    以上のカスタムカーネルに関するモジュールパッケージを簡単にビルド
    とインストールすることを援助します。

%

9.9.4. カーネルと関連モジュールのコンパイル

    Debian にはカーネルと関連モジュールをコンパイルする独自の方法があ
    ります。

    表9.25 Debian システム上でカーネルの再コンパイルためにインストー
    ルする重要パッケージのリスト

    +---------------------------------------------------------------+
    |  パッケージ   |ポプコ|サイ |               説明               |
    |               |  ン  | ズ  |                                  |
    |---------------+------+-----+----------------------------------|
    |build-essential|I:499 |20   |Debian パッケージをビルドする上で |
    |               |      |     |不可欠なパッケージ: make、gcc、…  |
    |---------------+------+-----+----------------------------------|
    |bzip2          |V:157,|122  |bz2 ファイルのための圧縮と解凍ユー|
    |               |I:970 |     |ティリティー                      |
    |---------------+------+-----+----------------------------------|
    |libncurses5-dev|I:116 |6    |ncurses のためのデベロッパ用ライブ|
    |               |      |     |ラリーと文書                      |
    |---------------+------+-----+----------------------------------|
    |               |V:305,|     |git: Linux カーネルによって使われ |
    |git            |I:478 |35040|ている分散型リビジョンコントロール|
    |               |      |     |システム                          |
    |---------------+------+-----+----------------------------------|
    |fakeroot       |V:35, |228  |パッケージを非 root としてビルドす|
    |               |I:521 |     |るための fakeroot 環境を提供      |
    |---------------+------+-----+----------------------------------|
    |initramfs-tools|V:371,|112  |initramfs をビルドするツール      |
    |               |I:989 |     |(Debian 固有)                     |
    |---------------+------+-----+----------------------------------|
    |dkms           |V:70, |294  |動的カーネルモジュールサポート    |
    |               |I:219 |     |(DKMS) (汎用)                     |
    |---------------+------+-----+----------------------------------|
    |devscripts     |V:9,  |2623 |Debian パッケージメンテナ用ヘルパ |
    |               |I:57  |     |ースクリプト (Debian 固有)        |
    +---------------------------------------------------------------+


    「2段目: ブートローダー」中で initrd を使う場合、initramfs-tools
    (8) と update-initramfs(8) と mkinitramfs(8) と initramfs.conf(5)
    中の関連情報をしっかり読んで下さい。

    警告

    Linux カーネルソースをコンパイルする時にソースツリー中のディレク
    トリー (例えば "/usr/src/linux*") から "/usr/include/linux" や "/
    usr/include/asm" へのシムリンクを張ってはいけません。(古くなった
    一部文書はまだこれをすることを提案しています。)

    注記

    Debian の stable (安定版) システム上で最新の Linux カーネルをコン
    パイルする際には、Debian のunstable (非安定版) システムからバック
    ポートされた最新のツールが必要かもしれません。

    注記

    動的カーネルモジュールサポート (DKMS) は、カーネル全体を変えるこ
    と無く個別カーネルモジュールをアップグレードできるようにする新し
    いディストリビューションに依存しない枠組みです。これはアウトオブ
    ツリーのモジュールの管理方法です。これはあなたがカーネルをアップ
    グレードする際のモジュールの再構築を簡単にもします。

%

9.9.5. カーネルソースのコンパイル: Debian カーネルチーム推奨

    アップストリームのカーネルソースからカーネルバイナリーパッケージ
    を作成するには、それが提供するターゲットを用いて "deb-pkg" としま
    す。

    $ sudo apt-get build-dep linux
    $ cd /usr/src
    $ wget http://www.kernel.org/pub/linux/kernel/v3.11/linux-<version>.tar.bz2
    $ tar -xjvf linux-<version>.tar.bz2
    $ cd linux-<version>
    $ cp /boot/config-<version> .config
    $ make menuconfig
     ...
    $ make deb-pkg

    ヒント

    linux-source-<version> パッケージはDebian パッチがあたった Linux
    カーネルソースを "/usr/src/linux-<version>.tar.bz2" として提供し
    ます。

    Debian カーネルソースパッケージから特定のバイナリパッケージをビル
    ドするには、"debian/rules.gen" 中の "binary-arch_<architecture>_
    <featureset>_<flavour>" ターゲットを使います。

    $ sudo apt-get build-dep linux
    $ apt-get source linux
    $ cd linux-3.*
    $ fakeroot make -f debian/rules.gen binary-arch_i386_none_686

    詳細は以下参照下さい:

      * Debian Wiki: KernelFAQ

      * Debian Wiki: Debianカーネル

      * Debian Linux カーネルハンドブック: https://
        kernel-handbook.debian.net

%

9.9.6. ハードウエアードライバーとファームウエアー

    ハードウエアードラーバーとはターゲットシステム上で実行されるコー
    ドです。ほとんどのハードウエアードライバーは現在フリーソフトウエ
    アーとして入手可能で通常の main エリアにある Debian カーネルパッ
    ケージに含まれています。

      * GPU ドラーバー

          + Intel GPU ドラーバー (main)

          + AMD/ATI GPU ドラーバー(main)

          + NVIDIA GPU ドライバー (nouveau ドライバーは main、ベンダ
            ーにサポートされたバイナリーのみ提供のドライバーは
            non-free 。)

      * ソフトモデムドライバー

          + martian-modem や sl-modem-dkms パーケージ (non-free)

    ファームウエアーとはデバイスにロードされるコードやデーター (例え
    ば CPU マイクロコードや、GPU上で実行されるレンダリングコードや、
    FPGA / CPLD データー等々)です。一部のファームウエアーパッケージは
    フリーソフトウエアーとして入手可能ですが、多くのファームウエアー
    パッケージはソースの無いバイナリーデーターを含むためにフリーソフ
    トウエアーとして入手不可能です。

      * firmware-linux-free (main)

      * firmware-linux-nonfree (non-free)

      * firmware-linux-* (non-free)
   
      * *-firmware (non-free)

      * intel-microcode (non-free)

      * amd64-microcode (non-free)

    non-free や contrib パッケージは Debian システムの一部でないこと
    に注意して下さい。non-free や contrib エリアへのアクセスの有効化
    や無効化は「Debian アーカイブの基本」に説明されています。「Debian
    は 100% フリーソフトウェアーです」に記載されているように non-free
    や contrib パッケージを使用に付帯するマイナスを認識すべきです。

%

9.10. 仮想化システム

    仮想化されたシステムを利用すると単一ハード上で同時に複数のシステ
    ムのインスタンスを実行することが加能となります。

    ヒント
   
    http://wiki.debian.org/SystemVirtualization を参照下さい。

%

9.10.1. 仮想化ツール

    Debian には、単純な chroot ではない仮想化やエミュレーション関連の
    パッケージがあります。一部のパッケージはあなたがそのような環境を
    セットアップする事を援助します。

    表9.26 仮想化ツールのリスト

    +---------------------------------------------------------------+
    |  パッケージ   |ポプ |サイズ|               説明               |
    |               |コン |      |                                  |
    |---------------+-----+------+----------------------------------|
    |schroot        |V:7, |2708  |Debian バイナリーパッケージを     |
    |               |I:10 |      |chroot 中で実行する専用ツール     |
    |---------------+-----+------+----------------------------------|
    |sbuild         |V:1, |286   |Debian ソースから Debian バイナリ |
    |               |I:4  |      |ーパッケージをビルドするツール    |
    |---------------+-----+------+----------------------------------|
    |pbuilder       |V:2, |966   |Debian パッケージの個人的なパッケ |
    |               |I:16 |      |ージビルドソフト                  |
    |---------------+-----+------+----------------------------------|
    |debootstrap    |V:6, |298   |基本的な Debian システムのブートス|
    |               |I:63 |      |トラップ (sh で書かれている)      |
    |---------------+-----+------+----------------------------------|
    |cdebootstrap   |V:0, |116   |Debian システムのブートストラップ |
    |               |I:3  |      |(C で書かれている)                |
    |---------------+-----+------+----------------------------------|
    |               |V:10,|      |仮想マシンマネージャー: 仮想マシン|
    |virt-manager   |I:42 |2298  |を管理するデスクトップアプリケーシ|
    |               |     |      |ョン                              |
    |---------------+-----+------+----------------------------------|
    |libvirt-clients|V:43,|1167  |libvirt ライブラリー用のプログラム|
    |               |I:62 |      |                                  |
    |---------------+-----+------+----------------------------------|
    |bochs          |V:0, |7194  |Bochs: IA-32 PC エミュレーター    |
    |               |I:1  |      |                                  |
    |---------------+-----+------+----------------------------------|
    |qemu           |I:34 |94    |QEMU: 高速で汎用のプロセッサエミュ|
    |               |     |      |レーター                          |
    |---------------+-----+------+----------------------------------|
    |qemu-system    |I:21 |95    |QEMU: フルシステムエミュレーション|
    |               |     |      |のバイナリ                        |
    |---------------+-----+------+----------------------------------|
    |qemu-user      |V:0, |89671 |QEMU: ユーザーモードエミュレーショ|
    |               |I:13 |      |ンのバイナリ                      |
    |---------------+-----+------+----------------------------------|
    |qemu-utils     |V:11,|6083  |QEMU: ユーティリティー            |
    |               |I:107|      |                                  |
    |---------------+-----+------+----------------------------------|
    |               |V:10,|      |KVM: ハードウエア補助仮想化を利用 |
    |qemu-kvm       |I:61 |107   |する x86 ハードウエア上のフル仮想 |
    |               |     |      |化                                |
    |---------------+-----+------+----------------------------------|
    |virtualbox     |V:12,|106495|VirtualBox: i386 と amd64 上での  |
    |               |I:16 |      |x86 仮想化解決策                  |
    |---------------+-----+------+----------------------------------|
    |xen-tools      |V:0, |727   |Debian XEN 仮想サーバーの管理ツー |
    |               |I:4  |      |ル                                |
    |---------------+-----+------+----------------------------------|
    |wine           |V:19,|192   |Wine: Windows API の実装 (標準スイ|
    |               |I:82 |      |ート)                             |
    |---------------+-----+------+----------------------------------|
    |               |V:2, |      |DOSBox: Tandy/Herc/CGA/EGA/VGA/   |
    |dosbox         |I:18 |2742  |SVGA グラフィクス、サウンド、DOS  |
    |               |     |      |付きの x86 エミュレーター         |
    |---------------+-----+------+----------------------------------|
    |dosemu         |V:0, |4891  |DOSEMU: Linux 用 DOS エミュレータ |
    |               |I:2  |      |ー                                |
    |---------------+-----+------+----------------------------------|
    |vzctl          |V:0, |1112  |OpenVZ サーバー仮想化策 - コントロ|
    |               |I:1  |      |ールツール                        |
    |---------------+-----+------+----------------------------------|
    |vzquota        |V:0, |236   |OpenVZ サーバー仮想化策 - クオータ|
    |               |I:1  |      |ツール                            |
    |---------------+-----+------+----------------------------------|
    |lxc            |V:10,|18761 |Linux コンテナ - ユーザースペース |
    |               |I:15 |      |ツール                            |
    +---------------------------------------------------------------+


    異なるプラットフォーム仮想化策の詳細な比較は Wikipedia の記事
    Comparison of platform virtual machines を参照下さい。

%

9.10.2. 仮想化の業務フロー

    注記
   
    ここに記載された機能の一部は squeeze でのみ利用可能です。

    注記
   
    lenny以来の Debian のデフォルトカーネルは KVM をサポートしていま
    す

    仮想化のための典型的な業務フローにはいくつかの段階があります。

      * 空のファイルシステムの作成 (ファイルツリーもしくはディスクイ
        メージ)。

          + ファイルツリーは "mkdir -p /path/to/chroot" として作成で
            きる。

          + raw ディスクイメージファイルは dd(1) を使って作れます (「
            ディスクイメージの作成」と「空のディスクイメージ作成」参
            照下さい)。

          + qemu-img(1) はQEMU によりサポートされたディスクイメージの
            作成や変換に使えます。

          + raw と VMDK ファイルフォーマットは仮想ツール間の共通フォ
            ーマットとして使えます。

      * mount(8) を使ってディスクイメージをファイルシステムにマウント
        する (任意)。

          + raw のディスクイメージファイルに関しては、loop デバイスま
            たはデバイスマッパーデバイス (「ディスクイメージファイル
            をマウント」参照下さい) としてマウント。

          + QEMU がサポートするディスクイメージファイルに関しては、ネ
            ットワークブロックデバイス (「仮想ディスクイメージファイ
            ルをマウント。」参照下さい) としてマウント。

      * 必要なシステムデーターを用いて対象のファイルシステムを充足。

          + debootstrap や cdebootstrap のようなプログラムがこのプロ
            セスを援助します (「Chroot システム」参照下さい)。

          + OS のインストーラーをフルシステムエミュレーション下で利用
            。

      * 仮想化環境下でプログラムを実行。

          + chroot は、仮想環境の中でプログラムのコンパイルやコンソー
            ルアプリケーションの実行やデーモンの実行等をするのに十分
            な基本的仮想環境を提供します。

          + QEMU: クロスプラットフォームの CPU エミュレーションを提供

          + KVM と共の QEMU はハードウエア補助仮想化によるフルシステ
            ムエミュレーションを提供します。

          + VirtualBox はハードウエア補助仮想化の有無によらず i386 と
            amd64 上でのフルシステムエミュレーションを提供します。

%

9.10.3. 仮想ディスクイメージファイルをマウント。

    raw ディスクイメージファイルに関しては、「ディスクイメージ」を参
    照下さい。

    他の仮想ディスクイメージに関しては、qemu-nbd(1) を使ってネットワ
    ークブロックデバイスプロトコルを用いてそれらをエクスポートし nbd
    カーネルモジュールを使ってそれらをマウントできます。

    qemu-nbd(1) はQEMU がサポートする次のディスクフォーマットをサポー
    トします: raw、qcow2、qcow、vmdk、vdi、bochs、cow (user-mode
    Linux の copy-on-write)、parallels、dmg、cloop、vpc、vvfat
    (virtual VFAT)、host_device。

    ネットワークブロックデバイスはloop デバイスと同様の方法でパーティ
    ションをサポートします (「ディスクイメージファイルをマウント」参
    照下さい)。"image.img" の最初のパーティションは次のようにするとマ
    ウントできます。

    # modprobe nbd max_part=16
    # qemu-nbd -v -c /dev/nbd0 disk.img
    ...
    # mkdir /mnt/part1
    # mount /dev/nbd0p1 /mnt/part1

    ヒント
   
    qemu-nbd(8) に"-P 1" オプションを用いると、"disk.img" の最初のパ
    ーティションだけをエクスポートできます。

%

9.10.4. Chroot システム

    chroot(8) を使うのは、GNU/Linux 環境の異なったインスタンスをリブ
    ートすることなく単一システム上で同時に実行する最も基本的な手法で
    す。

    注意
   
    次の例は親システムと chroot システムが同じ CPU アーキテクチャを共
    有していると仮定しています。

    pbuilder(8) プログラムを script(1) の下で次のように実行すると 
    chroot(8) の設定と使い方が学べます。

    $ sudo mkdir /sid-root
    $ sudo pbuilder --create --no-targz --debug --buildplace /sid-root

    "sid-root" の下に sid 環境のためのシステムデーターをどのようにし
    て充足するかは debootstrap(8) か cdebootstrap(1) を見ると分かりま
    す。

    ヒント

    この debootstrap(8) と cdebootstrap(1) は、Debian インストーラー
    が Debian をインストールするのに使われています。これらは Debian
    のインストールディスクを使わず他の GNU/Linux ディストリビューショ
    ンから Debian をインストールするのにも使えます。

    $ sudo pbuilder --login --no-targz  --debug --buildplace /sid-root

    どのようにして sid 環境下で実行されるシステムシェルが作られるかが
    次で観察できます。

     1. ローカル設定のコピー ("/etc/hosts" と "/etc/hostname" と "/
        etc/resolv.conf")

     2. "/proc" ファイルシステムのマウント

     3. "/dev/pts" ファイルシステムのマウント

     4. 常に101でプログラム終了する "/usr/sbin/policy-rc.d" を作成

     5. "chroot /sid-root bin/bash -c 'exec -a -bash bin/bash'" を実
        行

    注記

    プログラムによっては機能するために chroot の下で pbuilder が提供
    するより多くの親システムのファイルへのアクセスする必要があります
    。例えば、"/sys" や "/etc/passwd" や "/etc/group" や "/var/run/
    utmp" や "/var/log/wtmp" 等が bind マウントもしくはコピーされる必
    要があるかもしれません。

    注記

    "/usr/sbin/policy-rc.d" ファイルは、Debian システム上でデーモンプ
    ログラムが自動的に起動されることを防ぎます。"/usr/share/doc/
    sysv-rc/README.policy-rc.d.gz" を参照下さい。

    ヒント

    pbuilder という特化した chroot パッケージの本来の目的は、chroot
    システムを作りその chroot 中でパッケージをビルドすることです。そ
    れはパッケージのビルド依存関係が正しいことをチェックし、不必要で
    間違ったビルド依存関係が出来上がったパッケージに混入しないように
    する理想的なシステムです。

    ヒント
   
    類似の schroot パッケージは i386 の chroot システムを amd64 の親
    システムの下で実行方法を教えてくれます。

%

9.10.5. 複数のデスクトップシステム

    仮想化を使って複数のデスクトップシステムを安全に実行するには、
    Debian 安定版 (stable) システム上で QEMU か VirtualBox を使うこと
    をお勧めします。これらを使うと通常ありがちなリスクに晒されずに
    Debian テスト版 (testing) や不安定版 (unstable) システムのデスク
    トップアプリケーションを実行できるようになります。

    純粋な QEMU は非常に遅いので、ホストシステムがサポートする際には
    KVM を使って加速することをお勧めします。

    QEMU 用の Debian システムを含む仮想ディスクイメージ
    "virtdisk.qcow2" はdebian-installer: 小さな CD を使って次のように
    作成できます。

    $ wget http://cdimage.debian.org/debian-cd/5.0.3/amd64/iso-cd/debian-503-amd64-netinst.iso
    $ qemu-img create -f qcow2 virtdisk.qcow2 5G
    $ qemu -hda virtdisk.qcow2 -cdrom debian-503-amd64-netinst.iso -boot d -m 256
    ...

    更なるティップに関しては Debian wiki: QEMU を参照下さい。

    VirtualBox はQt の GUI ツールとして提供され非常に直感的に理解でき
    ます。その GUI とコマンドラインツールは VirtualBox User Manual と
    VirtualBox User Manual (PDF) で説明されています。

    ヒント

    Ubuntu や Fedra 等の GNU/Linux ディストリビューションを仮想化の下
    で実行するのは設定ティップを学ぶ非常に良い方法です。他のプロプラ
    イエタリな OS もこの GNU/Linux の仮想化の下で上手く実行できます。

第10章データー管理

    バイナリーとテキストのデーターを Debian システム上で管理するツー
    ルとティップを記します。

%

10.1. 共有とコピーとアーカイブ

    警告

    競合状態とならないようにするために、アクティブにアクセスされてい
    るデバイスやファイルに複数プロセスから調整なく書き込みアクセスを
    してはいけません。flock(1) を使ったファイルロック機構がこの回避に
    使えます。

    データーのセキュリティーとそのコントロールされた共有はいくつかの
    側面があります。

      * データーアーカイブの作成

      * 遠隔ストレージアクセス

      * 複製

      * 変更履歴の追跡

      * データー共有のアシスト

      * 不正なファイルへのアクセスの防止

      * 不正なファイルの改変の検出

    こういったことは次の組み合わせを使うことで実現できます。

      * アーカイブと圧縮ツール

      * コピーと同期ツール

      * ネットワークファイルシステム

      * リムーバブルストレージメディア
   
      * セキュアーシェル

      * 認証システム

      * バージョンコントロールシステムツール

      * ハッシュや暗号学的暗号化ツール

%

10.1.1. アーカイブと圧縮ツール

    Debian システム上で利用可能なアーカイブと圧縮ツールのまとめを以下
    に記します。

    表10.1 アーカイブと圧縮ツールのリスト

    +---------------------------------------------------------------+
    |パッケージ|ポプコ|サイ|拡張 |コマン |         コメント         |
    |          |  ン  | ズ | 子  |  ド   |                          |
    |----------+------+----+-----+-------+--------------------------|
    |tar       |V:905,|3098|.tar |tar(1) |標準アーカイバー (デファク|
    |          |I:999 |    |     |       |ト標準)                   |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:412,|    |     |       |Unix System V スタイルのア|
    |cpio      |I:998 |1136|.cpio|cpio(1)|ーカイバー、find(1) ととも|
    |          |      |    |     |       |に使用                    |
    |----------+------+----+-----+-------+--------------------------|
    |binutils  |V:164,|97  |.ar  |ar(1)  |静的ライブラリー生成用のア|
    |          |I:678 |    |     |       |ーカイバー                |
    |----------+------+----+-----+-------+--------------------------|
    |fastjar   |V:2,  |183 |.jar |fastjar|Java 用のアーカイバー (zip|
    |          |I:29  |    |     |(1)    |類似)                     |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:13, |    |     |       |新規 POSIX 標準アーカイバ |
    |pax       |I:26  |170 |.pax |pax(1) |ー、tar と cpio の間の妥協|
    |          |      |    |     |       |点                        |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:883,|    |     |gzip(1)|GNU LZ77 圧縮ユーティリテ |
    |gzip      |I:999 |245 |.gz  |, zcat |ィー (デファクト標準)     |
    |          |      |    |     |(1), … |                          |
    |----------+------+----+-----+-------+--------------------------|
    |          |      |    |     |bzip2  |gzip(1) より高い圧縮比    |
    |          |V:157,|    |     |(1),   |(gzip より遅い、類似シンタ|
    |bzip2     |I:970 |122 |.bz2 |bzcat  |ックス) の Burrows-Wheeler|
    |          |      |    |     |(1), … |ブロック並び替え圧縮ユーテ|
    |          |      |    |     |       |ィリティー                |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:2,  |    |     |       |gzip(1) より高い圧縮比の  |
    |lzma      |I:29  |149 |.lzma|lzma(1)|LZMA 圧縮ユーティリティー |
    |          |      |    |     |       |(非推奨)                  |
    |----------+------+----+-----+-------+--------------------------|
    |          |      |    |     |       |bzip2(1) より高い圧縮比の |
    |          |V:454,|    |     |xz(1), |XZ 圧縮ユーティリティー   |
    |xz-utils  |I:977 |612 |.xz  |xzdec  |(gzip より遅いが bzip2 よ |
    |          |      |    |     |(1), … |り早い、LZMA 圧縮ユーティ |
    |          |      |    |     |       |リティーの代替)           |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:89, |    |     |7zr(1),|高い圧縮比をもつ 7-Zip 圧 |
    |p7zip     |I:464 |987 |.7z  |p7zip  |縮ユーティリティー (LZMA  |
    |          |      |    |     |(1)    |圧縮)                     |
    |----------+------+----+-----+-------+--------------------------|
    |          |V:113,|    |     |7z(1), |高い圧縮比をもつ 7-Zip 圧 |
    |p7zip-full|I:486 |4664|.7z  |7za(1) |縮ユーティリティー (LZMA  |
    |          |      |    |     |       |圧縮、他)                 |
    |----------+------+----+-----+-------+--------------------------|
    |          |      |    |     |       |gzip(1) より高い圧縮と解凍|
    |lzop      |V:9,  |164 |.lzo |lzop(1)|の速度 (gzip より低い圧縮 |
    |          |I:76  |    |     |       |比、類似シンタックス) の  |
    |          |      |    |     |       |LZO 圧縮ユーティリティー  |
    |----------+------+----+-----+-------+--------------------------|
    |zip       |V:51, |608 |.zip |zip(1) |InfoZIP: DOS アーカイブと |
    |          |I:432 |    |     |       |圧縮ツール                |
    |----------+------+----+-----+-------+--------------------------|
    |unzip     |V:154,|566 |.zip |unzip  |InfoZIP: DOS アーカイブ解 |
    |          |I:798 |    |     |(1)    |凍と圧縮解凍ツール        |
    +---------------------------------------------------------------+


    警告
   
    何が起こるかを理解せずに "$TAPE" 変数を設定してはいけません。設定
    すると tar(1) の挙動が変わります。

    注記
   
    gzip 圧縮された tar(1) アーカイブは ".tgz" とか ".tar.gz" といっ
    たファイル拡張子を使います。

    注記
   
    xz 圧縮された tar(1) アーカイブは ".txz" とか ".tar.xz" といった
    ファイル拡張子を使います。

    注記
   
    tar(1) 等の FOSS ツールでのポピュラーな圧縮方法は次のように変遷し
    ています: gzip → bzip2 → xz

    注記
   
    cp(1) と scp(1) と tar(1) は特殊ファイルに関して一部制約があるか
    もしれません。cpio(1) は最も汎用性があります。

    注記

    cpio(1) はfind(1) 等のコマンドとともに使うようにできていて、ファ
    イルの選定部分のスクリプトを独立にテストできるのでバックアップス
    クリプトを作るのに向いています。

    注記
   
    Libreoffice データーファイルの内部構造は ".jar" ファイルで、unzip
    で開くことができます。

    注記

    デファクトのクロスプラットフォームのアーカイブツールは zip です。
    最大限のコンパチビリティーのためには "zip -rX" として使ってくださ
    い。もし最大ファイルサイズが問題となる際には "-s" オプションも使
    ってください。

%

10.1.2. コピーと同期ツール

    Debian システム上で利用可能な単純なコピーとバックアップツールのま
    とめを以下に記します。

    表10.2 コピーと同期ツールのリスト

    +---------------------------------------------------------------+
    |  パッケージ  |ポプコ|サイ |ツー|             機能             |
    |              |  ン  | ズ  | ル |                              |
    |--------------+------+-----+----+------------------------------|
    |coreutils     |V:891,|17478|GNU |ファイルやディレクトリーのロー|
    |              |I:999 |     |cp  |カルコピー ("-a" で再帰的実行)|
    |--------------+------+-----+----+------------------------------|
    |              |V:803,|     |    |ファイルやディレクトリーのリモ|
    |openssh-client|I:996 |4298 |scp |ートコピー (クライアント、"-r"|
    |              |      |     |    |で再帰実行)                   |
    |--------------+------+-----+----+------------------------------|
    |openssh-server|V:690,|1567 |sshd|ファイルやディレクトリーのリモ|
    |              |I:834 |     |    |ートコピー (リモートサーバー) |
    |--------------+------+-----+----+------------------------------|
    |rsync         |V:281,|677  |-   |単方向リモート同期とバックアッ|
    |              |I:560 |     |    |プ                            |
    |--------------+------+-----+----+------------------------------|
    |unison        |V:4,  |14   |-   |双方向リモート同期とバックアッ|
    |              |I:17  |     |    |プ                            |
    +---------------------------------------------------------------+


    rsync(8) を使ってのファイルのコピーには他の方法より豊かな機能があ
    ります。

      * 転送元のファイルと転送先の既存ファイル間の相違のみを送信する
        差分転送アルゴリズム

      * サイズか最終変更時間に変更があったファイルのみを探す (デフォ
        ルトで採用される) 急速確認アルゴリズム

      * tar(1) 類似の "--exclude" や "--exclude-from" オプション

      * 転送先に追加ディレクトリーレベルを作成しなくする「転送元ディ
        レクトリ後スラシュ (/) 付加」文法

    ヒント

    「データーバックアップ用コピースクリプト」に記された bkup スクリ
    プトを "-gl" オプションとともに cron(8) の下で実行すると静的なデ
    ーターアーカイブに関して Plan9 の dumpfs と非常に似た機能を実現で
    きます。

    ヒント

    表10.11「バージョンコントロールシステムツールのリスト」に記された
    バージョンコントロールシステム (VCS) ツールは多方向のコピーと同期
    のツールとして機能します。

%

10.1.3. アーカイブの慣用句

    "./source" ディレクトリー中の全内容を異なるツールを用いてアーカイ
    ブしアーカイブ解凍するいくつかの方法を以下に記します。

    GNU tar(1):

    $ tar -cvJf archive.tar.xz ./source
    $ tar -xvJf archive.tar.xz

    この代わりに、次のようにも出来ます。

    $ find ./source -xdev -print0 | tar -cvJf archive.tar.xz --null -F -

    cpio(1):

    $ find ./source -xdev -print0 | cpio -ov --null > archive.cpio; xz archive.cpio
    $ zcat archive.cpio.xz | cpio -i

%

10.1.4. コピーの慣用句

    "./source" ディレクトリー中の全内容を異なるツールを用いてコピーす
    るいくつかの方法を以下に記します。

      * ローカルコピー: "./source" ディレクトリー → "/dest" ディレク
        トリー
   
      * リモートコピー: ローカルホストの "./source" ディレクトリー →
        "user@host.dom" ホストの "/dest" ディレクトリー

    rsync(8):

    # cd ./source; rsync -aHAXSv . /dest
    # cd ./source; rsync -aHAXSv . user@host.dom:/dest

    「転送元ディレクトリー後スラシュ付加」文法を上記の代わりに使えま
    す。

    # rsync -aHAXSv ./source/ /dest
    # rsync -aHAXSv ./source/ user@host.dom:/dest

    この代わりに、次のようにも出来ます。

    # cd ./source; find . -print0 | rsync -aHAXSv0 --files-from=- . /dest
    # cd ./source; find . -print0 | rsync -aHAXSv0 --files-from=- . user@host.dom:/dest

    GNU cp(1) と openSSH scp(1):

    # cd ./source; cp -a . /dest
    # cd ./source; scp -pr . user@host.dom:/dest

    GNU tar(1):

    # (cd ./source && tar cf - . ) | (cd /dest && tar xvfp - )
    # (cd ./source && tar cf - . ) | ssh user@host.dom '(cd /dest && tar xvfp - )'

    cpio(1):

    # cd ./source; find . -print0 | cpio -pvdm --null --sparse /dest

    "." を含むすべての例で "." は"foo" で代替でき、ファイルを "./
    source/foo" ディレクトリーから "/dest/foo" ディレクトリにコピーで
    きます。

    "." を含むすべての例で "." を絶対パスの "/path/to/source/foo" で
    代替でき、"cd ./source;" を削除することができます。これらは使うツ
    ール次第で異なる場所にファイルをコピーします。

      * "/dest/foo": rsync(8)、GNU cp(1)、scp(1)
   
      * "/dest/path/to/source/foo": GNU tar(1) と cpio(1)

    ヒント
   
    rsync(8) や GNU cp(1) には転送先のファイルが新しい場合にスキップ
    する "-u" オプションがあります。

%

10.1.5. ファイル選択の慣用句

    アーカイブやコピーコマンド (「アーカイブの慣用句」と「コピーの慣
    用句」参照下さい) のためや xargs(1) (「ファイルに関してループしな
    がらコマンドを反復実行」参照下さい) のためにファイルを選択するの
    に find(1) が使われます。これの操作は find(1) のコマンド引数を使
    うことで強化できます。

    find(1) の基本シンタックスは次のようにまとめられます。

      * 条件の引数は左から右へと評価されます。

      * 結果が決まった時点で評価は終了します。

      * "論理 OR" (条件間に "-o" で指定) は、"論理 AND" (条件間に
        "-a" または何もなしで指定) より低い優先順位です。

      * "論理 NOT" (条件前に "!" で指定) は、"論理 AND" より高い優先
        順位です。

      * "-prune" は常に論理真 (TRUE) を返し、ディレクトリーの場合には
        この点以降のファイル探索を停止します。

      * "-name" はシェルのグロブ (「シェルグロブ」参照下さい) を使っ
        てファイル名のベースにマッチし、さらに "*" and "?" 等のメタ文
        字で最初の "." ともマッチします。(新規の POSIX 機能)

      * "-regex" はデフォールトでは emacs スタイルの BRE (「正規表現
        」参照下さい) を用いてフルパスをマッチします。

      * "-size" はファイルサイズ ("+" が前に付いた値はより大きい、"-"
        が前に付いた値はより小さい) に基づいてファイルをマッチします
        。

      * "-newer" はその引数に指定されたファイルより新しいファイルとマ
        ッチします。

      * "-print0" は常に論理真 (TRUE) を返し、フルファイル名を (null
        終端処理して) 標準出力へプリントします。

    find(1) はしばしば慣用的なスタイルで使われます。

    # find /path/to \
        -xdev -regextype posix-extended \
        -type f -regex ".*\.cpio|.*~" -prune -o \
        -type d -regex ".*/\.git" -prune -o \
        -type f -size +99M -prune -o \
        -type f -newer /path/to/timestamp -print0

    これは次のアクションをすることを意味します。

     1. "/path/to" からはじまる全ファイルを探索

     2. 探索開始したファイルシステムに探索を全体的に制約し、デフォー
        ルトの代わりに ERE (「正規表現」参照下さい) を使用

     3. 正規表現 ".*\.cpio" か ".*~" にマッチするファイルを処理停止を
        することで探索から除外
   
     4. 正規表現 ".*/\.git" にマッチするディレクトリーを処理停止をす
        ることで探索から除外

     5. 9MiB(1048576バイトの単位) より大きいファイルを処理停止をする
        ことで探索から除外

     6. 上記の探索条件に合致し "/path/to/timestamp" より新しいファイ
        ル名をプリントします

    上記例中でファイルを検索から除外するときの "-prune -o" の慣用的な
    使い方に注目して下さい。

    注記

    非 Debian のUnix 的システムでは、一部のオプションは find(1) によ
    ってサポートされていないかもしれません。そのような場合には、マッ
    チング方法を調整したり "-print0" を"-print" で置き換えることを考
    慮します。これに関連するコマンドも調整する必要があるかもしれませ
    ん。

%

10.1.6. アーカイブメディア

    重要なデーターアーカイブのためのコンピューターデーターストレージ
    メディアを選ぶ時にはそれらの限界について注意を払うべきです。小さ
    な個人的なバックアップのためには、著者としては名前が知られている
    会社の CD-R と DVD-R を使い、クールで日陰の乾燥した埃の無い環境に
    保存しています。(プロ用途ではテープアーカイブメディアに人気がある
    ようです。)

    注記

    耐火金庫は紙の文書のためのものです。ほとんどのコンピューターデー
    ターストレージメディアは紙よりも耐熱性がありません。著者は通常複
    数の安全な場所に保管された複数のセキュアーな暗号化されたコピーに
    頼っています。

    ネット上に散見するアーカイブメディアの楽観的なストレージ寿命 (ほ
    とんどベンダー情報由来)。

      * 100+年: インクと中性紙

      * 100年: オプティカルストレージ (CD/DVD、CD/DVD-R)
   
      * 30年: 磁気ストレージ (テープ、フロッピー)

      * 20年: 相変化オプティカルストレージ (CD-RW)

    これらは取扱いによる機械的故障等は考慮していません。

    ネット上に散見するアーカイブメディアの楽観的な書込み回数 (ほとん
    どベンダー情報由来)。

      * 250,000+回: ハードディスク

      * 10,000+回: フラッシュメモリー
   
      * 1,000回: CD/DVD-RW

      * 1回: CD/DVD-R、紙

    注意

    ここにあるストレージ寿命や書込み回数の数字はクリチカルなデーター
    ストレージに関する決定に使うべきではありません。製造者によって提
    供される特定の製品情報を参照下さい。

    ヒント
   
    CD/DVD-R や紙は1回しか書けないので、本質的に重ね書きで間違ってデ
    ーターを消すことを防げます。これは、利点です!

    ヒント

    もし高速で頻繁な大量のデーターのバックアップをする必要がある場合
    、高速のネットワーク接続でつながっているリモートホスト上のハード
    ディスクが唯一の現実的なオプションかもしれません。

%

10.1.7. リムーバブルストレージデバイス

    リムーバブルストレージデバイスは次の何れも指します。

      * USB フラッシュドライブ

      * Hard ディスクドライブ

      * 光学ディスクドライブ

      * デジタルカメラ

      * デジタル音楽プレーヤー

    これらは次の何れかで接続できます。

      * USB

      * IEEE 1394 / FireWire

      * PC カード

    GNOME や KDE のような最近のデスクトップ環境は、"/etc/fstab" エン
    トリーにマッチが無いリムーバブルデバイスを自動的にマウントする事
    ができます。

      * udisks パッケージは、これらのデバイスをマウントやアンマウント
        するためのデーモンと関連するユーティリティーを提供します。
   
      * D-bus は、自動的なプロセスを開始するイベントを作成します。

      * PolicyKit が必要な特権を提供します。

    ヒント
   
    自動的にマウントされたデバイスは、umount(8) によって利用される
    "uhelper=" マウントオプションが設定されているかもしれません。

    ヒント
   
    "/etc/fstab" にリムーバブルメディアデバイスの記載が無い時のみ、現
    代的なデスクトップ環境下での自動マウントは起こります。

    最新のデスクトップ環境下では次のようにしてカスタマイズ可能なマウ
    ント点として "/media/<disk_label>" が選ばれます。

      * FAT ファイルシステムでは、mlabel(1) を使います。

      * ISO9660 ファイルシステムでは、genisoimage(1) を"-V" オプショ
        ンとともに使います。

      * ext2/ext3/ext4 ファイルシステムでは、tune2fs(1) を"-L" オプシ
        ョンとともに使います。

    ヒント

    符号化方式 (エンコーディング) の選択をマウントオプションとして与
    える必要があるかもしれません (「ファイル名の符号化方式」参照下さ
    い)。

    ヒント

    ファイルシステムをアンマウンとする際に GUI メニューを使うと、動的
    に生成された "/dev/sdc" 等のデバイスノード削除するかもしれません
    。もしそのデバイスノードの削除したくない場合にはシェルのコマンド
    プロンプトから umount(8) コマンドを使いましょう。

%

10.1.8. データー共有用のファイルシステム選択

    リムーバブルストレージデバイスを使ってデーターを共有する際には、
    両方のシステムにサポートされた共通のファイルシステムでそれをフォ
    ーマットするべきです。ファイルシステム選択のリストを次に示します
    。

    表10.3 典型的な使用シナリオに合わせたリムーバブルストレージデバイ
    スのファイルシステムの選択肢のリスト

    +---------------------------------------------------------------+
    |ファイル |              典型的使用シナリオの説明               |
    |システム |                                                     |
    |---------+-----------------------------------------------------|
    |FAT12    |フロッピーディスク上のクロスプラットフォームのデータ |
    |         |ー共有 (<32MiB)                                      |
    |---------+-----------------------------------------------------|
    |FAT16    |小さなハードディスク類似のデバイス上のクロスプラット |
    |         |フォームのデーター共有 (<2GiB)                       |
    |---------+-----------------------------------------------------|
    |         |大きなハードディスク類似のデバイス上のクロスプラット |
    |FAT32    |フォームのデーター共有 (<8TiB, MS Windows95 OSR2 以降|
    |         |でサポート有り)                                      |
    |---------+-----------------------------------------------------|
    |         |大きなハードディスク類似のデバイス上のクロスプラット |
    |NTFS     |フォームのデーター共有 (MS Windows NT 以降でネイティ |
    |         |ブにサポート、Linux 上では FUSE 経由の NTFS-3G でサポ|
    |         |ート)                                                |
    |---------+-----------------------------------------------------|
    |ISO9660  |CD-R and DVD+/-R 上の静的データーのクロスプラットフォ|
    |         |ームの共有                                           |
    |---------+-----------------------------------------------------|
    |UDF      |CD-R や DVD+/-R 上への増分データーの書込み (新規)    |
    |---------+-----------------------------------------------------|
    |MINIX フ |フロッピーディスク上へのスペース効率の良い unix ファ |
    |ァイルシ |イルデーターのストレージ                             |
    |ステム   |                                                     |
    |---------+-----------------------------------------------------|
    |ext2 ファ|古い Linux システムとハードディスク類似デバイス上のデ|
    |イルシス |ーターを共有                                         |
    |テム     |                                                     |
    |---------+-----------------------------------------------------|
    |ext3 ファ|古い Linux システムとハードディスク類似デバイス上のデ|
    |イルシス |ーターを共有                                         |
    |テム     |                                                     |
    |---------+-----------------------------------------------------|
    |ext3 ファ|最新の Linux システムとハードディスク類似デバイス上の|
    |イルシス |データーを共有                                       |
    |テム     |                                                     |
    +---------------------------------------------------------------+


    ヒント

    デバイスレベルの暗号化を使ったクロスプラットフォームのデーター共
    有に関しては、「dm-crypt/LUKS を使ったリムーバブルディスクの暗号
    化」を参照下さい。

    FAT ファイルシステムはほとんど全ての現代的なオペレーティングシス
    テムでサポートされていて、ハードディスク類似のメディア経由でのデ
    ーター交換目的に非常に有用です。

    クロスプラットフォームの FAT ファイルシステムを使ったデーター共有
    にリムーバブルハードディスク類似デバイスをフォーマットする時の安
    全な選択肢は次です。

      * fdisk(8) か cfdisk(8) か parted(8) (「ディスクパーティション
        設定」参照下さい) を使ってそれを単一のプライマリパーティショ
        ンにパーティションしそれを次のようにマークします。

          + 2GB より小さなメディアには FAT16 となるように "6" とタイ
            プします

          + 大きなメディアには FAT32 (LBA) となるように "c" とタイプ
            します

      * 第1パーティションを mkfs.vfat(8) を使って次のようにフォーマッ
        トします。

          + FAT16 となるように "/dev/sda1" 等とそのデバイス名だけを使
            います

          + FAT32 となるように "-F 32 /dev/sda1" 等と明示的なオプショ
            ン指定とそのデバイス名を使います

    FAT とか ISO9660 ファイルシステムを使ってデーターを共有する際の安
    全への配慮を次に記します。

      * tar(1) や cpio(1) を使ってアーカイブファイルに最初にファイル
        をアーカイブすることで長いファイル名やシンボリックリンクやオ
        リジナルの Unix ファイルパーミッションとオーナー情報を保持し
        ます。
   
      * split(1) コマンドを使ってアーカイブファイルを 2GiB 以下の塊に
        分割してファイルサイズの制約から保護します。

      * アーカイブファイルを暗号化してその内容を不正アクセスから保護
        します。

    注記

    FAT ファイルシステムはその設計上最大ファイルサイズは (2^32 - 1)
    bytes = (4GiB - 1 byte) です。古い 32 ビット OS 上の一部アプリケ
    ーションは、最大ファイルサイズはさらに小さく (2^31 - 1) bytes =
    (2GiB - 1 byte) です。Debian は後者の問題に苦しむことはありません
    。

    注記

    Microsoft 自身も 200MB を越すドライブやパーティションに FAT を使
    うことを勧めていません。マイクロソフトは、彼らの "Overview of
    FAT, HPFS, and NTFS File Systems" で非効率的なディスク領域の使用
    等の欠点をハイライトしています。もちろん私たちは Linux では通常
    ext4 ファイルシステムを使うべきです。

    ヒント
   
    ファイルシステムとファイルシステムのアクセスに関しての詳細は、
    "Filesystems HOWTO" を参照下さい。

%

10.1.9. ネットワーク経由でのデーター共有

    データーをネットワーク経由で他のシステムと共有するときには、共通
    のサービスを使うべきです。次に一部のヒントを記します。

    表10.4 典型的使用シナリオの場合のネットワークサービスの選択のリス
    ト

    +---------------------------------------------------------------+
    |ネットワークサービス |        典型的使用シナリオの説明         |
    |---------------------+-----------------------------------------|
    |Samba を使う SMB/CIFS|"Microsoft Windows Network" 経由でのファ |
    |ネットワーク経由マウ |イル共有、smb.conf(5) と The Official    |
    |ントファイルシステム |Samba 3.x.x HOWTO and Reference Guide か |
    |                     |samba-doc パッケージ参照下さい           |
    |---------------------+-----------------------------------------|
    |Linux カーネルを使う |"Unix/Linux Network" 経由のファイル共有、|
    |NFS ネットワークマウ |exports(5) と Linux NFS-HOWTO 参照下さい |
    |ントファイルシステム |。                                       |
    |---------------------+-----------------------------------------|
    |HTTP サービス        |ウェッブサーバー/クライアント間のファイル|
    |                     |共有                                     |
    |---------------------+-----------------------------------------|
    |                     |暗号化されたセキュアーソケットレイヤー   |
    |HTTPS サービス       |(SSL) もしくは Transport Layer Security  |
    |                     |(TLS) を使ったウェッブサーバー/クライアン|
    |                     |ト間のファイル共有                       |
    |---------------------+-----------------------------------------|
    |FTP サービス         |FTP サーバー/クライアント間のファイル共有|
    +---------------------------------------------------------------+


    このようなネットワーク経由でマウントされたファイルシステムやネッ
    トワーク経由のファイル転送法はデーター共有のために非常に便利です
    が、インセキュアーかもしれませんこれらのネットワーク接続は次に記
    すようにしてセキュアーにされなければいけません。

      * SSL/TLS を使い暗号化

      * SSH 経由でそれをトンネル
   
      * VPN 経由でそれをトンネル

      * セキュアーファイアウォールの背後に限定

    さらに「他のネットワークアプリケーションサーバー」と「他のネット
    ワークアプリケーションクライアント」を参照下さい。

%

10.2. バックアップと復元

    コンピューターはいつか壊れるとか、人間によるエラーがシステムやデ
    ーターをへの損害を及ぼすことは皆知っています。バックアップと復元
    の操作は正しいシステム管理の必須構成要素です。考えうる全ての故障
    モードはいつかの日にやって来ます。

    ヒント

    バックアップのシステムは簡単にしておき、システムのバックアップは
    頻繁にします。バックアップデーターが存在することは、あなたのバッ
    クアップ方法が技術的に如何に良いかよりも重要です。

    実際のバックアップと復元の方針を決める上で3つの要素があります。

     1. 何をバックアップし復元するかを知っていること

          + あなた自身が作成したデーターファイル: "~/" 中のデーター

          + あなた自身が使用したアプリケーションが作成したデーターフ
            ァイル: "/var/" ("/var/cache/" と "/var/run/" と "/var/
            tmp/" は除外) 中のデーター

          + システム設定ファイル: "/etc/" 中のデーター

          + ローカルデーター: "/usr/local/" とか "/opt/" 中のデーター

          + システムインストール情報: 要点 (パーティション、…) をプレ
            ーンテキストで書いたメモ

          + 実証済みのデーターセット: 事前に実験的復元操作をして確認
            済み

     2. バックアップと復元の方法を知っていること

          + セキュアーなデーターのストレージ: 上書きやシステム障害の
            防止

          + 頻繁なバックアップ: スケジュールされたバックアップ

          + 冗長なバックアップ: データーのミラーリング

          + フルプルーフなプロセス: 簡単な単一コマンドバックアップ

     3. 関わっているリスクと費用の評価

          + データーがなくなった際の価値

          + バックアップに必要なリソース: 人的、ハードウエアー、ソフ
            トウエアー、…

          + 故障モードとその確率

    注記

    /proc や /sys や /tmp や /run 上にある擬似ファイルシステム (「
    procfs と sysfs」と「tmpfs」参照) の内容をバックアップしてはいけ
    ません。あなた自身が自分がしていることの意味を余程よく分かってい
    なければ、これらの内容は巨大で無用なデーターです。

    データーのセキュアーなストレージとして、好ましくはファイルシステ
    ム破壊に耐えるように異なるディスクや機器上に、少なくとも異なるデ
    ィスクパーティション上に、データーはあるべきです。重要データーは
    上書き事故を防ぐために CD/DVD-R のような1回書込みメディアに貯蔵す
    るのが好ましいです。(シェルコマンドラインからストレージメディアに
    どうして書き込むかについては「バイナリーデーター」を参照下さい。
    GNOME デスクトップの GUI 環境ではメニュー: "Places→CD/DVD
    Creator" で簡単に書込みできます。)

    注記

    データーをバックアップする際には MTA (「メールトランスポートエー
    ジェント (MTA)」参照下さい) 等のアプリケーションデーモンを停止す
    るのも一計です。

    注記

    "/etc/ssh/ssh_host_dsa_key" や "/etc/ssh/ssh_host_rsa_key" や "~
    /.gnupg/*" や "~/.ssh/*" や "/etc/passwd" や "/etc/shadow" や "/
    etc/fetchmailrc" や "popularity-contest.conf" や "/etc/ppp/
    pap-secrets" や "/etc/exim4/passwd.client" 等のアイデンティティ関
    連のデーターファイルのバックアップと修復には特に注意が必要です。
    これらのデーターの一部はシステムに同様な入力をしても再生成できま
    せん。

    注記

    ユーザープロセスで cron ジョブを実行している際には、"/var/spool/
    cron/crontabs" ディレクトリー中のファイルを回復し cron(8) を再ス
    タートしなければいけません。cron(8) と crontab(1) に関しては「タ
    スク定期実行のスケジュール」を参照下さい。

%

10.2.1. バックアプユーティリティーのスイート

    Debian システム上で利用可能でバックアップユーティリティーのスイー
    トのなかで際立った選ばれたリストを記します。

    表10.5 バックアップスイートのユーティリティーのリスト

    +---------------------------------------------------------------+
    |  パッケージ  |ポプ |サイ |                説明                |
    |              |コン | ズ  |                                    |
    |--------------+-----+-----+------------------------------------|
    |dump          |V:1, |352  |ext2/ext3/ext4 ファイルシステム用の |
    |              |I:6  |     |4.4 BSD 由来の dump(8) と restore(8)|
    |--------------+-----+-----+------------------------------------|
    |              |V:0, |     |GNU/Linux と IRIX 上の XFS ファイル |
    |xfsdump       |I:9  |854  |システム用の xfsdump(8) と          |
    |              |     |     |xfsrestore(8) を使う dump と restore|
    |--------------+-----+-----+------------------------------------|
    |backupninja   |V:4, |355  |軽量で拡張可のメタバックアップシステ|
    |              |I:5  |     |ム                                  |
    |--------------+-----+-----+------------------------------------|
    |              |V:10,|     |Bacula: ネットワークバックアップ、復|
    |bacula-common |I:15 |2158 |元および検証 - 共通のサポートファイ |
    |              |     |     |ル                                  |
    |--------------+-----+-----+------------------------------------|
    |              |     |     |Bacula: ネットワークバックアップ、復|
    |bacula-client |I:3  |183  |元および検証 - クライアントメタパッ |
    |              |     |     |ケージ                              |
    |--------------+-----+-----+------------------------------------|
    |bacula-console|V:1, |107  |Bacula: ネットワークバックアップ、復|
    |              |I:5  |     |元および検証 - テキストコンソール   |
    |--------------+-----+-----+------------------------------------|
    |              |     |     |Bacula: ネットワークバックアップ、復|
    |bacula-server |I:1  |183  |元および検証 - サーバーメタパッケー |
    |              |     |     |ジ                                  |
    |--------------+-----+-----+------------------------------------|
    |amanda-common |V:0, |10031|Amanda: Advanced Maryland Automatic |
    |              |I:2  |     |Network Disk Archiver (ライブラリー)|
    |--------------+-----+-----+------------------------------------|
    |amanda-client |V:0, |1089 |Amanda: Advanced Maryland Automatic |
    |              |I:2  |     |Network Disk Archiver (クライアント)|
    |--------------+-----+-----+------------------------------------|
    |amanda-server |V:0, |1076 |Amanda: Advanced Maryland Automatic |
    |              |I:0  |     |Network Disk Archiver (サーバー)    |
    |--------------+-----+-----+------------------------------------|
    |backup-manager|V:1, |572  |コマンドラインのバックアップツール  |
    |              |I:2  |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |              |V:0, |     |マウントできるメディアのための低メン|
    |backup2l      |I:1  |114  |テナンスのバックアップ/復旧ツール   |
    |              |     |     |(ディスクベース)                    |
    |--------------+-----+-----+------------------------------------|
    |              |V:3, |     |BackupPC は高性能でエンタープライズ |
    |backuppc      |I:3  |3182 |級の、PC をバックアップするためのシ |
    |              |     |     |ステム (ディスクベース)             |
    |--------------+-----+-----+------------------------------------|
    |duplicity     |V:7, |1761 |(リモート) 増分バックアップ         |
    |              |I:15 |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |flexbackup    |V:0, |243  |(リモート) 増分バックアップ         |
    |              |I:0  |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |rdiff-backup  |V:7, |733  |(リモート) 増分バックアップ         |
    |              |I:15 |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |restic        |V:1, |20595|(リモート) 増分バックアップ         |
    |              |I:3  |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |rsnapshot     |V:5, |462  |(リモート) 増分バックアップ         |
    |              |I:11 |     |                                    |
    |--------------+-----+-----+------------------------------------|
    |slbackup      |V:0, |151  |(リモート) 増分バックアップ         |
    |              |I:0  |     |                                    |
    +---------------------------------------------------------------+


    バックアップツールにはそれぞれの特別な狙いがあります。

      * Mondo Rescue を使うと、通常のインストールプロセスを経ずにバッ
        クアップ CD/DVD 等から完全なシステムを迅速に復旧できます。

      * ユーザーデーターの定期的バックアップ機能は簡単なスクリプト (
        「システムバックアップ用スクリプトの例」) と cron(8) で実現で
        きます。

      * Bacula と Amanda と BackupPC は、ネットワーク越しの定期的バッ
        クアップに焦点のあるフル機能のバックアップスイートです。

    「アーカイブと圧縮ツール」や「コピーと同期ツール」に記された基本
    的なツールを使うとカスタムスクリプト経由のシステムバックアップが
    できます。そのようなスクリプトは次を使うと強化できます。

      * restic パッケージは差分(遠隔)バックアップを提供します。

      * rdiff-backup パッケージは (リモートの) 増分バックアップを可能
        にします。

      * dump パッケージは全ファイルシステムの効率的かつ増分のバックア
        ップと復旧を補助します。

    ヒント
   
    dump パッケージに関して学ぶには、"/usr/share/doc/dump/" の中のフ
    ァイルと "Is dump really deprecated?" を参照下さい。

%

10.2.2. システムバックアップ用スクリプトの例

    個人の Debian の unstable (非安定) スイートを実行するデスクトップ
    システムでは、個人的だったりクリティカルなデーターのみを保護する
    必要しかありません。いずれにせよ1年に1回はシステムを再インストー
    ルします。だから全システムをバックアップする理由もありませんし、
    フル機能のバックアップユーティリティーをインストールする理由もあ
    りません。

    簡単なスクリプトでバックアップ用アーカイブを作成し、GUI を使って
    CD/DVD にそれを焼きます。次のこのスクリプトの例を示します。

    #!/bin/sh -e
    # Copyright (C) 2007-2008 Osamu Aoki <osamu@debian.org>, Public Domain
    BUUID=1000; USER=osamu # UID and name of a user who accesses backup files
    BUDIR="/var/backups"
    XDIR0=".+/Mail|.+/Desktop"
    XDIR1=".+/\.thumbnails|.+/\.?Trash|.+/\.?[cC]ache|.+/\.gvfs|.+/sessions"
    XDIR2=".+/CVS|.+/\.git|.+/\.svn|.+/Downloads|.+/Archive|.+/Checkout|.+/tmp"
    XSFX=".+\.iso|.+\.tgz|.+\.tar\.gz|.+\.tar\.bz2|.+\.cpio|.+\.tmp|.+\.swp|.+~"
    SIZE="+99M"
    DATE=$(date --utc +"%Y%m%d-%H%M")
    [ -d "$BUDIR" ] || mkdir -p "BUDIR"
    umask 077
    dpkg --get-selections \* > /var/lib/dpkg/dpkg-selections.list
    debconf-get-selections > /var/cache/debconf/debconf-selections

    {
    find /etc /usr/local /opt /var/lib/dpkg/dpkg-selections.list \
         /var/cache/debconf/debconf-selections -xdev -print0
    find /home/$USER /root -xdev -regextype posix-extended \
      -type d -regex "$XDIR0|$XDIR1" -prune -o -type f -regex "$XSFX" -prune -o \
      -type f -size  "$SIZE" -prune -o -print0
    find /home/$USER/Mail/Inbox /home/$USER/Mail/Outbox -print0
    find /home/$USER/Desktop  -xdev -regextype posix-extended \
      -type d -regex "$XDIR2" -prune -o -type f -regex "$XSFX" -prune -o \
      -type f -size  "$SIZE" -prune -o -print0
    } | cpio -ov --null -O $BUDIR/BU$DATE.cpio
    chown $BUUID $BUDIR/BU$DATE.cpio
    touch $BUDIR/backup.stamp

    root から実行されるスクリプト断片の例と言う位置づけです。

    著者はこれをあなたが次のように変更し実行する事を期待します。

      * このスクリプトを編集して全てのあなたの重要なデーターをカバー
        しましょう (「ファイル選択の慣用句」と「バックアップと復元」
        参照下さい)。

      * 増分バックアップをするには、"find … -print0" を、"find …
        -newer $BUDIR/backup.stamp -print0" で置き換えます。

      * scp(1) か rsync(1) を使ってリモートホストにバックアップファイ
        ルを転送したり、それらを更なるデーターセキュリティーのために
        CD/DVD に焼きます。(私は CD/DVD に焼くのに GNOME デスクトップ
        の GUI を使っています。更なる冗長性に関しては「zenity を使う
        シェルスクリプト例」を参照下さい。)

    簡潔にしましょう!

    ヒント

    debconf の設定データーは "debconf-set-selections
    debconf-selections" で、dpkg の選択データーは "dpkg
    --set-selection <dpkg-selections.list" で復元できます。

%

10.2.3. データーバックアップ用コピースクリプト

    ディレクトリーツリーの下のデーターセットは、"cp -a" としてコピー
    すると通常のバックアップができます。

    "/var/cache/apt/packages/" ディレクトリーの下のデーターのようなデ
    ィレクトリーの下の大きな上書きされない静的なデーターセットは、"cp
    -al" を利用するハードリンクを使うと通常のバックアップに代わるディ
    スク空間を効率的に利用するバックアップができます。

    私が bkup と名付けたデーターバックアップのためのコピースクリプト
    を次に示します。このスクリプトは現ディレクトリーの下の全ての (非
    VCS) ファイルを親ディレクトリーかリモートホストの日付入りディレク
    トリーにコピーします。

    #!/bin/sh -e
    # Copyright (C) 2007-2008 Osamu Aoki <osamu@debian.org>, Public Domain
    fdot(){ find . -type d \( -iname ".?*" -o -iname "CVS" \) -prune -o -print0;}
    fall(){ find . -print0;}
    mkdircd(){ mkdir -p "$1";chmod 700 "$1";cd "$1">/dev/null;}
    FIND="fdot";OPT="-a";MODE="CPIOP";HOST="localhost";EXTP="$(hostname -f)"
    BKUP="$(basename $(pwd)).bkup";TIME="$(date  +%Y%m%d-%H%M%S)";BU="$BKUP/$TIME"
    while getopts gcCsStrlLaAxe:h:T f; do case $f in
    g)  MODE="GNUCP";; # cp (GNU)
    c)  MODE="CPIOP";; # cpio -p
    C)  MODE="CPIOI";; # cpio -i
    s)  MODE="CPIOSSH";; # cpio/ssh
    t)  MODE="TARSSH";; # tar/ssh
    r)  MODE="RSYNCSSH";; # rsync/ssh
    l)  OPT="-alv";; # hardlink (GNU cp)
    L)  OPT="-av";;  # copy (GNU cp)
    a)  FIND="fall";; # find all
    A)  FIND="fdot";; # find non CVS/ .???/
    x)  set -x;; # trace
    e)  EXTP="${OPTARG}";; # hostname -f
    h)  HOST="${OPTARG}";; # user@remotehost.example.com
    T)  MODE="TEST";; # test find mode
    \?) echo "use -x for trace."
    esac; done
    shift $(expr $OPTIND - 1)
    if [ $# -gt 0 ]; then
      for x in $@; do cp $OPT $x $x.$TIME; done
    elif [ $MODE = GNUCP ]; then
      mkdir -p "../$BU";chmod 700 "../$BU";cp $OPT . "../$BU/"
    elif [ $MODE = CPIOP ]; then
      mkdir -p "../$BU";chmod 700 "../$BU"
      $FIND|cpio --null --sparse -pvd ../$BU
    elif [ $MODE = CPIOI ]; then
      $FIND|cpio -ov --null | ( mkdircd "../$BU"&&cpio -i )
    elif [ $MODE = CPIOSSH ]; then
      $FIND|cpio -ov --null|ssh -C $HOST "( mkdircd \"$EXTP/$BU\"&&cpio -i )"
    elif [ $MODE = TARSSH ]; then
      (tar cvf - . )|ssh -C $HOST "( mkdircd \"$EXTP/$BU\"&& tar xvfp - )"
    elif [ $MODE = RSYNCSSH ]; then
      rsync -aHAXSv ./ "${HOST}:${EXTP}-${BKUP}-${TIME}"
    else
      echo "Any other idea to backup?"
      $FIND |xargs -0 -n 1 echo
    fi

    これはコマンド例の位置付けです。スクリプトを読んで自分自身で編集
    してからご使用下さい。

    ヒント

    私はこの bkup を私の "/usr/local/bin/" ディレクトリーに置いていま
    す。わたしは一時的スナップショットのバックアップが必要な時に、作
    業ディレクトリー中で引数無しにこの bkup コマンドを実行します。

    ヒント

    ソースファイルツリーや設定ファイルツリーのスナップショットの履歴
    を作成するには、git(7) を使うのが簡単でスペースの効率も良ろしいで
    す (「設定履歴記録のための Git」参照下さい)。

%

10.3. データーセキュリティーのインフラ

    データーのセキュリティーのインフラはデーターの暗号化のツールとメ
    ッセージダイジェストのツールと署名ツールの組み合わせで提供されま
    す。

    表10.6 データーセキュリティーインフラツールのリスト

    +---------------------------------------------------------------+
    |  パッケージ  |ポプコ|サイ | コマンド |          説明          |
    |              |  ン  | ズ  |          |                        |
    |--------------+------+-----+----------+------------------------|
    |              |V:531,|     |          |GNU プライバシーガード -|
    |gnupg         |I:950 |787  |gpg(1)    |OpenPGP 暗号化ト署名ツー|
    |              |      |     |          |ル                      |
    |--------------+------+-----+----------+------------------------|
    |gpgv          |V:880,|859  |gpgv(1)   |GNU プライバシガード -  |
    |              |I:999 |     |          |署名確認ツール          |
    |--------------+------+-----+----------+------------------------|
    |paperkey      |V:1,  |58   |paperkey  |OpenPGP の秘密キーから秘|
    |              |I:13  |     |(1)       |密の情報だけを抜粋      |
    |--------------+------+-----+----------+------------------------|
    |              |V:29, |     |cryptsetup|暗号化されたブロックデバ|
    |cryptsetup    |I:78  |402  |(8), …    |イス (dm-crypt / LUKS)  |
    |              |      |     |          |のためのユーティリティー|
    |--------------+------+-----+----------+------------------------|
    |              |V:3,  |     |ecryptfs  |ecryptfs スタックドファ |
    |ecryptfs-utils|I:5   |460  |(7), …    |イルシステム暗号化のため|
    |              |      |     |          |のユーティリティー      |
    |--------------+------+-----+----------+------------------------|
    |coreutils     |V:891,|17478|md5sum(1) |MD5 メッセージダイジェス|
    |              |I:999 |     |          |トを計算やチェック      |
    |--------------+------+-----+----------+------------------------|
    |coreutils     |V:891,|17478|sha1sum(1)|SHA1 メッセージダイジェ |
    |              |I:999 |     |          |ストを計算やチェック    |
    |--------------+------+-----+----------+------------------------|
    |              |V:794,|     |openssl   |"openssl dgst" を使って |
    |openssl       |I:993 |1465 |(1ssl)    |メッセージダイジェストを|
    |              |      |     |          |計算やチェック (OpenSSL)|
    +---------------------------------------------------------------+


    Linux カーネルモジュール経由で自動的データー暗号化のインフラを実
    現する dm-crypto と ecryptfs に関しては「データー暗号化ティップ」
    を参照下さい。

%

10.3.1. Gnupg のためのキー管理

    基本的なキー管理に関する GNU プライバシガードコマンドを次に記しま
    す。

    表10.7 キー管理のための GNU プライバシガードコマンドのリスト

    +---------------------------------------------------------------+
    |       コマンド        |                 説明                  |
    |-----------------------+---------------------------------------|
    |gpg --gen-key          |新規キーの生成                         |
    |-----------------------+---------------------------------------|
    |gpg --gen-revoke       |my_user_ID に関するリボークキーを生成  |
    |my_user_ID             |                                       |
    |-----------------------+---------------------------------------|
    |gpg --edit-key user_ID |インタラクティブにキーを編集、ヘルプは |
    |                       |"help"                                 |
    |-----------------------+---------------------------------------|
    |gpg -o file --export   |全てのキーをファイルにエクスポート     |
    |-----------------------+---------------------------------------|
    |gpg --import file      |全てのキーをファイルからインポート     |
    |-----------------------+---------------------------------------|
    |gpg --send-keys user_ID|user_ID のキーをキーサーバーに送信     |
    |-----------------------+---------------------------------------|
    |gpg --recv-keys user_ID|user_ID のキーをキーサーバーから受信   |
    |-----------------------+---------------------------------------|
    |gpg --list-keys user_ID|user_ID のキーをリスト                 |
    |-----------------------+---------------------------------------|
    |gpg --list-sigs user_ID|user_ID の署名をリスト                 |
    |-----------------------+---------------------------------------|
    |gpg --check-sigs       |user_ID の署名をチェック               |
    |user_ID                |                                       |
    |-----------------------+---------------------------------------|
    |gpg --fingerprint      |user_ID のフィンガープリントをチェック |
    |user_ID                |                                       |
    |-----------------------+---------------------------------------|
    |gpg --refresh-keys     |ローカルキーリングをアップデート       |
    +---------------------------------------------------------------+


    トラストコードの意味を次に記します。

    表10.8 トラストコードの意味のリスト

    +----------------------------------+
    |コード|        信用の説明         |
    |------+---------------------------|
    |-     |所有者への信用未付与/未計算|
    |------+---------------------------|
    |e     |信用計算に失敗             |
    |------+---------------------------|
    |q     |計算用の情報不十分         |
    |------+---------------------------|
    |n     |このキーを信用不可         |
    |------+---------------------------|
    |m     |スレスレの信用             |
    |------+---------------------------|
    |f     |フルに信用                 |
    |------+---------------------------|
    |u     |究極の信用                 |
    +----------------------------------+


    次のようにすると私のキー "1DD8D791" をポピュラーなキーサーバー
    "hkp://keys.gnupg.net" にアップロード出来ます。

    $ gpg --keyserver hkp://keys.gnupg.net --send-keys 1DD8D791

    "~/.gnupg/gpg.conf" (もしくは古い場所 "~/.gnupg/options") 中の良
    いデフォールトのキーサーバーの設定は次を含みます。

    keyserver hkp://keys.gnupg.net

    次によってキーサーバーから知らないキーが獲得できます。

    $ gpg --list-sigs --with-colons | grep '^sig.*\[User ID not found\]' |\
      cut -d ':' -f 5| sort | uniq | xargs gpg --recv-keys

    OpenPGP 公開キーサーバー (バージョン0.9.6以前) に2つ以上サブキー
    のあるキーを壊すバグがありました。新しい gnupg (>1.2.1-2) パッケ
    ージはこのような壊れたサブキーを取り扱えます。gpg(1) の
    "--repair-pks-subkey-bug" オプションの説明を参照下さい。

%

10.3.2. GnuPG をファイルに使用

    基本的なキー管理に関する GNU プライバシガードコマンドを次に記しま
    す。

    表10.9 ファイルに使用する GNU プライバシーガードコマンドのリスト

    +---------------------------------------------------------------+
    |         コマンド          |               説明                |
    |---------------------------+-----------------------------------|
    |gpg -a -s file             |ファイルを ASCII 文字化した        |
    |                           |file.asc と署名                    |
    |---------------------------+-----------------------------------|
    |gpg --armor --sign file    |, ,                                |
    |---------------------------+-----------------------------------|
    |gpg --clearsign file       |メッセージをクリアサイン           |
    |---------------------------+-----------------------------------|
    |gpg --clearsign file|mail  |foo@example.org にクリアサインされ |
    |foo@example.org            |たメッセージをメールする           |
    |---------------------------+-----------------------------------|
    |gpg --clearsign            |                                   |
    |--not-dash-escaped         |パッチファイルをクリアサイン       |
    |patchfile                  |                                   |
    |---------------------------+-----------------------------------|
    |gpg --verify file          |クリアサインされたファイルを確認   |
    |---------------------------+-----------------------------------|
    |gpg -o file.sig -b file    |署名を別ファイルで作成             |
    |---------------------------+-----------------------------------|
    |gpg -o file.sig            |, ,                                |
    |--detach-sig file          |                                   |
    |---------------------------+-----------------------------------|
    |gpg --verify file.sig file |file.sig を使ってファイルを確認    |
    |---------------------------+-----------------------------------|
    |gpg -o crypt_file.gpg -r   |file からバイナリー crypt_file.gpg |
    |name -e file               |への name 宛公開キー暗号化         |
    |---------------------------+-----------------------------------|
    |gpg -o crypt_file.gpg      |                                   |
    |--recipient name --encrypt |, ,                                |
    |file                       |                                   |
    |---------------------------+-----------------------------------|
    |gpg -o crypt_file.asc -a -r|file から ASCII 文字化された       |
    |name -e file               |crypt_file.asc への name 宛公開キー|
    |                           |暗号化                             |
    |---------------------------+-----------------------------------|
    |gpg -o crypt_file.gpg -c   |file からバイナリー crypt_file.gpg |
    |file                       |への対称暗号化                     |
    |---------------------------+-----------------------------------|
    |gpg -o crypt_file.gpg      |, ,                                |
    |--symmetric file           |                                   |
    |---------------------------+-----------------------------------|
    |gpg -o crypt_file.asc -a -c|file から ASCII 文字化された       |
    |file                       |crypt_file.asc への対称暗号化      |
    |---------------------------+-----------------------------------|
    |gpg -o file -d             |暗号解読                           |
    |crypt_file.gpg -r name     |                                   |
    |---------------------------+-----------------------------------|
    |gpg -o file --decrypt      |, ,                                |
    |crypt_file.gpg             |                                   |
    +---------------------------------------------------------------+


%

10.3.3. Mutt で GnuPG を使用

    インデックスメニュー上で "S" とすれば GnuPG が使えるようにしてお
    きながら、遅い GnuPG が自動的に起動しないように "~/.muttrc" に次
    の内容を追加します。

    macro index S ":toggle pgp_verify_sig\n"
    set pgp_verify_sig=no

%

10.3.4. Vim で GnuPG を使用

    gnupg のプラグインを使うと ".gpg" や ".asc" や ".ppg" というファ
    イル拡張子のファイルに対して透過的に GnuPG を実行できます。

    # aptitude install vim-scripts vim-addon-manager
    $ vim-addons install gnupg

%

10.3.5. MD5 和

    md5sum(1) はrfc1321 の方法を使ってダイジェストファイルを作成し各
    ファイルをそれで確認するユーティリティーを提供します。

    $ md5sum foo bar >baz.md5
    $ cat baz.md5
    d3b07384d113edec49eaa6238ad5ff00  foo
    c157a79031e1c40f85931829bc5fc552  bar
    $ md5sum -c baz.md5
    foo: OK
    bar: OK

    注記

    MD5 和の計算は GNU プライバシーガード (GnuPG) による暗号学的署名
    の計算より CPU への負荷がかかりません。通常、一番上のレベルのダイ
    ジェストファイルだけがデーターの整合性のために暗号学的に署名され
    ます。

%

10.4. ソースコードマージツール

    ソースコードをマージする多くのツールがあります。次のコマンドが著
    者の目に止まりました。

    表10.10 ソースコードマージツールのリスト

    +---------------------------------------------------------------+
    |パッケージ|ポプコ|サイ| コマンド  |            説明            |
    |          |  ン  | ズ |           |                            |
    |----------+------+----+-----------+----------------------------|
    |diffutils |V:871,|1598|diff(1)    |1行ごとにファイルを比較     |
    |          |I:991 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |diffutils |V:871,|1598|diff3(1)   |1行ごとにファイルを比較やマ |
    |          |I:991 |    |           |ージ                        |
    |----------+------+----+-----------+----------------------------|
    |vim       |V:106,|3231|vimdiff(1) |vim で2つのファイルを並べて |
    |          |I:398 |    |           |比較                        |
    |----------+------+----+-----------+----------------------------|
    |patch     |V:99, |248 |patch(1)   |差分ファイルをオリジナルに適|
    |          |I:725 |    |           |用                          |
    |----------+------+----+-----------+----------------------------|
    |dpatch    |V:0,  |191 |dpatch(1)  |Debian パッケージのためにパ |
    |          |I:11  |    |           |ッチのシリーズを管理        |
    |----------+------+----+-----------+----------------------------|
    |diffstat  |V:16, |73  |diffstat(1)|差分ファイルによる変化のヒス|
    |          |I:154 |    |           |トグラム作成                |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |combinediff|2つの積み重ねパッチから1つの|
    |          |I:150 |    |(1)        |合計パッチを生成            |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |dehtmldiff |HTML ページから差分ファイル |
    |          |I:150 |    |(1)        |を抽出                      |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |filterdiff |差分ファイルから差分ファイル|
    |          |I:150 |    |(1)        |を抽出や削除                |
    |----------+------+----+-----------+----------------------------|
    |          |V:18, |    |fixcvsdiff |CVS により作成された patch  |
    |patchutils|I:150 |232 |(1)        |(1) が誤解する差分ファイルを|
    |          |      |    |           |修正                        |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |flipdiff(1)|古い2つのパッチを交換       |
    |          |I:150 |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |          |V:18, |    |           |正規表現にマッチするパッチに|
    |patchutils|I:150 |232 |grepdiff(1)|よって変更されるファイルを表|
    |          |      |    |           |示                          |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |interdiff  |2つのユニファイド差分ファイ |
    |          |I:150 |    |(1)        |ル間の違いを表示            |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |lsdiff(1)  |どのファイルがパッチによって|
    |          |I:150 |    |           |変更されるかを表示          |
    |----------+------+----+-----------+----------------------------|
    |          |V:18, |    |recountdiff|ユニファイドコンテキスト差分|
    |patchutils|I:150 |232 |(1)        |ファイルのカウントやオフセッ|
    |          |      |    |           |トを再計算                  |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |rediff(1)  |手編集された差分ファイルのカ|
    |          |I:150 |    |           |ウントやオフセットを再計算  |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |splitdiff  |増分パッチの分離            |
    |          |I:150 |    |(1)        |                            |
    |----------+------+----+-----------+----------------------------|
    |patchutils|V:18, |232 |unwrapdiff |ワードラップされたパッチを復|
    |          |I:150 |    |(1)        |元                          |
    |----------+------+----+-----------+----------------------------|
    |wiggle    |V:0,  |174 |wiggle(1)  |リジェクトされたパッチを適用|
    |          |I:0   |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |quilt     |V:3,  |788 |quilt(1)   |パッチのシリーズを管理      |
    |          |I:33  |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |meld      |V:14, |2972|meld(1)    |ファイルを比較やマージ (GTK)|
    |          |I:39  |    |           |                            |
    |----------+------+----+-----------+----------------------------|
    |dirdiff   |V:0,  |166 |dirdiff(1) |ディレクトリーツリー間で相違|
    |          |I:2   |    |           |点の表示と変更のマージ      |
    |----------+------+----+-----------+----------------------------|
    |docdiff   |V:0,  |555 |docdiff(1) |2つのファイルをワード毎/文字|
    |          |I:0   |    |           |毎に比較                    |
    |----------+------+----+-----------+----------------------------|
    |imediff   |V:0,  |157 |imediff(1) |対話型フルスクリーンの2方/3 |
    |          |I:0   |    |           |方マージツール              |
    |----------+------+----+-----------+----------------------------|
    |makepatch |V:0,  |102 |makepatch  |拡張パッチファイルの生成    |
    |          |I:0   |    |(1)        |                            |
    |----------+------+----+-----------+----------------------------|
    |makepatch |V:0,  |102 |applypatch |拡張パッチファイルの適用    |
    |          |I:0   |    |(1)        |                            |
    |----------+------+----+-----------+----------------------------|
    |wdiff     |V:9,  |644 |wdiff(1)   |テキストファイル間のワードの|
    |          |I:72  |    |           |相違表示                    |
    +---------------------------------------------------------------+


%

10.4.1. ソースファイル間の相違の抽出

    ふたつのソースファイル間の相違を抽出したユニファイド差分ファイル
    は、以下の要領でファイル位置に対応し "file.patch0" か
    "file.patch1" として作成されます。

    $ diff -u file.old file.new > file.patch0
    $ diff -u old/file new/file > file.patch1

%

10.4.2. ソースファイルに更新をマージ

    差分ファイル (別名、パッチファイル) はプログラム更新を送るのに使
    われます。受け取った側はこの更新を別のファイルに次のようにして適
    用します。

    $ patch -p0 file < file.patch0
    $ patch -p1 file < file.patch1

%

10.4.3. 3方マージによる更新

    3つのバージョンのソースコードがある場合、diff3(1) を使って効率的
    に3方マージを次のように実行できます。

    $ diff3 -m file.mine file.old file.yours > file

%

10.5. バージョンコントロールシステム

    Debian システム上のバージョンコントロールシステム (VCS) のまとめ
    を次に記します。

    注記
   
    VCS システムを今始めて学ぶ場合には、人気が出て来ている Git から学
    び出すことをお薦めします。

    表10.11 バージョンコントロールシステムツールのリスト

    +---------------------------------------------------------------+
    |          |ポプコ|サイ |          |VCS |                       |
    |パッケージ|  ン  | ズ  |  ツール  |タイ|       コメント        |
    |          |      |     |          | プ |                       |
    |----------+------+-----+----------+----+-----------------------|
    |cssc      |V:0,  |2044 |CSSC      |ロー|Unix SCCS のクローン   |
    |          |I:2   |     |          |カル|(非推奨)               |
    |----------+------+-----+----------+----+-----------------------|
    |rcs       |V:3,  |562  |RCS       |ロー|"Unix SCCS の本来あるべ|
    |          |I:19  |     |          |カル|き姿"                  |
    |----------+------+-----+----------+----+-----------------------|
    |cvs       |V:5,  |4609 |CVS       |リモ|リモート VCS の過去の標|
    |          |I:41  |     |          |ート|準                     |
    |----------+------+-----+----------+----+-----------------------|
    |          |V:20, |     |          |リモ|"良く出来た CVS"、新し |
    |subversion|I:109 |4858 |Subversion|ート|いリモート VCS のデファ|
    |          |      |     |          |    |クト標準               |
    |----------+------+-----+----------+----+-----------------------|
    |          |V:305,|     |          |分散|C で書かれた高速 DVCS  |
    |git       |I:478 |35040|Git       |型  |(Linux カーネル他が利  |
    |          |      |     |          |    |用)                    |
    |----------+------+-----+----------+----+-----------------------|
    |mercurial |V:8,  |1053 |Mercurial |分散|Python と一部 C で書か |
    |          |I:48  |     |          |型  |れた DVCS              |
    |----------+------+-----+----------+----+-----------------------|
    |          |V:2,  |     |          |分散|tla に影響され Python  |
    |bzr       |I:16  |28   |Bazaar    |型  |で書かれた DVCS (Ubuntu|
    |          |      |     |          |    |が使用)                |
    |----------+------+-----+----------+----+-----------------------|
    |darcs     |V:0,  |23159|Darcs     |分散|パッチに関して賢い計算 |
    |          |I:7   |     |          |型  |をする DVCS (遅い)     |
    |----------+------+-----+----------+----+-----------------------|
    |tla       |V:0,  |1011 |GNU arch  |分散|主に Tom Lord による   |
    |          |I:2   |     |          |型  |DVCS (歴史的)          |
    |----------+------+-----+----------+----+-----------------------|
    |monotone  |V:0,  |5815 |Monotone  |分散|C++ で書かれた DVCS    |
    |          |I:0   |     |          |型  |                       |
    |----------+------+-----+----------+----+-----------------------|
    |          |V:0,  |     |          |リモ|VCS (CVS, Subversion,  |
    |tkcvs     |I:1   |1498 |CVS, …    |ート|RCS) レポジトリーツリー|
    |          |      |     |          |    |の GUI 表示            |
    |----------+------+-----+----------+----+-----------------------|
    |gitk      |V:6,  |1723 |Git       |分散|VCS (Git) レポジトリー |
    |          |I:42  |     |          |型  |ツリーの GUI 表示      |
    +---------------------------------------------------------------+


    VCS はリビジョンコントロールシステム (RCS) とかソフトウエアー設定
    管理 (SCM) という別名もあります。

    Git のような分散 VCS が最近一番人気のツールです。CVS や
    Subversion は既存のオープンソースプログラム活動に参加するのにまだ
    有用かもしれません。

    Debian は Debian Salsa サービス経由でフリーの Git サービスを提供
    します。その説明文書は https://wiki.debian.org/Salsa にあります。

    注意
   
    Debian は既にその旧 alioth サービスを終了し、旧 alioth サービスの
    データーは alioth-archive にターボールとしてあります。

    VCS アーカイブへの共有アクセスを作るための基本が数点あります。

      * "umask 002" を使用 (「新規作成ファイルのパーミッションのコン
        トロール: umask」参照下さい)

      * すべての VCS アーカイブ中のファイルを適切なグループに所属させ
        る
   
      * すべての VCS アーカイブ中のディレクトリーのセットグループ ID
        を有効にする (BSD 式のファイル生成手順、「ファイルシステムの
        パーミッション」参照下さい)

      * VCS アーカイブを共有しているユーザーをグループに所属させる

%

10.5.1. VCS コマンドの比較

    次に全体像を提供するべく元来の VCS コマンドを極端に簡略化した比較
    を示します。典型的なコマンド文字列はオプションや引数が必要となる
    かもしれません。

    表10.12 本来の VCS コマンドの比較

    +---------------------------------------------------------------+
    |     Git      | CVS  |Subversion|             機能             |
    |--------------+------+----------+------------------------------|
    |git init      |cvs   |svn create|(ローカル) レポジトリーを作成 |
    |              |init  |          |                              |
    |--------------+------+----------+------------------------------|
    |-             |cvs   |-         |リモートレポジトリーにログイン|
    |              |login |          |                              |
    |--------------+------+----------+------------------------------|
    |git clone     |cvs co|svn co    |リモートレポジトリーをワーキン|
    |              |      |          |グツリーとしてチェックアウト  |
    |--------------+------+----------+------------------------------|
    |git pull      |cvs up|svn up    |リモートレポジトリーをマージし|
    |              |      |          |てワーキングツリーを更新      |
    |--------------+------+----------+------------------------------|
    |git add .     |cvs   |svn add   |VCS にワーキングツリー中のファ|
    |              |add   |          |イルを追加                    |
    |--------------+------+----------+------------------------------|
    |git rm        |cvs rm|svn rm    |VCS からワーキングツリー中のフ|
    |              |      |          |ァイルを削除                  |
    |--------------+------+----------+------------------------------|
    |-             |cvs ci|svn ci    |リモートレポジトリーに変更をコ|
    |              |      |          |ミット                        |
    |--------------+------+----------+------------------------------|
    |git commit -a |-     |-         |ローカルレポジトリーに変更をコ|
    |              |      |          |ミット                        |
    |--------------+------+----------+------------------------------|
    |git push      |-     |-         |ローカルレポジトリーでリモート|
    |              |      |          |レポジトリーを更新            |
    |--------------+------+----------+------------------------------|
    |git status    |cvs   |svn status|VCS に対するワーキングツリーの|
    |              |status|          |状態を表示                    |
    |--------------+------+----------+------------------------------|
    |git diff      |cvs   |svn diff  |diff <参照レポジトリー> <ワー |
    |              |diff  |          |キングツリー>                 |
    |--------------+------+----------+------------------------------|
    |git repack -a |-     |-         |ローカルレポジトリーを単一パッ|
    |-d; git prune |      |          |クにリパック                  |
    |--------------+------+----------+------------------------------|
    |gitk          |tkcvs |tkcvs     |VCS レポジトリーツリーの GUI  |
    |              |      |          |表示                          |
    +---------------------------------------------------------------+


    注意
   
    git サブコマンドを直接 "git-xyz" としてコマンドラインから起動する
    のは2006年初以来推奨されません。

    ヒント

    $PATH で指定されたパス中に実行可能ファイル git-foo が存在する場合
    、ハイフォン無しの "git foo" をコマンドラインに入力するとこの
    git-foo が起動されます。これは git コマンドの機能です。

    ヒント

    tkcvs(1) や gitk(1) 等の GUI ツールはファイルの変更履歴を追跡する
    のに本当に役立ちます。多くの公開アーカイブが彼らのレポジトリーの
    中を閲覧するための提供しているウェッブインターフェースもまた非常
    に有用です。

    ヒント

    Git はgit-cvs や git-svn パッケージを使って CVS や Subversion に
    よって提供されるレポジトリー等の他の VCS レポジトリーを直接処理し
    たり、ローカル変更のためのローカルレポジトリーを提供します。git
    for CVS users や「Subversion レポジトリー用の Git」を参照下さい。

    ヒント
   
    CVS や Subversion に等価コマンドが無いコマンドが Git にあります:
    "fetch"、"rebase"、"cherry-pick"、…

%

10.6. Git

    Git はローカルとリモートのソースコード管理の全機能があります。こ
    れはリモートレポジトリーとのネットワーク接続なしにソースコードへ
    の変更を記録できるといことです。

%

10.6.1. Git クライアントの設定

    Git は使うあなたの名前や email アドレス等を "~/.gitconfig" 中のい
    くつかのグローバル設定に設定したいなら次のようにします。

    $ git config --global user.name "Name Surname"
    $ git config --global user.email yourname@example.com

    もしあなたが CVS や Subversion コマンドに慣れ過ぎている場合には、
    いくつかのコマンドエリアスの設定を次のようにするのも一計です。

    $ git config --global alias.ci "commit -a"
    $ git config --global alias.co checkout

    あなたのグローバル設定は次のようにするとチェックできます。

    $ git config --global --list

%

10.6.2. Git リファレンス

    次を参照下さい。

      * マンページ: git(1) (/usr/share/doc/git-doc/git.html)

      * Git ユーザーマニュアル (/usr/share/doc/git-doc/
        user-manual.html)

      * git へのチュートリアル導入 (/usr/share/doc/git-doc/
        gittutorial.html)

      * git へのチュートリアル導入: 第2部 (/usr/share/doc/git-doc/
        gittutorial-2.html)

      * 約20のコマンドを使って毎日 GIT (/usr/share/doc/git-doc/
        everyday.html)

      * CVS ユーザーのための git (/usr/share/doc/git-doc/
        gitcvs-migration.html)

          + これは CVS 同様のサーバーのセットアップ法や CVS から Git
            への古いデーターの抽出法も説明します。

      * ウェッブ上で利用可能な他の Git に関するリソース

          + Git - SVN Crash Course

          + Git マジック (/usr/share/doc/gitmagic/html/index.html)

    git-gui(1) と gitk(1) コマンドは簡単に Git が利用出来るようにしま
    す。

    警告

    たとえ gitk(1) 等の一部ツールが受け付けるからといって、タグ文字列
    中にスペースを使ってはいけません。他の git コマンドで支障が起こる
    かもしれません。

%

10.6.3. Git コマンド

    アップストリームが異なる VCS を使っていようと、アップストリームへ
    のネットワーク接続無しにローカルコピーを管理できるので、ローカル
    活動に git(1) を使うのは良い考えかもしれません。次は git(1) とと
    もに使われるパッケージとコマンドのリストです。

    表10.13 git 関連のパッケージとコマンドのリスト

    +---------------------------------------------------------------+
    |   パッケージ   |ポプコ|サイ |     コマンド      |    説明     |
    |                |  ン  | ズ  |                   |             |
    |----------------+------+-----+-------------------+-------------|
    |git-doc         |I:15  |11762|N/A                |正式 Git 文書|
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |"Git マジック|
    |gitmagic        |I:1   |721  |N/A                |"、Git に関す|
    |                |      |     |                   |る分かり易い |
    |                |      |     |                   |ガイド       |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |git: 高速、ス|
    |                |V:305,|     |                   |ケーラブル、 |
    |git             |I:478 |35040|git(7)             |分散型リビジ |
    |                |      |     |                   |ョンコントロ |
    |                |      |     |                   |ールシステム |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |GUI による履 |
    |gitk            |V:6,  |1723 |gitk(1)            |歴付き Git レ|
    |                |I:42  |     |                   |ポジトリーブ |
    |                |      |     |                   |ラウザー     |
    |----------------+------+-----+-------------------+-------------|
    |git-gui         |V:2,  |2317 |git-gui(1)         |Git 用の GUI |
    |                |I:24  |     |                   |(履歴無し)   |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |Subversion か|
    |git-svn         |V:1,  |1144 |git-svnimport(1)   |ら Git へのデ|
    |                |I:22  |     |                   |ーターのイン |
    |                |      |     |                   |ポート       |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |Subversion と|
    |git-svn         |V:1,  |1144 |git-svn(1)         |Git 間での双 |
    |                |I:22  |     |                   |方向操作を提 |
    |                |      |     |                   |供           |
    |----------------+------+-----+-------------------+-------------|
    |                |V:0,  |     |                   |CVS から Git |
    |git-cvs         |I:10  |1279 |git-cvsimport(1)   |へのデーター |
    |                |      |     |                   |のインポート |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |Git から CVS |
    |git-cvs         |V:0,  |1279 |git-cvsexportcommit|チェックアウ |
    |                |I:10  |     |(1)                |トに1コミット|
    |                |      |     |                   |エキスポート |
    |----------------+------+-----+-------------------+-------------|
    |                |V:0,  |     |                   |Git 用 CVS サ|
    |git-cvs         |I:10  |1279 |git-cvsserver(1)   |ーバーエミュ |
    |                |      |     |                   |レーター     |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |Git からパッ |
    |git-email       |V:0,  |966  |git-send-email(1)  |チの集合の   |
    |                |I:11  |     |                   |email として |
    |                |      |     |                   |送信         |
    |----------------+------+-----+-------------------+-------------|
    |                |V:0,  |     |                   |Git 上の     |
    |stgit           |I:0   |603  |stg(1)             |quilt        |
    |                |      |     |                   |(Python)     |
    |----------------+------+-----+-------------------+-------------|
    |                |      |     |                   |Git を使って |
    |git-buildpackage|V:2,  |4193 |git-buildpackage(1)|Debian パッケ|
    |                |I:12  |     |                   |ージ化を自動 |
    |                |      |     |                   |化           |
    |----------------+------+-----+-------------------+-------------|
    |                |V:0,  |     |                   |Git 上の     |
    |guilt           |I:0   |146  |guilt(7)           |quilt (SH/AWK|
    |                |      |     |                   |/SED/…)      |
    +---------------------------------------------------------------+


    ヒント

    git(1) では、多くのコミットをしながらローカルブランチ上で仕事をし
    て "git rebase -i master" 等を使って後から変更履歴を整理します。
    こうすると綺麗な変更履歴が作れます。git-rebase(1) と 
    git-cherry-pick(1) を参照下さい。

    ヒント

    作業中のディレクトリーの現状を失わずにクリーンな作業ディレクトリ
    を取り戻すには "git stash" を使えばできます。git-stash(1) を参照
    ください。

%

10.6.4. Subversion レポジトリー用の Git

    "svn+ssh://svn.example.org/project/module/trunk" にある
    Subversion のレポジトリを "./dest" にあるローカルの Git レポジト
    リにチェックアウトでき、また Subversion レポジトリに戻すコミット
    ができます。例えば:

    $ git svn clone -s -rHEAD svn+ssh://svn.example.org/project dest
    $ cd dest
    ... make changes
    $ git commit -a
    ... keep working locally with git
    $ git svn dcommit

    ヒント
   
    "-rHEAD" を使うことにより Subversion のレポジトリから過去の全コン
    テントを複製することが避けられます。

%

10.6.5. 設定履歴記録のための Git

    Git ツールを使い設定の経時履歴をマニュアルで記録できます。次は "/
    etc/apt/" の内容を記録する単純な練習例です。

    $ cd /etc/apt/
    $ sudo git init
    $ sudo chmod 700 .git
    $ sudo git add .
    $ sudo git commit -a

    設定を説明とともにコミットします。

    設定ファイルへの変更をします。

    $ cd /etc/apt/
    $ sudo git commit -a

    設定を説明とともにコミットしそのままいろいろ作業をしていきます。

    $ cd /etc/apt/
    $ sudo gitk --all

    フルの履歴を手中しています。

    注記

    設定データーのどのファイルパーミッションでも機能するためには sudo
    (8) が必要です。ユーザーの設定データーの場合 sudo をスキップ出来
    るかもしれません。

    注記
   
    上記例での "chmod 700 .git" コマンドはアーカイブデーターを不正読
    出しアクセスから守るために必要です。

    ヒント
   
    設定履歴の記録に関するより完全なセットアップは、etckeeper パッケ
    ージを見て下さい: 「設定ファイルの変更記録」。

%

10.7. CVS

    CVS は Subversion や Git より古いバージョン管理システムです。

    注意
   
    以下の CVS のための例中にある多くの URL は既に存在しません。

    次を参照下さい。

      * cvs(1)

      * "/usr/share/doc/cvs/html-cvsclient"

      * "/usr/share/doc/cvs/html-info"

      * "/usr/share/doc/cvsbook"

      * "info cvs"

%

10.7.1. CVS レポジトリーの設定

    CVS レポジトリーへのコミットを "src" グループメンバに限定し許可し
    、CVS の管理を "staff" グループメンバに限定し許可するように次の設
    定をすることでうっかりミスを予防できます。

    # cd /var/lib; umask 002; mkdir cvs
    # export CVSROOT=/srv/cvs/project
    # cd $CVSROOT
    # chown root:src .
    # chmod 2775 .
    # cvs -d $CVSROOT init
    # cd CVSROOT
    # chown -R root:staff .
    # chmod 2775 .
    # touch val-tags
    # chmod 664 history val-tags
    # chown root:src history val-tags

    ヒント

    "$CVSROOT" ディレクトリーの所有者を "root:staff" とし、そのパーミ
    ッションを "3775" と変更すると新規プロジェクトの作成を制限できま
    す。

%

10.7.2. CVS へのローカルアクセス

    デフォールトの CVS レポジトリーは "$CVSROOT" で指示されます。次は
    ローカルアクセスのための "$CVSROOT" を設定します。

    $ export CVSROOT=/srv/cvs/project

%

10.7.3. pserver を使った CVS へのリモートアクセス

    多くの公開 CVS サーバーはアカウント名 "anonymous" で pserver サー
    ビス経由の読出しのみアクセスを提供します。例えば、Debian ウェッブ
    サイト内容は webwml プロジェクトは Debian alioth サービスでの CVS
    を使ってメンテされていました。以下はこの CVS レポジトリーへのリモ
    ートアクセスのための "$CVSROOT" を設定していました。

    $ export CVSROOT=:pserver:anonymous@anonscm.debian.org:/cvs/webwml
    $ cvs login

    注記
   
    pserver は盗聴攻撃されやすくインセキュアーなので、書込みアクセス
    はサーバーの管理者によって通常無効にされています。

%

10.7.4. ssh を使った CVS へのリモートアクセス

    SSH を使い webwml プロジェクトの CVS レポジトリーにリモートアクセ
    スためには、以下のように "$CVS_RSH" と "$CVSROOT" を設定していま
    した。

    $ export CVS_RSH=ssh
    $ export CVSROOT=:ext:account@cvs.alioth.debian.org:/cvs/webwml

    リモートパスワードプロンプトを無くすのに SSH を使ったパブリックキ
    ー認証を使えます。

%

10.7.5. 新規ソースを CVS にインポート

    "~/path/to/module1" で新規のローカルソースツリーの場所を作成。

    $ mkdir -p ~/path/to/module1; cd ~/path/to/module1

    "~/path/to/module1" の下の新規のローカルソースツリーを埋める。

    次のパラメーターを使って CVS にインポートします。

      * モジュール名: "module1"

      * ベンダータグ: Main-branch (全ブランチへのタグ)

      * リリースタグ: Release-initial (特定リリースタグ)

    $ cd ~/path/to/module1
    $ cvs import -m "Start module1" module1 Main-branch Release-initial
    $ rm -Rf . # optional

%

10.7.6. CVS レポジトリーのファイルパーミッション

    CVS は現レポジトリーファイルを上書きせず他のファイルで置き換えま
    す。だからレポジトリーディレクトリーへの書込みパーミッションはク
    リチカルです。"module1" という新規レポジトリーを "/srv/cvs/
    project" に作成の際毎に、必要ならこの条件を満たすために次を実行し
    ます。

    # cd /srv/cvs/project
    # chown -R root:src module1
    # chmod -R ug+rwX   module1
    # chmod    2775     module1

%

10.7.7. CVS のワークフロー

    次に CVS を使う典型的なワークフローを記します。

    "$CVSROOT" で指される CVS プロジェクトから得られる全てのモジュー
    ルを次のようにしてチェックします。

    $ cvs rls
    CVSROOT
    module1
    module2
    ...

    "module1" をそのデフォールトディレクトリーの "./module1" に次のよ
    うにしてチェックアウトします。

    $ cd ~/path/to
    $ cvs co module1
    $ cd module1

    必要に応じ内容に変更を加える。

    次のようにして "diff -u [repository] [local]" と等価を作成し変更
    をチェックします。

    $ cvs diff -u

    あるファイル "file_to_undo" をひどく壊したが他のファイルは大丈夫
    な事に気づきます。

    次のようにして "file_to_undo" ファイルを CVS からのクリーンコピー
    で上書きします。

    $ cvs up -C file_to_undo

    次のようにして更新されたローカルソースツリーを CVS に保存します。

    $ cvs ci -m "Describe change"

    次のようにして "file_to_add" ファイルを作成し CVS に追加します。

    $ vi file_to_add
    $ cvs add file_to_add
    $ cvs ci -m "Added file_to_add"

    次のようにして CVS から最新バージョンをマージします。

    $ cvs up -d

    コンフリクトある変更を意味する "C filename" で始まる行に注意しま
    す。

    ".#filename.version" 中の変更されていないコードを探します。

    コンフリクトある変更はファイル中の "<<<<<<<" や ">>>>>>>" を探索
    します。

    必要に応じコンフリクト解消のためにファイルを編集します。

    次のようにしてリリースタグ "Release-1" を追加します。

    $ cvs ci -m "last commit for Release-1"
    $ cvs tag Release-1

    さらに編集します。

    次のようにリリースタグ "Release-1" を削除します。

    $ cvs tag -d Release-1

    次のように CVS へ変更をチェックインします。

    $ cvs ci -m "real last commit for Release-1"

    リリースタグ "Release-1" を更新した CVS の main の HEAD に次のよ
    うにして再付加します。

    $ cvs tag Release-1

    次のようにして "Release-initial" タグによってで指定されるオリジナ
    ルのバージョンから、スティッキーブランチタグが
    "Release-initial-bugfixes" のブランチを作成し、"~/path/to/old" デ
    ィレクトリーにチェックアウトします。

    $ cvs rtag -b -r Release-initial Release-initial-bugfixes module1
    $ cd ~/path/to
    $ cvs co -r Release-initial-bugfixes -d old module1
    $ cd old

    ヒント

    ブランチポイントとして特定の日付を指定するには "-r
    Release-initial" の代わりに "-D 2005-12-20" (ISO 8601 日付フォー
    マット) を使います。

    オリジナルバージョンに基づいたスティッキータグ
    "Release-initial-bugfixes" が付いているこのローカルのソースツリー
    で作業をします。

    このブランチで一人で作業をします … 誰か他の人がこの
    "Release-initial-bugfixes" ブランチに合流するまで。

    次のようにして必要に応じて新規ディレクトリーを作りながらこのブラ
    ンチ上の他の人が変更したファイルと同期します。

    $ cvs up -d

    必要に応じコンフリクト解消のためにファイルを編集します。

    次のように CVS へ変更をチェックインします。

    $ cvs ci -m "checked into this branch"

    次のようにしてスティッキータグを削除し ("-A")、キーワード展開せず
    に ("-kk")、main の HEAD (最新版) をつかってローカルのツリーを更
    新します。

    $ cvs up -d -kk -A

    次のようにしてキーワード展開せずに ("-kk")、
    "Release-initial-bugfixes" ブランチをマージしてローカルのツリー
    (内容 = main の HEAD) を更新します。

    $ cvs up -d -kk -j Release-initial-bugfixes

    エディターを使ってコンフリクト解消します。

    次のように CVS へ変更をチェックインします。

    $ cvs ci -m "merged Release-initial-bugfixes"

    次のようにしてアーカイブを作成します。

    $ cd ..
    $ mv old old-module1-bugfixes
    $ tar -cvzf old-module1-bugfixes.tar.gz old-module1-bugfixes
    $ rm -rf old-module1-bugfixes

    ヒント

    "cvs up" コマンドには、新規ディレクトリー作成には "-d" オプション
    を、また空ディレクトリーの摘み取りには "-P" オプションを指定でき
    ます。

    ヒント

    "cvs co module1/subdir" とサブディレクトリーの名前を提供して、
    "module1" のサブディレクトリーだけをチェックアウトすることが出来
    ます。

    表10.14 CVS コマンドの特記すべきオプション (cvs(1) の最初の引数と
    して使用)

    +----------------------------------------------------------+
    |オプション|                     意味                      |
    |----------+-----------------------------------------------|
    |-n        |空実行、効果無し                               |
    |----------+-----------------------------------------------|
    |-t        |各段階の CVS 活動が分かるようにメッセージを表示|
    +----------------------------------------------------------+


%

10.7.8. CVS から最新ファイル

    CVS から最新ファイルを取り込むには、次のように "tomorrow" (明日)
    を使います:

    $ cvs ex -D tomorrow module_name

%

10.7.9. CVS の管理運営

    モジュールのエリアス "mx" を CVS プロジェクト (ローカルサーバー)
    に追加します。

    $ export CVSROOT=/srv/cvs/project
    $ cvs co CVSROOT/modules
    $ cd CVSROOT
    $ echo "mx -a module1" >>modules
    $ cvs ci -m "Now mx is an alias for module1"
    $ cvs release -d .

    さて、CVS から "new" ディレクトリーに "module1" (エリアス: "mx")
    を次のようにしてチェックアウトします。

    $ cvs co -d new mx
    $ cd new

    注記
   
    上記プロシージャを行うには、適切なファイルパーミッションが設定さ
    れているべきです。

%

10.7.10. CVS チェックアウトの実行ビット

    CVS からファイルをチェックアウトする時に、その実行パーミッション
    ビットは保持されます。

    チェックアウトされた例えば "filename" ファイルで実行ビットの問題
    にあった際には、次のコマンドを使い CVS レポジトリー中のそのパーミ
    ッションを変更します。

    # chmod ugo-x filename

%

10.8. Subversion

    Subversion はGit以前でCVS以降の少し古いバージョン管理システムです
    。Subversion にはタグとブランチを除く CVS とGitのほとんどの機能を
    あります。

    Subversion サーバーをセットアップするには、subversion と
    libapache2-mod-svn と subversion-tools パッケージをインストールす
    る必要があります。

%

10.8.1. Subversion レポジトリーの設定

    現状の subversion パッケージはレポジトリーの設定はしないので手動
    で設定を行う必要があります。レポジトリーを置く可能な場所の1つは "
    /srv/svn/project" 中です。

    ディレクトリーを次のように作成します。

    # mkdir -p        /srv/svn/project

    レポジトリーデーターベースを次のように作成します。

    # svnadmin create /srv/svn/project

%

10.8.2. Apach2 サーバーの経由の Subversion アクセス

    Apache2 サーバー経由で Subversion レポジトリーにアクセスするだけ
    なら、レポジトリーを次に記すように WWW サーバーのみによって書込み
    可とするだけが必要です。

    # chown -R www-data:www-data /srv/svn/project

    ユーザー認証経由でレポジトリーにアクセス許可するために "/etc/
    apache2/mods-available/dav_svn.conf" 中の次の部分を追加 (もしくは
    アンコメント) します。

    <Location /project>
      DAV svn
      SVNPath /srv/svn/project
      AuthType Basic
      AuthName "Subversion repository"
      AuthUserFile /etc/subversion/passwd
    <LimitExcept GET PROPFIND OPTIONS REPORT>
        Require valid-user
    </LimitExcept>
    </Location>

    次のコマンドでユーザー認証ファイルを作成します。

    # htpasswd2 -c /etc/subversion/passwd some-username

    Apach2 を再スタート

    あなたの新規の Subversion レポジトリーは "http://localhost/
    project" と (ウェッブサーバーの URL が"http://example.com/" と仮
    定すると) "http://example.com/project" の URL にてアクセスできま
    す。

%

10.8.3. グループによる Subversion へのローカルアクセス

    次は Subversion レポジトリーを例えば project というグループによっ
    てローカルアクセス出きるようにする設定です。

    # chmod  2775     /srv/svn/project
    # chown -R root:src /srv/svn/project
    # chmod -R ug+rwX   /srv/svn/project

    あなたの新しい Subversion レポジトリーは、project グループに属す
    るローカルユーザーにとって svn(1) から "file:///localhost/srv/svn
    /project" か "file:///srv/svn/project" の URL からグループアクセ
    スできます。グループアクセスを確実にするために、svn や svnserve
    や svnlook や svnadmin 等のコマンドを "umask 002" の下で実行しな
    ければいけません。

%

10.8.4. グループによる Subversion への SSH 経由のリモートアクセス

    SSH から "example.com:/srv/svn/project" の URL にあるグループアク
    セス可能な Subversion レポジトリーは、svn(1) を使って "svn+ssh://
    example.com:/srv/svn/project" にてアクセスできます。

%

10.8.5. Subversion ディレクトリー構造

    Subversion のブランチやタグの機能を欠くことを補うべく、多くのプロ
    ジェクトは次と似たようなディレクトリーツリーを使っています。

      ----- module1
        |   |-- branches
        |   |-- tags
        |   |   |-- release-1.0
        |   |   `-- release-2.0
        |   |
        |   `-- trunk
        |       |-- file1
        |       |-- file2
        |       `-- file3
        |
        `-- module2

    ヒント

    ブランチやタグをマークするためには "svn copy …" コマンドを使わな
    ければいけません。こうすることで Subversion がファイルの変更履歴
    を適正な記録を確実にするとともに記録容量を節約できます。

%

10.8.6. 新規ソースを Subversion にインポート

    "~/path/to/module1" で新規のローカルソースツリーの場所を作成。

    $ mkdir -p ~/path/to/module1; cd ~/path/to/module1

    "~/path/to/module1" の下の新規のローカルソースツリーを埋める。

    ソースを次のパラメーターを使って Subversion にインポートします。

      * モジュール名: "module1"

      * Subversion サイトの URL: "file:///srv/svn/project",
   
      * Subversion ディレクトリー: "module1/trunk":

      * Subversion タグ: "module1/tags/Release-initial"

    $ cd ~/path/to/module1
    $ svn import file:///srv/svn/project/module1/trunk -m "Start module1"
    $ svn cp file:///srv/svn/project/module1/trunk file:///srv/svn/project/module1/tags/Release-initial

    この代わりに、次のようにも出来ます。

    $ svn import ~/path/to/module1 file:///srv/svn/project/module1/trunk -m "Start module1"
    $ svn cp file:///srv/svn/project/module1/trunk file:///srv/svn/project/module1/tags/Release-initial

    ヒント
   
    "file:///…" といった URL は、"http://…" や "svn+ssh://…" といった
    いかなる他形式の URL ででも置き換えられます。

%

10.8.7. Subversion のワークフロー

    次に Subversion をその本来のクライアントとともに使う典型的なワー
    クフローを記します。

    ヒント

    git-svn パッケージによって提供されるクライアントコマンドは git コ
    マンドを使う Subversion の代替ワークフローを提供します。「
    Subversion レポジトリー用の Git」を参照下さい。

    "file:///srv/svn/project" の URL で指定される Subversion プロジェ
    クトから得られる全ての利用可能なモジュールを次のようにしてチェッ
    クします。

    $ svn list file:///srv/svn/project
    module1
    module2
    ...

    次のようにして "module1/trunk" を"module1" ディレクトリーにチェッ
    クアウトします。

    $ cd ~/path/to
    $ svn co file:///srv/svn/project/module1/trunk module1
    $ cd module1

    必要に応じ内容に変更を加える。

    次のようにして "diff -u [repository] [local]" と等価を作成し変更
    をチェックします。

    $ svn diff

    あるファイル "file_to_undo" をひどく壊したが他のファイルは大丈夫
    な事に気づきます。

    次のようにして "file_to_undo" ファイルを Subversion からのクリー
    ンコピーで上書きします。

    $ svn revert file_to_undo

    更新されたローカルソースツリーを次のようにして Subversion に保存
    します。

    $ svn ci -m "Describe change"

    次のようにして "file_to_add" ファイルを作成し Subversion に追加し
    ます。

    $ vi file_to_add
    $ svn add file_to_add
    $ svn ci -m "Added file_to_add"

    次のようにして Subversion から最新バージョンをマージします。

    $ svn up

    コンフリクトある変更を意味する "C filename" で始まる行に注意しま
    す。

    "filename.r6" と "filename.r9" と "filename.mine" 等中の変更され
    ていないコードを探します。

    コンフリクトある変更はファイル中の "<<<<<<<" や ">>>>>>>" を探索
    します。

    必要に応じコンフリクト解消のためにファイルを編集します。

    次のようにしてリリースタグ "Release-1" を追加します。

    $ svn ci -m "last commit for Release-1"
    $ svn cp file:///srv/svn/project/module1/trunk file:///srv/svn/project/module1/tags/Release-1

    さらに編集します。

    次のようにリリースタグ "Release-1" を削除します。

    $ svn rm file:///srv/svn/project/module1/tags/Release-1

    次のようにして変更を Subversion にチェックインします。

    $ svn ci -m "real last commit for Release-1"

    リリースタグ "Release-1" を更新した Subversion の trunk の HEAD
    に再付加します。

    $ svn cp file:///srv/svn/project/module1/trunk file:///srv/svn/project/module1/tags/Release-1

    次のようにして "module1/tags/Release-initial" というパスで指定さ
    れるオリジナルのバージョンから、パスが "module1/branches/
    Release-initial-bugfixes" のブランチを作成し、"~/path/to/old" デ
    ィレクトリーにチェックアウトします。

    $ svn cp file:///srv/svn/project/module1/tags/Release-initial file:///srv/svn/project/module1/branches/Release-initial-bugfixes
    $ cd ~/path/to
    $ svn co file:///srv/svn/project/module1/branches/Release-initial-bugfixes old
    $ cd old

    ヒント

    ブランチポイントとして特定の日付を指定するには "module1/tags/
    Release-initial" の代わりに "module1/trunk@{2005-12-20}" (ISO
    8601 日付フォーマット) を使います。

    オリジナルバージョンに基づいたブランチ "Release-initial-bugfixes"
    を指定しているローカルのソースツリーで作業します。

    このブランチで一人で作業をします … 誰か他の人がこの
    "Release-initial-bugfixes" ブランチに合流するまで。

    次のようにしてこのブランチ上の他の人が変更したファイルと同期しま
    す。

    $ svn up

    必要に応じコンフリクト解消のためにファイルを編集します。

    次のようにして変更を Subversion にチェックインします。

    $ svn ci -m "checked into this branch"

    trunk の HEAD を使って次のようにローカルツリーを更新します。

    $ svn switch file:///srv/svn/project/module1/trunk

    次のようにして "Release-initial-bugfixes" ブランチをマージしてロ
    ーカルのツリー (内容 = trunk の HEAD) を更新します。

    $ svn merge file:///srv/svn/project/module1/branches/Release-initial-bugfixes

    エディターを使ってコンフリクト解消します。

    次のようにして変更を Subversion にチェックインします。

    $ svn ci -m "merged Release-initial-bugfixes"

    次のようにしてアーカイブを作成します。

    $ cd ..
    $ mv old old-module1-bugfixes
    $ tar -cvzf old-module1-bugfixes.tar.gz old-module1-bugfixes
    $ rm -rf old-module1-bugfixes

    ヒント
   
    "file:///…" といった URL は、"http://…" や "svn+ssh://…" といった
    いかなる他形式の URL ででも置き換えられます。

    ヒント

    "svn co file:///srv/svn/project/module1/trunk/subdir module1/
    subdir" とサブディレクトリーの名前を提供して、"module1" のサブデ
    ィレクトリーだけをチェックアウトすることが出来ます。

    表10.15 Subversion コマンドの特記すべきオプション (svn(1) の最初
    の引数として使用)

    +-------------------------------------------+
    |オプション|              意味              |
    |----------+--------------------------------|
    |--dry-run |空実行、効果無し                |
    |----------+--------------------------------|
    |-v        |svn 活動の詳細なメッセージを表示|
    +-------------------------------------------+


第11章データー変換

    Debian システム上のデーターフォーマット変換のツールとティップを記
    します。

    標準に準拠したツールは非常に良い状態ですが、プロプライエタリデー
    ターフォーマットのサポートは限定的です。

%

11.1. テキストデーター変換ツール

    テキストデーター変換のための次のパッケージが著者の目に止まりまし
    た。

    表11.1 テキストデーター変換ツールのリスト

    +---------------------------------------------------------------+
    |パッケー|ポプコ|サイ |キーワー |             説明              |
    |   ジ   |  ン  | ズ  |   ド    |                               |
    |--------+------+-----+---------+-------------------------------|
    |        |V:935,|     |文字セッ |iconv(1) によるロケール間のテキ|
    |libc6   |I:999 |12771|ト       |スト符号化方式変換ソフト (基本 |
    |        |      |     |         |的)                            |
    |--------+------+-----+---------+-------------------------------|
    |        |V:3,  |     |文字セッ |ロケール間のテキスト符号化方式 |
    |recode  |I:25  |603  |ト + 行末|変換ソフト (機能豊富、より多い |
    |        |      |     |文字     |エリアスと機能)                |
    |--------+------+-----+---------+-------------------------------|
    |konwert |V:1,  |134  |文字セッ |ロケール間のテキスト符号化方式 |
    |        |I:54  |     |ト       |変換ソフト (高級機能)          |
    |--------+------+-----+---------+-------------------------------|
    |nkf     |V:0,  |358  |文字セッ |日本語のための文字セット翻訳ソ |
    |        |I:11  |     |ト       |フト                           |
    |--------+------+-----+---------+-------------------------------|
    |tcs     |V:0,  |518  |文字セッ |文字セット翻訳ソフト           |
    |        |I:0   |     |ト       |                               |
    |--------+------+-----+---------+-------------------------------|
    |unaccent|V:0,  |29   |文字セッ |アクセント付き文字をアクセント |
    |        |I:0   |     |ト       |の無しの等価文字に置換         |
    |--------+------+-----+---------+-------------------------------|
    |        |V:1,  |     |         |DOS と Unix 間のテキストフォー |
    |tofrodos|I:25  |55   |行末文字 |マット変換ソフト: fromdos(1) と|
    |        |      |     |         |todos(1)                       |
    |--------+------+-----+---------+-------------------------------|
    |        |V:0,  |     |         |Macintosh と Unix 間のテキスト |
    |macutils|I:1   |298  |行末文字 |フォーマット変換ソフト: frommac|
    |        |      |     |         |(1) and tomac(1)               |
    +---------------------------------------------------------------+


%

11.1.1. テキストファイルを iconv を使って変換

    ヒント

    iconv(1) はlibc6 パッケージの一部として提供されていて、文字の符号
    化方式変換のために実質的に全てのUnix的システムで常に利用可能です
    。

    次のようにするとテキストファイルを iconv(1) を使って変換できます
    。

    $ iconv -f encoding1 -t encoding2 input.txt >output.txt

    符号化方式 (エンコーディング) 値をマッチングする際には、大文字小
    文字の区別は無く、"-" や "_" を無視します。"iconv -l" コマンドに
    より、サポートされている符号化方法が確認できます。

    表11.2 符号化方式値とその使い方リスト

    +---------------------------------------------------------------+
    |符号化方式 |                      使い方                       |
    |    値     |                                                   |
    |-----------+---------------------------------------------------|
    |ASCII      |情報交換用米国標準コード (ASCII); アクセント文字無 |
    |           |しの7ビットコード                                  |
    |-----------+---------------------------------------------------|
    |UTF-8      |全現代的 OS のための現行多言語標準                 |
    |-----------+---------------------------------------------------|
    |ISO-8859-1 |西欧州言語用の旧標準、ASCII + アクセント文字       |
    |-----------+---------------------------------------------------|
    |ISO-8859-2 |東欧州言語用の旧標準、ASCII + アクセント文字       |
    |-----------+---------------------------------------------------|
    |ISO-8859-15|西欧州言語用の旧標準、ユーロ文字付き ISO-8859-1    |
    |-----------+---------------------------------------------------|
    |CP850      |コードページ 850、西欧州言語用グラフィック文字付き |
    |           |Microsoft DOS 文字、ISO-8859-1 の変種              |
    |-----------+---------------------------------------------------|
    |CP932      |コードページ 932、日本語用 Microsoft Windows スタイ|
    |           |ル Shift-JIS の変種                                |
    |-----------+---------------------------------------------------|
    |CP936      |コードページ 936、簡体中国語用 Microsoft Windows ス|
    |           |タイル GB2312 か GBK か GB18030 の変種             |
    |-----------+---------------------------------------------------|
    |CP949      |コードページ 949、韓国語用 Microsoft Windows スタイ|
    |           |ル EUC-KR か統一ハングルコードの変種               |
    |-----------+---------------------------------------------------|
    |CP950      |コードページ 950、繁体中国語用 Microsoft Windows ス|
    |           |タイル Big5 の変種                                 |
    |-----------+---------------------------------------------------|
    |CP1251     |コードページ 1251、キリル文字用 Microsoft Windows  |
    |           |スタイル符号化方式                                 |
    |-----------+---------------------------------------------------|
    |CP1252     |コードページ 1252、西欧州言語用 Microsoft Windows  |
    |           |スタイル ISO-8859-15 の変種                        |
    |-----------+---------------------------------------------------|
    |KOI8-R     |キリル文字用の旧ロシアの UNIX 標準                 |
    |-----------+---------------------------------------------------|
    |ISO-2022-JP|7ビットコードのみを用いる日本語 email の標準符号化 |
    |           |方式                                               |
    |-----------+---------------------------------------------------|
    |eucJP      |Shift-JIS とはまったく違う、旧日本の UNIX 標準8ビッ|
    |           |トコード                                           |
    |-----------+---------------------------------------------------|
    |Shift-JIS  |日本語のための JIS X 0208 Appendix 1 標準 (CP932 参|
    |           |照下さい)                                          |
    +---------------------------------------------------------------+


    注記

    一部の符号化方式 (エンコーディング) はデーター変換のみサポートさ
    れており、ロケール値としては使われません (「符号化方式の基本」参
    照下さい)。

    ASCII や ISO-8859 文字セットのような1バイトに収まる文字セットに付
    いては、文字の符号化方式 (エンコーディング) とは文字セットとほと
    んど同じ事を意味します。

    日本語のための JIS X 0213 や実質的に全ての言語のためのユニコード
    文字セット (UCS, Unicode, ISO-10646-1) のような多くの文字を含む文
    字セットの場合には、バイトデーター列に落とし込む多くの符号化手法
    があります。

      * 日本語用には、EUC と ISO/IEC 2022 (別名 JIS X 0202)
   
      * ユニコード用には、UTF-8 と UTF-16/UCS-2 と UTF-32/UCS-4

    これらに関しては、文字セットと文字符号化方式の間にはっきりとした
    区別があります。

    コードページは、一部のベンダー固有のコードページで文字符号化テー
    ブルと同義語として使用されています。

    注記

    ほとんどの符号化システムが7ビット文字に関して ASCII と同じコード
    を共有している事を覚えておいて下さい。もちろん例外はありますが。
    もし古い日本語の C プログラムや URL のデーターをカジュアルにシフ
    ト JIS と呼ばれている符号化フォーマットから UTF-8 フォーマットに
    変換する際には、期待される結果を得るために "shift-JIS" ではなく
    "CP932" を使いましょう: 0x5C → "\" と 0x7E → "~"。こうしないと、
    これらが間違った文字に変換されます。

    ヒント

    recode(1) は、十分使えますし、iconv(1) と fromdos(1) と todos(1)
    と frommac(1) と tomac(1) を組み合わせ以上の機能を提供します。詳
    しくは "info recode" を参照下さい。

%

11.1.2. ファイルが UTF-8 であると iconv を使い確認

    次のようにするとテキストファイルが UTF-8 でエンコードされていると
    iconv(1) を使って確認できます。

    $ iconv -f utf8 -t utf8 input.txt >/dev/null || echo "non-UTF-8 found"

    ヒント
   
    最初の非 UTF-8 文字を見つけるには上記例中で "--verbose" オプショ
    ンを使います。

%

11.1.3. iconv を使ってファイル名変換

    次に、単一ディレクトリー中の旧 OS 下で作成されたファイル名から現
    代的な UTF-8 のファイル名に符号化方式を変換するスクリプト例を示し
    ます。

    #!/bin/sh
    ENCDN=iso-8859-1
    for x in *;
     do
     mv "$x" "$(echo "$x" | iconv -f $ENCDN -t utf-8)"
    done

    "$ENCDN" 変数値には、旧OS下で用いられたファイル名に用いられた元と
    なる表11.2「符号化方式値とその使い方リスト」中にあるエンコーディ
    ングを指定します。

    もっと複雑な場合にはそのようなファイル名を含有するファイルシステ
    ム (ディスクドライブ上のパーティション等) を mount(8) オプション
    に適正な符号化方式 (エンコーディング) (「ファイル名の符号化方式」
    参照下さい) を指定してマウントし、その全内容を他の UTF-8 でマウン
    トされたファイルシステムに "cp -a" コマンドを使ってコピーします。

%

11.1.4. 行末変換

    テキストファイルのフォーマット、特に行末 (EOL) コード、はプラット
    フォーム依存です。

    表11.3 異なるプラットフォーム上での行末スタイルのリスト

    +--------------------------------------------------------+
    | プラットフォーム |行末コード|コントロール|10進数|16進数|
    |------------------+----------+------------+------+------|
    |Debian (unix)     |LF        |^J          |10    |0A    |
    |------------------+----------+------------+------+------|
    |MSDOS と Windows  |CR-LF     |^M^J        |13 10 |0D 0A |
    |------------------+----------+------------+------+------|
    |Apple の Macintosh|CR        |^M          |13    |0D    |
    +--------------------------------------------------------+


    行末 (EOL) フォーマット変換プログラムに関して、fromdos(1) と 
    todos(1) と frommac(1) と tomac(1) は非常に便利です。recode(1) も
    また役に立ちます。

    注記

    python-moinmoin パッケージ用の wiki のデーター等の Debian システ
    ム上の一部データーは、MSDOS スタイルの CR-LF を行末コードとして用
    います。あくまで上記は一般則と言うだけです。

    注記
   
    ほとんどのエディター (例えば vim や emacs や gedit 等) は MSDOS
    スタイルの行末を透過的に取り扱えます。

    ヒント

    MSDOS と Unix スタイルが混在する行末スタイルを MSDOS スタイルに統
    一するには、todos(1) を使う代わりに "sed -e '/\r$/!s/$/\r/'" を使
    う方がより好ましいです。(例えば、2つの MSDOS スタイルファイルを 
    diff3(1) を使ってマージした後。) todos は全ての行に CR を追加する
    というのがこの理由です。

%

11.1.5. タブ変換

    タブコードを変換するための良く使われる専用プログラムがいくつかあ
    ります。

    表11.4 bsdmainutils と coreutils パッケージ中のタブ変換コマンドの
    リスト

    +---------------------------------------------------+
    |            機能            |bsdmainutils|coreutils|
    |----------------------------+------------+---------|
    |タブからスペースに展開する  |"col -x"    |expand   |
    |----------------------------+------------+---------|
    |スペースからタブに逆展開する|"col -h"    |unexpand |
    +---------------------------------------------------+


    indent パッケージにある indent(1) コマンドは C プログラム中のホワ
    イトスペースを完全にリフォーマットします。

    vim や emacs 等のエディタープログラムもまたタブ変換に使えます。例
    えば vim を使うと、":set expandtab" として ":%retab" するコマンド
    シーケンスでタブ変換が出来ます。これを元に戻すのは、":set
    noexpandtab" として ":%retab!" とするコマンドシーケンスです。

%

11.1.6. 自動変換付きエディター

    vim プログラムなどのインテリジェントな現代的なエディターは大変良
    く出来ていていかなる符号化方式やいかなるファイルフォーマットでも
    機能します。これらのエディターを UTF-8 ロケール下で UTF-8 を扱え
    るコンソール中で使用することで最良の互換性が得られます。

    latin1 (iso-8859-1) 符号化方式で保存された古い西欧州の Unix テキ
    ストファイル "u-file.txt" は、単純に vim を使って次のようにして編
    集出来ます。

    $ vim u-file.txt

    vim 中の符号化方式自動判定機構が、最初は UTF-8 符号化方式を仮定し
    、それが上手く行かなかった際に latin1 を仮定するから可能です。

    latin2 (iso-8859-2) 符号化方式で保存された古いポーランドの Unix
    テキストファイル "pu-file.txt" は、vim を使って次のようにして編集
    出来ます。

    $ vim '+e ++enc=latin2 pu-file.txt'

    eucJP 符号化方式で保存された古い日本の Unix テキストファイル
    "ju-file.txt" は、vim を使って次のようにして編集出来ます。

    $ vim '+e ++enc=eucJP ju-file.txt'

    shift-JIS 符号化方式 (より正確には: CP932) で保存された古い日本の
    MS-Windows テキストファイル "jw-file.txt" は、vim を使って次のよ
    うにして編集出来ます。

    $ vim '+e ++enc=CP932 ++ff=dos jw-file.txt'

    "++enc" や "++ff" オプションを使ってファイルが開かれた時は、Vim
    コマンドライン中の ":w" がオリジナルのファイルフォーマットでオリ
    ジナルのファイルを上書きします。例えば ":w ++enc=utf8 new.txt" 等
    と Vim コマンドライン中で保存フォーマットや保存ファイル名を指定す
    ることも出来ます。

    vim オンラインヘルプ中の mbyte.txt "multi-byte text support" と、
    "++enc" に使われるロケール値に関する表11.2「符号化方式値とその使
    い方リスト」を参照下さい。

    emacs ファミリーのプログラムもまた同様の機能の実行ができます。

%

11.1.7. プレーンテキスト抽出

    以下はウェッブページを読みテキストファイルに落とします。ウェッブ
    から設定を取ってくる時や grep(1) 等の基本的な Unix テキストツール
    をウェッブページに適用するときに非常に有用です。

    $ w3m -dump http://www.remote-site.com/help-info.html >textfile

    同様に、次を用いることで他のフォーマットからプレーンテキストデー
    ターを抽出出来ます。

    表11.5 プレーンテキストデーター抽出ツールのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプ |サイ|  キーワード   |           機能           |
    |   ジ    |コン | ズ |               |                          |
    |---------+-----+----+---------------+--------------------------|
    |         |V:31,|    |               |"w3m -dump" コマンドを使う|
    |w3m      |I:284|2289|html→text      |HTML からテキストへの変換 |
    |         |     |    |               |ソフト                    |
    |---------+-----+----+---------------+--------------------------|
    |html2text|V:3, |274 |html→text      |先進的 HTML からテキストへ|
    |         |I:33 |    |               |の変換ソフト (ISO 8859-1) |
    |---------+-----+----+---------------+--------------------------|
    |         |V:13,|    |               |"lynx -dump" コマンドを使 |
    |lynx     |I:98 |1948|html→text      |う HTML からテキストへの変|
    |         |     |    |               |換ソフト                  |
    |---------+-----+----+---------------+--------------------------|
    |         |V:6, |    |               |"elinks -dump" コマンドを |
    |elinks   |I:28 |1767|html→text      |使う HTML からテキストへの|
    |         |     |    |               |変換ソフト                |
    |---------+-----+----+---------------+--------------------------|
    |         |V:6, |    |               |"links -dump" コマンドを使|
    |links    |I:39 |2249|html→text      |う HTML からテキストへの変|
    |         |     |    |               |換ソフト                  |
    |---------+-----+----+---------------+--------------------------|
    |         |V:1, |    |               |"links2 -dump" コマンドを |
    |links2   |I:15 |5417|html→text      |使う HTML からテキストへの|
    |         |     |    |               |変換ソフト                |
    |---------+-----+----+---------------+--------------------------|
    |antiword |V:2, |589 |MSWord→text,ps |MSWord ファイルをプレーン |
    |         |I:10 |    |               |テキストか ps に変換      |
    |---------+-----+----+---------------+--------------------------|
    |catdoc   |V:27,|675 |MSWord→text,TeX|MSWord ファイルをプレーン |
    |         |I:127|    |               |テキストか TeX に変換     |
    |---------+-----+----+---------------+--------------------------|
    |pstotext |V:1, |126 |ps/pdf→text    |PostScript と PDF ファイル|
    |         |I:3  |    |               |からテキストを抽出        |
    |---------+-----+----+---------------+--------------------------|
    |unhtml   |V:0, |43  |html→text      |HTML ファイルからマークア |
    |         |I:0  |    |               |ップタグを削除            |
    |---------+-----+----+---------------+--------------------------|
    |odt2txt  |V:1, |60  |odt→text       |OpenDocument テキストから |
    |         |I:7  |    |               |テキストへの変換ソフト    |
    +---------------------------------------------------------------+


%

11.1.8. プレーンテキストデーターをハイライトとフォーマット

    次のようにしてプレーンテキストデーターをハイライトとフォーマット
    出来ます。

    表11.6 プレーンテキストデーターをハイライトするツールのリスト

    +---------------------------------------------------------------+
    |   パッケージ   |ポプ |サイズ|キーワード|         説明         |
    |                |コン |      |          |                      |
    |----------------+-----+------+----------+----------------------|
    |                |     |      |          |":source $VIMRUNTIME/ |
    |                |V:19,|      |          |syntax/html.vim" を使 |
    |vim-runtime     |I:435|31723 |ハイライト|ってソースコードを    |
    |                |     |      |          |HTML に変換するための |
    |                |     |      |          |Vim MACRO             |
    |----------------+-----+------+----------+----------------------|
    |                |V:0, |      |          |C プログラムから latex|
    |cxref           |I:0  |1193  |c→html    |か HTML への変換ソフト|
    |                |     |      |          |(C 言語)              |
    |----------------+-----+------+----------+----------------------|
    |                |V:0, |      |          |多くのソースコードの  |
    |src2tex         |I:0  |622   |ハイライト|TeX への変換ソフト (C |
    |                |     |      |          |言語)                 |
    |----------------+-----+------+----------+----------------------|
    |                |     |      |          |多くのソースコードを  |
    |                |     |      |          |HTML と XHTML と LaTeX|
    |source-highlight|V:0, |1992  |ハイライト|と Texinfo と ANSI カ |
    |                |I:7  |      |          |ラーエスケープシーケン|
    |                |     |      |          |スと DocBook にハイラ |
    |                |     |      |          |イト付きで変換 (C++)  |
    |----------------+-----+------+----------+----------------------|
    |                |     |      |          |多くのソースコードを  |
    |                |V:1, |      |          |HTML と XHTML と LaTeX|
    |highlight       |I:12 |1083  |ハイライト|と Tex と AXSL-FO にハ|
    |                |     |      |          |イライト付きで変換    |
    |                |     |      |          |(C++)                 |
    |----------------+-----+------+----------+----------------------|
    |grc             |V:0, |190   |text→color|汎用着色化ソフト      |
    |                |I:3  |      |          |(Python)              |
    |----------------+-----+------+----------+----------------------|
    |txt2html        |V:0, |259   |text→html |テキストから HTML への|
    |                |I:3  |      |          |変換ソフト (Perl)     |
    |----------------+-----+------+----------+----------------------|
    |                |V:0, |      |          |markdown テキスト文書 |
    |markdown        |I:8  |57    |text→html |の (X)HTML へのフォー |
    |                |     |      |          |マット化ソフト (Perl) |
    |----------------+-----+------+----------+----------------------|
    |                |     |      |          |AsciiDoc テキスト文書 |
    |asciidoc        |I:13 |81    |text→any  |の XML/HTML へのフォー|
    |                |     |      |          |マット化ソフト        |
    |                |     |      |          |(Python)              |
    |----------------+-----+------+----------+----------------------|
    |pandoc          |V:8, |151714|text→any  |汎用マークアップコンバ|
    |                |I:47 |      |          |ーター (Haskel)       |
    |----------------+-----+------+----------+----------------------|
    |                |     |      |          |ReStructured テキスト |
    |python-docutils |V:12,|1771  |text→any  |文書の XML へのフォー |
    |                |I:133|      |          |マット化ソフト        |
    |                |     |      |          |(Python)              |
    |----------------+-----+------+----------+----------------------|
    |                |     |      |          |テキストから HTML と  |
    |                |     |      |          |SGML と LaTeX と man  |
    |txt2tags        |V:0, |342   |text→any  |page と MoinMoin と   |
    |                |I:1  |      |          |Magic Point と        |
    |                |     |      |          |PageMaker への文書変換|
    |                |     |      |          |(Python)              |
    |----------------+-----+------+----------+----------------------|
    |                |V:0, |      |          |汎用文書 - テキスト処 |
    |udo             |I:0  |583   |text→any  |理ユーティリティー (C |
    |                |     |      |          |言語)                 |
    |----------------+-----+------+----------+----------------------|
    |                |V:0, |      |          |構造化プレーンテキスト|
    |stx2any         |I:0  |264   |text→any  |からたのフォーマットへ|
    |                |     |      |          |の文書変換ソフト (m4) |
    |----------------+-----+------+----------+----------------------|
    |                |V:0, |      |          |ReStructured Text から|
    |rest2web        |I:0  |527   |text→html |html への文書変換ソフ |
    |                |     |      |          |ト (Python)           |
    |----------------+-----+------+----------+----------------------|
    |aft             |V:0, |235   |text→any  |"自由フォーム" 文書準 |
    |                |I:0  |      |          |備システム (Perl)     |
    |----------------+-----+------+----------+----------------------|
    |yodl            |V:0, |610   |text→any  |プリ文書言語とその処理|
    |                |I:0  |      |          |用のツール (C 言語)   |
    |----------------+-----+------+----------+----------------------|
    |sdf             |V:0, |1445  |text→any  |単純文書処理ソフト    |
    |                |I:0  |      |          |(Perl)                |
    |----------------+-----+------+----------+----------------------|
    |sisu            |V:0, |5344  |text→any  |文書の構造化と出版と探|
    |                |I:0  |      |          |索の枠組み (Ruby)     |
    +---------------------------------------------------------------+


%

11.2. XML データー

    Extensible Markup Language (XML) は構造化情報を含む文書のためのマ
    ークアップ言語です。

    XML.COM にある入門情報を参照下さい。

      * "What is XML?"

      * "What Is XSLT?"
   
      * "What Is XSL-FO?"

      * "What Is XLink?"

%

11.2.1. XML に関する基本ヒント

    XML テキストはちょっと HTML のようにも見えます。これを使うと一つ
    の文書から複数のフォーマットのアウトプット管理できるようになりま
    す。簡単な XML システムの一つはここで使っている docbook-xsl パッ
    ケージです。

    各 XML ファイルは次のような標準的な XML 宣言でスタートします。

    <?xml version="1.0" encoding="UTF-8"?>

    XML 要素の基本的シンタックスは次のようにマークアップされます。

    <name attribute="value">content</name>

    空の XML 要素は次の短縮形を使ってマークアップされます。

    <name attribute="value"/>

    上記例中の "attribute="value"" はオプションです。

    XML 中のコメントセクションは次のようにマークアップされます。

    <!-- comment -->

    マークアップを追加する以外に、XML は次の文字に関して事前定義され
    たエンティティを使い内容を少し改変する必要があります。

    表11.7 XML で事前定義されているエントリーのリスト

    +---------------------------------------------+
    |事前定義されたエンティティ|   変換先の文字   |
    |--------------------------+------------------|
    |&quot;                    |" : 引用符        |
    |--------------------------+------------------|
    |&apos;                    |' : アポストロフィ|
    |--------------------------+------------------|
    |&lt;                      |< : 以下          |
    |--------------------------+------------------|
    |&gt;                      |> : 以上          |
    |--------------------------+------------------|
    |&amp;                     |& : アンパサンド  |
    +---------------------------------------------+


    注意
   
    "<" と "&" はアトリビュートやエレメントには使えません。

    注記

    例えば "&some-tag:" 等の SGML スタイルのユーザー定義エンティティ
    が使われた場合、他の定義は無効で最初の定義が有効です。エンティテ
    ィ定義は "<!ENTITY 何らかのタグ " エンティティ値 ">" と表現されま
    す。

    注記

    XML のマークアップがタグ名の何らかの組み合わせで (あるデーターを
    内容としてであれアトリビュート値としてであれ) 整合性を持ってされ
    ている限り、他の XML の変換は拡張可能スタイルシート言語変換
    (XSLT) を使うととっても簡単な作業です。

%

11.2.2. XML 処理

    拡張可能スタイルシート言語 (XSL) のような XML ファイルを処理に利
    用可能なツールは沢山あります。

    基本的に、良くできた XML ファイルを一度作ると、いかなるフォーマッ
    トへも拡張可能なスタイルシート言語変換 (XSLT) を使って変換できま
    す。

    フォーマットオブジェクト用拡張可能スタイルシート言語 (XSL-FO) が
    フォーマットのための答えとなるはずです。fop パッケージは Java プ
    ログラム言語に依存するため Debian の main アーカイブでは新規です
    。このため、 LaTeX コードが XML から XSLT を使って通常作成され、
    DVI や PostScript や PDF 等のプリンタブルなファイルが LaTeX シス
    テムを使って作成されます。

    表11.8 XML ツールのリスト

    +---------------------------------------------------------------+
    |パッケージ |ポプ |サイ |キーワ|              説明              |
    |           |コン | ズ  | ード |                                |
    |-----------+-----+-----+------+--------------------------------|
    |docbook-xml|V:15,|2133 |xml   |DocBook 用 XML ドキュメントタイ |
    |           |I:280|     |      |プ定義 (DTD)                    |
    |-----------+-----+-----+------+--------------------------------|
    |           |V:15,|     |      |XSLT コマンドラインプロセスソフ |
    |xsltproc   |I:104|160  |xslt  |ト (XML→ XML, HTML, plain text, |
    |           |     |     |      |他)                             |
    |-----------+-----+-----+------+--------------------------------|
    |           |V:13,|     |xml/  |DocBook XML を XSLT を使って各種|
    |docbook-xsl|I:165|14870|xslt  |アウトプットへ処理する XSL スタ |
    |           |     |     |      |イルシート                      |
    |-----------+-----+-----+------+--------------------------------|
    |xmlto      |V:1, |130  |xml/  |XSLT を用いて XML から全てへの変|
    |           |I:23 |     |xslt  |換ソフト                        |
    |-----------+-----+-----+------+--------------------------------|
    |dbtoepub   |V:0, |37   |xml/  |DocBook XML から .epub へのコン |
    |           |I:0  |     |xslt  |バーター                        |
    |-----------+-----+-----+------+--------------------------------|
    |dblatex    |V:3, |4643 |xml/  |XSLT を使って Docbook ファイルを|
    |           |I:16 |     |xslt  |DVI, PostScript, PDF 文書へ変換 |
    |-----------+-----+-----+------+--------------------------------|
    |fop        |V:1, |291  |xml/  |Docbook XML ファイルを PDF に変 |
    |           |I:24 |     |xsl-fo|換                              |
    +---------------------------------------------------------------+


    XML は標準一般化マークアップ言語 (SGML) のサブセットなので、ドキ
    ュメントスタイル構文規程言語 (DSSSL) 等の SGML 用として利用可能な
    広範なツールで処理できます。

    表11.9 DSSLツールのリスト

    +---------------------------------------------------------------+
    |             |ポプ|サイ|キー |                                 |
    | パッケージ  |コン| ズ |ワー |              説明               |
    |             |    |    | ド  |                                 |
    |-------------+----+----+-----+---------------------------------|
    |openjade     |V:2,|1019|dsssl|ISO/IEC 10179: 1996 標準 DSSSL プ|
    |             |I:38|    |     |ロセッサ (最新版)                |
    |-------------+----+----+-----+---------------------------------|
    |             |V:1,|    |xml/ |DocBook XML を各種出力フォーマッ |
    |docbook-dsssl|I:23|2604|dsssl|トに DSSSL を使って処理するための|
    |             |    |    |     |DSSSL スタイルシート             |
    |-------------+----+----+-----+---------------------------------|
    |             |    |    |     |docbook2* コマンドで DSSSL を使っ|
    |docbook-utils|V:0,|281 |xml/ |て DocBook ファイルを他のフォーマ|
    |             |I:16|    |dsssl|ットに (HTML, RTF, PS, man, PDF) |
    |             |    |    |     |変換するなどのユーティリティー   |
    |-------------+----+----+-----+---------------------------------|
    |sgml2x       |V:0,|90  |SGML/|DSSSL スタイルシートを使う SGML  |
    |             |I:0 |    |dsssl|や XML からの変換ソフト          |
    +---------------------------------------------------------------+


    ヒント
   
    GNOME の yelp は DocBook XML ファイルを X 上に体裁良く表示するの
    で時々便利です。

%

11.2.3. XML データー抽出

    他のフォーマットから以下を使うと HTML とか XML のデーターを抽出出
    来ます。

    表11.10 テキストデーター変換ツールのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプ|サイ|  キーワード   |           説明            |
    |   ジ    |コン| ズ |               |                           |
    |---------+----+----+---------------+---------------------------|
    |wv       |V:0,|717 |MSWord→any     |Microsoft Word から HTML や|
    |         |I:7 |    |               |LaTeX 等への文書変換ソフト |
    |---------+----+----+---------------+---------------------------|
    |texi2html|V:0,|1833|texi→html      |Texinfo から HTML への変換 |
    |         |I:8 |    |               |ソフト                     |
    |---------+----+----+---------------+---------------------------|
    |man2html |V:0,|138 |manpage→html   |manpage から HTML への変換 |
    |         |I:2 |    |               |ソフト (CGI サポート)      |
    |---------+----+----+---------------+---------------------------|
    |unrtf    |V:0,|148 |rtf→html       |RTF から HTML 等への文書変 |
    |         |I:4 |    |               |換ソフト                   |
    |---------+----+----+---------------+---------------------------|
    |info2www |V:1,|76  |info→html      |GNU info から HTML への変換|
    |         |I:3 |    |               |ソフト (CGI サポート)      |
    |---------+----+----+---------------+---------------------------|
    |ooo2dbk  |V:0,|217 |sxw→xml        |OpenOffice.org SXW 文書から|
    |         |I:0 |    |               |DocBook XML への変換ソフト |
    |---------+----+----+---------------+---------------------------|
    |         |    |    |               |WordPerfect 5.0 と 5.1 ファ|
    |wp2x     |V:0,|202 |WordPerfect→any|イルから TeX と LaTeX と   |
    |         |I:0 |    |               |troff と GML と HTML への変|
    |         |    |    |               |換ソフト                   |
    |---------+----+----+---------------+---------------------------|
    |doclifter|V:0,|451 |troff→xml      |troff から DocBook XML への|
    |         |I:0 |    |               |変換ソフト                 |
    +---------------------------------------------------------------+


    非 XML の HTML ファイルの場合は、これらを整合性ある XML である
    XHTML に変換できます。XHTML は XML ツールで処理できます。

    表11.11 XML整形印刷ツールのリスト

    +---------------------------------------------------------------+
    |             |ポプ |サ |              |                        |
    | パッケージ  |コン |イ |  キーワード  |          説明          |
    |             |     |ズ |              |                        |
    |-------------+-----+---+--------------+------------------------|
    |             |     |   |              |xmllint(1) (シンタクスチ|
    |libxml2-utils|V:22,|182|xml↔html↔xhtml|ェック、リフォーマット、|
    |             |I:246|   |              |整形、他) を含むコマンド|
    |             |     |   |              |ライン XML ツール       |
    |-------------+-----+---+--------------+------------------------|
    |             |V:2, |   |              |HTML シンタックスチェッ |
    |tidy         |I:14 |84 |xml↔html↔xhtml|クソフトとリフォーッマト|
    |             |     |   |              |ソフト                  |
    +---------------------------------------------------------------+


    一度適正な XML が生成されれば、XSLT 技術を使ってマークアップコン
    テキスト等に基づいてデーターを抽出出来ます。

%

11.3. タイプセッティング

    Unix のtroff プログラムは最初 AT&T で開発されました。それはマンペ
    ージを作成するのに通常使われます。

    Donald Knuth 氏によって作成された TeX は非常に強力な組版ツールで
    デファクト標準です。最初 Leslie Lamport 氏によって書かれた LaTeX
    は TeX の力への高レベルアクセスを可能にします。

    表11.12 タイプ設定ツールのリスト

    +--------------------------------------------------------------+
    |パッケ |ポプコ |サイ |キーワ |              説明              |
    | ージ  |  ン   | ズ  | ード  |                                |
    |-------+-------+-----+-------+--------------------------------|
    |texlive|V:3,   |71   |(La)TeX|組版、校正、印刷のための TeX シ |
    |       |I:50   |     |       |ステム                          |
    |-------+-------+-----+-------+--------------------------------|
    |groff  |V:3,   |11838|troff  |GNU troff テキストフォーマティン|
    |       |I:64   |     |       |グシステム                      |
    +--------------------------------------------------------------+


%

11.3.1. roff タイプセッティング

    伝統的には、roff が主な Unix テキスト処理システムです。roff(7) と
    groff(7) と groff(1) と grotty(1) と troff(1) と groff_mdoc(7) と
    groff_man(7) と groff_ms(7) と groff_me(7) と groff_mm(7) と
    "info groff" を参照下さい。

    groff パッケージをインストールすると "/usr/share/doc/groff/" 中に
    "-me"マクロに関する良い入門書や参考書が読めます。

    ヒント

    "groff -Tascii -me -" はANSI エスケープコードを含むプレーンテキス
    トを生成します。もしマンページのような多くの "^H" や "_" を含む出
    力が欲しい場合には、この代わりに "GROFF_NO_SGR=1 groff -Tascii
    -me -" を使います。

    ヒント
   
    groff が生成した "^H" や "_" をテキストから削除するには、それを
    "col -b -x" でフィルターします。

%

11.3.2. TeX/LaTeX

    TeX Live ソフトウエアーディストリビューションは完全な TeX システ
    ムを提供します。texlive メタパッケージは、ほとんどの一般的タスク
    に十分な TeX Live パッケージのまともな選択を提供します。

    TeX と LaTeX に関する多くの参考書が利用可能です。

      * The teTeX HOWTO: The Linux-teTeX Local Guide

      * tex(1)

      * latex(1)

      * texdoc(1)

      * texdoctk(1)

      * "The TeXbook"、Donald E. Knuth 著 (Addison-Wesley)

      * "LaTeX - A Document Preparation System"、Leslie Lamport 著
        (Addison-Wesley)

      * "The LaTeX Companion"、Goossens と Mittelbach と Samarin 著
        (Addison-Wesley)

    これはもっとも強力な組版環境です。多くの SGML 処理ソフトはこれを
    バックエンドのテキスト処理ソフトとしています。多くの人が Emacs や
    Vim をソースのエディターとして使う一方、lyx パッケージが提供する
    Lyx と texmacs パッケージが提供する GNU TeXmacs は洒落た LaTeX の
    WYSIWYG 編集環境を提供します。

    多くのオンラインリソースが利用可能です。

      * TEX Live ガイド - TEX Live 2007 ("/usr/share/doc/
        texlive-doc-base/english/texlive-en/live.html")
        (texlive-doc-base パッケージ)

      * A Simple Guide to Latex/Lyx

      * Word Processing Using LaTeX

      * Local User Guide to teTeX/LaTeX

    文書が大きくなると、TeX はエラーを発生する事があります。この問題
    の解決には (正しくは "/etc/texmf/texmf.d/95NonPath" を編集し 
    update-texmf(8) を実行することで) "/etc/texmf/texmf.cnf" 中のプー
    ルの数を増やし修正しなければいけません。

    注記

    このファイルには必要なマクロのほとんど全てが含まれます。この文書
    は7から10行をコメントして "\input manmac \proofmodefalse" を追加
    すると tex(1) で処理できると聞いた事があります。オンラインバージ
    ョンを使うのではなくこの本 (さらに Donald E. Knuth 氏による全ての
    本) を購入される事を強く勧めます。しかし、そのソースは TeX の入力
    の非常に良い例です！

%

11.3.3. マニュアルページを綺麗に印刷

    次のコマンドでマンページを PostScript で上手く印刷できます。

    $ man -Tps some_manpage | lpr

%

11.3.4. マニュアルページの作成

    プレーンな troff フォーマットでマンページ (マニュアルページ) を書
    く事は可能ですが、それを作成するヘルパーパッケージがあります。

    表11.13 マンページ作成を補助するパッケージのリスト

    +---------------------------------------------------------------+
    |              |ポプ |サ |            |                         |
    |  パッケージ  |コン |イ | キーワード |          説明           |
    |              |     |ズ |            |                         |
    |--------------+-----+---+------------+-------------------------|
    |docbook-to-man|V:0, |191|SGML→manpage|DocBook SGML から roff   |
    |              |I:13 |   |            |man マクロへの変換ソフト |
    |--------------+-----+---+------------+-------------------------|
    |help2man      |V:0, |498|text→manpage|--help からの自動マンペー|
    |              |I:10 |   |            |ジ生成ソフト             |
    |--------------+-----+---+------------+-------------------------|
    |info2man      |V:0, |134|info→manpage|GNU info から POD かマン |
    |              |I:0  |   |            |ページへの変換ソフト     |
    |--------------+-----+---+------------+-------------------------|
    |txt2man       |V:0, |114|text→manpage|ベタの ASCII テキストから|
    |              |I:1  |   |            |マンページ形式へ変換     |
    +---------------------------------------------------------------+


%

11.4. 印刷可能データー

    Debian システム上では印刷可能なデーターは PostScript フォーマット
    で表現されます。共通 Unix 印刷システム (CUPS) は非 PostScript プ
    リンタ用のラスタ化のバックエンドプログラムとして Ghostscript を使
    用します。

%

11.4.1. Ghostscript

    印刷データー処理の核心はラスタ画像を生成する Ghostscript という
    PostScript (PS) インタープリタです。

    最新の Artifex からのアップストリーム版 Ghostscript は統合リリー
    スである 8.60 リリースにて AFPL から GPL にライセンス変更され最新
    の ESP バージョンによる CUPS 関連等の変更をマージしました。

    表11.14 Ghostscript PostScript インタープリタのリスト

    +---------------------------------------------------------------+
    |   パッケージ   |ポプコ|サイ |              説明               |
    |                |  ン  | ズ  |                                 |
    |----------------+------+-----+---------------------------------|
    |ghostscript     |V:252,|231  |GPL 版 Ghostscript PostScript/PDF|
    |                |I:598 |     |インタープリタ                   |
    |----------------+------+-----+---------------------------------|
    |                |V:15, |     |GPL 版 Ghostscript PostScript/PDF|
    |ghostscript-x   |I:65  |223  |インタープリタ - X ディスプレーサ|
    |                |      |     |ポート                           |
    |----------------+------+-----+---------------------------------|
    |libpoppler95    |I:3   |4172 |xpdf PDF ビューワー派生PDF レンダ|
    |                |      |     |リングライブラリー               |
    |----------------+------+-----+---------------------------------|
    |libpoppler-glib8|V:217,|449  |PDF レンダリングライブラリー     |
    |                |I:481 |     |(GLib 準拠共有ライブラリー)      |
    |----------------+------+-----+---------------------------------|
    |poppler-data    |V:111,|13090|PDF レンダリングライブラリー用   |
    |                |I:637 |     |CMaps (CJK サポート: Adobe-*)    |
    +---------------------------------------------------------------+


    ヒント
   
    "gs -h" とすると Ghostscript の設定が表示されます。

%

11.4.2. 2つの PS や PDF ファイルをマージ

    2つの PostScript (PS) や Portable Document Format (PDF) ファイル
    は Ghostscript のgs(1) をつかってマージできます。

    $ gs -q -dNOPAUSE -dBATCH -sDEVICE=pswrite -sOutputFile=bla.ps -f foo1.ps foo2.ps
    $ gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=bla.pdf -f foo1.pdf foo2.pdf

    注記

    PDF は、クロスプラットフォームの印刷可能フォーマットとして広範に
    使われていて、本質的にいくつかの追加機能と拡張がされている、圧縮
    PS フォーマットです。

    ヒント

    コマンドラインの場合、psutils パッケージ中の psmerge(1) 等のコマ
    ンドは PostScript 文書を操作するのに便利です。pdftk パッケージの 
    pdftk(1) も PDF 文書を操作するのに便利です。

%

11.4.3. 印刷可能データーユーティリティー

    印刷可能なデーターに用いる次のパッケージが著者の目に止まりました
    。

    表11.15 プリントできるデーターのユーティリティーのリスト

    +---------------------------------------------------------------+
    | パッケージ  |ポプコ|サイ| キーワード  |         説明          |
    |             |  ン  | ズ |             |                       |
    |-------------+------+----+-------------+-----------------------|
    |             |      |    |             |PDF ユーティリティー:  |
    |poppler-utils|V:241,|689 |pdf→ps,text,…|pdftops, pdfinfo,      |
    |             |I:434 |    |             |pdfimages, pdftotext,  |
    |             |      |    |             |pdffonts               |
    |-------------+------+----+-------------+-----------------------|
    |psutils      |V:6,  |219 |ps→ps        |PostScript 文書変換ツー|
    |             |I:105 |    |             |ル                     |
    |-------------+------+----+-------------+-----------------------|
    |poster       |V:0,  |58  |ps→ps        |PostScript ページから大|
    |             |I:5   |    |             |きなポスターを作る     |
    |-------------+------+----+-------------+-----------------------|
    |             |      |    |             |ASCII テキストから     |
    |enscript     |V:1,  |2132|text→ps,     |PostScript か HTML か  |
    |             |I:20  |    |html, rtf    |RTF か Pretty-Print へ |
    |             |      |    |             |の変換                 |
    |-------------+------+----+-------------+-----------------------|
    |             |V:1,  |    |             |全てを PostScript に変 |
    |a2ps         |I:15  |3651|text→ps      |換するソフトと綺麗印刷 |
    |             |      |    |             |ソフト                 |
    |-------------+------+----+-------------+-----------------------|
    |pdftk        |I:51  |28  |pdf→pdf      |PDF 文書変換ツール:    |
    |             |      |    |             |pdftk                  |
    |-------------+------+----+-------------+-----------------------|
    |html2ps      |V:0,  |249 |html→ps      |HTML から PostScript へ|
    |             |I:3   |    |             |の変換ソフト           |
    |-------------+------+----+-------------+-----------------------|
    |gnuhtml2latex|V:0,  |27  |html→latex   |html から latex への変 |
    |             |I:1   |    |             |換ソフト               |
    |-------------+------+----+-------------+-----------------------|
    |latex2rtf    |V:0,  |480 |latex→rtf    |LaTeX から MS Word で読|
    |             |I:6   |    |             |める RTF へと文書変換  |
    |-------------+------+----+-------------+-----------------------|
    |             |      |    |             |PostScript から EPS (カ|
    |ps2eps       |V:3,  |98  |ps→eps       |プセル化済み           |
    |             |I:68  |    |             |PostScript) への変換ソ |
    |             |      |    |             |フト                   |
    |-------------+------+----+-------------+-----------------------|
    |             |      |    |             |日本語符号化サポート付 |
    |e2ps         |V:0,  |109 |text→ps      |きの Text から         |
    |             |I:0   |    |             |PostScript への変換ソフ|
    |             |      |    |             |ト                     |
    |-------------+------+----+-------------+-----------------------|
    |impose+      |V:0,  |119 |ps→ps        |PostScript ユーティリテ|
    |             |I:0   |    |             |ィー                   |
    |-------------+------+----+-------------+-----------------------|
    |             |      |    |             |多くのソースコード (C, |
    |             |V:0,  |    |             |C++, Java, Pascal,     |
    |trueprint    |I:0   |146 |text→ps      |Perl, Pike, Sh,        |
    |             |      |    |             |Verilog) の PostScript |
    |             |      |    |             |への綺麗印刷 (C 言語)  |
    |-------------+------+----+-------------+-----------------------|
    |             |      |    |             |PDF からスケール可のベ |
    |pdf2svg      |V:0,  |30  |ps→svg       |クトルグラフィクス     |
    |             |I:4   |    |             |(SVG) フォーマットへの |
    |             |      |    |             |変換ソフト             |
    |-------------+------+----+-------------+-----------------------|
    |             |V:0,  |    |             |PDF から IPE の XML フ |
    |pdftoipe     |I:0   |71  |ps→ipe       |ォーマットへの変換ソフ |
    |             |      |    |             |ト                     |
    +---------------------------------------------------------------+


%

11.4.4. CUPS を使って印刷

    Common Unix Printing System (CUPS) が提供する、lp(1) と lpr(1) コ
    マンドの両方が印刷可能なデーターの印刷をカスタム化するオプション
    を提供します。

    以下のコマンドの内のひとつを使い一つのファイルに対し３部の印刷を
    ページ順に揃えてできます。

    $ lp -n 3 -o Collate=True filename

    $ lpr -#3 -o Collate=True filename

    さらに、コマンドライン印刷とオプションに書かれているように "-o
    number-up=2" や "-o page-set=even", "-o page-set=odd" や "-o
    scaling=200" や "-o natural-scaling=200" 等の印刷オプションを使っ
    てカスタム化できます。

%

11.5. メールデーター変換

    テキストデーター変換のための次のパッケージが著者の目に止まりまし
    た。

    表11.16 メールデーター変換を補助するパッケージのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプ|サイ|キーワ |               説明                |
    |   ジ    |コン| ズ | ード  |                                   |
    |---------+----+----+-------+-----------------------------------|
    |sharutils|V:4,|1421|メール |shar(1) と unshar(1) と uuencode(1)|
    |         |I:55|    |       |と uudecode(1)                     |
    |---------+----+----+-------+-----------------------------------|
    |mpack    |V:1,|106 |MIME   |MIME メッセージの符号化と逆符号化の|
    |         |I:18|    |       |ソフト: mpack(1) と munpack(1)     |
    |---------+----+----+-------+-----------------------------------|
    |         |V:1,|    |       |Microsoft のみのフォーマットの     |
    |tnef     |I:10|110 |ms-tnef|"application/ms-tnef" タイプの MIME|
    |         |    |    |       |アタッチメントを開梱               |
    |---------+----+----+-------+-----------------------------------|
    |         |V:0,|    |       |次のフォーマットのエンコーダーとデ |
    |uudeview |I:5 |109 |メール |コーダー: uuencode, xxencode,      |
    |         |    |    |       |BASE64, quoted printable, BinHex   |
    +---------------------------------------------------------------+


    ヒント

    インターネットメッセージアクセスプロトコルバージョン4 (IMAP4) サ
    ーバー (「POP3/IMAP4 サーバー」参照下さい) は、プロプライエタリメ
    ールシステムのクライアントソフトが IMAP4 サーバーも使えるように設
    定できる場合、プロプライエタリメールシステムからメールを取り出す
    のに利用できるかもしれません。

%

11.5.1. メールデーターの基本

    メイル (SMTP) データーは7ビットデーター列に限定されるべきです。だ
    からバイナリーデーターや8ビットテキストデーターはMultipurpose
    Internet Mail Extensions (MIME) を用いたり文字セット (「符号化方
    式の基本」参照下さい) を選択して7ビットのフォーマットにエンコード
    されます。

    標準のメールストレージフォーマットは RFC2822 (RFC822 の更新版) に
    より定義される mbox フォーマットです。mbox(5) (mutt パッケージが
    提供) を参照下さい。

    欧州言語の場合、ほとんど8ビット文字が無いので ISO-8859-1 文字セッ
    トとともに "Content-Transfer-Encoding: quoted-printable" が通常メ
    ールに使われます。欧州のテキストが UTF-8 符号化された場合、ほとん
    どが7ビット文字なので "Content-Transfer-Encoding:
    quoted-printable" が大体使われます。

    日本語には、テキストを7ビットにしておくために伝統的に
    "Content-Type: text/plain; charset=ISO-2022-JP" がメールに使われ
    ます。しかし、古い Microsoft システムは適正な宣言無しに Shift-JIS
    でメールデーターを送るかもしれません。日本語のテキストが UTF-8 で
    符号化される場合、多くの8ビットデーターを含むので Base64 が大体使
    われます。他のアジアの言語でも状況は同様です。

    注記

    もし IMAP4 サーバー (「POP3/IMAP4 サーバー」参照下さい) と話せる
    非 Debian クライアントからあなたの非 Unix メールデーターがアクセ
    ス出きるなら、あなた自身の IMAP4 サーバーを実行することでメールデ
    ーターを引き出せるかもしれません。

    注記

    もし他のメールストレージフォーマットを使っている場合、mbox フォー
    マットに移動するのが良い第一歩です。mutt(1) のような汎用クライア
    ントプログラムはこれに非常に便利です。

    メールボックスの内容は procmail(1) と formail(1) を使って各メッセ
    ージに分割できます。

    各メールメッセージは mpack パッケージにある munpack(1) (または他
    の専用ツール) を使って開梱して MIME 符号化された内容を取り出せま
    す。

%

11.6. グラフィクスデーターツール

    印刷可能なデーターに用いる次のパッケージが著者の目に止まりました
    。

    表11.17 画像データーツールのリスト

    +-----------------------------------------------------------------+
    |       パッケージ       |ポプコ|サイ | キーワード |     説明     |
    |                        |  ン  | ズ  |            |              |
    |------------------------+------+-----+------------+--------------|
    |gimp                    |V:68, |22313|画像        |GNU イメージ操|
    |                        |I:341 |     |(bitmap)    |作プログラム  |
    |------------------------+------+-----+------------+--------------|
    |imagemagick             |I:400 |218  |画像        |画像操作プログ|
    |                        |      |     |(bitmap)    |ラム          |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |画像操作プログ|
    |graphicsmagick          |V:3,  |5224 |画像        |ラム          |
    |                        |I:17  |     |(bitmap)    |(imagemagick  |
    |                        |      |     |            |のフォーク)   |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |GTK+ に基づく |
    |                        |V:17, |     |画像        |SANE (Scanner |
    |xsane                   |I:173 |2346 |(bitmap)    |Access Now    |
    |                        |      |     |            |Easy) 用の X11|
    |                        |      |     |            |フロントエンド|
    |------------------------+------+-----+------------+--------------|
    |netpbm                  |V:32, |4302 |画像        |画像変換ツール|
    |                        |I:409 |     |(bitmap)    |              |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |MS Windows の |
    |                        |      |     |            |アイコンやカー|
    |icoutils                |V:21, |221  |png↔ico     |ソールと PNG  |
    |                        |I:127 |     |(bitmap)    |フォーマット間|
    |                        |      |     |            |の変換        |
    |                        |      |     |            |(favicon.ico) |
    |------------------------+------+-----+------------+--------------|
    |scribus                 |V:2,  |30375|ps/pdf/SVG/…|Scribus DTP エ|
    |                        |I:23  |     |            |ディター      |
    |------------------------+------+-----+------------+--------------|
    |                        |V:177,|     |画像        |LibreOffice   |
    |libreoffice-draw        |I:434 |14600|(vector)    |office スイー |
    |                        |      |     |            |ト - ドロー   |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |SVG (スケーラ |
    |inkscape                |V:55, |84823|画像        |ブルベクトルグ|
    |                        |I:209 |     |(vector)    |ラフィクス) エ|
    |                        |      |     |            |ディター      |
    |------------------------+------+-----+------------+--------------|
    |dia                     |V:5,  |3727 |画像        |ダイアグラムエ|
    |                        |I:31  |     |(vector)    |ディター (Gtk)|
    |------------------------+------+-----+------------+--------------|
    |                        |V:2,  |     |画像        |X11 下でインテ|
    |xfig                    |I:15  |1793 |(vector)    |ラクティブ生成|
    |                        |      |     |            |するソフト    |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |PostScript と |
    |                        |      |     |            |PDF ファイルか|
    |pstoedit                |V:4,  |988  |ps/pdf→画像 |ら編集可能なベ|
    |                        |I:98  |     |(vector)    |クトルグラフィ|
    |                        |      |     |            |クスへの変換ソ|
    |                        |      |     |            |フト (SVG)    |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |Windows メタフ|
    |libwmf-bin              |V:10, |113  |Windows/画像|ァイル (ベクト|
    |                        |I:211 |     |(vector)    |ル画像データ  |
    |                        |      |     |            |ー) 変換ツール|
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |XFig ファイル |
    |                        |V:0,  |     |fig→sxd     |を            |
    |fig2sxd                 |I:0   |149  |(vector)    |OpenOffice.org|
    |                        |      |     |            |Draw フォーマ |
    |                        |      |     |            |ットに変換    |
    |------------------------+------+-----+------------+--------------|
    |                        |V:2,  |     |            |OCR 用のスキャ|
    |unpaper                 |I:19  |460  |画像→画像   |ンしたページの|
    |                        |      |     |            |後処理ツール  |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |HP の商用 OCR |
    |tesseract-ocr           |V:8,  |1500 |画像→テキス |エンジンの基づ|
    |                        |I:37  |     |ト          |くフリーの OCR|
    |                        |      |     |            |ソフトウエアー|
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |OCR エンジンデ|
    |                        |V:7,  |     |画像→テキス |ーター:       |
    |tesseract-ocr-eng       |I:37  |4032 |ト          |tesseract-ocr |
    |                        |      |     |            |の英文用言語フ|
    |                        |      |     |            |ァイル        |
    |------------------------+------+-----+------------+--------------|
    |gocr                    |V:1,  |531  |画像→テキス |フリー OCR ソ |
    |                        |I:13  |     |ト          |フト          |
    |------------------------+------+-----+------------+--------------|
    |ocrad                   |V:0,  |303  |画像→テキス |フリー OCR ソ |
    |                        |I:5   |     |ト          |フト          |
    |------------------------+------+-----+------------+--------------|
    |                        |V:71, |     |            |画像ビューアー|
    |eog                     |I:264 |10189|画像(Exif)  |プログラム Eye|
    |                        |      |     |            |of GNOME      |
    |------------------------+------+-----+------------+--------------|
    |                        |V:5,  |     |            |画像ビューアー|
    |gthumb                  |I:22  |5475 |画像(Exif)  |兼ブラウザー  |
    |                        |      |     |            |(GNOME)       |
    |------------------------+------+-----+------------+--------------|
    |geeqie                  |V:6,  |14643|画像(Exif)  |GTK+ を用いた |
    |                        |I:21  |     |            |画像ビューアー|
    |------------------------+------+-----+------------+--------------|
    |                        |V:19, |     |            |デジタル写真オ|
    |shotwell                |I:223 |6451 |画像(Exif)  |ーガナイザー  |
    |                        |      |     |            |(GNOME)       |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |デジタルカメラ|
    |                        |V:0,  |     |            |からメディアを|
    |gtkam                   |I:6   |1154 |画像(Exif)  |回収するアプリ|
    |                        |      |     |            |ケーション    |
    |                        |      |     |            |(GTK+)        |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |gphoto2 デジタ|
    |gphoto2                 |V:1,  |955  |画像(Exif)  |ルカメラコマン|
    |                        |I:12  |     |            |ドライン版クラ|
    |                        |      |     |            |イアント      |
    |------------------------+------+-----+------------+--------------|
    |gwenview                |V:28, |10570|画像(Exif)  |画像ビューア  |
    |                        |I:97  |     |            |(KDE)         |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |KDE アプリケー|
    |kamera                  |I:97  |798  |画像(Exif)  |ション用デジタ|
    |                        |      |     |            |ルカメラサポー|
    |                        |      |     |            |ト            |
    |------------------------+------+-----+------------+--------------|
    |                        |V:2,  |     |            |デジタル写真管|
    |digikam                 |I:13  |2646 |画像(Exif)  |理アプリケーシ|
    |                        |      |     |            |ョン          |
    |------------------------+------+-----+------------+--------------|
    |                        |V:3,  |     |            |EXIF/IPTC メタ|
    |exiv2                   |I:44  |321  |画像(Exif)  |データー操作ツ|
    |                        |      |     |            |ール          |
    |------------------------+------+-----+------------+--------------|
    |                        |V:1,  |     |            |デジタルカメラ|
    |exiftran                |I:21  |70   |画像(Exif)  |の jpeg 画像を|
    |                        |      |     |            |変換          |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |Exif に準拠の |
    |                        |V:1,  |     |            |JPEG (デジタル|
    |jhead                   |I:11  |109  |画像(Exif)  |カメラ写真) フ|
    |                        |      |     |            |ァイルの非画像|
    |                        |      |     |            |部を操作      |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |JPEG ファイル |
    |                        |V:1,  |     |            |中の EXIF 情報|
    |exif                    |I:12  |339  |画像(Exif)  |を表示するコマ|
    |                        |      |     |            |ンドラインユー|
    |                        |      |     |            |ティリティー  |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |デジタルカメラ|
    |                        |V:0,  |     |            |の JPEG ファイ|
    |exiftags                |I:5   |292  |画像(Exif)  |ルから Exif タ|
    |                        |      |     |            |グを読むユーテ|
    |                        |      |     |            |ィリティー    |
    |------------------------+------+-----+------------+--------------|
    |                        |V:0,  |     |            |デジタル写真か|
    |exifprobe               |I:4   |499  |画像(Exif)  |らメタデーター|
    |                        |      |     |            |を読み出す    |
    |------------------------+------+-----+------------+--------------|
    |                        |V:2,  |     |画像(Raw)   |生のデジタルカ|
    |dcraw                   |I:19  |535  |→ppm        |メラ画像のデコ|
    |                        |      |     |            |ード          |
    |------------------------+------+-----+------------+--------------|
    |                        |V:0,  |     |画像        |視覚的な類似画|
    |findimagedupes          |I:1   |79   |→fingerprint|像と重複画像の|
    |                        |      |     |            |検出          |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |忠実度を上げた|
    |ale                     |V:0,  |839  |画像→画像   |りモザイクを作|
    |                        |I:0   |     |            |成するための画|
    |                        |      |     |            |像のマージ    |
    |------------------------+------+-----+------------+--------------|
    |                        |V:0,  |     |画像(Exif)  |イメージから静|
    |imageindex              |I:2   |145  |→html       |的な HTML ギャ|
    |                        |      |     |            |ラリーを生成  |
    |------------------------+------+-----+------------+--------------|
    |                        |V:0,  |     |            |普遍的        |
    |outguess                |I:2   |261  |jpeg,png    |Steganographic|
    |                        |      |     |            |ツール        |
    |------------------------+------+-----+------------+--------------|
    |librecad                |V:4,  |8205 |DXF         |CAD データーエ|
    |                        |I:18  |     |            |ディター (KDE)|
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |アニメーション|
    |blender                 |V:4,  |79166|blend, TIFF,|等用の 3D コン|
    |                        |I:38  |     |VRML, …     |テントエディタ|
    |                        |      |     |            |ー            |
    |------------------------+------+-----+------------+--------------|
    |                        |V:0,  |     |ms3d, obj,  |OpenGL 準拠の |
    |mm3d                    |I:0   |3778 |dxf, …      |3D モデルエデ |
    |                        |      |     |            |ィター        |
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |オープンフォン|
    |open-font-design-toolkit|I:0   |10   |ttf, ps, …  |トデザイン用の|
    |                        |      |     |            |メタパッケージ|
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |PS と TrueType|
    |fontforge               |V:0,  |4191 |ttf, ps, …  |と OpenType の|
    |                        |I:8   |     |            |フォント用フォ|
    |                        |      |     |            |ントエディター|
    |------------------------+------+-----+------------+--------------|
    |                        |      |     |            |TrueType フォ |
    |                        |V:0,  |     |            |ントをグリッド|
    |xgridfit                |I:0   |806  |ttf         |フィッティング|
    |                        |      |     |            |とヒンティング|
    |                        |      |     |            |用のプログラム|
    +-----------------------------------------------------------------+


    ヒント
   
    aptitude(8) の正規表現 "~Gworks-with::image" (「aptitude を使った
    探索方法」参照下さい) を使ってさらなる画像ツールを探しましょう。

    gimp(1) のような GUI プログラムは非常に強力ですが、imagemagick(1)
    等のコマンドラインツールはスクリプトでイメージ操作を自動化するの
    に非常に便利です。

    デジタルカメラのファイルフォーマットのデファクト標準は、追加のメ
    タデーター付きの JPEG 画像ファイルフォーマットである交換可能な画
    像ファイルフォーマット (EXIF) です。EXIF は日付や時間やカメラ設定
    等の情報を保持できます。

    Lempel-Ziv-Welch (LZW) ロス無しデーター圧縮特許の期限は切れました
    。LZW データー圧縮を使う画像交換フォーマット (GIF) ユーティリティ
    ーは Debian システム上で自由に利用可能となりました。

    ヒント

    リムーバブル記録メディア付きのどのデジタルカメラやスキャナーも、
    カメラファイルシステム用デザインルールに準拠し FAT ファイルシステ
    ムを使っているので USB ストレージ読取り機を経由すれば Linux で必
    ず機能します。「リムーバブルストレージデバイス」参照下さい。

%

11.7. その他のデーター変換

    多くのデーター変換プログラムがあります。aptitude(8) で
    "~Guse::converting" という正規表現 (「aptitude を使った探索方法」
    参照下さい) を使い次のプログラムが私の目に止まりました。

    表11.18 その他のデーター変換ツールのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプ|サイ |キーワー |              説明              |
    |   ジ    |コン| ズ  |   ド    |                                |
    |---------+----+-----+---------+--------------------------------|
    |alien    |V:2,|161  |rpm/     |外来のパッケージの Debian パッケ|
    |         |I:34|     |tgz→deb  |ージへの変換ソフト              |
    |---------+----+-----+---------+--------------------------------|
    |         |    |     |         |"Electric Book" (日本で人気) か |
    |freepwing|V:0,|421  |EB→EPWING|ら単一の JIS X 4081 フォーマット|
    |         |I:0 |     |         |(EPWING V1 のサブセット) への変 |
    |         |    |     |         |換ソフト                        |
    |---------+----+-----+---------+--------------------------------|
    |calibre  |V:9,|54876|any→EPUB |e-book コンバーターとライブラリ |
    |         |I:36|     |         |ーの管理                        |
    +---------------------------------------------------------------+


    RPM フォーマットからのデーター抽出もまた次のようにするとできます
    。

    $ rpm2cpio file.src.rpm | cpio --extract

第12章プログラミング

    Debian システム上でプログラミングを学ぶ人がパッケージ化されたソー
    スコードを読み込めるようになるための指針を示します。以下はプログ
    ラムに関する特記すべきパッケージと対応する文書パッケージです。

    表12.1 プログラミングを補助するパッケージのリスト

    +---------------------------------------------------------------+
    |  パッケージ   |ポプコ |サイ |              文書               |
    |               |  ン   | ズ  |                                 |
    |---------------+-------+-----+---------------------------------|
    |autoconf       |V:41,  |1846 |autoconf-doc が提供する "info    |
    |               |I:282  |     |autoconf                         |
    |---------------+-------+-----+---------------------------------|
    |automake       |V:42,  |1830 |automake1.10-doc が提供する "info|
    |               |I:279  |     |automake"                        |
    |---------------+-------+-----+---------------------------------|
    |bash           |V:791, |6469 |bash-doc が提供する "info bash"  |
    |               |I:999  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |bison          |V:9,   |2815 |bison-doc が提供する "info bison"|
    |               |I:103  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |cpp            |V:319, |42   |cpp-doc が提供する "info cpp"    |
    |               |I:770  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |ddd            |V:0,   |4184 |ddd-doc が提供する "info ddd"    |
    |               |I:10   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |exuberant-ctags|V:5,   |341  |exuberant-ctags(1)               |
    |               |I:37   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |flex           |V:9,   |1279 |flex-doc が提供する "info flex"  |
    |               |I:93   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |gawk           |V:368, |2558 |gawk-doc が提供する "info gawk"  |
    |               |I:454  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |gcc            |V:165, |45   |gcc-doc が提供する "info gcc"    |
    |               |I:604  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |gdb            |V:13,  |9789 |gdb-doc が提供する "info gdb"    |
    |               |I:114  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |gettext        |V:48,  |5843 |gettext-doc が提供する "info     |
    |               |I:312  |     |gettext"                         |
    |---------------+-------+-----+---------------------------------|
    |gfortran       |V:11,  |16   |gfortran-doc が提供する "info    |
    |               |I:98   |     |gfortran" (Fortran 95)           |
    |---------------+-------+-----+---------------------------------|
    |fpc            |I:3    |121  |python-doc が提供する python(1)  |
    |               |       |     |と html ページ (Pascal)          |
    |---------------+-------+-----+---------------------------------|
    |glade          |V:0,   |1730 |メニューが提供するヘルプ (UI     |
    |               |I:8    |     |Builder)                         |
    |---------------+-------+-----+---------------------------------|
    |libc6          |V:935, |12771|glibc-doc と glibc-doc-reference |
    |               |I:999  |     |が提供する "info libc"           |
    |---------------+-------+-----+---------------------------------|
    |make           |V:157, |1592 |make-doc が提供する "info make"  |
    |               |I:609  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |xutils-dev     |V:1,   |1466 |imake(1), xmkmf(1), 他           |
    |               |I:12   |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |mawk           |V:372, |242  |mawk(1)                          |
    |               |I:997  |     |                                 |
    |---------------+-------+-----+---------------------------------|
    |perl           |V:610, |705  |perl-doc と perl-doc-html が提供 |
    |               |I:992  |     |する perl(1) と html             |
    |---------------+-------+-----+---------------------------------|
    |python         |V:293, |68   |python-doc が提供する python(1)  |
    |               |I:923  |     |と html ページ                   |
    |---------------+-------+-----+---------------------------------|
    |tcl            |V:31,  |22   |tcl-doc が提供する tcl(3) と詳細 |
    |               |I:414  |     |なマンページ                     |
    |---------------+-------+-----+---------------------------------|
    |tk             |V:30,  |22   |tk-doc が提供する tk(3) と詳細な |
    |               |I:406  |     |マンページ                       |
    |---------------+-------+-----+---------------------------------|
    |ruby           |V:137, |35   |ri が提供する ruby(1) と詳細なマ |
    |               |I:318  |     |ンページ                         |
    |---------------+-------+-----+---------------------------------|
    |vim            |V:106, |3231 |vim-doc が提供するヘルプ (F1) メ |
    |               |I:398  |     |ニュー                           |
    |---------------+-------+-----+---------------------------------|
    |susv2          |I:0    |16   |"The Single UNIX Specifications  |
    |               |       |     |v2" を取得                       |
    |---------------+-------+-----+---------------------------------|
    |susv3          |I:0    |16   |"The Single UNIX Specifications  |
    |               |       |     |v3" を取得                       |
    +---------------------------------------------------------------+


    オンラインリファレンスは manpages と manpages-dev パッケージをイ
    ンストールした後で "man name" とタイプすると利用可能です。GNU ツ
    ールのオンラインリファレンスは該当する文書パッケージをインストー
    ルした後で "info program_name" とタイプすると使えます。一部の
    GFDL 文書は DFSG に準拠していないと考えられているので main アーカ
    イブに加えて contrib や non-free アーカイブを含める必要があるかも
    しれません。

    警告
   
    "test" を実行可能なテストファイルの名前に用いてはいけません。
    "test" はシェルのビルトインです。

    注意

    ソースから直接コンパイルしたソフトウエアープログラムは、システム
    プログラムとかち合わないように、"/usr/local" か "/opt" の中にイン
    ストールします。

    ヒント
   
    "99ボトルのビールの歌" 作成のコード例はほとんど全てのプログラム言
    語に関する理解のための非常に好適です。

%

12.1. シェルスクリプト

    シェルスクリプトは実行ビットがセットされたテキストファイルで、以
    下に示すフォーマットのコマンドを含んでいます。

    #!/bin/sh
     ... コマンド行

    最初の行はこのファイル内容を読み実行するシェルインタープリタを指
    定します。

    シェルスクリプトを読むのは Unix 的なシステムがどのように機能して
    いるのかを理解する最良の方法です。ここでは、シェルプログラムに関
    する指針や心がけを記します。失敗から学ぶために "シェルの失敗"
    (http://www.greenend.org.uk/rjk/2001/04/shell.html) を参照下さい
    。

    シェル対話モード (「シェルプロンプト」と「Unix 的テキスト処理」参
    照下さい) と異なり、シェルスクリプトは変数や条件文やループを繁用
    します。

%

12.1.1. POSIX シェル互換性

    多くのシステムスクリプトは POSIX シェル (表1.13「シェルプログラム
    のリスト」参照下さい) のどれで解釈されるか分かりません。システム
    のデフォールトシェルは実際のプログラムをさしているシムリンクであ
    る "/bin/sh" です。

      * bash(1)、lenny 以前の場合
   
      * dash(1)、squeeze 以降の場合

    全ての POSIX シェル間でポータブルとするために bashisms や zshisms
    を使うシェルスクリプトを書くのを避けましょう。checkbashisms(1) を
    使うとこれがチェックできます。

    表12.2 典型的 bashizms のリスト

    +---------------------------------------------------------------+
    |          推薦: POSIX          |      回避すべき: bashism      |
    |-------------------------------+-------------------------------|
    |if [ "$foo" = "$bar" ] ; then …|if [ "$foo" == "$bar" ] ; then |
    |                               |…                              |
    |-------------------------------+-------------------------------|
    |diff -u file.c.orig file.c     |diff -u file.c{.orig,}         |
    |-------------------------------+-------------------------------|
    |mkdir /foobar /foobaz          |mkdir /foo{bar,baz}            |
    |-------------------------------+-------------------------------|
    |funcname() { … }               |function funcname() { … }      |
    |-------------------------------+-------------------------------|
    |8進表記: "\377"                |16進表記: "\xff"               |
    +---------------------------------------------------------------+


    "echo" コマンドはその実装がシェルビルトインや外部コマンド間で相違
    しているので次の注意点を守って使わなければいけません。

      * "-n" 以外のどのコマンドオプション使用も避けます。
   
      * 文字列中にエスケープシーケンスはその取扱いに相違があるので使
        用を避けます。

    注記
   
    "-n" オプションは実は POSIX シンタックスではありませんが、一般的
    に許容されています。

    ヒント
   
    出力文字列にエスケープシーケンスを埋め込む必要がある場合には、
    "echo" コマンドの代わりに "printf" コマンドを使います。

%

12.1.2. シェル変数

    特別なシェルパラメーターがシェルスクリプト中ではよく使われます。

    表12.3 シェル変数のリスト

    +-------------------------------------------------------+
    |シェル変数|                   変数値                   |
    |----------+--------------------------------------------|
    |$0        |シェルまたはシェルスクリプトの名前          |
    |----------+--------------------------------------------|
    |$1        |最初 (1番目) のシェル引数                   |
    |----------+--------------------------------------------|
    |$9        |9番目のシェル引数                           |
    |----------+--------------------------------------------|
    |$#        |シェル引数の数                              |
    |----------+--------------------------------------------|
    |"$*"      |"$1 $2 $3 $4 … "                            |
    |----------+--------------------------------------------|
    |"$@"      |"$1" "$2" "$3" "$4" …                       |
    |----------+--------------------------------------------|
    |$?        |最近実行のコマンドの終了状態                |
    |----------+--------------------------------------------|
    |$$        |このシェルスクリプトの PID                  |
    |----------+--------------------------------------------|
    |$!        |最近スタートしたバックグラウンドジョブの PID|
    +-------------------------------------------------------+


    覚えておくべき基本的なパラメーター展開を次に記します。

    表12.4 シェル変数展開のリスト

    +---------------------------------------------------------------+
    |パラメーター |var が設定されて| var が設定されていなければの値 |
    |    式形     |   いればの値   |                                |
    |-------------+----------------+--------------------------------|
    |$            |"$var"          |"string"                        |
    |{var:-string}|                |                                |
    |-------------+----------------+--------------------------------|
    |$            |"string"        |"null"                          |
    |{var:+string}|                |                                |
    |-------------+----------------+--------------------------------|
    |${var:=      |"$var"          |"string" (合わせて "var=string" |
    |string}      |                |を実行)                         |
    |-------------+----------------+--------------------------------|
    |${var:?      |"$var"          |"string" をstderr に出力 (エラー|
    |string}      |                |とともに exit する)             |
    +---------------------------------------------------------------+


    ここで、これら全てのオペレーターのコロン ":" は実際はオプションで
    す。

      * ":" 付き = 存在と非ヌル文字列をテストするオペレータ
   
      * ":" 無し = 存在のみをテストするオペレータ

    表12.5 重要なシェル変数置換のリスト

    +---------------------------------------------------+
    |パラメーター置換形|              結果              |
    |------------------+--------------------------------|
    |${var%suffix}     |最短のサフィクスパターンを削除  |
    |------------------+--------------------------------|
    |${var%%suffix}    |最長のサフィクスパターンを削除  |
    |------------------+--------------------------------|
    |${var#prefix}     |最短のプリフィクスパターンを削除|
    |------------------+--------------------------------|
    |${var##prefix}    |最長のプリフィクスパターンを削除|
    +---------------------------------------------------+


%

12.1.3. シェル条件式

    各コマンドは条件式に使えるエグジットステイタスを返します。

      * 成功: 0 ("真")
   
      * エラー: 非0 ("偽")

    注記
   
    シェル条件文の文脈中の "0" は "真" を意味します、一方 C 条件文の
    文脈中の "0" は "偽" を意味します。

    注記
   
    "[" は、"]" までの引数を条件式として評価する、test コマンドと等価
    です。

    覚えておくべき基本的な条件文の慣用句は次です。

      * "<command> && <成功したらこのcommandも実行> || true"

      * "<command> || <もしcommandが成功しないとこのコマンドも実行> |
        | true"

      * 次のようなマルチラインスクリプト断片

    if [ <条件式> ]; then
     <成功ならこのコマンドを実行>
    else
     <成功でないならこのコマンドを実行>
    fi

    ここで、シェルスクリプトが "-e" フラグ付きで起動された際にシェル
    スクリプトがこの行で exit しないようにするために末尾の "|| true"
    が必要です。

    表12.6 条件式中のファイル比較オペレーター

    +---------------------------------------------------------------+
    |        式        |              論理真を返す条件              |
    |------------------+--------------------------------------------|
    |-e <file>         |<file> 存在する                             |
    |------------------+--------------------------------------------|
    |-d <file>         |<file> 存在しディレクトリーである           |
    |------------------+--------------------------------------------|
    |-f <file>         |<file> 存在し通常ファイルである             |
    |------------------+--------------------------------------------|
    |-w <file>         |<file> 存在し書込み可                       |
    |------------------+--------------------------------------------|
    |-x <file>         |<file> 存在し実行可                         |
    |------------------+--------------------------------------------|
    |<file1> -nt       |<file1> は <file2> より新しい (変更)        |
    |<file2>           |                                            |
    |------------------+--------------------------------------------|
    |<file1> -ot       |<file1> は <file2> より古い (変更)          |
    |<file2>           |                                            |
    |------------------+--------------------------------------------|
    |<file1> -ef       |<file1> と <file2> は同デバイス上の同 inode |
    |<file2>           |番号                                        |
    +---------------------------------------------------------------+


    表12.7 条件式中での文字列比較オペレータのリスト

    +------------------------------------------------------+
    |       式       |          論理真を返す条件           |
    |----------------+-------------------------------------|
    |-z <str>        |<str> の長さがゼロ                   |
    |----------------+-------------------------------------|
    |-n <str>        |<str> の長さが非ゼロ                 |
    |----------------+-------------------------------------|
    |<str1> = <str2> |<str1> と <str2> は等しい            |
    |----------------+-------------------------------------|
    |<str1> != <str2>|<str1> と <str2> は等しく無い        |
    |----------------+-------------------------------------|
    |<str1> < <str2> |<str1> は<str2> より前 (ロケール依存)|
    |----------------+-------------------------------------|
    |<str1> > <str2> |<str1> は<str2> より後 (ロケール依存)|
    +------------------------------------------------------+


    条件式中の算術整数比較演算子は "-eq" と "-ne" と "-lt" と "-le"
    と "-gt" と "-ge" です。

%

12.1.4. シェルループ

    POSIX シェル中で使われるループの慣用句があります。

      * "for x in foo1 foo2 … ; do コマンド ; done" は"foo1 foo2 …"
        リストの項目を変数 "x" にアサインし "コマンド" を実行してルー
        プします。

      * "while 条件 ; do コマンド ; done" は"条件" が真の場合 "コマン
        ド" を繰り返します。
   
      * "until 条件 ; do コマンド ; done" は"条件" が真でない場合 "コ
        マンド" を繰り返します。

      * "break" に出会うと、ループからの脱出が出来ます。

      * "continue" に出会うと、次のループ初めに戻りループを再開します
        。

    ヒント
   
    C 言語のような数字の繰り返しは "foo1 foo2 ..." 生成に seq(1) 使っ
    て実現します。

    ヒント
   
    「ファイルに関してループしながらコマンドを反復実行」を参照下さい
    。

%

12.1.5. シェルコマンドライン処理シーケンス

    シェルはおおよそ次のシーケンスでスクリプトを処理します。

      * シェルは1行読み込みます。

      * シェルは、もし "…" や '…' の中なら、行の一部を1つのトークンと
        してグループします。

      * シェルは1行を次のによってトークンに分割します。

          + 空白: <space> <tab> <newline>

          + メタ文字: < > | ; & ( )

      * シェルは、もし "…" や '…' の中でないなら、各トークンを予約語
        に対してチェックしその挙動を調整します。

          + 予約語: if then elif else fi for in while unless do done
            case esac

      * シェルは、もし "…" や '…' の中でないなら、エリアスを展開しま
        す。

      * シェルは、もし"…"や'…'の中でないなら、ティルドを展開します。

          + "~" → 現ユーザーのホームディレクトリー

          + "~<user>" → <user> のホームディレクトリー

      * シェルは、もし '…' の中でないなら、パラメーター"をその値に展
        開します。

          + パラメーター: "$PARAMETER" or "${PARAMETER}"

      * シェルは、もし '…' の中でないなら、コマンドの置き換えを展開し
        ます。

          + "$( command )" → "command" の出力

          + "` command `" → "command" の出力

      * シェルは、もし "…" や '…' の中でないなら、パス名のグロブを展
        開します。

          + * → いかなる文字

          + ? → 1文字

          + […] → "…" 中の1つ

      * シェルはコマンドを次から検索して実行します。

          + 関数定義

          + ビルトインコマンド

          + "$PATH" 中の実行ファイル

      * シェルは次行に進みこのプロセスを一番上から順に反復します。

    ダブルクォートの中のシングルクォートは特段の効果はありません。

    シェル環境中で "set -x" を実行したり、シェルを "-x" オプションで
    起動すると、シェルは実行するコマンドを全てプリントするようになり
    ます。これはデバグをするのに非常に便利です。

%

12.1.6. シェルスクリプトのためのユーティリティープログラム

    Debian システム上でできるだけポータブルなシェルプログラムとするに
    は、ユーティリティープログラムを essential パッケージで提供される
    プログラムだけに制約するのが賢明です。

      * "aptitude search ~E" はessential (必須) パッケージをリストし
        ます。
   
      * "dpkg -L <パッケージ名> |grep '/man/man.*/'" は <パッケージ
        名> パッケージによって提供されるコマンドのマンページをリスト
        します。

    表12.8 シェルスクリプト用の小さなユーティリティープログラムを含む
    パッケージのリスト

    +---------------------------------------------------------------+
    | パッケージ | ポプコン |サイ |              説明               |
    |            |          | ズ  |                                 |
    |------------+----------+-----+---------------------------------|
    |coreutils   |V:891,    |17478|GNU コアユーティリティー         |
    |            |I:999     |     |                                 |
    |------------+----------+-----+---------------------------------|
    |debianutils |V:925,    |230  |Debian 限定の雑ユーティリティー  |
    |            |I:999     |     |                                 |
    |------------+----------+-----+---------------------------------|
    |bsdmainutils|V:60,     |26   |FreeBSD 由来の追加ユーティリティ |
    |            |I:996     |     |ー集                             |
    |------------+----------+-----+---------------------------------|
    |bsdutils    |V:673,    |393  |4.4BSD-Lite 由来の基本ユーティリ |
    |            |I:999     |     |ティー                           |
    |------------+----------+-----+---------------------------------|
    |moreutils   |V:11, I:35|237  |追加の Unix ユーティリティー     |
    +---------------------------------------------------------------+


    ヒント

    moreutils は Debian の外では存在しないかも知れませんが、興味深い
    小さなプログラムを提供します。もっとも特記すべきは、オリジナルフ
    ァイルを上書きしたいときに非常に有効な sponge(8) です。

%

12.1.7. シェルスクリプトダイアログ

    簡単なシェルプログラムのユーザーインターフェースは、echo や read
    コマンドを使った退屈な相互作用からいわゆる対話 (dialog) プログラ
    ム等の一つを使うことでよりよい相互作用になります。

    表12.9 ユーザーインターフェースプログラムのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプコ|サイ|                  説明                   |
    |   ジ    |  ン  | ズ |                                         |
    |---------+------+----+-----------------------------------------|
    |x11-utils|V:180,|712 |xmessage(1): window 中にメッセージや質問 |
    |         |I:599 |    |を表示 (X)                               |
    |---------+------+----+-----------------------------------------|
    |whiptail |V:87, |71  |シェルスクリプトからユーザーフレンリーな |
    |         |I:995 |    |ダイアログボックスを表示 (newt)          |
    |---------+------+----+-----------------------------------------|
    |dialog   |V:15, |1222|シェルスクリプトからユーザーフレンリーな |
    |         |I:123 |    |ダイアログボックスを表示 (ncurses)       |
    |---------+------+----+-----------------------------------------|
    |zenity   |V:87, |384 |シェルスクリプトからグラフィカルなダイア |
    |         |I:409 |    |ログボックスを表示 (gtk2.0)              |
    |---------+------+----+-----------------------------------------|
    |         |V:0,  |    |シェルスクリプトフロントエンドツール     |
    |ssft     |I:0   |75  |(gettext を使った zenity や kdialog や   |
    |         |      |    |dialog のラッパー)                       |
    |---------+------+----+-----------------------------------------|
    |gettext  |V:48, |5843|"/usr/bin/gettext.sh": メッセージ翻訳    |
    |         |I:312 |    |                                         |
    +---------------------------------------------------------------+


%

12.1.8. zenity を使うシェルスクリプト例

    dvdisaster(1) によって RS02 データーを補足した ISO イメージを生成
    する簡単なスクリプトの例を次に示します。

    #!/bin/sh -e
    # gmkrs02 : Copyright (C) 2007 Osamu Aoki <osamu@debian.org>, Public Domain
    #set -x
    error_exit()
    {
      echo "$1" >&2
      exit 1
    }
    # Initialize variables
    DATA_ISO="$HOME/Desktop/iso-$$.img"
    LABEL=$(date +%Y%m%d-%H%M%S-%Z)
    if [ $# != 0 ] && [ -d "$1" ]; then
      DATA_SRC="$1"
    else
      # Select directory for creating ISO image from folder on desktop
      DATA_SRC=$(zenity --file-selection --directory  \
        --title="Select the directory tree root to create ISO image") \
        || error_exit "Exit on directory selection"
    fi
    # Check size of archive
    xterm -T "Check size $DATA_SRC" -e du -s $DATA_SRC/*
    SIZE=$(($(du -s $DATA_SRC | awk '{print $1}')/1024))
    if [ $SIZE -le 520 ] ; then
      zenity --info --title="Dvdisaster RS02" --width 640  --height 400 \
        --text="The data size is good for CD backup:\\n $SIZE MB"
    elif [ $SIZE -le 3500 ]; then
      zenity --info --title="Dvdisaster RS02" --width 640  --height 400 \
        --text="The data size is good for DVD backup :\\n $SIZE MB"
    else
      zenity --info --title="Dvdisaster RS02" --width 640  --height 400 \
        --text="The data size is too big to backup : $SIZE MB"
      error_exit "The data size is too big to backup :\\n $SIZE MB"
    fi
    # only xterm is sure to have working -e option
    # Create raw ISO image
    rm -f "$DATA_ISO" || true
    xterm -T "genisoimage $DATA_ISO" \
      -e genisoimage -r -J -V "$LABEL" -o "$DATA_ISO" "$DATA_SRC"
    # Create RS02 supplemental redundancy
    xterm -T "dvdisaster $DATA_ISO" -e  dvdisaster -i "$DATA_ISO" -mRS02 -c
    zenity --info --title="Dvdisaster RS02" --width 640  --height 400 \
      --text="ISO/RS02 data ($SIZE MB) \\n created at: $DATA_ISO"
    # EOF

    デスクトップに "/usr/local/bin/gmkrs02 %d" のようなコマンド設定を
    したローンチャを作るのも面白いかもしれません。

%

12.2. Make

    Make はプログラムのグループを管理するためのユーティリティーです。
    make(1) を実行すると、make は"Makefile" というルールファイルを読
    み、ターゲットが最後に変更された後で変更された前提ファイルにター
    ゲットが依存している場合やターゲットが存在しない場合にはターゲッ
    トを更新します。このような更新は同時並行的にされるかもしれません
    。

    ルールファイルのシンタックスは次です。

    ターゲット: [ 前提 ... ]
     [TAB]  command1
     [TAB]  -command2 # エラー無視
     [TAB]  @command3 # エコー抑制

    上記で、"[TAB]" は TAB コードです。各行は make による変数置換後シ
    ェルによって解釈されます。スクリプトを継続する行末には "\" を使い
    ます。シェルスクリプトの環境変数のための "$" を入力するためには
    "$$" を使います。

    ターゲットや前提に関するインプリシット (暗黙) ルールは、例えば次
    のように書けます。

    %.o: %.c header.h

    上記で、ターゲットは "%" という文字を (1つだけ) 含んでいます。"%"
    は実際のターゲットファイル名の空でないいかなる部分文字列ともマッ
    チします。前提もまた同様にそれらの名前が実際のターゲットファイル
    名にどう関連するかを示すために "%" を用いることができます。

    表12.10 make の自動変数のリスト

    +---------------------------------------------------+
    |自動変数|                  変数値                  |
    |--------+------------------------------------------|
    |$@      |ターゲット                                |
    |--------+------------------------------------------|
    |$<      |最初の前提条件                            |
    |--------+------------------------------------------|
    |$?      |全ての新規の前提条件                      |
    |--------+------------------------------------------|
    |$^      |全ての前提条件                            |
    |--------+------------------------------------------|
    |$*      |"%" はターゲットパターンの軸にマッチします|
    +---------------------------------------------------+


    表12.11 make 変数の展開のリスト

    +--------------------------+
    | 変数展開  |     説明     |
    |-----------+--------------|
    |foo1 := bar|一回だけの展開|
    |-----------+--------------|
    |foo2 = bar |再帰的展開    |
    |-----------+--------------|
    |foo3 += bar|後ろに追加    |
    +--------------------------+


    "make -p -f/dev/null" を実行して自動的な内部ルールを確認下さい。

%

12.3. C

    C プログラム言語で書かれたプログラムをコンパイルする適正な環境を
    次のようにして設定できます。

    # apt-get install glibc-doc manpages-dev libc6-dev gcc build-essential

    GNU C ライブラリーパッケージである libc6-dev パッケージは、C プロ
    グラム言語で使われるヘッダーファイルやライブラリールーチンの集合
    である C 標準ライブラリーを提供します。

    C のリファレンスは以下を参照下さい。

      * "info libc" (C ライブラリー関数リファレンス)

      * gcc(1) と "info gcc"
   
      * 各 C ライブラリー関数名(3)

      * Kernighan & Ritchie 著, "The C Programming Language", 第2版
        (Prentice Hall)

%

12.3.1. 単純な C プログラム (gcc)

    簡単な例の "example.c" は"libm" ライブラリーを使って実行プログラ
    ム "run_example" に次のようにしてコンパイル出来ます。

    $ cat > example.c << EOF
    #include <stdio.h>
    #include <math.h>
    #include <string.h>

    int main(int argc, char **argv, char **envp){
            double x;
            char y[11];
            x=sqrt(argc+7.5);
            strncpy(y, argv[0], 10); /* prevent buffer overflow */
            y[10] = '\0'; /* fill to make sure string ends with '\0' */
            printf("%5i, %5.3f, %10s, %10s\n", argc, x, y, argv[1]);
            return 0;
    }
    EOF
    $ gcc -Wall -g -o run_example example.c -lm
    $ ./run_example
            1, 2.915, ./run_exam,     (null)
    $ ./run_example 1234567890qwerty
            2, 3.082, ./run_exam, 1234567890qwerty

    ここで、"-lm" はsqrt(3) のために libc6 パッケージで提供されるライ
    ブラリー "/usr/lib/libm.so" をリンクするのに必要です。実際のライ
    ブラリーは "/lib/" 中にあるファイル名 "libm.so.6" で、それは
    "libm-2.7.so" にシムリンクされています。

    出力テキスト中の最後のパラメーターを良く見ましょう。"%10s" が指定
    されているにもかかわらず10文字以上あります。

    上記のオーバーラン効果を悪用するバッファーオーバーフロー攻撃を防
    止のために、sprintf(3) や strcpy(3) 等の境界チェック無しのポイン
    ターメモリー操作関数の使用は推奨できません。これに代えて snprintf
    (3) や strncpy(3) を使います。

%

12.4. デバグ

    デバグは重要なプログラム活動です。プログラムのデバグをどうしてす
    るかを知っていることで、あなたも意味あるバグリポートを作成できる
    良い Debian ユーザーになれます。

%

12.4.1. 基本的な gdb 実行

    Debian 上の第一義的デバッガは、実行中のプログラムを検査できるよう
    にする gdb(1) です。

    gdb と関連プログラムを次のようにインストールしましょう。

    # apt-get install gdb gdb-doc build-essential devscripts

    gdb の良い入門書は "info gdb" とかネット上に色々あります。次は 
    gdb(1) を"-g" を使ってデバグ情報を付けてコンパイルされた
    "program" に使う簡単な例です。

    $ gdb program
    (gdb) b 1                # set break point at line 1
    (gdb) run args           # run program with args
    (gdb) next               # next line
    ...
    (gdb) step               # step forward
    ...
    (gdb) p parm             # print parm
    ...
    (gdb) p parm=12          # set value to 12
    ...
    (gdb) quit

    ヒント
   
    多くの gdb(1) コマンドは省略できます。タブ展開はシェル同様に機能
    します。

%

12.4.2. Debian パッケージのデバグ

    Debian システムではインストールされたバイナリーはデフォールトでス
    トリップされているべきなので、通常のパッケージではほとんどのデバ
    グシンボルが削除されています。gdb(1) を使って Debian パッケージを
    デバグするには、対応する *-dbg か *-dbgsym パッケージをインストー
    ルする必要があります (例えば libc6 の場合 libc6-dbg、coreutils の
    場合 coreutils-dbgsym)。

    旧スタイルのパッケージは、対応する *-dbg パッケージを提供します。
    それは Debian の main アーカイブとの中に通常のパッケージと一緒に
    置かれます。新スタイルのパッケージは場合によってはビルド時に
    *-dbgsym パッケージを自動生成し、それらのデバグパッケージは別にし
    て debian-debug アーカイブに置きます。詳細は Debian Wiki の記事を
    参照ください。

    デバグしようとしているパッケージに *-dbg パッケージもその
    *-dbgsym パッケージも無い場合は、次のようにしてリビルドした後でイ
    ンストールする必要があります。

    $ mkdir /path/new ; cd /path/new
    $ sudo apt-get update
    $ sudo apt-get dist-upgrade
    $ sudo apt-get install fakeroot devscripts build-essential
    $ apt-get source package_name
    $ cd package_name*
    $ sudo apt-get build-dep ./

    必要に応じてバグを修正します。

    例えば次のように、既存パッケージを再コンパイルする時は "+debug1"
    を後ろに付けたり、リリース前のパッケージをコンパイルする時は
    "~pre1" を後ろに付けたりと、正規の Debian バージョンとかち合わな
    いようにパッケージバージョンを増やします。

    $ dch -i

    次のようにしてデバグシンボル付きでパッケージをコンパイルしてイン
    ストールします。

    $ export DEB_BUILD_OPTIONS="nostrip noopt"
    $ debuild
    $ cd ..
    $ sudo debi package_name*.changes

    パッケージのビルドスクリプトを確認して、バイナリーのコンパイルに
    確実に "CFLAGS=-g -Wall" が使われているようにします。

%

12.4.3. バックトレースの収集

    プログラムがクラッシュするのに出会った場合に、バックトレース情報
    をバグレポートに切り貼りして報告するのは良い考えです。

    バックトレースは次のような段取りで得られます。

      * gdb(1) の下でプログラム実行します。

      * クラッシュを再現します。
   
          + gdb プロンプトに落ちて戻るようになります。

      * gdb プロンプトで "bt" とタイプします。

    プログラムがフリーズした場合には、gdb を実行しているターミナルで
    Ctrl-C を押すことでプログラムをクラッシュさせて gdb プロンプトが
    得られます。

    ヒント

    しばしば、一番上数行が "malloc()" か "g_malloc()" 中にあるバック
    トレースを見かけます。こういったことが起こる場合は、大体あまりあ
    なたのバックトレースは役に立ちません。有用な情報を見つけるもっと
    も簡単な方法は環境変数 "$MALLOC_CHECK_" の値を 2と設定することで
    す (malloc(3))。gdb を実行しながらこれを実行するには次のようにし
    ます。

     $ MALLOC_CHECK_=2 gdb hello

%

12.4.4. 上級 gdb コマンド

    表12.12 上級 gdb コマンドのリスト

    +---------------------------------------------------------------+
    |     コマンド      |            コマンド目的の説明             |
    |-------------------+-------------------------------------------|
    |(gdb) thread apply |マルチスレッドプログラムの全てのスレッドの |
    |all bt             |バックトレースを取得                       |
    |-------------------+-------------------------------------------|
    |(gdb) bt full      |関数コールのスタック上に来たパラメーターを |
    |                   |取得                                       |
    |-------------------+-------------------------------------------|
    |(gdb) thread apply |異常のオプションの組み合わせでバックトレー |
    |all bt full        |スとパラメーターを取得                     |
    |-------------------+-------------------------------------------|
    |(gdb) thread apply |無関係の出力を切り最後の10のコールに関する |
    |all bt full 10     |バックトレースとパラメーターを取得         |
    |-------------------+-------------------------------------------|
    |(gdb) set logging  |gdb アウトプットをファイルに書き出す (デフ |
    |on                 |ォールトは "gdb.txt")                      |
    +---------------------------------------------------------------+


%

12.4.5. X エラーのデバグ

    GNOME プログラム preview1 が X エラーを受けると、次のようなメッセ
    ージが見つかります。

    The program 'preview1' received an X Window System error.

    このような場合には、プログラムを "--sync" 付きで実行して、バック
    トレースを得るために "gdk_x_error" 関数上で停止するようにしてみま
    しょう。

%

12.4.6. ライブラリーへの依存の確認

    次のように ldd(1) を使ってプログラムのライブラリーへの依存関係を
    みつけだします。

    $ ldd /bin/ls
            librt.so.1 => /lib/librt.so.1 (0x4001e000)
            libc.so.6 => /lib/libc.so.6 (0x40030000)
            libpthread.so.0 => /lib/libpthread.so.0 (0x40153000)
            /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)

    `chroot` された環境下で ls(1) が機能するには、上記ライブラリーが
    あなたの `chroot` された環境内で利用可能である必要があります。

    「プログラム活動の追跡」を参照下さい。

%

12.4.7. メモリーリーク検出ツール

    Debian にはメモリーリークを検出するプログラムがいくつか利用可能で
    す。

    表12.13 メモリーリーク検出ツールのリスト

    +---------------------------------------------------------------+
    |  パッケージ  |ポプコン |サイ |              説明              |
    |              |         | ズ  |                                |
    |--------------+---------+-----+--------------------------------|
    |libc6-dev     |V:249,   |14357|mtrace(1): glibc 中の malloc デ |
    |              |I:620    |     |バッグ機能                      |
    |--------------+---------+-----+--------------------------------|
    |valgrind      |V:6, I:46|80378|メモリーデバッガとプロファイラ  |
    |--------------+---------+-----+--------------------------------|
    |electric-fence|V:0, I:5 |70   |malloc(3) デバッガ              |
    |--------------+---------+-----+--------------------------------|
    |leaktracer    |V:0, I:3 |57   |C++ プログラム用のメモリーリーク|
    |              |         |     |追跡ソフト                      |
    |--------------+---------+-----+--------------------------------|
    |libdmalloc5   |V:0, I:3 |393  |メモリーアロケーションのデバグ用|
    |              |         |     |ライブラリー                    |
    +---------------------------------------------------------------+


%

12.4.8. 静的コード分析ツール

    静的コード分析用の lint のようなツールがあります。

    表12.14 静的コード分析ツールのリスト

    +---------------------------------------------------------------+
    | パッケージ  |ポプコ |サイ|                説明                |
    |             |  ン   | ズ |                                    |
    |-------------+-------+----+------------------------------------|
    |splint       |V:0,   |2315|C プログラムを静的にバグのチェックす|
    |             |I:4    |    |るためのツール                      |
    |-------------+-------+----+------------------------------------|
    |flawfinder   |V:0,   |181 |C/C++ ソースコードを検査してセキュリ|
    |             |I:0    |    |ティーの脆弱性を探すツール          |
    |-------------+-------+----+------------------------------------|
    |perl         |V:610, |705 |静的コードチェックソフト付きのインタ|
    |             |I:992  |    |ープリタ: B::Lint(3perl)            |
    |-------------+-------+----+------------------------------------|
    |pylint       |V:2,   |1371|Python コード静的チェックソフト     |
    |             |I:13   |    |                                    |
    |-------------+-------+----+------------------------------------|
    |weblint-perl |V:0,   |32  |HTML 用のシンタックス最小限の文体チ |
    |             |I:1    |    |ェックソフト                        |
    |-------------+-------+----+------------------------------------|
    |linklint     |V:0,   |344 |高速リンクチェックソフトとウェッブサ|
    |             |I:0    |    |イトメンテツール                    |
    |-------------+-------+----+------------------------------------|
    |libxml2-utils|V:22,  |182 |XML ファイルを検証する xmllint(1) を|
    |             |I:246  |    |含むユーティリティー                |
    +---------------------------------------------------------------+


%

12.4.9. バイナリーのディスアッセンブリー

    次のように objdump(1) を使ってバイナリーコードをディスアッセンブ
    ルできます。

    $  objdump -m i386 -b binary -D /usr/lib/grub/x86_64-pc/stage1

    注記
   
    gdb(1) は対話的にコードをディスアッセンブルするのに使えます。

%

12.5. Flex — 改良版 Lex

    Flex はLex 互換の高速字句解析生成ソフトです。

    flex(1) の入門書は "info flex" の中にあります。

    自分で作った "main()" と "yywrap()" を供給する必要があります。そ
    うでない場合にはあなたの flex プログラムは次のようでなければライ
    ブラリー無しにコンパイル出来ません。これというのは "yywrap" はマ
    クロで、"%option main" とすると "%option noyywrap" が暗示的に有効
    になるからです。

    %option main
    %%
    .|\n    ECHO ;
    %%

    上記の代わりにとして、cc(1) のコマンドラインの最後に (ちょうど AT
    &T-Lex が"-ll" 付きであるように) "-lfl" リンカーオプションを使い
    コンパイルすることが出来ます。この場合、"%option" は必要なくなり
    ます。

%

12.6. Bison — 改良版 Yacc

    Yacc 互換の前方参照可能な LR パーサーとか LALR パーサー生成ソフト
    は、いくつかのパッケージによって Debian 上で提供されています。

    表12.15 Yacc 互換の LALR パーサー生成ソフトのリスト

    +---------------------------------------------------------------+
    |パッケ |ポプコ |サイ|                   説明                   |
    | ージ  |  ン   | ズ |                                          |
    |-------+-------+----+------------------------------------------|
    |bison  |V:9,   |2815|GNU LALR パーサー生成ソフト               |
    |       |I:103  |    |                                          |
    |-------+-------+----+------------------------------------------|
    |byacc  |V:0,   |160 |Berkeley LALR パーサー生成ソフト          |
    |       |I:6    |    |                                          |
    |-------+-------+----+------------------------------------------|
    |btyacc |V:0,   |243 |byacc に基づいたバックトラッキング機能付き|
    |       |I:0    |    |パーサー生成ソフト                        |
    +---------------------------------------------------------------+


    bison(1) の入門書は "info bison" の中にあります。

    あなた自身の "main()" と "yyerror()" を供給する必要があります。
    "main()" は、しばしば Flex によって提供される "yylex()" を呼び出
    す "yyparse()" を呼び出します。

%

12.7. Autoconf

    Autoconf は自動的にソフトウエアーのソースコードパッケージを GNU
    のビルドシステムを使って種々様々な Unix 的システムに適応させるた
    めのシェルスクリプトを作成するツールです。

    autoconf(1) は"configure" という設定プログラムを作成します。
    "configure" は"Makefile.in" を雛形として使って自動的にカスタム化
    した "Makefile" を作成します。

%

12.7.1. プログラムをコンパイルとインストール

    警告
   
    システムファイルをあなたがコンパイルしたプログラムでインストール
    する時に上書きしてはいけません。

    Debian は"/usr/local/" とか "/opt" 中のファイルに触れません。プロ
    グラムをソースからコンパイルする場合、Debian とかち合わないように
    それを "/usr/local/" の中にインストールします。

    $ cd src
    $ ./configure --prefix=/usr/local
    $ make
    $ make install # this puts the files in the system

%

12.7.2. プログラムのアンインストール

    オリジナルのソースを保有し、それが autoconf(1)/automake(1) と使用
    しあなたがそれをどう設定したかを覚えているなら、次のように実行し
    てソフトウエアーをアンイストールします。

    $ ./configure ''all-of-the-options-you-gave-it''
    # make uninstall

    この代わりに、"/usr/local/" の下にだけインストールプロセスがファ
    イルを置いたことが絶対に確実でそこに重要なものが無いなら、次のよ
    うにしてその内容を消すことが出来ます。

    # find /usr/local -type f -print0 | xargs -0 rm -f

    どこにファイルがインストールされるか良く分からない場合には、
    checkinstall パッケージにある checkinstall(8) を使いアンインスト
    ールする場合クリーンなパスとなるようにすることを考えましょう。こ
    れは "-D" オプションを使うと Debian パッケージを作成できます。

%

12.8. 究極の短い Perl スクリプト

    どんな AWK スクリプトでも a2p(1) を使えば自動的に Perl に書き換え
    られますが、1行 AWK スクリプトから1行 Perl スクリプトへの変換は手
    動変換するのが最良です。

    次の AWK スクリプト断片を考えます。

    awk '($2=="1957") { print $3 }' |

    これは次の数行のどれとも等価です。

    perl -ne '@f=split; if ($f[1] eq "1957") { print "$f[2]\n"}' |

    perl -ne 'if ((@f=split)[1] eq "1957") { print "$f[2]\n"}' |

    perl -ne '@f=split; print $f[2] if ( $f[1]==1957 )' |

    perl -lane 'print $F[2] if $F[1] eq "1957"' |

    perl -lane 'print$F[2]if$F[1]eq+1957' |

    最後のスクリプトは謎々状態です。Perl の次の機能を利用しています。

      * ホワイトスペースはオプション。
   
      * 数字から文字列への自動変換が存在します。

    コマンドラインオプションに関しては perlrun(1) を参照下さい。もっ
    とクレージーな Perl スクリプトに関しては、Perl ゴルフが面白いです
    。

%

12.9. ウェッブ

    基本的な対話式動的ウェッブページは次のようにして作られます。

      * 質問 (クエリー) はブラウザーのユーザーに HTML フォームを使っ
        て提示されます。

      * フォームのエントリーを埋めたりクリックすることによって次の符
        号化されたパラメーター付きの URL 文字列をブラウザーからウェッ
        ブサーバーに送信します。

          + "http://www.foo.dom/cgi-bin/program.pl?VAR1=VAL1&VAR2=
            VAL2&VAR3=VAL3"

          + "http://www.foo.dom/cgi-bin/program.py?VAR1=VAL1&VAR2=
            VAL2&VAR3=VAL3"
   
          + "http://www.foo.dom/program.php?VAR1=VAL1&VAR2=VAL2&VAR3=
            VAL3"

      * URL 中の "%nn" は16進数で nn の値の文字と置き換えられます。

      * 環境変通は次のように設定されます: "QUERY_STRING="VAR1=VAL1
        VAR2=VAL2 VAR3=VAL3"".

      * ウェッブサーバー上の CGI プログラム ("program.*" のいずれで
        も) が環境変数 "$QUERY_STRING" とともに起動されます。

      * CGI プログラムの STDOUT (標準出力) がウエブブラウザーに送られ
        対話式の動的なウェッブページとして表示されます。

    セキュリティー上、CGI パラメーターを解釈する手作りの急ごしらえの
    プログラムは作らない方が賢明です。Perl や Python にはこのための確
    立したモジュールが存在します。PHP はこの様な機能とともに提供され
    ます。クライアントでのデーターのストレージの必要がある場合、HTTP
    クッキーが使われます。クライアントサイドのデーター処理が必要な場
    合、Javascript が良く使われます。

    詳しくは、Common Gateway Interface や The Apache Software
    Foundation や JavaScript を参照下さい。

    http://www.google.com/search?hl=en&ie=UTF-8&q=CGI+tutorial を URL
    として直接ブラウザーのアドレスに入れ Google で"CGI tutorial" を検
    索するとグーグルサーバー上の CGI スクリプトが動いているのを観察す
    る良い例です。

%

12.10. ソースコード変換

    ソースコード変換するプログラムがあります。

    表12.16 ソースコード変換ツールのリスト

    +---------------------------------------------------------------+
    |パッケー |ポプコ|サ |キーワー |                                |
    |   ジ    |  ン  |イ |   ド    |              説明              |
    |         |      |ズ |         |                                |
    |---------+------+---+---------+--------------------------------|
    |perl     |V:610,|705|AWK→PERL |AWK から PERL へのソースコード変|
    |         |I:992 |   |         |換シフト: a2p(1)                |
    |---------+------+---+---------+--------------------------------|
    |f2c      |V:0,  |442|FORTRAN→C|FORTRAN 77 から C/C++ へのソース|
    |         |I:6   |   |         |コード変換ソフト: f2c(1)        |
    |---------+------+---+---------+--------------------------------|
    |         |V:0,  |   |         |NASM (Intel フォーマット) から  |
    |intel2gas|I:0   |178|intel→gas|GNU Assembler (GAS) への変換ソフ|
    |         |      |   |         |ト                              |
    +---------------------------------------------------------------+


%

12.11. Debian パッケージ作成

    Debian パッケージを作りたい場合には、次を読みましょう。

      * 基本的なパッケージシステムの理解には2章Debian パッケージ管理

      * 基本的なポーティングプロセスの理解のために、「安定版システム
        へのパッケージ移植」

      * 基本的な chroot 技術の理解のために、「Chroot システム」

      * debuild(1) と pbuilder(1) と pdebuild(1)

      * リコンパイルとデバグは「Debian パッケージのデバグ」

      * チュートリアルとして Debian New Maintainers' Guide
        (maint-guide パッケージ)

      * Debian Developer's Reference (developers-reference パッケー
        ジ)

      * Debian ポリシーマニュアル (debian-policy パッケージ)

      * Guide for Debian Maintainers (debmake-doc パッケージ)

    debmake や dh-make や dh-make-perl 等のパッケージングを補助するパ
    ッケージがあります。

付録A 補遺

    以下が本文書の背景です。

A.1. Debian 迷路

    Linux システムはネットワーク化されたコンピューターのための非常に
    パワフルなコンピュータープラットフォームです。しかし、Linux の全
    能力を利用する方法を学ぶことはたやすいことではありません。非
    PostScript プリンタが接続された LPR プリンタの設定がこんなつまず
    く点の良い例でした。(最近のインストレーションでは CUPS システムが
    使われるのでもうこの様な問題はありません。)

    "ソースコード" という完全かつ詳細なマップが存在します。これは非常
    に正確ですが理解することが難しいものです。また、HOWTO や
    mini-HOWTO と呼ばれるリファレンスもあります。これらは理解はしやす
    いのですが、詳細過ぎて全体像を失いがちです。ちょっとコマンドを実
    行する必要がある時に、長大な HOWTO の該当する章を探すのには骨が折
    れることが時々あります。

    この "Debian リファレンス (第2.77版)" が Debian 迷路の真っ只中に
    いる皆様にとって解決の糸口となることを望みます。

A.2. 著作権の経緯

    Debian リファレンスは青木修 <osamu at debian dot org> が個人用シ
    ステム管理メモとして書き始められました。多くの内容が debian-user
    メーリングリストや他の Debian のリソースから得られた知識由来です
    。

    当時 Debian Documentation Project で非常にアクティブであった、
    Josip Rodin 氏の助言に従い、 DDP 文書の一部として "Debian リファ
    レンス (第1版、2001-2007)"を作りました。

    6年経った時点で、青木はオリジナルの "Debian リファレンス (第1版)"
    が時代遅れとなっている事に気づき多くの内容を書き換え始めました。
    新たな "Debian リファレンス (第2版)" が2008年にリリースされました
    。

    チュートリアルの内容はその内容とインスピレーションを次から得まし
    た。

      * "Linux User's Guide" Larry Greenfield 著 (1996年12月)

          + "Debian Tutorial" によって陳腐化

      * "Debian Tutorial" Havoc Pennington 著。 (1998年12年11日)

          + Oliver Elphick と Ole Tetlie と James Treacy と Craig
            Sawyer と Ivan E. Moore II による一部著作

          + "Debian GNU/Linux: Guide to Installation and Usage" によ
            って陳腐化

      * "Debian GNU/Linux: Guide to Installation and Usage" John
        Goerzen and Ossama Othman 著(1999年)

          + "Debian リファレンス (第1版)" によって陳腐化

    パッケージやアーカイブに関する記述はそのオリジンやインスピレーシ
    ョンの一部を次に遡ることができます。

      * "Debian FAQ" (Josip Rodin が維持していた 2002年3月版)

    他の内容はそのオリジンやインスピレーションを次に遡ることができま
    す。

      * "Debian リファレンス (第1版)" 青木修著 (2001年〜2007年)
   
          + 2018年のより新しい "Debian リファレンス (第2版)" によって
            陳腐化

    以前の "Debian リファレンス (第1版)" は次によって作られました。

      * ネットワーク設定に関する大部分の内容は Thomas Hood が寄稿

      * X と VCS に関連するかなりの内容は Brian Nelson が寄稿

      * ビルドスクリプトや多くの内容に関する訂正で Jens Seidel が寄与

      * David Sewell による徹底的な校正

      * 翻訳者やコントリビューターやバグ報告者達による多くの寄与

    Debian システム上の多くのマニュアルページや info ページが本文書を
    書く上での第一義的参照情報として使われました。青木修が公正な使用
    と考える範囲内で、それらの多くの部分、特にコマンドの定義が、本文
    書の文体と目的に合うように注意深い編集をした後、断片的文言として
    使われました。

    gdb デバッガーに関する記述は Arii Pollak と Loïc Minier と Dafydd
    Harries の了承のもと backtrace に関する Debian wiki の内容を拡張
    して使いました。

    既に上記で触れた項目を除く現在の "Debian リファレンス (第2.77版)"
    (2021-01-10 06:32:51 UTC) の内容はほとんど私自身の仕事です。これ
    らはコントリビュータ−によっても更新されています。

    "Debian リファレンス (第1版)" は、角田慎一さんがすべて日本語訳し
    ました。

    "Debian リファレンス (第2版)" は、英文原著者の青木修自身がすべて
    を日本語訳しました。その際に "Debian リファレンス (第1版)" から内
    容が比較的変更されていない「第1章 GNU/Linux チュートリアル」等で
    は、角田さんの旧訳文を青木が文体や内容を調整した上で一部再利用さ
    せて頂きました。

    著者である青木修は本文書を世に送ることにご助力戴いた皆様に感謝い
    たします。

A.3. 文書のフォーマット

    英語のオリジナル文書のソースは AsciiDoc のテキストファイルを用い
    て書かれます。AsciiDoc は直接 XML を書くより手間がかからずテーブ
    ルを分かりやすいフォーマットで入力出きるので便利という理由で使わ
    れています。XML と PO ファイルを真のソースファイルと考えて下さい
    。ビルドスクリプトによって DocBook XML ソースに変換され、更に自動
    的に生成されるデーターを埋め込み最終的な DocBook XML ソースとされ
    ます。この最終的なDocBook XML ソースは HTML と epub とプレーンテ
    キストと PostScript と PDF に変換できます。(配布時には一部フォー
    マットが無効化されているかもしれません。)

